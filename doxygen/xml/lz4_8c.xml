<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="lz4_8c" kind="file" language="C++">
    <compoundname>lz4.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lz4_8h" local="yes">lz4.h</includes>
    <includedby refid="smessage_8cpp" local="yes">/home/dev/ds-160209/src/smessage.cpp</includedby>
    <incdepgraph>
      <node id="40322">
        <label>/home/dev/ds-160209/src/lz4/lz4.c</label>
        <link refid="lz4.c"/>
        <childnode refid="40323" relation="include">
        </childnode>
        <childnode refid="40324" relation="include">
        </childnode>
        <childnode refid="40325" relation="include">
        </childnode>
      </node>
      <node id="40325">
        <label>lz4.h</label>
        <link refid="lz4_8h"/>
      </node>
      <node id="40323">
        <label>stdlib.h</label>
      </node>
      <node id="40324">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="40326">
        <label>/home/dev/ds-160209/src/lz4/lz4.c</label>
        <link refid="lz4.c"/>
        <childnode refid="40327" relation="include">
        </childnode>
      </node>
      <node id="40327">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct___p_a_c_k_e_d" prot="public">_PACKED</innerclass>
    <innerclass refid="struct___p_a_c_k_e_d" prot="public">_PACKED</innerclass>
    <innerclass refid="struct___p_a_c_k_e_d" prot="public">_PACKED</innerclass>
    <innerclass refid="struct___p_a_c_k_e_d" prot="public">_PACKED</innerclass>
    <innerclass refid="struct_l_z4___data___structure" prot="public">LZ4_Data_Structure</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" prot="public" static="no">
        <name>MEMORY_USAGE</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="44" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</referencedby>
        <referencedby refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" compoundref="lz4_8c" startline="577" endline="595">LZ4_compress_limitedOutput</referencedby>
        <referencedby refid="lz4_8h_1a5533b6e13559d2c75ac5ac6d4eb13beb" compoundref="lz4_8c" startline="602" endline="602">LZ4_sizeofState</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a396a35bbe687da2192faae2da8b66244" prot="public" static="no">
        <name>HEAPMODE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="51" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a2fcbe30c4c297bf61a8f22153e6a6c65" prot="public" static="no">
        <name>LZ4_ARCH64</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="64" column="12" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="64" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a080abdcb9c02438f1cd2bb707af25af8" prot="public" static="no">
        <name>restrict</name>
        <initializer>/* Disable restrict */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="117" column="12" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="117" bodyend="-1"/>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" prot="public" static="no">
        <name>FORCE_INLINE</name>
        <initializer>static inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="135" column="17" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aa535d272fb4112a33ca889a24af7e285" prot="public" static="no">
        <name>lz4_bswap16</name>
        <param><defname>x</defname></param>
        <initializer>((unsigned short int) ((((x) &gt;&gt; 8) &amp; 0xffu) | (((x) &amp; 0xffu) &lt;&lt; 8)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="142" column="12" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1adbba0f726fc66d7100916c683b7568ae" prot="public" static="no">
        <name>GCC_VERSION</name>
        <initializer>(__GNUC__ * 100 + __GNUC_MINOR__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="145" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a7d26a1c40d6107cf2f19558492591e67" prot="public" static="no">
        <name>expect</name>
        <param><defname>expr</defname></param>
        <param><defname>value</defname></param>
        <initializer>(expr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="150" column="12" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="150" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aa0672ea7123854cc5f51902a06c473fb" prot="public" static="no">
        <name>likely</name>
        <param><defname>expr</defname></param>
        <initializer><ref refid="lz4_8c_1a7d26a1c40d6107cf2f19558492591e67" kindref="member">expect</ref>((expr) != 0, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="153" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="153" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ad8700448546b3b5111404cc021061fd5" prot="public" static="no">
        <name>unlikely</name>
        <param><defname>expr</defname></param>
        <initializer><ref refid="lz4_8c_1a7d26a1c40d6107cf2f19558492591e67" kindref="member">expect</ref>((expr) != 0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="154" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="154" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" prot="public" static="no">
        <name>ALLOCATOR</name>
        <param><defname>n</defname></param>
        <param><defname>s</defname></param>
        <initializer>calloc(n,s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="161" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="161" bodyend="-1"/>
        <referencedby refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</referencedby>
        <referencedby refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" compoundref="lz4_8c" startline="577" endline="595">LZ4_compress_limitedOutput</referencedby>
        <referencedby refid="lz4_8h_1a3aa16d37ad77d8007ffaa0bdb3c7fb10" compoundref="lz4_8c" startline="653" endline="658">LZ4_create</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" prot="public" static="no">
        <name>FREEMEM</name>
        <initializer>free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="162" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="162" bodyend="-1"/>
        <referencedby refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</referencedby>
        <referencedby refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" compoundref="lz4_8c" startline="577" endline="595">LZ4_compress_limitedOutput</referencedby>
        <referencedby refid="lz4_8h_1ac85fe1c4aadb06c903e31812bb109a86" compoundref="lz4_8c" startline="661" endline="665">LZ4_free</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" prot="public" static="no">
        <name>MEM_INIT</name>
        <initializer>memset</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="164" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="164" bodyend="-1"/>
        <referencedby refid="lz4_8h_1a430f331e5951658bd033faf564a958bf" compoundref="lz4_8c" startline="605" endline="614">LZ4_compress_withState</referencedby>
        <referencedby refid="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" compoundref="lz4_8c" startline="617" endline="626">LZ4_compress_limitedOutput_withState</referencedby>
        <referencedby refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" compoundref="lz4_8c" startline="638" endline="644">LZ4_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aa1ed035ac46973db2babb746c8ebc06a" prot="public" static="no">
        <name>_PACKED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="194" column="12" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aa1adaa7f29be89d1761dd7b43128ced2" prot="public" static="no">
        <name>A16</name>
        <param><defname>x</defname></param>
        <initializer>(((U16_S *)(x))-&gt;v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="218" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="218" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" prot="public" static="no">
        <name>A32</name>
        <param><defname>x</defname></param>
        <initializer>(((U32_S *)(x))-&gt;v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="219" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="219" bodyend="-1"/>
        <referencedby refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" compoundref="lz4_8c" startline="382" endline="382">LZ4_hashPosition</referencedby>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ae04b768aafd50d6bac41490acd2b86a0" prot="public" static="no">
        <name>A64</name>
        <param><defname>x</defname></param>
        <initializer>(((U64_S *)(x))-&gt;v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="220" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a81ef925776d88353d3a98161c95be3b2" prot="public" static="no">
        <name>AARCH</name>
        <param><defname>x</defname></param>
        <initializer>(((size_t_S *)(x))-&gt;v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="221" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="221" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ac7f04539d94ce57826ef8b2f3d8408af" prot="public" static="no">
        <name>LZ4_HASHLOG</name>
        <initializer>(<ref refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" kindref="member">MEMORY_USAGE</ref>-2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="227" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="227" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a9614404fbd706777f4326175c29a1f24" compoundref="lz4_8c" startline="374" endline="380">LZ4_hashSequence</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a89f3391502e32c9a48898f47f6473011" prot="public" static="no">
        <name>HASHTABLESIZE</name>
        <initializer>(1 &lt;&lt; <ref refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" kindref="member">MEMORY_USAGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="228" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a01c821754d4c7a78283f423ebd753071" prot="public" static="no">
        <name>HASHNBCELLS4</name>
        <initializer>(1 &lt;&lt; <ref refid="lz4_8c_1ac7f04539d94ce57826ef8b2f3d8408af" kindref="member">LZ4_HASHLOG</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="229" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="229" bodyend="-1"/>
        <referencedby refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</referencedby>
        <referencedby refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" compoundref="lz4_8c" startline="577" endline="595">LZ4_compress_limitedOutput</referencedby>
        <referencedby refid="lz4_8h_1a2fd193cdf3113ab39f312a6cf625e988" compoundref="lz4_8c" startline="668" endline="696">LZ4_slideInputBuffer</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" prot="public" static="no">
        <name>MINMATCH</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="231" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="231" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a9614404fbd706777f4326175c29a1f24" compoundref="lz4_8c" startline="374" endline="380">LZ4_hashSequence</referencedby>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a155d81bbd0ae81c533d696c563c6ea87" prot="public" static="no">
        <name>COPYLENGTH</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="233" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="233" bodyend="-1"/>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" prot="public" static="no">
        <name>LASTLITERALS</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="234" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="234" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" prot="public" static="no">
        <name>MFLIMIT</name>
        <initializer>(<ref refid="lz4_8c_1a155d81bbd0ae81c533d696c563c6ea87" kindref="member">COPYLENGTH</ref>+<ref refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" kindref="member">MINMATCH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="235" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="235" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" prot="public" static="no">
        <name>KB</name>
        <initializer>*(1U&lt;&lt;10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="238" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="238" bodyend="-1"/>
        <referencedby refid="lz4_8h_1a2fd193cdf3113ab39f312a6cf625e988" compoundref="lz4_8c" startline="668" endline="696">LZ4_slideInputBuffer</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aa6b38d492364d98453284934ed7caee9" prot="public" static="no">
        <name>MB</name>
        <initializer>*(1U&lt;&lt;20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="239" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a44172ac633c517cb4c9e278cef36b000" prot="public" static="no">
        <name>GB</name>
        <initializer>*(1U&lt;&lt;30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="240" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" prot="public" static="no">
        <name>LZ4_64KLIMIT</name>
        <initializer>((64 <ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>) + (<ref refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" kindref="member">MFLIMIT</ref>-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="242" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="242" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</referencedby>
        <referencedby refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" compoundref="lz4_8c" startline="577" endline="595">LZ4_compress_limitedOutput</referencedby>
        <referencedby refid="lz4_8h_1a430f331e5951658bd033faf564a958bf" compoundref="lz4_8c" startline="605" endline="614">LZ4_compress_withState</referencedby>
        <referencedby refid="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" compoundref="lz4_8c" startline="617" endline="626">LZ4_compress_limitedOutput_withState</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ad155489ab5ca0387d058724db8544b0f" prot="public" static="no">
        <name>SKIPSTRENGTH</name>
        <initializer>6   /* Increasing this <ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref> will make the compression run slower on incompressible data */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="243" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="243" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ab761e7bc07fbb86a76ec92d360d3309e" prot="public" static="no">
        <name>MAXD_LOG</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="245" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a08e4da5f3d0c7936fa52467f40e4b6aa" prot="public" static="no">
        <name>MAX_DISTANCE</name>
        <initializer>((1 &lt;&lt; <ref refid="lz4_8c_1ab761e7bc07fbb86a76ec92d360d3309e" kindref="member">MAXD_LOG</ref>) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="246" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="246" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" prot="public" static="no">
        <name>ML_BITS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="248" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="248" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" prot="public" static="no">
        <name>ML_MASK</name>
        <initializer>((1U&lt;&lt;ML_BITS)-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="249" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="249" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ae6261d794dfe7c6816e3b342c643f56f" prot="public" static="no">
        <name>RUN_BITS</name>
        <initializer>(8-<ref refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" kindref="member">ML_BITS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="250" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" prot="public" static="no">
        <name>RUN_MASK</name>
        <initializer>((1U&lt;&lt;RUN_BITS)-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="251" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="251" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" prot="public" static="no">
        <name>STEPSIZE</name>
        <initializer>sizeof(size_t)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="276" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="276" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a7740e389dd8567d73b26c333fc5fd54f" prot="public" static="no">
        <name>LZ4_COPYSTEP</name>
        <param><defname>d</defname></param>
        <param><defname>s</defname></param>
        <initializer>{ <ref refid="lz4_8c_1a81ef925776d88353d3a98161c95be3b2" kindref="member">AARCH</ref>(d) = <ref refid="lz4_8c_1a81ef925776d88353d3a98161c95be3b2" kindref="member">AARCH</ref>(s); d+=<ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>; s+=<ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="277" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="277" bodyend="-1"/>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ac830bd81f63e4ba98acf134df3d4c1bb" prot="public" static="no">
        <name>LZ4_COPY8</name>
        <param><defname>d</defname></param>
        <param><defname>s</defname></param>
        <initializer>{ <ref refid="lz4_8c_1a7740e389dd8567d73b26c333fc5fd54f" kindref="member">LZ4_COPYSTEP</ref>(d,s); if (<ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>&lt;8) <ref refid="lz4_8c_1a7740e389dd8567d73b26c333fc5fd54f" kindref="member">LZ4_COPYSTEP</ref>(d,s); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="278" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a815a3c4e7b8f3fbd54cd3163e5b1b210" prot="public" static="no">
        <name>LZ4_READ_LITTLEENDIAN_16</name>
        <param><defname>d</defname></param>
        <param><defname>s</defname></param>
        <param><defname>p</defname></param>
        <initializer>{ d = (s) - <ref refid="lz4_8c_1aa1adaa7f29be89d1761dd7b43128ced2" kindref="member">A16</ref>(p); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="284" column="11" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="284" bodyend="-1"/>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a982a474e51c097045868d3284a7351d3" prot="public" static="no">
        <name>LZ4_WRITE_LITTLEENDIAN_16</name>
        <param><defname>p</defname></param>
        <param><defname>v</defname></param>
        <initializer>{ <ref refid="lz4_8c_1aa1adaa7f29be89d1761dd7b43128ced2" kindref="member">A16</ref>(p) = v; p+=2; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="285" column="11" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="285" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" prot="public" static="no">
        <name>LZ4_WILDCOPY</name>
        <param><defname>d</defname></param>
        <param><defname>s</defname></param>
        <param><defname>e</defname></param>
        <initializer>{ do { <ref refid="lz4_8c_1ac830bd81f63e4ba98acf134df3d4c1bb" kindref="member">LZ4_COPY8</ref>(d,s) } while (d&lt;e); }           /* at the end, d&gt;=e; */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="293" column="11" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="293" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8c_1ae6ffab5f2d2f54490105fd4541874a59" prot="public" static="no">
        <name>LZ4_SECURECOPY</name>
        <param><defname>d</defname></param>
        <param><defname>s</defname></param>
        <param><defname>e</defname></param>
        <initializer>{ if (d&lt;e) <ref refid="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" kindref="member">LZ4_WILDCOPY</ref>(d,s,e); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="297" column="10" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="297" bodyend="-1"/>
        <referencedby refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lz4_8c_1ab93acf685743debab05876250a1cbe28" prot="public" static="no">
        <name>limitedOutput_directive</name>
        <enumvalue id="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" prot="public">
          <name>notLimited</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" prot="public">
          <name>limited</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="264" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="enum" id="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" prot="public" static="no">
        <name>tableType_t</name>
        <enumvalue id="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" prot="public">
          <name>byPtr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" prot="public">
          <name>byU32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" prot="public">
          <name>byU16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="265" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="enum" id="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4" prot="public" static="no">
        <name>prefix64k_directive</name>
        <enumvalue id="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" prot="public">
          <name>noPrefix</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" prot="public">
          <name>withPrefix</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="267" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="267" bodyend="267"/>
      </memberdef>
      <memberdef kind="enum" id="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746" prot="public" static="no">
        <name>endCondition_directive</name>
        <enumvalue id="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" prot="public">
          <name>endOnOutputSize</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" prot="public">
          <name>endOnInputSize</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="269" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="enum" id="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994c" prot="public" static="no">
        <name>earlyEnd_directive</name>
        <enumvalue id="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" prot="public">
          <name>full</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca67bce1b2dc0e7c66a27de1a9e146ce3e" prot="public">
          <name>partial</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="270" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="270" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char BYTE</definition>
        <argsstring></argsstring>
        <name>BYTE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="184" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short U16</definition>
        <argsstring></argsstring>
        <name>U16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="185" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int U32</definition>
        <argsstring></argsstring>
        <name>U32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="186" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lz4_8c_1a57a2244776e01ad620c556de58eb7880" prot="public" static="no">
        <type>signed int</type>
        <definition>typedef signed int S32</definition>
        <argsstring></argsstring>
        <name>S32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="187" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lz4_8c_1a24c386d3758eba951eb7532fdbb45804" prot="public" static="no">
        <type>unsigned long long</type>
        <definition>typedef unsigned long long U64</definition>
        <argsstring></argsstring>
        <name>U64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="188" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lz4_8c_1a008b9fd5094e20eec7d8f504530d113c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int LZ4_minLength</definition>
        <argsstring></argsstring>
        <name>LZ4_minLength</name>
        <initializer>= (<ref refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" kindref="member">MFLIMIT</ref>+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="236" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lz4_8c_1a721fd5d57c07efb5cf941999463d969b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> int</type>
        <definition>FORCE_INLINE int LZ4_NbCommonBytes</definition>
        <argsstring>(register U32 val)</argsstring>
        <name>LZ4_NbCommonBytes</name>
        <param>
          <type>register <ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="337" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="337" bodyend="364"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a2b09f5ca41ce609bb136d3637beffe04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compressBound</definition>
        <argsstring>(int isize)</argsstring>
        <name>LZ4_compressBound</name>
        <param>
          <type>int</type>
          <declname>isize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="372" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="372" bodyend="372"/>
        <references refid="lz4_8h_1a2453a423fd34640a0afbbf57ed0a5399" compoundref="lz4_8h" startline="86">LZ4_COMPRESSBOUND</references>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a9614404fbd706777f4326175c29a1f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> int</type>
        <definition>FORCE_INLINE int LZ4_hashSequence</definition>
        <argsstring>(U32 sequence, tableType_t tableType)</argsstring>
        <name>LZ4_hashSequence</name>
        <param>
          <type><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref></type>
          <declname>sequence</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref></type>
          <declname>tableType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="374" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="374" bodyend="380"/>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" compoundref="lz4_8c" startline="231">MINMATCH</references>
        <references refid="lz4_8c_1ac7f04539d94ce57826ef8b2f3d8408af" compoundref="lz4_8c" startline="227">LZ4_HASHLOG</references>
        <referencedby refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" compoundref="lz4_8c" startline="382" endline="382">LZ4_hashPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1afd1462011f3123a54773ef549f1ec287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> int</type>
        <definition>FORCE_INLINE int LZ4_hashPosition</definition>
        <argsstring>(const BYTE *p, tableType_t tableType)</argsstring>
        <name>LZ4_hashPosition</name>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref></type>
          <declname>tableType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="382" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="382" bodyend="382"/>
        <references refid="lz4_8c_1a9614404fbd706777f4326175c29a1f24" compoundref="lz4_8c" startline="374" endline="380">LZ4_hashSequence</references>
        <references refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" compoundref="lz4_8c" startline="219">A32</references>
        <referencedby refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" compoundref="lz4_8c" startline="394" endline="398">LZ4_putPosition</referencedby>
        <referencedby refid="lz4_8c_1a9291a47e6769fe3287d7829806da3324" compoundref="lz4_8c" startline="407" endline="411">LZ4_getPosition</referencedby>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1ac418d75800f31824bd6513706adf9c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> void</type>
        <definition>FORCE_INLINE void LZ4_putPositionOnHash</definition>
        <argsstring>(const BYTE *p, U32 h, void *tableBase, tableType_t tableType, const BYTE *srcBase)</argsstring>
        <name>LZ4_putPositionOnHash</name>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tableBase</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref></type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>srcBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="384" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="384" bodyend="392"/>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <referencedby refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" compoundref="lz4_8c" startline="394" endline="398">LZ4_putPosition</referencedby>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> void</type>
        <definition>FORCE_INLINE void LZ4_putPosition</definition>
        <argsstring>(const BYTE *p, void *tableBase, tableType_t tableType, const BYTE *srcBase)</argsstring>
        <name>LZ4_putPosition</name>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tableBase</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref></type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>srcBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="394" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="394" bodyend="398"/>
        <references refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" compoundref="lz4_8c" startline="382" endline="382">LZ4_hashPosition</references>
        <references refid="lz4_8c_1ac418d75800f31824bd6513706adf9c6b" compoundref="lz4_8c" startline="384" endline="392">LZ4_putPositionOnHash</references>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a5e3207c7da0c5112418bd1c9718fb764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
        <definition>FORCE_INLINE const BYTE* LZ4_getPositionOnHash</definition>
        <argsstring>(U32 h, void *tableBase, tableType_t tableType, const BYTE *srcBase)</argsstring>
        <name>LZ4_getPositionOnHash</name>
        <param>
          <type><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tableBase</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref></type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>srcBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="400" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="400" bodyend="405"/>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <referencedby refid="lz4_8c_1a9291a47e6769fe3287d7829806da3324" compoundref="lz4_8c" startline="407" endline="411">LZ4_getPosition</referencedby>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a9291a47e6769fe3287d7829806da3324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
        <definition>FORCE_INLINE const BYTE* LZ4_getPosition</definition>
        <argsstring>(const BYTE *p, void *tableBase, tableType_t tableType, const BYTE *srcBase)</argsstring>
        <name>LZ4_getPosition</name>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tableBase</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref></type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>srcBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="407" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="407" bodyend="411"/>
        <references refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" compoundref="lz4_8c" startline="382" endline="382">LZ4_hashPosition</references>
        <references refid="lz4_8c_1a5e3207c7da0c5112418bd1c9718fb764" compoundref="lz4_8c" startline="400" endline="405">LZ4_getPositionOnHash</references>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> int</type>
        <definition>FORCE_INLINE int LZ4_compress_generic</definition>
        <argsstring>(void *ctx, const char *source, char *dest, int inputSize, int maxOutputSize, limitedOutput_directive limitedOutput, tableType_t tableType, prefix64k_directive prefix)</argsstring>
        <name>LZ4_compress_generic</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28" kindref="member">limitedOutput_directive</ref></type>
          <declname>limitedOutput</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref></type>
          <declname>tableType</declname>
        </param>
        <param>
          <type><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4" kindref="member">prefix64k_directive</ref></type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="414" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="414" bodyend="554"/>
        <references refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" compoundref="testharness_8cc" startline="17">base</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
        <references refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" compoundref="debugconsole_8cpp" startline="33">source</references>
        <references refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" compoundref="lz4_8c" startline="235">MFLIMIT</references>
        <references refid="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" compoundref="lz4_8c" startline="234">LASTLITERALS</references>
        <references refid="lz4_8c_1ad155489ab5ca0387d058724db8544b0f" compoundref="lz4_8c" startline="243">SKIPSTRENGTH</references>
        <references refid="lz4_8h_1a88ee51e36ca74cd0533e731c20572ea6" compoundref="lz4_8h" startline="85">LZ4_MAX_INPUT_SIZE</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" compoundref="lz4_8c" startline="394" endline="398">LZ4_putPosition</references>
        <references refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" compoundref="lz4_8c" startline="382" endline="382">LZ4_hashPosition</references>
        <references refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" compoundref="lz4_8c" startline="154">unlikely</references>
        <references refid="lz4_8c_1a5e3207c7da0c5112418bd1c9718fb764" compoundref="lz4_8c" startline="400" endline="405">LZ4_getPositionOnHash</references>
        <references refid="lz4_8c_1ac418d75800f31824bd6513706adf9c6b" compoundref="lz4_8c" startline="384" endline="392">LZ4_putPositionOnHash</references>
        <references refid="lz4_8c_1a08e4da5f3d0c7936fa52467f40e4b6aa" compoundref="lz4_8c" startline="246">MAX_DISTANCE</references>
        <references refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" compoundref="lz4_8c" startline="219">A32</references>
        <references refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" compoundref="lz4_8c" startline="251">RUN_MASK</references>
        <references refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" compoundref="lz4_8c" startline="248">ML_BITS</references>
        <references refid="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" compoundref="lz4_8c" startline="293">LZ4_WILDCOPY</references>
        <references refid="lz4_8c_1a982a474e51c097045868d3284a7351d3" compoundref="lz4_8c" startline="285">LZ4_WRITE_LITTLEENDIAN_16</references>
        <references refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" compoundref="lz4_8c" startline="231">MINMATCH</references>
        <references refid="lz4_8c_1aa0672ea7123854cc5f51902a06c473fb" compoundref="lz4_8c" startline="153">likely</references>
        <references refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" compoundref="lz4_8c" startline="276">STEPSIZE</references>
        <references refid="lz4_8c_1a81ef925776d88353d3a98161c95be3b2" compoundref="lz4_8c" startline="221">AARCH</references>
        <references refid="lz4_8c_1a721fd5d57c07efb5cf941999463d969b" compoundref="lz4_8c" startline="337" endline="364">LZ4_NbCommonBytes</references>
        <references refid="lz4_8c_1a2fcbe30c4c297bf61a8f22153e6a6c65" compoundref="lz4_8c" startline="64">LZ4_ARCH64</references>
        <references refid="lz4_8c_1aa1adaa7f29be89d1761dd7b43128ced2" compoundref="lz4_8c" startline="218">A16</references>
        <references refid="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" compoundref="lz4_8c" startline="249">ML_MASK</references>
        <references refid="lz4_8c_1a9291a47e6769fe3287d7829806da3324" compoundref="lz4_8c" startline="407" endline="411">LZ4_getPosition</references>
        <referencedby refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</referencedby>
        <referencedby refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" compoundref="lz4_8c" startline="577" endline="595">LZ4_compress_limitedOutput</referencedby>
        <referencedby refid="lz4_8h_1a430f331e5951658bd033faf564a958bf" compoundref="lz4_8c" startline="605" endline="614">LZ4_compress_withState</referencedby>
        <referencedby refid="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" compoundref="lz4_8c" startline="617" endline="626">LZ4_compress_limitedOutput_withState</referencedby>
        <referencedby refid="lz4_8h_1a8893fc9d295b44546f945b0502f59864" compoundref="lz4_8c" startline="699" endline="702">LZ4_compress_continue</referencedby>
        <referencedby refid="lz4_8h_1a2ed396b7d1983814698fbc31eecba9f2" compoundref="lz4_8c" startline="705" endline="708">LZ4_compress_limitedOutput_continue</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a806e7d86885991c722172bcf57abb71b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress</definition>
        <argsstring>(const char *source, char *dest, int inputSize)</argsstring>
        <name>LZ4_compress</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="557" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="557" bodyend="575"/>
        <references refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" compoundref="lz4_8c" startline="161">ALLOCATOR</references>
        <references refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" compoundref="lz4_8c" startline="229">HASHNBCELLS4</references>
        <references refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" compoundref="lz4_8c" startline="44">MEMORY_USAGE</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" compoundref="debugconsole_8cpp" startline="33">source</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" compoundref="lz4_8c" startline="264">notLimited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
        <references refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" compoundref="lz4_8c" startline="162">FREEMEM</references>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a464e8e2a2ad215e0d94042722eb75551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_limitedOutput</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_compress_limitedOutput</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="577" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="577" bodyend="595"/>
        <references refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" compoundref="lz4_8c" startline="161">ALLOCATOR</references>
        <references refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" compoundref="lz4_8c" startline="229">HASHNBCELLS4</references>
        <references refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" compoundref="lz4_8c" startline="44">MEMORY_USAGE</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" compoundref="debugconsole_8cpp" startline="33">source</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" compoundref="lz4_8c" startline="264">limited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
        <references refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" compoundref="lz4_8c" startline="162">FREEMEM</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_sizeofState</definition>
        <argsstring>()</argsstring>
        <name>LZ4_sizeofState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="602" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="602" bodyend="602"/>
        <references refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" compoundref="lz4_8c" startline="44">MEMORY_USAGE</references>
        <referencedby refid="lz4_8h_1a430f331e5951658bd033faf564a958bf" compoundref="lz4_8c" startline="605" endline="614">LZ4_compress_withState</referencedby>
        <referencedby refid="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" compoundref="lz4_8c" startline="617" endline="626">LZ4_compress_limitedOutput_withState</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a430f331e5951658bd033faf564a958bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_withState</definition>
        <argsstring>(void *state, const char *source, char *dest, int inputSize)</argsstring>
        <name>LZ4_compress_withState</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="605" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="605" bodyend="614"/>
        <references refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" compoundref="lz4_8c" startline="164">MEM_INIT</references>
        <references refid="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" compoundref="lz4_8c" startline="602" endline="602">LZ4_sizeofState</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" compoundref="lz4_8c" startline="264">notLimited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1aae32f2434789e3878e43f52094b81b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_limitedOutput_withState</definition>
        <argsstring>(void *state, const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_compress_limitedOutput_withState</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="617" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="617" bodyend="626"/>
        <references refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" compoundref="lz4_8c" startline="164">MEM_INIT</references>
        <references refid="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" compoundref="lz4_8c" startline="602" endline="602">LZ4_sizeofState</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" compoundref="lz4_8c" startline="264">limited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a1fddf246561e7b13fb1b3b10aad55045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_sizeofStreamState</definition>
        <argsstring>()</argsstring>
        <name>LZ4_sizeofStreamState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="633" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="633" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> void</type>
        <definition>FORCE_INLINE void LZ4_init</definition>
        <argsstring>(LZ4_Data_Structure *lz4ds, const BYTE *base)</argsstring>
        <name>LZ4_init</name>
        <param>
          <type><ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref> *</type>
          <declname>lz4ds</declname>
        </param>
        <param>
          <type>const <ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="638" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="638" bodyend="644"/>
        <references refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" compoundref="lz4_8c" startline="164">MEM_INIT</references>
        <references refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" compoundref="lz4_8c" startline="258">LZ4_Data_Structure::hashTable</references>
        <references refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" compoundref="lz4_8c" startline="259">LZ4_Data_Structure::bufferStart</references>
        <references refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" compoundref="testharness_8cc" startline="17">base</references>
        <references refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" compoundref="lz4_8c" startline="260">LZ4_Data_Structure::base</references>
        <references refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" compoundref="lz4_8c" startline="261">LZ4_Data_Structure::nextBlock</references>
        <referencedby refid="lz4_8h_1ae29eae664f704fd216b9db8d05d51e18" compoundref="lz4_8c" startline="646" endline="651">LZ4_resetStreamState</referencedby>
        <referencedby refid="lz4_8h_1a3aa16d37ad77d8007ffaa0bdb3c7fb10" compoundref="lz4_8c" startline="653" endline="658">LZ4_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1ae29eae664f704fd216b9db8d05d51e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_resetStreamState</definition>
        <argsstring>(void *state, const char *inputBuffer)</argsstring>
        <name>LZ4_resetStreamState</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inputBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="646" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="646" bodyend="651"/>
        <references refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" compoundref="lz4_8c" startline="638" endline="644">LZ4_init</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a3aa16d37ad77d8007ffaa0bdb3c7fb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* LZ4_create</definition>
        <argsstring>(const char *inputBuffer)</argsstring>
        <name>LZ4_create</name>
        <param>
          <type>const char *</type>
          <declname>inputBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="653" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="653" bodyend="658"/>
        <references refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" compoundref="lz4_8c" startline="161">ALLOCATOR</references>
        <references refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" compoundref="lz4_8c" startline="638" endline="644">LZ4_init</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1ac85fe1c4aadb06c903e31812bb109a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_free</definition>
        <argsstring>(void *LZ4_Data)</argsstring>
        <name>LZ4_free</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="661" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="661" bodyend="665"/>
        <references refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" compoundref="lz4_8c" startline="162">FREEMEM</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a2fd193cdf3113ab39f312a6cf625e988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* LZ4_slideInputBuffer</definition>
        <argsstring>(void *LZ4_Data)</argsstring>
        <name>LZ4_slideInputBuffer</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="668" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="668" bodyend="696"/>
        <references refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" compoundref="lz4_8c" startline="261">LZ4_Data_Structure::nextBlock</references>
        <references refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" compoundref="lz4_8c" startline="259">LZ4_Data_Structure::bufferStart</references>
        <references refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" compoundref="lz4_8c" startline="238">KB</references>
        <references refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" compoundref="lz4_8c" startline="260">LZ4_Data_Structure::base</references>
        <references refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" compoundref="lz4_8c" startline="229">HASHNBCELLS4</references>
        <references refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" compoundref="lz4_8c" startline="258">LZ4_Data_Structure::hashTable</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a8893fc9d295b44546f945b0502f59864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_continue</definition>
        <argsstring>(void *LZ4_Data, const char *source, char *dest, int inputSize)</argsstring>
        <name>LZ4_compress_continue</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="699" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="699" bodyend="702"/>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" compoundref="lz4_8c" startline="264">notLimited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a2ed396b7d1983814698fbc31eecba9f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_limitedOutput_continue</definition>
        <argsstring>(void *LZ4_Data, const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_compress_limitedOutput_continue</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="705" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="705" bodyend="708"/>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" compoundref="lz4_8c" startline="264">limited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref> int</type>
        <definition>FORCE_INLINE int LZ4_decompress_generic</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int outputSize, int endOnInput, int prefix64k, int partialDecoding, int targetOutputSize)</argsstring>
        <name>LZ4_decompress_generic</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endOnInput</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prefix64k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>partialDecoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>targetOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="720" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="720" bodyend="847"/>
        <references refid="lz4_8c_1a080abdcb9c02438f1cd2bb707af25af8" compoundref="lz4_8c" startline="117">restrict</references>
        <references refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" compoundref="lz4_8c" startline="235">MFLIMIT</references>
        <references refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" compoundref="lz4_8c" startline="154">unlikely</references>
        <references refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" compoundref="lz4_8c" startline="248">ML_BITS</references>
        <references refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" compoundref="lz4_8c" startline="251">RUN_MASK</references>
        <references refid="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" compoundref="lz4_8c" startline="234">LASTLITERALS</references>
        <references refid="lz4_8c_1a155d81bbd0ae81c533d696c563c6ea87" compoundref="lz4_8c" startline="233">COPYLENGTH</references>
        <references refid="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" compoundref="lz4_8c" startline="293">LZ4_WILDCOPY</references>
        <references refid="lz4_8c_1a815a3c4e7b8f3fbd54cd3163e5b1b210" compoundref="lz4_8c" startline="284">LZ4_READ_LITTLEENDIAN_16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" compoundref="lz4_8c" startline="249">ML_MASK</references>
        <references refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" compoundref="lz4_8c" startline="276">STEPSIZE</references>
        <references refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" compoundref="lz4_8c" startline="219">A32</references>
        <references refid="lz4_8c_1a7740e389dd8567d73b26c333fc5fd54f" compoundref="lz4_8c" startline="277">LZ4_COPYSTEP</references>
        <references refid="lz4_8c_1ae6ffab5f2d2f54490105fd4541874a59" compoundref="lz4_8c" startline="297">LZ4_SECURECOPY</references>
        <references refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" compoundref="debugconsole_8cpp" startline="33">source</references>
        <referencedby refid="lz4_8h_1a76d66de24858903c049171e700c1371c" compoundref="lz4_8c" startline="850" endline="853">LZ4_decompress_safe</referencedby>
        <referencedby refid="lz4_8h_1a29e5a7a8c67e597d432e4f008e736bd5" compoundref="lz4_8c" startline="855" endline="858">LZ4_decompress_safe_withPrefix64k</referencedby>
        <referencedby refid="lz4_8h_1ad7d22bc0cde54258724c4c77e7cf829f" compoundref="lz4_8c" startline="860" endline="863">LZ4_decompress_safe_partial</referencedby>
        <referencedby refid="lz4_8h_1a745dc4d765fc0b9bdb771a8259584933" compoundref="lz4_8c" startline="865" endline="868">LZ4_decompress_fast_withPrefix64k</referencedby>
        <referencedby refid="lz4_8h_1a1b6fd5873bbe60abc9a6bf7b3e75056a" compoundref="lz4_8c" startline="870" endline="877">LZ4_decompress_fast</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a76d66de24858903c049171e700c1371c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_safe</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_decompress_safe</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="850" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="850" bodyend="853"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" compoundref="lz4_8c" startline="269">endOnInputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
        <referencedby refid="lz4_8h_1a81aa900c172d655f8a4f0a75739791f0" compoundref="lz4_8c" startline="880" endline="880">LZ4_uncompress_unknownOutputSize</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a29e5a7a8c67e597d432e4f008e736bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_safe_withPrefix64k</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_decompress_safe_withPrefix64k</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="855" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="855" bodyend="858"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" compoundref="lz4_8c" startline="269">endOnInputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1ad7d22bc0cde54258724c4c77e7cf829f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_safe_partial</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int targetOutputSize, int maxOutputSize)</argsstring>
        <name>LZ4_decompress_safe_partial</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>targetOutputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="860" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="860" bodyend="863"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" compoundref="lz4_8c" startline="269">endOnInputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca67bce1b2dc0e7c66a27de1a9e146ce3e" compoundref="lz4_8c" startline="270">partial</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a745dc4d765fc0b9bdb771a8259584933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_fast_withPrefix64k</definition>
        <argsstring>(const char *source, char *dest, int outputSize)</argsstring>
        <name>LZ4_decompress_fast_withPrefix64k</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="865" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="865" bodyend="868"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" compoundref="lz4_8c" startline="269">endOnOutputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1ae6848d320c953d012408c7584a87b454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_fast</definition>
        <argsstring>(const char *source, char *dest, int outputSize)</argsstring>
        <name>LZ4_decompress_fast</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="870" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="870" bodyend="877"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" compoundref="lz4_8c" startline="269">endOnOutputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
        <referencedby refid="lz4_8h_1a76994c12731075f0d8a96239c8856192" compoundref="lz4_8c" startline="879" endline="879">LZ4_uncompress</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a76994c12731075f0d8a96239c8856192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_uncompress</definition>
        <argsstring>(const char *source, char *dest, int outputSize)</argsstring>
        <name>LZ4_uncompress</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="879" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="879" bodyend="879"/>
        <references refid="lz4_8c_1ae6848d320c953d012408c7584a87b454" compoundref="lz4_8c" startline="870" endline="877">LZ4_decompress_fast</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8c_1a81aa900c172d655f8a4f0a75739791f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_uncompress_unknownOutputSize</definition>
        <argsstring>(const char *source, char *dest, int isize, int maxOutputSize)</argsstring>
        <name>LZ4_uncompress_unknownOutputSize</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>isize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.c" line="880" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="880" bodyend="880"/>
        <references refid="lz4_8c_1a76d66de24858903c049171e700c1371c" compoundref="lz4_8c" startline="850" endline="853">LZ4_decompress_safe</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>LZ4<sp/>-<sp/>Fast<sp/>LZ<sp/>compression<sp/>algorithm</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2011-2014,<sp/>Yann<sp/>Collet.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>BSD<sp/>2-Clause<sp/>License<sp/>(http://www.opensource.org/licenses/bsd-license.php)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>You<sp/>can<sp/>contact<sp/>the<sp/>author<sp/>at<sp/>:</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>-<sp/>LZ4<sp/>source<sp/>repository<sp/>:<sp/>http://code.google.com/p/lz4/</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>-<sp/>LZ4<sp/>public<sp/>forum<sp/>:<sp/>https://groups.google.com/forum/#!forum/lz4c</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>Tuning<sp/>parameters</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>MEMORY_USAGE<sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Memory<sp/>usage<sp/>formula<sp/>:<sp/>N-&gt;2^N<sp/>Bytes<sp/>(examples<sp/>:<sp/>10<sp/>-&gt;<sp/>1KB;<sp/>12<sp/>-&gt;<sp/>4KB<sp/>;<sp/>16<sp/>-&gt;<sp/>64KB;<sp/>20<sp/>-&gt;<sp/>1MB;<sp/>etc.)</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Increasing<sp/>memory<sp/>usage<sp/>improves<sp/>compression<sp/>ratio</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Reduced<sp/>memory<sp/>usage<sp/>can<sp/>improve<sp/>speed,<sp/>due<sp/>to<sp/>cache<sp/>effect</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Default<sp/>value<sp/>is<sp/>14,<sp/>for<sp/>16KB,<sp/>which<sp/>nicely<sp/>fits<sp/>into<sp/>Intel<sp/>x86<sp/>L1<sp/>cache</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_USAGE<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HEAPMODE<sp/>:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Select<sp/>how<sp/>default<sp/>compression<sp/>functions<sp/>will<sp/>allocate<sp/>memory<sp/>for<sp/>their<sp/>hash<sp/>table,</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>in<sp/>memory<sp/>stack<sp/>(0:default,<sp/>fastest),<sp/>or<sp/>in<sp/>memory<sp/>heap<sp/>(1:requires<sp/>memory<sp/>allocation<sp/>(malloc)).</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="lz4_8c_1a396a35bbe687da2192faae2da8b66244" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEAPMODE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>CPU<sp/>Feature<sp/>Detection</highlight></codeline>
<codeline lineno="56"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>32<sp/>or<sp/>64<sp/>bits<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(__x86_64__)<sp/>||<sp/>defined(_M_X64)<sp/>||<sp/>defined(_WIN64)<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>||<sp/>defined(__powerpc64__)<sp/>||<sp/>defined(__ppc64__)<sp/>||<sp/>defined(__PPC64__)<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/>||<sp/>defined(__64BIT__)<sp/>||<sp/>defined(_LP64)<sp/>||<sp/>defined(__LP64__)<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/>||<sp/>defined(__ia64)<sp/>||<sp/>defined(__itanium__)<sp/>||<sp/>defined(_M_IA64)<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Detects<sp/>64<sp/>bits<sp/>mode<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_ARCH64<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="lz4_8c_1a2fcbe30c4c297bf61a8f22153e6a6c65" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_ARCH64<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>Little<sp/>Endian<sp/>or<sp/>Big<sp/>Endian<sp/>?</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>Overwrite<sp/>the<sp/>#define<sp/>below<sp/>if<sp/>you<sp/>know<sp/>your<sp/>architecture<sp/>endianess</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__GLIBC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;endian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>(__BYTE_ORDER<sp/>==<sp/>__BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>LZ4_BIG_ENDIAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined(__BIG_ENDIAN__)<sp/>||<sp/>defined(__BIG_ENDIAN)<sp/>||<sp/>defined(_BIG_ENDIAN))<sp/>&amp;&amp;<sp/>!(defined(__LITTLE_ENDIAN__)<sp/>||<sp/>defined(__LITTLE_ENDIAN)<sp/>||<sp/>defined(_LITTLE_ENDIAN))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_BIG_ENDIAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__sparc)<sp/>||<sp/>defined(__sparc__)<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/>||<sp/>defined(__powerpc__)<sp/>||<sp/>defined(__ppc__)<sp/>||<sp/>defined(__PPC__)<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/>||<sp/>defined(__hpux)<sp/><sp/>||<sp/>defined(__hppa)<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/>||<sp/>defined(_MIPSEB)<sp/>||<sp/>defined(__s390__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_BIG_ENDIAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Little<sp/>Endian<sp/>assumed.<sp/>PDP<sp/>Endian<sp/>and<sp/>other<sp/>very<sp/>rare<sp/>endian<sp/>format<sp/>are<sp/>unsupported.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Unaligned<sp/>memory<sp/>access<sp/>is<sp/>automatically<sp/>enabled<sp/>for<sp/>&quot;common&quot;<sp/>CPU,<sp/>such<sp/>as<sp/>x86.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>For<sp/>others<sp/>CPU,<sp/>such<sp/>as<sp/>ARM,<sp/>the<sp/>compiler<sp/>may<sp/>be<sp/>more<sp/>cautious,<sp/>inserting<sp/>unnecessary<sp/>extra<sp/>code<sp/>to<sp/>ensure<sp/>aligned<sp/>access<sp/>property</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>know<sp/>your<sp/>target<sp/>CPU<sp/>supports<sp/>unaligned<sp/>memory<sp/>access,<sp/>you<sp/>want<sp/>to<sp/>force<sp/>this<sp/>option<sp/>manually<sp/>to<sp/>improve<sp/>performance</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__ARM_FEATURE_UNALIGNED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_FORCE_UNALIGNED_ACCESS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>this<sp/>parameter<sp/>if<sp/>your<sp/>target<sp/>system<sp/>or<sp/>compiler<sp/>does<sp/>not<sp/>support<sp/>hardware<sp/>bit<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>defined(_WIN32_WCE)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Visual<sp/>Studio<sp/>for<sp/>Windows<sp/>CE<sp/>does<sp/>not<sp/>support<sp/>Hardware<sp/>bit<sp/>count<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_FORCE_SW_BITCOUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>BIG_ENDIAN_NATIVE_BUT_INCOMPATIBLE<sp/>:</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>This<sp/>option<sp/>may<sp/>provide<sp/>a<sp/>small<sp/>boost<sp/>to<sp/>performance<sp/>for<sp/>some<sp/>big<sp/>endian<sp/>cpu,<sp/>although<sp/>probably<sp/>modest.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>set<sp/>this<sp/>option<sp/>to<sp/>1<sp/>if<sp/>data<sp/>will<sp/>remain<sp/>within<sp/>closed<sp/>environment.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>This<sp/>option<sp/>is<sp/>useless<sp/>on<sp/>Little_Endian<sp/>CPU<sp/>(such<sp/>as<sp/>x86)</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>BIG_ENDIAN_NATIVE_BUT_INCOMPATIBLE<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>Compiler<sp/>Options</highlight></codeline>
<codeline lineno="113"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>(__STDC_VERSION__<sp/>&gt;=<sp/>199901L)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>C99<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;restrict&quot;<sp/>is<sp/>a<sp/>known<sp/>keyword<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="lz4_8c_1a080abdcb9c02438f1cd2bb707af25af8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>restrict<sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>restrict<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Visual<sp/>Studio<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FORCE_INLINE<sp/>static<sp/>__forceinline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;intrin.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Visual<sp/>2005<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>LZ4_ARCH64<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>64-bits<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>intrinsic(_BitScanForward64)<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Visual<sp/>2005<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>intrinsic(_BitScanReverse64)<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Visual<sp/>2005<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>32-bits<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>intrinsic(_BitScanForward)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Visual<sp/>2005<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>intrinsic(_BitScanReverse)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Visual<sp/>2005<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>warning(disable<sp/>:<sp/>4127)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable:<sp/>C4127:<sp/>conditional<sp/>expression<sp/>is<sp/>constant<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FORCE_INLINE<sp/>static<sp/>inline<sp/>__attribute__((always_inline))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FORCE_INLINE<sp/>static<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER<sp/><sp/></highlight><highlight class="comment">/*<sp/>Visual<sp/>Studio<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lz4_bswap16(x)<sp/>_byteswap_ushort(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="lz4_8c_1aa535d272fb4112a33ca889a24af7e285" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lz4_bswap16(x)<sp/>((unsigned<sp/>short<sp/>int)<sp/>((((x)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xffu)<sp/>|<sp/>(((x)<sp/>&amp;<sp/>0xffu)<sp/>&lt;&lt;<sp/>8)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="lz4_8c_1adbba0f726fc66d7100916c683b7568ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GCC_VERSION<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GCC_VERSION<sp/>&gt;=<sp/>302)<sp/>||<sp/>(__INTEL_COMPILER<sp/>&gt;=<sp/>800)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>expect(expr,value)<sp/><sp/><sp/><sp/>(__builtin_expect<sp/>((expr),(value))<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="lz4_8c_1a7d26a1c40d6107cf2f19558492591e67" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>expect(expr,value)<sp/><sp/><sp/><sp/>(expr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="lz4_8c_1aa0672ea7123854cc5f51902a06c473fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>likely(expr)<sp/><sp/><sp/><sp/><sp/>expect((expr)<sp/>!=<sp/>0,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>unlikely(expr)<sp/><sp/><sp/>expect((expr)<sp/>!=<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>Memory<sp/>routines</highlight></codeline>
<codeline lineno="159"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>malloc,<sp/>calloc,<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALLOCATOR(n,s)<sp/>calloc(n,s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FREEMEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>memset,<sp/>memcpy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEM_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>Includes</highlight></codeline>
<codeline lineno="169"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lz4_8h" kindref="compound">lz4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>Basic<sp/>Types</highlight></codeline>
<codeline lineno="175"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>(__STDC_VERSION__<sp/>&gt;=<sp/>199901L)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>C99<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref><sp/><ref refid="lz4_8c_1a57a2244776e01ad620c556de58eb7880" kindref="member">S32</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="lz4_8c_1a24c386d3758eba951eb7532fdbb45804" kindref="member">U64</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>;</highlight></codeline>
<codeline lineno="185" refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>;</highlight></codeline>
<codeline lineno="186" refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>;</highlight></codeline>
<codeline lineno="187" refid="lz4_8c_1a57a2244776e01ad620c556de58eb7880" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a57a2244776e01ad620c556de58eb7880" kindref="member">S32</ref>;</highlight></codeline>
<codeline lineno="188" refid="lz4_8c_1a24c386d3758eba951eb7532fdbb45804" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="lz4_8c_1a24c386d3758eba951eb7532fdbb45804" kindref="member">U64</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/><sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_UNALIGNED_ACCESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_PACKED<sp/>__attribute__<sp/>((packed))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="lz4_8c_1aa1ed035ac46973db2babb746c8ebc06a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_PACKED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(LZ4_FORCE_UNALIGNED_ACCESS)<sp/>&amp;&amp;<sp/>!defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(__IBMC__)<sp/>||<sp/>defined(__SUNPRO_C)<sp/>||<sp/>defined(__SUNPRO_CC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>pack(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>pack(push,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="struct___p_a_c_k_e_d_1acbbe979d0dc2b7049af6402ced784710" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/><ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref><sp/><ref refid="struct___p_a_c_k_e_d_1acbbe979d0dc2b7049af6402ced784710" kindref="member">v</ref>;<sp/>}<sp/><sp/><ref refid="struct___p_a_c_k_e_d" kindref="compound">_PACKED</ref><sp/>U16_S;</highlight></codeline>
<codeline lineno="206" refid="struct___p_a_c_k_e_d_1a69e58b59c453f4a16003e7d1bd2c8f0e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/><ref refid="struct___p_a_c_k_e_d_1a69e58b59c453f4a16003e7d1bd2c8f0e" kindref="member">v</ref>;<sp/>}<sp/><sp/><ref refid="struct___p_a_c_k_e_d" kindref="compound">_PACKED</ref><sp/>U32_S;</highlight></codeline>
<codeline lineno="207" refid="struct___p_a_c_k_e_d_1ae9f6a01fd931fabac1d9997e5f6441bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/><ref refid="lz4_8c_1a24c386d3758eba951eb7532fdbb45804" kindref="member">U64</ref><sp/><ref refid="struct___p_a_c_k_e_d_1ae9f6a01fd931fabac1d9997e5f6441bd" kindref="member">v</ref>;<sp/>}<sp/><sp/><ref refid="struct___p_a_c_k_e_d" kindref="compound">_PACKED</ref><sp/>U64_S;</highlight></codeline>
<codeline lineno="208" refid="struct___p_a_c_k_e_d_1a11e423872a08ba480796b2518e74867c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct___p_a_c_k_e_d_1a11e423872a08ba480796b2518e74867c" kindref="member">v</ref>;}<sp/><ref refid="struct___p_a_c_k_e_d" kindref="compound">_PACKED</ref><sp/>size_t_S;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(LZ4_FORCE_UNALIGNED_ACCESS)<sp/>&amp;&amp;<sp/>!defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(__SUNPRO_C)<sp/>||<sp/>defined(__SUNPRO_CC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>pack(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>pack(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="lz4_8c_1aa1adaa7f29be89d1761dd7b43128ced2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>A16(x)<sp/><sp/><sp/>(((U16_S<sp/>*)(x))-&gt;v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>A32(x)<sp/><sp/><sp/>(((U32_S<sp/>*)(x))-&gt;v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="lz4_8c_1ae04b768aafd50d6bac41490acd2b86a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>A64(x)<sp/><sp/><sp/>(((U64_S<sp/>*)(x))-&gt;v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="lz4_8c_1a81ef925776d88353d3a98161c95be3b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AARCH(x)<sp/>(((size_t_S<sp/>*)(x))-&gt;v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/>Constants</highlight></codeline>
<codeline lineno="226"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="lz4_8c_1ac7f04539d94ce57826ef8b2f3d8408af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_HASHLOG<sp/><sp/><sp/>(MEMORY_USAGE-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="lz4_8c_1a89f3391502e32c9a48898f47f6473011" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HASHTABLESIZE<sp/>(1<sp/>&lt;&lt;<sp/>MEMORY_USAGE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HASHNBCELLS4<sp/><sp/>(1<sp/>&lt;&lt;<sp/>LZ4_HASHLOG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MINMATCH<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="lz4_8c_1a155d81bbd0ae81c533d696c563c6ea87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COPYLENGTH<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LASTLITERALS<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MFLIMIT<sp/>(COPYLENGTH+MINMATCH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LZ4_minLength<sp/>=<sp/>(<ref refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" kindref="member">MFLIMIT</ref>+1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KB<sp/>*(1U&lt;&lt;10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="lz4_8c_1aa6b38d492364d98453284934ed7caee9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MB<sp/>*(1U&lt;&lt;20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="lz4_8c_1a44172ac633c517cb4c9e278cef36b000" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GB<sp/>*(1U&lt;&lt;30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_64KLIMIT<sp/>((64<sp/>KB)<sp/>+<sp/>(MFLIMIT-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="lz4_8c_1ad155489ab5ca0387d058724db8544b0f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SKIPSTRENGTH<sp/>6<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increasing<sp/>this<sp/>value<sp/>will<sp/>make<sp/>the<sp/>compression<sp/>run<sp/>slower<sp/>on<sp/>incompressible<sp/>data<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="lz4_8c_1ab761e7bc07fbb86a76ec92d360d3309e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXD_LOG<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="lz4_8c_1a08e4da5f3d0c7936fa52467f40e4b6aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_DISTANCE<sp/>((1<sp/>&lt;&lt;<sp/>MAXD_LOG)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ML_BITS<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ML_MASK<sp/><sp/>((1U&lt;&lt;ML_BITS)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="lz4_8c_1ae6261d794dfe7c6816e3b342c643f56f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_BITS<sp/>(8-ML_BITS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_MASK<sp/>((1U&lt;&lt;RUN_BITS)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>Structures<sp/>and<sp/>local<sp/>types</highlight></codeline>
<codeline lineno="256"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="struct_l_z4___data___structure" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258" refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>hashTable[<ref refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" kindref="member">HASHNBCELLS4</ref>];</highlight></codeline>
<codeline lineno="259" refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><ref refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" kindref="member">bufferStart</ref>;</highlight></codeline>
<codeline lineno="260" refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="261" refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}<sp/><ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" kindref="member">notLimited</ref><sp/>=<sp/>0,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" kindref="member">limited</ref><sp/>=<sp/>1<sp/>}<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28" kindref="member">limitedOutput_directive</ref>;</highlight></codeline>
<codeline lineno="265" refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" kindref="member">byPtr</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref><sp/>}<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref><sp/>=<sp/>0,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref><sp/>=<sp/>1<sp/>}<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4" kindref="member">prefix64k_directive</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" kindref="member">endOnOutputSize</ref><sp/>=<sp/>0,<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" kindref="member">endOnInputSize</ref><sp/>=<sp/>1<sp/>}<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746" kindref="member">endCondition_directive</ref>;</highlight></codeline>
<codeline lineno="270" refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca67bce1b2dc0e7c66a27de1a9e146ce3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" kindref="member">full</ref><sp/>=<sp/>0,<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca67bce1b2dc0e7c66a27de1a9e146ce3e" kindref="member">partial</ref><sp/>=<sp/>1<sp/>}<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994c" kindref="member">earlyEnd_directive</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>Architecture-specific<sp/>macros</highlight></codeline>
<codeline lineno="275"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STEPSIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(size_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="lz4_8c_1a7740e389dd8567d73b26c333fc5fd54f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_COPYSTEP(d,s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>AARCH(d)<sp/>=<sp/>AARCH(s);<sp/>d+=STEPSIZE;<sp/>s+=STEPSIZE;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="lz4_8c_1ac830bd81f63e4ba98acf134df3d4c1bb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_COPY8(d,s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>LZ4_COPYSTEP(d,s);<sp/>if<sp/>(STEPSIZE&lt;8)<sp/>LZ4_COPYSTEP(d,s);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(LZ4_BIG_ENDIAN)<sp/>&amp;&amp;<sp/>!defined(BIG_ENDIAN_NATIVE_BUT_INCOMPATIBLE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_READ_LITTLEENDIAN_16(d,s,p)<sp/>{<sp/>U16<sp/>v<sp/>=<sp/>A16(p);<sp/>v<sp/>=<sp/>lz4_bswap16(v);<sp/>d<sp/>=<sp/>(s)<sp/>-<sp/>v;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_WRITE_LITTLEENDIAN_16(p,i)<sp/><sp/>{<sp/>U16<sp/>v<sp/>=<sp/>(U16)(i);<sp/>v<sp/>=<sp/>lz4_bswap16(v);<sp/>A16(p)<sp/>=<sp/>v;<sp/>p+=2;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Little<sp/>Endian<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="lz4_8c_1a815a3c4e7b8f3fbd54cd3163e5b1b210" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_READ_LITTLEENDIAN_16(d,s,p)<sp/>{<sp/>d<sp/>=<sp/>(s)<sp/>-<sp/>A16(p);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="lz4_8c_1a982a474e51c097045868d3284a7351d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_WRITE_LITTLEENDIAN_16(p,v)<sp/><sp/>{<sp/>A16(p)<sp/>=<sp/>v;<sp/>p+=2;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/>Macros</highlight></codeline>
<codeline lineno="291"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LZ4_ARCH64<sp/>||<sp/>!defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_WILDCOPY(d,s,e)<sp/><sp/><sp/><sp/><sp/>{<sp/>do<sp/>{<sp/>LZ4_COPY8(d,s)<sp/>}<sp/>while<sp/>(d&lt;e);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>the<sp/>end,<sp/>d&gt;=e;<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LZ4_WILDCOPY(d,s,e)<sp/><sp/><sp/><sp/><sp/>{<sp/>if<sp/>(likely(e-d<sp/>&lt;=<sp/>8))<sp/>LZ4_COPY8(d,s)<sp/>else<sp/>do<sp/>{<sp/>LZ4_COPY8(d,s)<sp/>}<sp/>while<sp/>(d&lt;e);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="lz4_8c_1ae6ffab5f2d2f54490105fd4541874a59" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_SECURECOPY(d,s,e)<sp/><sp/><sp/><sp/><sp/>{<sp/>if<sp/>(d&lt;e)<sp/>LZ4_WILDCOPY(d,s,e);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/****************************</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/>Private<sp/>local<sp/>functions</highlight></codeline>
<codeline lineno="302"><highlight class="comment">****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LZ4_ARCH64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a721fd5d57c07efb5cf941999463d969b" kindref="member">LZ4_NbCommonBytes</ref><sp/>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a24c386d3758eba951eb7532fdbb45804" kindref="member">U64</ref><sp/>val)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(LZ4_BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>_BitScanReverse64(<sp/>&amp;r,<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(r&gt;&gt;3);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(GCC_VERSION<sp/>&gt;=<sp/>304)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__builtin_clzll(val)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(val&gt;&gt;32))<sp/>{<sp/>r=4;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>r=0;<sp/>val&gt;&gt;=32;<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(val&gt;&gt;16))<sp/>{<sp/>r+=2;<sp/>val&gt;&gt;=8;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>val&gt;&gt;=24;<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>(!val);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>_BitScanForward64(<sp/>&amp;r,<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(r&gt;&gt;3);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(GCC_VERSION<sp/>&gt;=<sp/>304)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__builtin_ctzll(val)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DeBruijnBytePos[64]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>2,<sp/>0,<sp/>3,<sp/>1,<sp/>3,<sp/>1,<sp/>4,<sp/>2,<sp/>7,<sp/>0,<sp/>2,<sp/>3,<sp/>6,<sp/>1,<sp/>5,<sp/>3,<sp/>5,<sp/>1,<sp/>3,<sp/>4,<sp/>4,<sp/>2,<sp/>5,<sp/>6,<sp/>7,<sp/>7,<sp/>0,<sp/>1,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>6,<sp/>2,<sp/>6,<sp/>5,<sp/>5,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>1,<sp/>2,<sp/>4,<sp/>6,<sp/>4,<sp/>4,<sp/>5,<sp/>7,<sp/>2,<sp/>6,<sp/>5,<sp/>7,<sp/>6,<sp/>7,<sp/>7<sp/>};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DeBruijnBytePos[((<ref refid="lz4_8c_1a24c386d3758eba951eb7532fdbb45804" kindref="member">U64</ref>)((val<sp/>&amp;<sp/>-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val)<sp/>*<sp/>0x0218A392CDABBD3FULL))<sp/>&gt;&gt;<sp/>58];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="lz4_8c_1a721fd5d57c07efb5cf941999463d969b" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a721fd5d57c07efb5cf941999463d969b" kindref="member">LZ4_NbCommonBytes</ref><sp/>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>val)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(LZ4_BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>_BitScanReverse(<sp/>&amp;r,<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(r&gt;&gt;3);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(GCC_VERSION<sp/>&gt;=<sp/>304)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__builtin_clz(val)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(val&gt;&gt;16))<sp/>{<sp/>r=2;<sp/>val&gt;&gt;=8;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>r=0;<sp/>val&gt;&gt;=24;<sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>(!val);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>_BitScanForward(<sp/>&amp;r,<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(r&gt;&gt;3);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(GCC_VERSION<sp/>&gt;=<sp/>304)<sp/>&amp;&amp;<sp/>!defined(LZ4_FORCE_SW_BITCOUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__builtin_ctz(val)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DeBruijnBytePos[32]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>3,<sp/>0,<sp/>3,<sp/>1,<sp/>3,<sp/>0,<sp/>3,<sp/>2,<sp/>2,<sp/>1,<sp/>3,<sp/>2,<sp/>0,<sp/>1,<sp/>3,<sp/>3,<sp/>1,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>0,<sp/>3,<sp/>1,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>1,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DeBruijnBytePos[((<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>)((val<sp/>&amp;<sp/>-(<ref refid="lz4_8c_1a57a2244776e01ad620c556de58eb7880" kindref="member">S32</ref>)val)<sp/>*<sp/>0x077CB531U))<sp/>&gt;&gt;<sp/>27];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/****************************</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/>Compression<sp/>functions</highlight></codeline>
<codeline lineno="371"><highlight class="comment">****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="lz4_8h_1a2b09f5ca41ce609bb136d3637beffe04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a2b09f5ca41ce609bb136d3637beffe04" kindref="member">LZ4_compressBound</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isize)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a2453a423fd34640a0afbbf57ed0a5399" kindref="member">LZ4_COMPRESSBOUND</ref>(isize);<sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="lz4_8c_1a9614404fbd706777f4326175c29a1f24" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a9614404fbd706777f4326175c29a1f24" kindref="member">LZ4_hashSequence</ref>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>sequence,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref><sp/>tableType)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableType<sp/>==<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((sequence)<sp/>*<sp/>2654435761U)<sp/>&gt;&gt;<sp/>((<ref refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" kindref="member">MINMATCH</ref>*8)-(<ref refid="lz4_8c_1ac7f04539d94ce57826ef8b2f3d8408af" kindref="member">LZ4_HASHLOG</ref>+1)));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((sequence)<sp/>*<sp/>2654435761U)<sp/>&gt;&gt;<sp/>((<ref refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" kindref="member">MINMATCH</ref>*8)-<ref refid="lz4_8c_1ac7f04539d94ce57826ef8b2f3d8408af" kindref="member">LZ4_HASHLOG</ref>));</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" kindref="member">LZ4_hashPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>p,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref><sp/>tableType)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a9614404fbd706777f4326175c29a1f24" kindref="member">LZ4_hashSequence</ref>(<ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(p),<sp/>tableType);<sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="lz4_8c_1ac418d75800f31824bd6513706adf9c6b" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ac418d75800f31824bd6513706adf9c6b" kindref="member">LZ4_putPositionOnHash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>p,<sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>h,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tableBase,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref><sp/>tableType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>srcBase)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tableType)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" kindref="member">byPtr</ref>:<sp/>{<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>**<sp/>hashTable<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>**)<sp/>tableBase;<sp/>hashTable[h]<sp/>=<sp/>p;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref>:<sp/>{<sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>*<sp/>hashTable<sp/>=<sp/>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>*)<sp/>tableBase;<sp/>hashTable[h]<sp/>=<sp/>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>)(p-srcBase);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref>:<sp/>{<sp/><ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>*<sp/>hashTable<sp/>=<sp/>(<ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>*)<sp/>tableBase;<sp/>hashTable[h]<sp/>=<sp/>(<ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>)(p-srcBase);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" kindref="member">LZ4_putPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tableBase,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref><sp/>tableType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>srcBase)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>h<sp/>=<sp/><ref refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" kindref="member">LZ4_hashPosition</ref>(p,<sp/>tableType);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac418d75800f31824bd6513706adf9c6b" kindref="member">LZ4_putPositionOnHash</ref>(p,<sp/>h,<sp/>tableBase,<sp/>tableType,<sp/>srcBase);</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="lz4_8c_1a5e3207c7da0c5112418bd1c9718fb764" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><ref refid="lz4_8c_1a5e3207c7da0c5112418bd1c9718fb764" kindref="member">LZ4_getPositionOnHash</ref>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>h,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tableBase,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref><sp/>tableType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>srcBase)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableType<sp/>==<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" kindref="member">byPtr</ref>)<sp/>{<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>**<sp/>hashTable<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>**)<sp/>tableBase;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hashTable[h];<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableType<sp/>==<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref>)<sp/>{<sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>*<sp/>hashTable<sp/>=<sp/>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>*)<sp/>tableBase;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hashTable[h]<sp/>+<sp/>srcBase;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>*<sp/>hashTable<sp/>=<sp/>(<ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>*)<sp/>tableBase;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hashTable[h]<sp/>+<sp/>srcBase;<sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default,<sp/>to<sp/>ensure<sp/>a<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="lz4_8c_1a9291a47e6769fe3287d7829806da3324" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><ref refid="lz4_8c_1a9291a47e6769fe3287d7829806da3324" kindref="member">LZ4_getPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tableBase,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref><sp/>tableType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>srcBase)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>h<sp/>=<sp/><ref refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" kindref="member">LZ4_hashPosition</ref>(p,<sp/>tableType);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a5e3207c7da0c5112418bd1c9718fb764" kindref="member">LZ4_getPositionOnHash</ref>(h,<sp/>tableBase,<sp/>tableType,<sp/>srcBase);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>(</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28" kindref="member">limitedOutput_directive</ref><sp/>limitedOutput,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699" kindref="member">tableType_t</ref><sp/>tableType,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4" kindref="member">prefix64k_directive</ref><sp/>prefix)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>ip<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)<sp/>source;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref><sp/>=<sp/>(prefix==<ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>)<sp/>?<sp/>((<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*)ctx)-&gt;base<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lowLimit<sp/>=<sp/>((prefix==<ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>)<sp/>?<sp/>((<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*)ctx)-&gt;bufferStart<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)<ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>anchor<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)<sp/>source;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iend<sp/>=<sp/>ip<sp/>+<sp/>inputSize;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mflimit<sp/>=<sp/>iend<sp/>-<sp/><ref refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" kindref="member">MFLIMIT</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>matchlimit<sp/>=<sp/>iend<sp/>-<sp/><ref refid="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" kindref="member">LASTLITERALS</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>op<sp/>=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)<sp/>dest;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oend<sp/>=<sp/>op<sp/>+<sp/>maxOutputSize;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipStrength<sp/>=<sp/><ref refid="lz4_8c_1ad155489ab5ca0387d058724db8544b0f" kindref="member">SKIPSTRENGTH</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>forwardH;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>conditions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>)inputSize<sp/>&gt;<sp/>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>)<ref refid="lz4_8h_1a88ee51e36ca74cd0533e731c20572ea6" kindref="member">LZ4_MAX_INPUT_SIZE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unsupported<sp/>input<sp/>size,<sp/>too<sp/>large<sp/>(or<sp/>negative)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((prefix==<ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>)<sp/>&amp;&amp;<sp/>(ip<sp/>!=<sp/>((<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*)ctx)-&gt;nextBlock))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>continue<sp/>from<sp/>end<sp/>of<sp/>previous<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix==<ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>)<sp/>((<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*)ctx)-&gt;nextBlock=iend;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>it<sp/>now,<sp/>due<sp/>to<sp/>potential<sp/>early<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tableType<sp/>==<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref>)<sp/>&amp;&amp;<sp/>(inputSize&gt;=(int)<ref refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" kindref="member">LZ4_64KLIMIT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>too<sp/>large<sp/>(not<sp/>within<sp/>64K<sp/>limit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputSize&lt;LZ4_minLength)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_last_literals;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>too<sp/>small,<sp/>no<sp/>compression<sp/>(all<sp/>literals)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>Byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" kindref="member">LZ4_putPosition</ref>(ip,<sp/>ctx,<sp/>tableType,<sp/>base);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>ip++;<sp/>forwardH<sp/>=<sp/><ref refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" kindref="member">LZ4_hashPosition</ref>(ip,<sp/>tableType);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Main<sp/>Loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>;<sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findMatchAttempts<sp/>=<sp/>(1U<sp/>&lt;&lt;<sp/>skipStrength)<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>forwardIp<sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>ref;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>token;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>a<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>h<sp/>=<sp/>forwardH;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>findMatchAttempts++<sp/>&gt;&gt;<sp/>skipStrength;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>forwardIp;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardIp<sp/>=<sp/>ip<sp/>+<sp/>step;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(forwardIp<sp/>&gt;<sp/>mflimit))<sp/>{<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_last_literals;<sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardH<sp/>=<sp/><ref refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" kindref="member">LZ4_hashPosition</ref>(forwardIp,<sp/>tableType);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/><ref refid="lz4_8c_1a5e3207c7da0c5112418bd1c9718fb764" kindref="member">LZ4_getPositionOnHash</ref>(h,<sp/>ctx,<sp/>tableType,<sp/>base);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac418d75800f31824bd6513706adf9c6b" kindref="member">LZ4_putPositionOnHash</ref>(ip,<sp/>h,<sp/>ctx,<sp/>tableType,<sp/>base);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ref<sp/>+<sp/><ref refid="lz4_8c_1a08e4da5f3d0c7936fa52467f40e4b6aa" kindref="member">MAX_DISTANCE</ref><sp/>&lt;<sp/>ip)<sp/>||<sp/>(<ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(ref)<sp/>!=<sp/><ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(ip)));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Catch<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ip&gt;anchor)<sp/>&amp;&amp;<sp/>(ref<sp/>&gt;<sp/>lowLimit)<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(ip[-1]==ref[-1])))<sp/>{<sp/>ip--;<sp/>ref--;<sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encode<sp/>Literal<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>(int)(ip<sp/>-<sp/>anchor);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>op++;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((limitedOutput)<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(op<sp/>+<sp/>length<sp/>+<sp/>(2<sp/>+<sp/>1<sp/>+<sp/>LASTLITERALS)<sp/>+<sp/>(length/255)<sp/>&gt;<sp/>oend)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>output<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length&gt;=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" kindref="member">RUN_MASK</ref>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>length-<ref refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" kindref="member">RUN_MASK</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*token=(RUN_MASK&lt;&lt;<ref refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" kindref="member">ML_BITS</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>len<sp/>&gt;=<sp/>255<sp/>;<sp/>len-=255)<sp/>*op++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*op++<sp/>=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>)len;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>*token<sp/>=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>)(length&lt;&lt;<ref refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" kindref="member">ML_BITS</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>Literals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>end=(op)+(length);<sp/><ref refid="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" kindref="member">LZ4_WILDCOPY</ref>(op,anchor,end);<sp/>op=end;<sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">_next_match:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encode<sp/>Offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a982a474e51c097045868d3284a7351d3" kindref="member">LZ4_WRITE_LITTLEENDIAN_16</ref>(op,(<ref refid="lz4_8c_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref>)(ip-ref));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>Counting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip+=<ref refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" kindref="member">MINMATCH</ref>;<sp/>ref+=<ref refid="lz4_8c_1a2d835b35b6582451a75dc6ff464a9e75" kindref="member">MINMATCH</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MinMatch<sp/>already<sp/>verified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchor<sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="lz4_8c_1aa0672ea7123854cc5f51902a06c473fb" kindref="member">likely</ref>(ip&lt;matchlimit-(<ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>-1)))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/><ref refid="lz4_8c_1a81ef925776d88353d3a98161c95be3b2" kindref="member">AARCH</ref>(ref)<sp/>^<sp/><ref refid="lz4_8c_1a81ef925776d88353d3a98161c95be3b2" kindref="member">AARCH</ref>(ip);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!diff)<sp/>{<sp/>ip+=<ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>;<sp/>ref+=<ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>+=<sp/><ref refid="lz4_8c_1a721fd5d57c07efb5cf941999463d969b" kindref="member">LZ4_NbCommonBytes</ref>(diff);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_endCount;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lz4_8c_1a2fcbe30c4c297bf61a8f22153e6a6c65" kindref="member">LZ4_ARCH64</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ip&lt;(matchlimit-3))<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(ref)<sp/>==<sp/><ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(ip)))<sp/>{<sp/>ip+=4;<sp/>ref+=4;<sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ip&lt;(matchlimit-1))<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1aa1adaa7f29be89d1761dd7b43128ced2" kindref="member">A16</ref>(ref)<sp/>==<sp/><ref refid="lz4_8c_1aa1adaa7f29be89d1761dd7b43128ced2" kindref="member">A16</ref>(ip)))<sp/>{<sp/>ip+=2;<sp/>ref+=2;<sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ip&lt;matchlimit)<sp/>&amp;&amp;<sp/>(*ref<sp/>==<sp/>*ip))<sp/>ip++;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">_endCount:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encode<sp/>MatchLength<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>(int)(ip<sp/>-<sp/>anchor);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((limitedOutput)<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(op<sp/>+<sp/>(1<sp/>+<sp/>LASTLITERALS)<sp/>+<sp/>(length&gt;&gt;8)<sp/>&gt;<sp/>oend)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>output<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length&gt;=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" kindref="member">ML_MASK</ref>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*token<sp/>+=<sp/><ref refid="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" kindref="member">ML_MASK</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>-=<sp/><ref refid="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" kindref="member">ML_MASK</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>length<sp/>&gt;<sp/>509<sp/>;<sp/>length-=510)<sp/>{<sp/>*op++<sp/>=<sp/>255;<sp/>*op++<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;=<sp/>255)<sp/>{<sp/>length-=255;<sp/>*op++<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*op++<sp/>=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>)length;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>*token<sp/>+=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>)(length);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>end<sp/>of<sp/>chunk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip<sp/>&gt;<sp/>mflimit)<sp/>{<sp/>anchor<sp/>=<sp/>ip;<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" kindref="member">LZ4_putPosition</ref>(ip-2,<sp/>ctx,<sp/>tableType,<sp/>base);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>next<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/><ref refid="lz4_8c_1a9291a47e6769fe3287d7829806da3324" kindref="member">LZ4_getPosition</ref>(ip,<sp/>ctx,<sp/>tableType,<sp/>base);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a3b701bb7beed8466a971f73a5d35dc03" kindref="member">LZ4_putPosition</ref>(ip,<sp/>ctx,<sp/>tableType,<sp/>base);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ref<sp/>+<sp/><ref refid="lz4_8c_1a08e4da5f3d0c7936fa52467f40e4b6aa" kindref="member">MAX_DISTANCE</ref><sp/>&gt;=<sp/>ip)<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(ref)<sp/>==<sp/><ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(ip)))<sp/>{<sp/>token<sp/>=<sp/>op++;<sp/>*token=0;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_next_match;<sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>next<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchor<sp/>=<sp/>ip++;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardH<sp/>=<sp/><ref refid="lz4_8c_1afd1462011f3123a54773ef549f1ec287" kindref="member">LZ4_hashPosition</ref>(ip,<sp/>tableType);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">_last_literals:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encode<sp/>Last<sp/>Literals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastRun<sp/>=<sp/>(int)(iend<sp/>-<sp/>anchor);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((limitedOutput)<sp/>&amp;&amp;<sp/>(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)op<sp/>-<sp/>dest)<sp/>+<sp/>lastRun<sp/>+<sp/>1<sp/>+<sp/>((lastRun+255-<ref refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" kindref="member">RUN_MASK</ref>)/255)<sp/>&gt;<sp/>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>)maxOutputSize))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>output<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastRun&gt;=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" kindref="member">RUN_MASK</ref>)<sp/>{<sp/>*op++=(<ref refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" kindref="member">RUN_MASK</ref>&lt;&lt;<ref refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" kindref="member">ML_BITS</ref>);<sp/>lastRun-=<ref refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" kindref="member">RUN_MASK</ref>;<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>lastRun<sp/>&gt;=<sp/>255<sp/>;<sp/>lastRun-=255)<sp/>*op++<sp/>=<sp/>255;<sp/>*op++<sp/>=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>)<sp/>lastRun;<sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>*op++<sp/>=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>)(lastRun&lt;&lt;<ref refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" kindref="member">ML_BITS</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(op,<sp/>anchor,<sp/>iend<sp/>-<sp/>anchor);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>+=<sp/>iend-anchor;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)op)-dest);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a806e7d86885991c722172bcf57abb71b" kindref="member">LZ4_compress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HEAPMODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx<sp/>=<sp/><ref refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" kindref="member">ALLOCATOR</ref>(<ref refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" kindref="member">HASHNBCELLS4</ref>,<sp/>4);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Aligned<sp/>on<sp/>4-bytes<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>ctx[1U&lt;&lt;(<ref refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" kindref="member">MEMORY_USAGE</ref>-2)]<sp/>=<sp/>{0};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>data<sp/>is<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputSize<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" kindref="member">LZ4_64KLIMIT</ref>)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)ctx,<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/>dest,<sp/>inputSize,<sp/>0,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" kindref="member">notLimited</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)ctx,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>0,<sp/>notLimited,<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)==8)<sp/>?<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref><sp/>:<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" kindref="member">byPtr</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HEAPMODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" kindref="member">FREEMEM</ref>(ctx);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a464e8e2a2ad215e0d94042722eb75551" kindref="member">LZ4_compress_limitedOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HEAPMODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx<sp/>=<sp/><ref refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" kindref="member">ALLOCATOR</ref>(<ref refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" kindref="member">HASHNBCELLS4</ref>,<sp/>4);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Aligned<sp/>on<sp/>4-bytes<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref><sp/>ctx[1U&lt;&lt;(<ref refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" kindref="member">MEMORY_USAGE</ref>-2)]<sp/>=<sp/>{0};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>data<sp/>is<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputSize<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" kindref="member">LZ4_64KLIMIT</ref>)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)ctx,<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" kindref="member">limited</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)ctx,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/>limited,<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)==8)<sp/>?<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref><sp/>:<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" kindref="member">byPtr</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HEAPMODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" kindref="member">FREEMEM</ref>(ctx);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">/*****************************</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/>Using<sp/>external<sp/>allocation</highlight></codeline>
<codeline lineno="600"><highlight class="comment">*****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="lz4_8h_1a5533b6e13559d2c75ac5ac6d4eb13beb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" kindref="member">LZ4_sizeofState</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>&lt;&lt;<sp/><ref refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" kindref="member">MEMORY_USAGE</ref>;<sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="lz4_8h_1a430f331e5951658bd033faf564a958bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a430f331e5951658bd033faf564a958bf" kindref="member">LZ4_compress_withState</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(state)&amp;3)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>state<sp/>is<sp/>not<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" kindref="member">MEM_INIT</ref>(state,<sp/>0,<sp/><ref refid="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" kindref="member">LZ4_sizeofState</ref>());</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputSize<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" kindref="member">LZ4_64KLIMIT</ref>)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>(state,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>0,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" kindref="member">notLimited</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>(state,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>0,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" kindref="member">notLimited</ref>,<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)==8)<sp/>?<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref><sp/>:<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" kindref="member">byPtr</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aae32f2434789e3878e43f52094b81b9a" kindref="member">LZ4_compress_limitedOutput_withState</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(state)&amp;3)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>state<sp/>is<sp/>not<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" kindref="member">MEM_INIT</ref>(state,<sp/>0,<sp/><ref refid="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" kindref="member">LZ4_sizeofState</ref>());</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputSize<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" kindref="member">LZ4_64KLIMIT</ref>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>(state,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" kindref="member">limited</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" kindref="member">byU16</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>(state,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" kindref="member">limited</ref>,<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)==8)<sp/>?<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref><sp/>:<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" kindref="member">byPtr</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">/****************************</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/>Stream<sp/>functions</highlight></codeline>
<codeline lineno="631"><highlight class="comment">****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="lz4_8h_1a92f20fa55554d00760fb6fb4108a2825" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a1fddf246561e7b13fb1b3b10aad55045" kindref="member">LZ4_sizeofStreamState</ref>()</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" kindref="member">LZ4_init</ref>(<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*<sp/>lz4ds,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" kindref="member">MEM_INIT</ref>(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" kindref="member">hashTable</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" kindref="member">hashTable</ref>));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" kindref="member">bufferStart</ref><sp/>=<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref><sp/>=<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>=<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="lz4_8h_1ae29eae664f704fd216b9db8d05d51e18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ae29eae664f704fd216b9db8d05d51e18" kindref="member">LZ4_resetStreamState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inputBuffer)</highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)state)<sp/>&amp;<sp/>3)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>pointer<sp/>is<sp/>not<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" kindref="member">LZ4_init</ref>((<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*)state,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)inputBuffer);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="lz4_8h_1a3aa16d37ad77d8007ffaa0bdb3c7fb10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="lz4_8c_1a3aa16d37ad77d8007ffaa0bdb3c7fb10" kindref="member">LZ4_create</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inputBuffer)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>lz4ds<sp/>=<sp/><ref refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" kindref="member">ALLOCATOR</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" kindref="member">LZ4_init</ref><sp/>((<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*)lz4ds,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)inputBuffer);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lz4ds;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="lz4_8h_1ac85fe1c4aadb06c903e31812bb109a86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ac85fe1c4aadb06c903e31812bb109a86" kindref="member">LZ4_free</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" kindref="member">FREEMEM</ref>(LZ4_Data);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="lz4_8h_1a2fd193cdf3113ab39f312a6cf625e988" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lz4_8c_1a2fd193cdf3113ab39f312a6cf625e988" kindref="member">LZ4_slideInputBuffer</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*<sp/>lz4ds<sp/>=<sp/>(<ref refid="struct_l_z4___data___structure" kindref="compound">LZ4_Data_Structure</ref>*)LZ4_Data;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>-<sp/>(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" kindref="member">bufferStart</ref><sp/>+<sp/>64<sp/><ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref><sp/>-<sp/>delta<sp/>&gt;<sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>underflow<sp/>control<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((size_t)(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>-<sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref>)<sp/>&gt;<sp/>0xE0000000)<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>to<sp/>32-bits<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>deltaLimit<sp/>=<sp/>(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>-<sp/>64<sp/><ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>)<sp/>-<sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nH;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(nH=0;<sp/>nH<sp/>&lt;<sp/><ref refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" kindref="member">HASHNBCELLS4</ref>;<sp/>nH++)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" kindref="member">hashTable</ref>[nH])<sp/>&lt;<sp/>deltaLimit)<sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" kindref="member">hashTable</ref>[nH]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" kindref="member">hashTable</ref>[nH]<sp/>-=<sp/>(<ref refid="lz4_8c_1ac3df7cf3c8cb172a588adec881447d68" kindref="member">U32</ref>)deltaLimit;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" kindref="member">bufferStart</ref>),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>-<sp/>64<sp/><ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>),<sp/>64<sp/><ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref><sp/>=<sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" kindref="member">bufferStart</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>=<sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref><sp/>+<sp/>64<sp/><ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" kindref="member">bufferStart</ref>),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>-<sp/>64<sp/><ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>),<sp/>64<sp/><ref refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" kindref="member">KB</ref>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref><sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" kindref="member">base</ref><sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(lz4ds-&gt;<ref refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" kindref="member">nextBlock</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="lz4_8h_1a8893fc9d295b44546f945b0502f59864" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a8893fc9d295b44546f945b0502f59864" kindref="member">LZ4_compress_continue</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>(LZ4_Data,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>0,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" kindref="member">notLimited</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="lz4_8h_1a2ed396b7d1983814698fbc31eecba9f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a2ed396b7d1983814698fbc31eecba9f2" kindref="member">LZ4_compress_limitedOutput_continue</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" kindref="member">LZ4_compress_generic</ref>(LZ4_Data,<sp/>source,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/><ref refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" kindref="member">limited</ref>,<sp/><ref refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" kindref="member">byU32</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">/****************************</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/>Decompression<sp/>functions</highlight></codeline>
<codeline lineno="713"><highlight class="comment">****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*<sp/>This<sp/>generic<sp/>decompression<sp/>function<sp/>cover<sp/>all<sp/>use<sp/>cases.</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*<sp/>It<sp/>shall<sp/>be<sp/>instanciated<sp/>several<sp/>times,<sp/>using<sp/>different<sp/>sets<sp/>of<sp/>directives</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>it<sp/>is<sp/>essential<sp/>this<sp/>generic<sp/>function<sp/>is<sp/>really<sp/>inlined,</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/>*<sp/>in<sp/>order<sp/>to<sp/>remove<sp/>useless<sp/>branches<sp/>during<sp/>compilation<sp/>optimisation.</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" refkind="member"><highlight class="normal"><ref refid="lz4_8c_1ac032d233a8ebfcd82fd49d0824eefb18" kindref="member">FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" kindref="member">LZ4_decompress_generic</ref>(</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputSize,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>endOnInput==endOnInputSize,<sp/>this<sp/>value<sp/>is<sp/>the<sp/>max<sp/>size<sp/>of<sp/>Output<sp/>Buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endOnInput,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>endOnOutputSize,<sp/>endOnInputSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prefix64k,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>noPrefix,<sp/>withPrefix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partialDecoding,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>full,<sp/>partial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetOutputSize<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>used<sp/>if<sp/>partialDecoding==partial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>Variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><ref refid="lz4_8c_1a080abdcb9c02438f1cd2bb707af25af8" kindref="member">restrict</ref><sp/>ip<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)<sp/>source;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>ref;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iend<sp/>=<sp/>ip<sp/>+<sp/>inputSize;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>op<sp/>=<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)<sp/>dest;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oend<sp/>=<sp/>op<sp/>+<sp/>outputSize;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>cpy;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/>oexit<sp/>=<sp/>op<sp/>+<sp/>targetOutputSize;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*const<sp/>size_t<sp/>dec32table[]<sp/>=<sp/>{0,<sp/>3,<sp/>2,<sp/>3,<sp/>0,<sp/>0,<sp/>0,<sp/>0};<sp/><sp/><sp/>/<sp/>static<sp/>reduces<sp/>speed<sp/>for<sp/>LZ4_decompress_safe()<sp/>on<sp/>GCC64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dec32table[]<sp/>=<sp/>{4-0,<sp/>4-3,<sp/>4-2,<sp/>4-3,<sp/>4-0,<sp/>4-0,<sp/>4-0,<sp/>4-0};<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>static<sp/>reduces<sp/>speed<sp/>for<sp/>LZ4_decompress_safe()<sp/>on<sp/>GCC64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dec64table[]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>(size_t)-1,<sp/>0,<sp/>1,<sp/>2,<sp/>3};</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>cases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((partialDecoding)<sp/>&amp;&amp;<sp/>(oexit&gt;<sp/>oend-<ref refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" kindref="member">MFLIMIT</ref>))<sp/>oexit<sp/>=<sp/>oend-<ref refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" kindref="member">MFLIMIT</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>targetOutputSize<sp/>too<sp/>high<sp/>=&gt;<sp/>decode<sp/>everything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((endOnInput)<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(outputSize==0)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((inputSize==1)<sp/>&amp;&amp;<sp/>(*ip==0))<sp/>?<sp/>0<sp/>:<sp/>-1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Empty<sp/>output<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!endOnInput)<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(outputSize==0)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*ip==0?1:-1);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Main<sp/>Loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>token;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>runlength<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>*ip++;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((length=(token&gt;&gt;<ref refid="lz4_8c_1aa84b594ef328b62b23e36c78abe2aaf0" kindref="member">ML_BITS</ref>))<sp/>==<sp/><ref refid="lz4_8c_1aec45fd08a68c07b74493e631ae52aca1" kindref="member">RUN_MASK</ref>)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>s=255;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(((endOnInput)?ip&lt;iend:1)<sp/>&amp;&amp;<sp/>(s==255))</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>*ip++;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>literals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpy<sp/>=<sp/>op+length;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((endOnInput)<sp/>&amp;&amp;<sp/>((cpy&gt;(partialDecoding?oexit:oend-<ref refid="lz4_8c_1a6bb5847a99cd90aca07870a394cbe70d" kindref="member">MFLIMIT</ref>))<sp/>||<sp/>(ip+length&gt;iend-(2+1+<ref refid="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" kindref="member">LASTLITERALS</ref>)))<sp/>)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((!endOnInput)<sp/>&amp;&amp;<sp/>(cpy&gt;oend-<ref refid="lz4_8c_1a155d81bbd0ae81c533d696c563c6ea87" kindref="member">COPYLENGTH</ref>)))</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partialDecoding)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpy<sp/>&gt;<sp/>oend)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_output_error;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>write<sp/>attempt<sp/>beyond<sp/>end<sp/>of<sp/>output<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((endOnInput)<sp/>&amp;&amp;<sp/>(ip+length<sp/>&gt;<sp/>iend))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_output_error;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>read<sp/>attempt<sp/>beyond<sp/>end<sp/>of<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!endOnInput)<sp/>&amp;&amp;<sp/>(cpy<sp/>!=<sp/>oend))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_output_error;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>block<sp/>decoding<sp/>must<sp/>stop<sp/>exactly<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((endOnInput)<sp/>&amp;&amp;<sp/>((ip+length<sp/>!=<sp/>iend)<sp/>||<sp/>(cpy<sp/>&gt;<sp/>oend)))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_output_error;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>input<sp/>must<sp/>be<sp/>consumed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(op,<sp/>ip,<sp/>length);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Necessarily<sp/>EOF,<sp/>due<sp/>to<sp/>parsing<sp/>restrictions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" kindref="member">LZ4_WILDCOPY</ref>(op,<sp/>ip,<sp/>cpy);<sp/>ip<sp/>-=<sp/>(op-cpy);<sp/>op<sp/>=<sp/>cpy;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a815a3c4e7b8f3fbd54cd3163e5b1b210" kindref="member">LZ4_READ_LITTLEENDIAN_16</ref>(ref,cpy,ip);<sp/>ip+=2;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((prefix64k==<ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(ref<sp/>&lt;<sp/>(<ref refid="lz4_8c_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)dest)))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_output_error;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>offset<sp/>outside<sp/>destination<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>matchlength<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((length=(token&amp;<ref refid="lz4_8c_1aa939dccc909b8b36baadb3265a72b37a" kindref="member">ML_MASK</ref>))<sp/>==<sp/>ML_MASK)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((!endOnInput)<sp/>||<sp/>(ip&lt;iend-(<ref refid="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" kindref="member">LASTLITERALS</ref>+1)))<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>enough<sp/>bytes<sp/>remain<sp/>for<sp/>LASTLITERALS<sp/>+<sp/>token<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>*ip++;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s==255)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>repeated<sp/>sequence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>((op-ref)&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>))</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dec64<sp/>=<sp/>dec64table[(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)==4)<sp/>?<sp/>0<sp/>:<sp/>op-ref];</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op[0]<sp/>=<sp/>ref[0];</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op[1]<sp/>=<sp/>ref[1];</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op[2]<sp/>=<sp/>ref[2];</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op[3]<sp/>=<sp/>ref[3];</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*op<sp/>+=<sp/>4,<sp/>ref<sp/>+=<sp/>4;<sp/>ref<sp/>-=<sp/>dec32table[op-ref];</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A32(op)<sp/>=<sp/>A32(ref);</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>+=<sp/>STEPSIZE-4;<sp/>ref<sp/>-=<sp/>dec64;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>+=<sp/>dec32table[op-ref];</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(op+4)<sp/>=<sp/><ref refid="lz4_8c_1ab78347b38f01fdb338e5a7ebe36d4a88" kindref="member">A32</ref>(ref);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>+=<sp/><ref refid="lz4_8c_1a0b31438dd90256ed47b3bea0eb62be06" kindref="member">STEPSIZE</ref>;<sp/>ref<sp/>-=<sp/>dec64;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><ref refid="lz4_8c_1a7740e389dd8567d73b26c333fc5fd54f" kindref="member">LZ4_COPYSTEP</ref>(op,ref);<sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpy<sp/>=<sp/>op<sp/>+<sp/>length<sp/>-<sp/>(STEPSIZE-4);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lz4_8c_1ad8700448546b3b5111404cc021061fd5" kindref="member">unlikely</ref>(cpy&gt;oend-<ref refid="lz4_8c_1a155d81bbd0ae81c533d696c563c6ea87" kindref="member">COPYLENGTH</ref>-(STEPSIZE-4)))</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpy<sp/>&gt;<sp/>oend-<ref refid="lz4_8c_1a7a912d9a1f869b93be505568dce7fa8c" kindref="member">LASTLITERALS</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_output_error;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>:<sp/>last<sp/>5<sp/>bytes<sp/>must<sp/>be<sp/>literals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1ae6ffab5f2d2f54490105fd4541874a59" kindref="member">LZ4_SECURECOPY</ref>(op,<sp/>ref,<sp/>(oend-<ref refid="lz4_8c_1a155d81bbd0ae81c533d696c563c6ea87" kindref="member">COPYLENGTH</ref>));</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(op&lt;cpy)<sp/>*op++=*ref++;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op=cpy;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lz4_8c_1a2831cd2769fea01f14d3cf0c038a045f" kindref="member">LZ4_WILDCOPY</ref>(op,<sp/>ref,<sp/>cpy);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op=cpy;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>correction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>decoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endOnInput)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)op)-dest);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nb<sp/>of<sp/>output<sp/>bytes<sp/>decoded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)ip)-<ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nb<sp/>of<sp/>input<sp/>bytes<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Overflow<sp/>error<sp/>detected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal">_output_error:</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(-(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)ip)-<ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>))-1;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="lz4_8h_1a76d66de24858903c049171e700c1371c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a76d66de24858903c049171e700c1371c" kindref="member">LZ4_decompress_safe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" kindref="member">LZ4_decompress_generic</ref>(source,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" kindref="member">endOnInputSize</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>,<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" kindref="member">full</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="lz4_8h_1a29e5a7a8c67e597d432e4f008e736bd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a29e5a7a8c67e597d432e4f008e736bd5" kindref="member">LZ4_decompress_safe_withPrefix64k</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" kindref="member">LZ4_decompress_generic</ref>(source,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" kindref="member">endOnInputSize</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>,<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" kindref="member">full</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="lz4_8h_1ad7d22bc0cde54258724c4c77e7cf829f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ad7d22bc0cde54258724c4c77e7cf829f" kindref="member">LZ4_decompress_safe_partial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetOutputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" kindref="member">LZ4_decompress_generic</ref>(source,<sp/>dest,<sp/>inputSize,<sp/>maxOutputSize,<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" kindref="member">endOnInputSize</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>,<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca67bce1b2dc0e7c66a27de1a9e146ce3e" kindref="member">partial</ref>,<sp/>targetOutputSize);</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865" refid="lz4_8h_1a745dc4d765fc0b9bdb771a8259584933" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a745dc4d765fc0b9bdb771a8259584933" kindref="member">LZ4_decompress_fast_withPrefix64k</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputSize)</highlight></codeline>
<codeline lineno="866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" kindref="member">LZ4_decompress_generic</ref>(source,<sp/>dest,<sp/>0,<sp/>outputSize,<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" kindref="member">endOnOutputSize</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>,<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" kindref="member">full</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="lz4_8h_1a1b6fd5873bbe60abc9a6bf7b3e75056a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ae6848d320c953d012408c7584a87b454" kindref="member">LZ4_decompress_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputSize)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>version<sp/>is<sp/>faster<sp/>with<sp/>Visual<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" kindref="member">LZ4_decompress_generic</ref>(source,<sp/>dest,<sp/>0,<sp/>outputSize,<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" kindref="member">endOnOutputSize</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" kindref="member">noPrefix</ref>,<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" kindref="member">full</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" kindref="member">LZ4_decompress_generic</ref>(source,<sp/>dest,<sp/>0,<sp/>outputSize,<sp/><ref refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" kindref="member">endOnOutputSize</ref>,<sp/><ref refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" kindref="member">withPrefix</ref>,<sp/><ref refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" kindref="member">full</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="lz4_8h_1a76994c12731075f0d8a96239c8856192" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a76994c12731075f0d8a96239c8856192" kindref="member">LZ4_uncompress</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputSize)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1ae6848d320c953d012408c7584a87b454" kindref="member">LZ4_decompress_fast</ref>(source,<sp/>dest,<sp/>outputSize);<sp/>}</highlight></codeline>
<codeline lineno="880" refid="lz4_8h_1a81aa900c172d655f8a4f0a75739791f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a81aa900c172d655f8a4f0a75739791f0" kindref="member">LZ4_uncompress_unknownOutputSize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lz4_8c_1a76d66de24858903c049171e700c1371c" kindref="member">LZ4_decompress_safe</ref>(source,<sp/>dest,<sp/>isize,<sp/>maxOutputSize);<sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/lz4/lz4.c"/>
  </compounddef>
</doxygen>
