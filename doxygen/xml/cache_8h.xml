<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="cache_8h" kind="file" language="C++">
    <compoundname>cache.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="slice_8h" local="yes">leveldb/slice.h</includes>
    <includedby refid="autocompact__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc</includedby>
    <includedby refid="c_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/c.cc</includedby>
    <includedby refid="corruption__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</includedby>
    <includedby refid="db__bench_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_bench.cc</includedby>
    <includedby refid="db__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_test.cc</includedby>
    <includedby refid="table__cache_8h" local="yes">/home/dev/ds-160209/src/leveldb/db/table_cache.h</includedby>
    <includedby refid="table_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/table.cc</includedby>
    <includedby refid="cache_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/cache.cc</includedby>
    <includedby refid="cache__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/cache_test.cc</includedby>
    <includedby refid="leveldbwrapper_8cpp" local="no">/home/dev/ds-160209/src/leveldbwrapper.cpp</includedby>
    <includedby refid="txdb-leveldb_8cpp" local="no">/home/dev/ds-160209/src/txdb-leveldb.cpp</includedby>
    <incdepgraph>
      <node id="37412">
        <label>assert.h</label>
      </node>
      <node id="37415">
        <label>string</label>
      </node>
      <node id="37413">
        <label>stddef.h</label>
      </node>
      <node id="37409">
        <label>/home/dev/ds-160209/src/leveldb/include/leveldb/cache.h</label>
        <link refid="cache.h"/>
        <childnode refid="37410" relation="include">
        </childnode>
        <childnode refid="37411" relation="include">
        </childnode>
      </node>
      <node id="37414">
        <label>string.h</label>
      </node>
      <node id="37410">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="37411">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="37412" relation="include">
        </childnode>
        <childnode refid="37413" relation="include">
        </childnode>
        <childnode refid="37414" relation="include">
        </childnode>
        <childnode refid="37415" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="37423">
        <label>/home/dev/ds-160209/src/leveldb/db/builder.cc</label>
        <link refid="builder_8cc"/>
      </node>
      <node id="37424">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.cc</label>
        <link refid="db__impl_8cc"/>
      </node>
      <node id="37429">
        <label>/home/dev/ds-160209/src/leveldb/util/cache.cc</label>
        <link refid="cache_8cc"/>
      </node>
      <node id="37418">
        <label>/home/dev/ds-160209/src/leveldb/db/c.cc</label>
        <link refid="c_8cc"/>
      </node>
      <node id="37432">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="37416">
        <label>/home/dev/ds-160209/src/leveldb/include/leveldb/cache.h</label>
        <link refid="cache.h"/>
        <childnode refid="37417" relation="include">
        </childnode>
        <childnode refid="37418" relation="include">
        </childnode>
        <childnode refid="37419" relation="include">
        </childnode>
        <childnode refid="37420" relation="include">
        </childnode>
        <childnode refid="37421" relation="include">
        </childnode>
        <childnode refid="37422" relation="include">
        </childnode>
        <childnode refid="37428" relation="include">
        </childnode>
        <childnode refid="37429" relation="include">
        </childnode>
        <childnode refid="37430" relation="include">
        </childnode>
        <childnode refid="37431" relation="include">
        </childnode>
        <childnode refid="37432" relation="include">
        </childnode>
      </node>
      <node id="37427">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.cc</label>
        <link refid="version__set_8cc"/>
      </node>
      <node id="37420">
        <label>/home/dev/ds-160209/src/leveldb/db/db_bench.cc</label>
        <link refid="db__bench_8cc"/>
      </node>
      <node id="37425">
        <label>/home/dev/ds-160209/src/leveldb/db/repair.cc</label>
        <link refid="repair_8cc"/>
      </node>
      <node id="37430">
        <label>/home/dev/ds-160209/src/leveldb/util/cache_test.cc</label>
        <link refid="cache__test_8cc"/>
      </node>
      <node id="37426">
        <label>/home/dev/ds-160209/src/leveldb/db/table_cache.cc</label>
        <link refid="table__cache_8cc"/>
      </node>
      <node id="37431">
        <label>/home/dev/ds-160209/src/leveldbwrapper.cpp</label>
        <link refid="leveldbwrapper_8cpp"/>
      </node>
      <node id="37417">
        <label>/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc</label>
        <link refid="autocompact__test_8cc"/>
      </node>
      <node id="37421">
        <label>/home/dev/ds-160209/src/leveldb/db/db_test.cc</label>
        <link refid="db__test_8cc"/>
      </node>
      <node id="37422">
        <label>/home/dev/ds-160209/src/leveldb/db/table_cache.h</label>
        <link refid="table__cache_8h"/>
        <childnode refid="37423" relation="include">
        </childnode>
        <childnode refid="37424" relation="include">
        </childnode>
        <childnode refid="37425" relation="include">
        </childnode>
        <childnode refid="37426" relation="include">
        </childnode>
        <childnode refid="37427" relation="include">
        </childnode>
      </node>
      <node id="37419">
        <label>/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</label>
        <link refid="corruption__test_8cc"/>
      </node>
      <node id="37428">
        <label>/home/dev/ds-160209/src/leveldb/table/table.cc</label>
        <link refid="table_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classleveldb_1_1_cache" prot="public">leveldb::Cache</innerclass>
    <innerclass refid="structleveldb_1_1_cache_1_1_handle" prot="public">leveldb::Cache::Handle</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>Cache<sp/>is<sp/>an<sp/>interface<sp/>that<sp/>maps<sp/>keys<sp/>to<sp/>values.<sp/><sp/>It<sp/>has<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>synchronization<sp/>and<sp/>may<sp/>be<sp/>safely<sp/>accessed<sp/>concurrently<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiple<sp/>threads.<sp/><sp/>It<sp/>may<sp/>automatically<sp/>evict<sp/>entries<sp/>to<sp/>make<sp/>room</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>new<sp/>entries.<sp/><sp/>Values<sp/>have<sp/>a<sp/>specified<sp/>charge<sp/>against<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>capacity.<sp/><sp/>For<sp/>example,<sp/>a<sp/>cache<sp/>where<sp/>the<sp/>values<sp/>are<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>length<sp/>strings,<sp/>may<sp/>use<sp/>the<sp/>length<sp/>of<sp/>the<sp/>string<sp/>as<sp/>the<sp/>charge<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>builtin<sp/>cache<sp/>implementation<sp/>with<sp/>a<sp/>least-recently-used<sp/>eviction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>policy<sp/>is<sp/>provided.<sp/><sp/>Clients<sp/>may<sp/>use<sp/>their<sp/>own<sp/>implementations<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>they<sp/>want<sp/>something<sp/>more<sp/>sophisticated<sp/>(like<sp/>scan-resistance,<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>custom<sp/>eviction<sp/>policy,<sp/>variable<sp/>cache<sp/>sizing,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STORAGE_LEVELDB_INCLUDE_CACHE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORAGE_LEVELDB_INCLUDE_CACHE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slice_8h" kindref="compound">leveldb/slice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Cache;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>cache<sp/>with<sp/>a<sp/>fixed<sp/>size<sp/>capacity.<sp/><sp/>This<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>Cache<sp/>uses<sp/>a<sp/>least-recently-used<sp/>eviction<sp/>policy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Cache*<sp/><ref refid="namespaceleveldb_1a231e1b41322a8b342c91a15a78e425d4" kindref="member">NewLRUCache</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classleveldb_1_1_cache" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_cache" kindref="compound">Cache</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="classleveldb_1_1_cache_1ac9b129b21ba8eda181645fc3f6a8dfe6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_cache_1ac9b129b21ba8eda181645fc3f6a8dfe6" kindref="member">Cache</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroys<sp/>all<sp/>existing<sp/>entries<sp/>by<sp/>calling<sp/>the<sp/>&quot;deleter&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>that<sp/>was<sp/>passed<sp/>to<sp/>the<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_cache_1a1369f94b24a31099443f714b8b8ab527" kindref="member">~Cache</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Opaque<sp/>handle<sp/>to<sp/>an<sp/>entry<sp/>stored<sp/>in<sp/>the<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structleveldb_1_1_cache_1_1_handle" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>mapping<sp/>from<sp/>key-&gt;value<sp/>into<sp/>the<sp/>cache<sp/>and<sp/>assign<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>specified<sp/>charge<sp/>against<sp/>the<sp/>total<sp/>cache<sp/>capacity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>handle<sp/>that<sp/>corresponds<sp/>to<sp/>the<sp/>mapping.<sp/><sp/>The<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>call<sp/>this-&gt;Release(handle)<sp/>when<sp/>the<sp/>returned<sp/>mapping<sp/>is<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>longer<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>inserted<sp/>entry<sp/>is<sp/>no<sp/>longer<sp/>needed,<sp/>the<sp/>key<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>will<sp/>be<sp/>passed<sp/>to<sp/>&quot;deleter&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref>*<sp/><ref refid="classleveldb_1_1_cache_1af0b55b7fa0e64184fa62e0dbe9ba9eae" kindref="member">Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="cache_8cc_1a7476acc4f60747f9d9032e9cbdf5eb79" kindref="member">charge</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<ref refid="cache_8cc_1accd93a4ec30e3a96658ecae0c6a724fe" kindref="member">deleter</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>value))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>cache<sp/>has<sp/>no<sp/>mapping<sp/>for<sp/>&quot;key&quot;,<sp/>returns<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Else<sp/>return<sp/>a<sp/>handle<sp/>that<sp/>corresponds<sp/>to<sp/>the<sp/>mapping.<sp/><sp/>The<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>call<sp/>this-&gt;Release(handle)<sp/>when<sp/>the<sp/>returned<sp/>mapping<sp/>is<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>longer<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref>*<sp/><ref refid="classleveldb_1_1_cache_1af90785205182a25cf741dc13a48d76cb" kindref="member">Lookup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>a<sp/>mapping<sp/>returned<sp/>by<sp/>a<sp/>previous<sp/>Lookup().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>handle<sp/>must<sp/>not<sp/>have<sp/>been<sp/>released<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>handle<sp/>must<sp/>have<sp/>been<sp/>returned<sp/>by<sp/>a<sp/>method<sp/>on<sp/>*this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_cache_1a712618c8bf3bfa48b7bab1fbc23c3002" kindref="member">Release</ref>(<ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref>*<sp/>handle)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>value<sp/>encapsulated<sp/>in<sp/>a<sp/>handle<sp/>returned<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>successful<sp/>Lookup().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>handle<sp/>must<sp/>not<sp/>have<sp/>been<sp/>released<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>handle<sp/>must<sp/>have<sp/>been<sp/>returned<sp/>by<sp/>a<sp/>method<sp/>on<sp/>*this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classleveldb_1_1_cache_1a454920df8e68917adcf011dfb3538661" kindref="member">Value</ref>(<ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref>*<sp/>handle)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>cache<sp/>contains<sp/>entry<sp/>for<sp/>key,<sp/>erase<sp/>it.<sp/><sp/>Note<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>underlying<sp/>entry<sp/>will<sp/>be<sp/>kept<sp/>around<sp/>until<sp/>all<sp/>existing<sp/>handles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>it<sp/>have<sp/>been<sp/>released.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_cache_1af833a38763598253338de37aba079db6" kindref="member">Erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>new<sp/>numeric<sp/>id.<sp/><sp/>May<sp/>be<sp/>used<sp/>by<sp/>multiple<sp/>clients<sp/>who<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sharing<sp/>the<sp/>same<sp/>cache<sp/>to<sp/>partition<sp/>the<sp/>key<sp/>space.<sp/><sp/>Typically<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>client<sp/>will<sp/>allocate<sp/>a<sp/>new<sp/>id<sp/>at<sp/>startup<sp/>and<sp/>prepend<sp/>the<sp/>id<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>cache<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_cache_1ae2d79bfe747fc6c165c77398cc31e125" kindref="member">NewId</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LRU_Remove(<ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref>*<sp/>e);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LRU_Append(<ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref>*<sp/>e);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Unref(<ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Handle</ref>*<sp/>e);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rep;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>Rep*<sp/>rep_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_cache_1ac9b129b21ba8eda181645fc3f6a8dfe6" kindref="member">Cache</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_cache" kindref="compound">Cache</ref>&amp;);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_cache" kindref="compound">Cache</ref>&amp;);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>STORAGE_LEVELDB_INCLUDE_CACHE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/cache.h"/>
  </compounddef>
</doxygen>
