<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_base58_data" kind="class" language="C++" prot="public">
    <compoundname>CBase58Data</compoundname>
    <derivedcompoundref refid="class_c_dark_silk_address" prot="public" virt="non-virtual">CDarkSilkAddress</derivedcompoundref>
    <derivedcompoundref refid="class_c_dark_silk_ext_key_base" prot="public" virt="non-virtual">CDarkSilkExtKeyBase&lt; K, Size, Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_c_dark_silk_secret" prot="public" virt="non-virtual">CDarkSilkSecret</derivedcompoundref>
    <includes refid="base58_8h" local="no">base58.h</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_c_base58_data_1a193d64487a0b4f6df24f8bd380956ec1" prot="protected" static="no">
        <type>std::vector&lt; unsigned char, <ref refid="structzero__after__free__allocator" kindref="compound">zero_after_free_allocator</ref>&lt; unsigned char &gt; &gt;</type>
        <definition>typedef std::vector&lt;unsigned char, zero_after_free_allocator&lt;unsigned char&gt; &gt; CBase58Data::vector_uchar</definition>
        <argsstring></argsstring>
        <name>vector_uchar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="77" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_base58_data_1a110c1008f399053098a1bdf63408e923" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CBase58Data::vchVersion</definition>
        <argsstring></argsstring>
        <name>vchVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="74" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_base58_data_1ae7ef7dfb93683aa4aaee8b74da5abb9c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_base58_data_1a193d64487a0b4f6df24f8bd380956ec1" kindref="member">vector_uchar</ref></type>
        <definition>vector_uchar CBase58Data::vchData</definition>
        <argsstring></argsstring>
        <name>vchData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="78" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_base58_data_1ae4f4ff42010299bc6fb228e21d6b2a15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CBase58Data::CBase58Data</definition>
        <argsstring>()</argsstring>
        <name>CBase58Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="80" column="1" bodyfile="/home/dev/ds-160209/src/base58.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1afab1c06a0a4f631fd889434a2bc48c27" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CBase58Data::SetData</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vchVersionIn, const void *pdata, size_t nSize)</argsstring>
        <name>SetData</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchVersionIn</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pdata</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="81" column="1" bodyfile="/home/dev/ds-160209/src/base58.cpp" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1a8314b00685e590b4005be5cdfd36aeb9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CBase58Data::SetData</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vchVersionIn, const unsigned char *pbegin, const unsigned char *pend)</argsstring>
        <name>SetData</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchVersionIn</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="82" column="1" bodyfile="/home/dev/ds-160209/src/base58.cpp" bodystart="151" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBase58Data::SetString</definition>
        <argsstring>(const char *psz, unsigned int nVersionBytes=1)</argsstring>
        <name>SetString</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nVersionBytes</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="85" column="1" bodyfile="/home/dev/ds-160209/src/base58.cpp" bodystart="155" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1a8e0cba75a3e0a5b21defaf1471d8659c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBase58Data::SetString</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SetString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="86" column="1" bodyfile="/home/dev/ds-160209/src/base58.cpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CBase58Data::ToString</definition>
        <argsstring>() const </argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="87" column="1" bodyfile="/home/dev/ds-160209/src/base58.cpp" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1ab3d18fd9671a383937af7dd4ac2e890a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CBase58Data::CompareTo</definition>
        <argsstring>(const CBase58Data &amp;b58) const </argsstring>
        <name>CompareTo</name>
        <param>
          <type>const <ref refid="class_c_base58_data" kindref="compound">CBase58Data</ref> &amp;</type>
          <declname>b58</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="88" column="1" bodyfile="/home/dev/ds-160209/src/base58.cpp" bodystart="181" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1af6448549abaf34142668540a338d180d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBase58Data::operator==</definition>
        <argsstring>(const CBase58Data &amp;b58) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_base58_data" kindref="compound">CBase58Data</ref> &amp;</type>
          <declname>b58</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="90" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1a126cabad3af6b7d3aec0d6498be1a028" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBase58Data::operator&lt;=</definition>
        <argsstring>(const CBase58Data &amp;b58) const </argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_c_base58_data" kindref="compound">CBase58Data</ref> &amp;</type>
          <declname>b58</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="91" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1a4a96e8ea3716509b307cacfc814e5622" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBase58Data::operator&gt;=</definition>
        <argsstring>(const CBase58Data &amp;b58) const </argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_c_base58_data" kindref="compound">CBase58Data</ref> &amp;</type>
          <declname>b58</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="92" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1a39bac58c4bc4f8abc74a24b769eb1f1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBase58Data::operator&lt;</definition>
        <argsstring>(const CBase58Data &amp;b58) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_base58_data" kindref="compound">CBase58Data</ref> &amp;</type>
          <declname>b58</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_c_base58_data_1a427e472d2fef51aaa89c1a09229ac51a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBase58Data::operator&gt;</definition>
        <argsstring>(const CBase58Data &amp;b58) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_c_base58_data" kindref="compound">CBase58Data</ref> &amp;</type>
          <declname>b58</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/base58.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="94" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for all base58-encoded data </para>    </detaileddescription>
    <inheritancegraph>
      <node id="245">
        <label>CDarkSilkAddress_B</label>
        <link refid="class_c_dark_silk_address___b"/>
        <childnode refid="244" relation="public-inheritance">
        </childnode>
      </node>
      <node id="244">
        <label>CDarkSilkAddress</label>
        <link refid="class_c_dark_silk_address"/>
        <childnode refid="243" relation="public-inheritance">
        </childnode>
      </node>
      <node id="247">
        <label>CDarkSilkSecret</label>
        <link refid="class_c_dark_silk_secret"/>
        <childnode refid="243" relation="public-inheritance">
        </childnode>
      </node>
      <node id="243">
        <label>CBase58Data</label>
        <link refid="class_c_base58_data"/>
      </node>
      <node id="246">
        <label>CDarkSilkExtKeyBase&lt; K, Size, Type &gt;</label>
        <link refid="class_c_dark_silk_ext_key_base"/>
        <childnode refid="243" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/dev/ds-160209/src/base58.h" line="71" column="1" bodyfile="/home/dev/ds-160209/src/base58.h" bodystart="70" bodyend="95"/>
    <listofallmembers>
      <member refid="class_c_base58_data_1ae4f4ff42010299bc6fb228e21d6b2a15" prot="protected" virt="non-virtual"><scope>CBase58Data</scope><name>CBase58Data</name></member>
      <member refid="class_c_base58_data_1ab3d18fd9671a383937af7dd4ac2e890a" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>CompareTo</name></member>
      <member refid="class_c_base58_data_1a39bac58c4bc4f8abc74a24b769eb1f1d" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>operator&lt;</name></member>
      <member refid="class_c_base58_data_1a126cabad3af6b7d3aec0d6498be1a028" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>operator&lt;=</name></member>
      <member refid="class_c_base58_data_1af6448549abaf34142668540a338d180d" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>operator==</name></member>
      <member refid="class_c_base58_data_1a427e472d2fef51aaa89c1a09229ac51a" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>operator&gt;</name></member>
      <member refid="class_c_base58_data_1a4a96e8ea3716509b307cacfc814e5622" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>operator&gt;=</name></member>
      <member refid="class_c_base58_data_1afab1c06a0a4f631fd889434a2bc48c27" prot="protected" virt="non-virtual"><scope>CBase58Data</scope><name>SetData</name></member>
      <member refid="class_c_base58_data_1a8314b00685e590b4005be5cdfd36aeb9" prot="protected" virt="non-virtual"><scope>CBase58Data</scope><name>SetData</name></member>
      <member refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>SetString</name></member>
      <member refid="class_c_base58_data_1a8e0cba75a3e0a5b21defaf1471d8659c" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>SetString</name></member>
      <member refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" prot="public" virt="non-virtual"><scope>CBase58Data</scope><name>ToString</name></member>
      <member refid="class_c_base58_data_1ae7ef7dfb93683aa4aaee8b74da5abb9c" prot="protected" virt="non-virtual"><scope>CBase58Data</scope><name>vchData</name></member>
      <member refid="class_c_base58_data_1a110c1008f399053098a1bdf63408e923" prot="protected" virt="non-virtual"><scope>CBase58Data</scope><name>vchVersion</name></member>
      <member refid="class_c_base58_data_1a193d64487a0b4f6df24f8bd380956ec1" prot="protected" virt="non-virtual"><scope>CBase58Data</scope><name>vector_uchar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
