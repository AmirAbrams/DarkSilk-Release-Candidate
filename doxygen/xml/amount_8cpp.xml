<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="amount_8cpp" kind="file" language="C++">
    <compoundname>amount.cpp</compoundname>
    <includes refid="amount_8h" local="yes">amount.h</includes>
    <includes refid="tinyformat_8h" local="yes">tinyformat.h</includes>
    <incdepgraph>
      <node id="30348">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="30331">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="30332" relation="include">
        </childnode>
        <childnode refid="30346" relation="include">
        </childnode>
        <childnode refid="30333" relation="include">
        </childnode>
      </node>
      <node id="30338">
        <label>limits</label>
      </node>
      <node id="30343">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="30352">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="30353" relation="include">
        </childnode>
        <childnode refid="30333" relation="include">
        </childnode>
      </node>
      <node id="30349">
        <label>sys/mman.h</label>
      </node>
      <node id="30346">
        <label>stdlib.h</label>
      </node>
      <node id="30337">
        <label>cassert</label>
      </node>
      <node id="30357">
        <label>stdexcept</label>
      </node>
      <node id="30333">
        <label>string</label>
      </node>
      <node id="30335">
        <label>map</label>
      </node>
      <node id="30332">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="30333" relation="include">
        </childnode>
        <childnode refid="30334" relation="include">
        </childnode>
        <childnode refid="30335" relation="include">
        </childnode>
        <childnode refid="30336" relation="include">
        </childnode>
        <childnode refid="30337" relation="include">
        </childnode>
        <childnode refid="30338" relation="include">
        </childnode>
        <childnode refid="30339" relation="include">
        </childnode>
        <childnode refid="30340" relation="include">
        </childnode>
        <childnode refid="30341" relation="include">
        </childnode>
        <childnode refid="30342" relation="include">
        </childnode>
        <childnode refid="30343" relation="include">
        </childnode>
        <childnode refid="30344" relation="include">
        </childnode>
        <childnode refid="30352" relation="include">
        </childnode>
      </node>
      <node id="30350">
        <label>limits.h</label>
      </node>
      <node id="30347">
        <label>string.h</label>
      </node>
      <node id="30353">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="30341">
        <label>cstdio</label>
      </node>
      <node id="30342">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="30351">
        <label>unistd.h</label>
      </node>
      <node id="30334">
        <label>vector</label>
      </node>
      <node id="30356">
        <label>sstream</label>
      </node>
      <node id="30354">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="30337" relation="include">
        </childnode>
        <childnode refid="30355" relation="include">
        </childnode>
        <childnode refid="30356" relation="include">
        </childnode>
        <childnode refid="30357" relation="include">
        </childnode>
      </node>
      <node id="30339">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="30355">
        <label>iostream</label>
      </node>
      <node id="30330">
        <label>/home/dev/ds-160209/src/amount.cpp</label>
        <link refid="amount.cpp"/>
        <childnode refid="30331" relation="include">
        </childnode>
        <childnode refid="30354" relation="include">
        </childnode>
      </node>
      <node id="30344">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="30345" relation="include">
        </childnode>
        <childnode refid="30347" relation="include">
        </childnode>
        <childnode refid="30333" relation="include">
        </childnode>
        <childnode refid="30348" relation="include">
        </childnode>
        <childnode refid="30335" relation="include">
        </childnode>
        <childnode refid="30349" relation="include">
        </childnode>
        <childnode refid="30350" relation="include">
        </childnode>
        <childnode refid="30351" relation="include">
        </childnode>
      </node>
      <node id="30336">
        <label>set</label>
      </node>
      <node id="30345">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="30346" relation="include">
        </childnode>
      </node>
      <node id="30340">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="amount_8h" kindref="compound">amount.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tinyformat_8h" kindref="compound">tinyformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_c_fee_rate_1ad92ea084b8fa9495cbfe0da9cfd1cd69" refkind="member"><highlight class="normal"><ref refid="class_c_fee_rate_1aed181aa12213c646c8a4632280444412" kindref="member">CFeeRate::CFeeRate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nFeePaid,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSize)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSatoshisPerK<sp/>=<sp/>nFeePaid*1000/nSize;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSatoshisPerK<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_c_fee_rate_1a11d1c2c0c9e5601d82fecd023358bcc2" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_fee_rate_1a11d1c2c0c9e5601d82fecd023358bcc2" kindref="member">CFeeRate::GetFee</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSize)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFee<sp/>=<sp/>nSatoshisPerK*nSize<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nFee<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>nSatoshisPerK<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFee<sp/>=<sp/>nSatoshisPerK;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nFee;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_c_fee_rate_1ab517bd05a9b78fbd02aabe7d74d7049f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_fee_rate_1ab517bd05a9b78fbd02aabe7d74d7049f" kindref="member">CFeeRate::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="28"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d.%08d<sp/>DRKSLK/kB&quot;</highlight><highlight class="normal">,<sp/>nSatoshisPerK<sp/>/<sp/>COIN,<sp/>nSatoshisPerK<sp/>%<sp/>COIN);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/amount.cpp"/>
  </compounddef>
</doxygen>
