<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="gen__context_8c" kind="file" language="C++">
    <compoundname>gen_context.c</compoundname>
    <includes refid="basic-config_8h" local="yes">basic-config.h</includes>
    <includes refid="secp256k1_8h" local="yes">include/secp256k1.h</includes>
    <includes refid="field__impl_8h" local="yes">field_impl.h</includes>
    <includes refid="scalar__impl_8h" local="yes">scalar_impl.h</includes>
    <includes refid="group__impl_8h" local="yes">group_impl.h</includes>
    <includes refid="ecmult__gen__impl_8h" local="yes">ecmult_gen_impl.h</includes>
    <incdepgraph>
      <node id="51904">
        <label>scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="51902" relation="include">
        </childnode>
      </node>
      <node id="51896">
        <label>stdlib.h</label>
      </node>
      <node id="51899">
        <label>scalar_impl.h</label>
        <link refid="scalar__impl_8h"/>
        <childnode refid="51900" relation="include">
        </childnode>
        <childnode refid="51901" relation="include">
        </childnode>
        <childnode refid="51904" relation="include">
        </childnode>
      </node>
      <node id="51890">
        <label>/home/dev/ds-160209/src/secp256k1/src/gen_context.c</label>
        <link refid="gen_context.c"/>
        <childnode refid="51891" relation="include">
        </childnode>
        <childnode refid="51892" relation="include">
        </childnode>
        <childnode refid="51894" relation="include">
        </childnode>
        <childnode refid="51899" relation="include">
        </childnode>
        <childnode refid="51905" relation="include">
        </childnode>
        <childnode refid="51906" relation="include">
        </childnode>
      </node>
      <node id="51902">
        <label>num.h</label>
        <link refid="num_8h"/>
      </node>
      <node id="51892">
        <label>include/secp256k1.h</label>
        <link refid="secp256k1_8h"/>
        <childnode refid="51893" relation="include">
        </childnode>
      </node>
      <node id="51901">
        <label>group.h</label>
        <link refid="group_8h"/>
        <childnode refid="51902" relation="include">
        </childnode>
        <childnode refid="51903" relation="include">
        </childnode>
      </node>
      <node id="51908">
        <label>hash_impl.h</label>
        <link refid="hash__impl_8h"/>
        <childnode refid="51909" relation="include">
        </childnode>
        <childnode refid="51896" relation="include">
        </childnode>
        <childnode refid="51897" relation="include">
        </childnode>
        <childnode refid="51900" relation="include">
        </childnode>
      </node>
      <node id="51893">
        <label>stddef.h</label>
      </node>
      <node id="51905">
        <label>group_impl.h</label>
        <link refid="group__impl_8h"/>
        <childnode refid="51900" relation="include">
        </childnode>
        <childnode refid="51902" relation="include">
        </childnode>
        <childnode refid="51903" relation="include">
        </childnode>
        <childnode refid="51901" relation="include">
        </childnode>
      </node>
      <node id="51900">
        <label>string.h</label>
      </node>
      <node id="51907">
        <label>ecmult_gen.h</label>
        <link refid="ecmult__gen_8h"/>
        <childnode refid="51904" relation="include">
        </childnode>
        <childnode refid="51901" relation="include">
        </childnode>
      </node>
      <node id="51891">
        <label>basic-config.h</label>
        <link refid="basic-config_8h"/>
      </node>
      <node id="51909">
        <label>hash.h</label>
        <link refid="secp256k1_2src_2hash_8h"/>
        <childnode refid="51896" relation="include">
        </childnode>
        <childnode refid="51897" relation="include">
        </childnode>
      </node>
      <node id="51895">
        <label>util.h</label>
        <link refid="secp256k1_2src_2util_8h"/>
        <childnode refid="51896" relation="include">
        </childnode>
        <childnode refid="51897" relation="include">
        </childnode>
        <childnode refid="51898" relation="include">
        </childnode>
      </node>
      <node id="51903">
        <label>field.h</label>
        <link refid="field_8h"/>
      </node>
      <node id="51897">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="51894">
        <label>field_impl.h</label>
        <link refid="field__impl_8h"/>
        <childnode refid="51895" relation="include">
        </childnode>
      </node>
      <node id="51906">
        <label>ecmult_gen_impl.h</label>
        <link refid="ecmult__gen__impl_8h"/>
        <childnode refid="51904" relation="include">
        </childnode>
        <childnode refid="51901" relation="include">
        </childnode>
        <childnode refid="51907" relation="include">
        </childnode>
        <childnode refid="51908" relation="include">
        </childnode>
      </node>
      <node id="51898">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="gen__context_8c_1a89912331796eb915f898acd299260e73" prot="public" static="no">
        <name>USE_BASIC_CONFIG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" line="7" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gen__context_8c_1a792961430f27e8b9178105a7ec023019" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structsecp256k1__callback" kindref="compound">secp256k1_callback</ref></type>
        <definition>const secp256k1_callback default_error_callback</definition>
        <argsstring></argsstring>
        <name>default_error_callback</name>
        <initializer>= {
    default_error_callback_fn,
    NULL
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" line="22" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gen__context_8c_1aa6e98398cd5dd5398aab826a8d3bc740" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void default_error_callback_fn</definition>
        <argsstring>(const char *str, void *data)</argsstring>
        <name>default_error_callback_fn</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" line="16" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="gen__context_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" line="27" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/gen_context.c" bodystart="27" bodyend="74"/>
        <references refid="group_8h_1adefefa4ed4193a466784391616bc2f9f" compoundref="group_8h" startline="41">SECP256K1_GE_STORAGE_CONST_GET</references>
        <references refid="structsecp256k1__ecmult__gen__context_1ad1ebc8daeace10a8d646f89bbdf32882" compoundref="ecmult__gen_8h" startline="26">secp256k1_ecmult_gen_context::prec</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013,<sp/>2014,<sp/>2015,<sp/>2016<sp/>Thomas<sp/>Daede,<sp/>Cory<sp/>Fields<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="gen__context_8c_1a89912331796eb915f898acd299260e73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_BASIC_CONFIG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="basic-config_8h" kindref="compound">basic-config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_8h" kindref="compound">include/secp256k1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="field__impl_8h" kindref="compound">field_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scalar__impl_8h" kindref="compound">scalar_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group__impl_8h" kindref="compound">group_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ecmult__gen__impl_8h" kindref="compound">ecmult_gen_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>default_error_callback_fn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)data;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;[libsecp256k1]<sp/>internal<sp/>consistency<sp/>check<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__callback" kindref="compound">secp256k1_callback</ref><sp/>default_error_callback<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>default_error_callback_fn,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="gen__context_8c_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gen__context_8c_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__ecmult__gen__context" kindref="compound">secp256k1_ecmult_gen_context</ref><sp/>ctx;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inner;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outer;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fp;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)argc;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)argv;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;src/ecmult_static_context.h&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>src/ecmult_static_context.h<sp/>for<sp/>writing!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#ifndef<sp/>_SECP256K1_ECMULT_STATIC_CONTEXT_\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#define<sp/>_SECP256K1_ECMULT_STATIC_CONTEXT_\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#include<sp/>\&quot;group.h\&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#define<sp/>SC<sp/>SECP256K1_GE_STORAGE_CONST\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;static<sp/>const<sp/>secp256k1_ge_storage<sp/>secp256k1_ecmult_static_context[64][16]<sp/>=<sp/>{\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_ecmult_gen_context_init(&amp;ctx);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_ecmult_gen_context_build(&amp;ctx,<sp/>&amp;default_error_callback);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(outer<sp/>=<sp/>0;<sp/>outer<sp/>!=<sp/>64;<sp/>outer++)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(inner<sp/>=<sp/>0;<sp/>inner<sp/>!=<sp/>16;<sp/>inner++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>SC(%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu,<sp/>%uu)&quot;</highlight><highlight class="normal">,<sp/><ref refid="group_8h_1adefefa4ed4193a466784391616bc2f9f" kindref="member">SECP256K1_GE_STORAGE_CONST_GET</ref>((*ctx.<ref refid="structsecp256k1__ecmult__gen__context_1ad1ebc8daeace10a8d646f89bbdf32882" kindref="member">prec</ref>)[outer][inner]));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inner<sp/>!=<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;,\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outer<sp/>!=<sp/>63)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;},\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;};\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_ecmult_gen_context_clear(&amp;ctx);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#undef<sp/>SC\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#endif\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/gen_context.c"/>
  </compounddef>
</doxygen>
