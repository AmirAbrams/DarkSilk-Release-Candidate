<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="secp256k1_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">libsecp256k1</highlight></codeline>
<codeline><highlight class="normal">============</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status](https://travis-ci.org/bitcoin/secp256k1.svg?branch=master)](https://travis-ci.org/bitcoin/secp256k1)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Optimized<sp/>C<sp/>library<sp/>for<sp/>EC<sp/>operations<sp/>on<sp/>curve<sp/>secp256k1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>library<sp/>is<sp/>a<sp/>work<sp/>in<sp/>progress<sp/>and<sp/>is<sp/>being<sp/>used<sp/>to<sp/>research<sp/>best<sp/>practices.<sp/>Use<sp/>at<sp/>your<sp/>own<sp/>risk.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Features:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>secp256k1<sp/>ECDSA<sp/>signing/verification<sp/>and<sp/>key<sp/>generation.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Adding/multiplying<sp/>private/public<sp/>keys.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Serialization/parsing<sp/>of<sp/>private<sp/>keys,<sp/>public<sp/>keys,<sp/>signatures.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Constant<sp/>time,<sp/>constant<sp/>memory<sp/>access<sp/>signing<sp/>and<sp/>pubkey<sp/>generation.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Derandomized<sp/>DSA<sp/>(via<sp/>RFC6979<sp/>or<sp/>with<sp/>a<sp/>caller<sp/>provided<sp/>function.)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Very<sp/>efficient<sp/>implementation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Implementation<sp/>details</highlight></codeline>
<codeline><highlight class="normal">----------------------</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>General</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>No<sp/>runtime<sp/>heap<sp/>allocation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Extensive<sp/>testing<sp/>infrastructure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Structured<sp/>to<sp/>facilitate<sp/>review<sp/>and<sp/>analysis.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Intended<sp/>to<sp/>be<sp/>portable<sp/>to<sp/>any<sp/>system<sp/>with<sp/>a<sp/>C89<sp/>compiler<sp/>and<sp/>uint64_t<sp/>support.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Expose<sp/>only<sp/>higher<sp/>level<sp/>interfaces<sp/>to<sp/>minimize<sp/>the<sp/>API<sp/>surface<sp/>and<sp/>improve<sp/>application<sp/>security.<sp/>(&quot;Be<sp/>difficult<sp/>to<sp/>use<sp/>insecurely.&quot;)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Field<sp/>operations</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Optimized<sp/>implementation<sp/>of<sp/>arithmetic<sp/>modulo<sp/>the<sp/>curve&apos;s<sp/>field<sp/>size<sp/>(2^256<sp/>-<sp/>0x1000003D1).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Using<sp/>5<sp/>52-bit<sp/>limbs<sp/>(including<sp/>hand-optimized<sp/>assembly<sp/>for<sp/>x86_64,<sp/>by<sp/>Diederik<sp/>Huys).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Using<sp/>10<sp/>26-bit<sp/>limbs.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Field<sp/>inverses<sp/>and<sp/>square<sp/>roots<sp/>using<sp/>a<sp/>sliding<sp/>window<sp/>over<sp/>blocks<sp/>of<sp/>1s<sp/>(by<sp/>Peter<sp/>Dettman).</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Scalar<sp/>operations</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Optimized<sp/>implementation<sp/>without<sp/>data-dependent<sp/>branches<sp/>of<sp/>arithmetic<sp/>modulo<sp/>the<sp/>curve&apos;s<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Using<sp/>4<sp/>64-bit<sp/>limbs<sp/>(relying<sp/>on<sp/>__int128<sp/>support<sp/>in<sp/>the<sp/>compiler).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Using<sp/>8<sp/>32-bit<sp/>limbs.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Group<sp/>operations</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Point<sp/>addition<sp/>formula<sp/>specifically<sp/>simplified<sp/>for<sp/>the<sp/>curve<sp/>equation<sp/>(y^2<sp/>=<sp/>x^3<sp/>+<sp/>7).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Use<sp/>addition<sp/>between<sp/>points<sp/>in<sp/>Jacobian<sp/>and<sp/>affine<sp/>coordinates<sp/>where<sp/>possible.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Use<sp/>a<sp/>unified<sp/>addition/doubling<sp/>formula<sp/>where<sp/>necessary<sp/>to<sp/>avoid<sp/>data-dependent<sp/>branches.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Point/x<sp/>comparison<sp/>without<sp/>a<sp/>field<sp/>inversion<sp/>by<sp/>comparison<sp/>in<sp/>the<sp/>Jacobian<sp/>coordinate<sp/>space.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Point<sp/>multiplication<sp/>for<sp/>verification<sp/>(a*P<sp/>+<sp/>b*G).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Use<sp/>wNAF<sp/>notation<sp/>for<sp/>point<sp/>multiplicands.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Use<sp/>a<sp/>much<sp/>larger<sp/>window<sp/>for<sp/>multiples<sp/>of<sp/>G,<sp/>using<sp/>precomputed<sp/>multiples.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Use<sp/>Shamir&apos;s<sp/>trick<sp/>to<sp/>do<sp/>the<sp/>multiplication<sp/>with<sp/>the<sp/>public<sp/>key<sp/>and<sp/>the<sp/>generator<sp/>simultaneously.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Optionally<sp/>(off<sp/>by<sp/>default)<sp/>use<sp/>secp256k1&apos;s<sp/>efficiently-computable<sp/>endomorphism<sp/>to<sp/>split<sp/>the<sp/>P<sp/>multiplicand<sp/>into<sp/>2<sp/>half-sized<sp/>ones.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Point<sp/>multiplication<sp/>for<sp/>signing</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Use<sp/>a<sp/>precomputed<sp/>table<sp/>of<sp/>multiples<sp/>of<sp/>powers<sp/>of<sp/>16<sp/>multiplied<sp/>with<sp/>the<sp/>generator,<sp/>so<sp/>general<sp/>multiplication<sp/>becomes<sp/>a<sp/>series<sp/>of<sp/>additions.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Access<sp/>the<sp/>table<sp/>with<sp/>branch-free<sp/>conditional<sp/>moves<sp/>so<sp/>memory<sp/>access<sp/>is<sp/>uniform.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>No<sp/>data-dependent<sp/>branches</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>The<sp/>precomputed<sp/>tables<sp/>add<sp/>and<sp/>eventually<sp/>subtract<sp/>points<sp/>for<sp/>which<sp/>no<sp/>known<sp/>scalar<sp/>(private<sp/>key)<sp/>is<sp/>known,<sp/>preventing<sp/>even<sp/>an<sp/>attacker<sp/>with<sp/>control<sp/>over<sp/>the<sp/>private<sp/>key<sp/>used<sp/>to<sp/>control<sp/>the<sp/>data<sp/>internally.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Build<sp/>steps</highlight></codeline>
<codeline><highlight class="normal">-----------</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">libsecp256k1<sp/>is<sp/>built<sp/>using<sp/>autotools:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>./autogen.sh</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>./configure</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>make</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>./tests</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>sudo<sp/>make<sp/>install<sp/><sp/>#<sp/>optional</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/README.md"/>
  </compounddef>
</doxygen>
