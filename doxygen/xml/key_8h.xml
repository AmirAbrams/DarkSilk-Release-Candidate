<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="key_8h" kind="file" language="C++">
    <compoundname>key.h</compoundname>
    <includes refid="allocators_8h" local="yes">allocators.h</includes>
    <includes refid="pubkey_8h" local="yes">pubkey.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">vector</includes>
    <includedby refid="activestormnode_8h" local="yes">/home/dev/ds-160209/src/activestormnode.h</includedby>
    <includedby refid="keystore_8h" local="yes">/home/dev/ds-160209/src/keystore.h</includedby>
    <includedby refid="wallet_8h" local="yes">/home/dev/ds-160209/src/wallet.h</includedby>
    <includedby refid="stormnode-payments_8h" local="yes">/home/dev/ds-160209/src/stormnode-payments.h</includedby>
    <includedby refid="stormnode_8h" local="yes">/home/dev/ds-160209/src/stormnode.h</includedby>
    <includedby refid="base58_8h" local="yes">/home/dev/ds-160209/src/base58.h</includedby>
    <includedby refid="stormnodeman_8h" local="yes">/home/dev/ds-160209/src/stormnodeman.h</includedby>
    <includedby refid="spork_8h" local="yes">/home/dev/ds-160209/src/spork.h</includedby>
    <includedby refid="init_8cpp" local="yes">/home/dev/ds-160209/src/init.cpp</includedby>
    <includedby refid="stormnode-budget_8h" local="yes">/home/dev/ds-160209/src/stormnode-budget.h</includedby>
    <includedby refid="instantx_8cpp" local="yes">/home/dev/ds-160209/src/instantx.cpp</includedby>
    <includedby refid="key_8cpp" local="yes">/home/dev/ds-160209/src/key.cpp</includedby>
    <includedby refid="addeditstormnode_8cpp" local="yes">/home/dev/ds-160209/src/qt/addeditstormnode.cpp</includedby>
    <includedby refid="rpcnet_8cpp" local="yes">/home/dev/ds-160209/src/rpcnet.cpp</includedby>
    <includedby refid="spork_8cpp" local="yes">/home/dev/ds-160209/src/spork.cpp</includedby>
    <includedby refid="key__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/key_tests.cpp</includedby>
    <includedby refid="sigopcount__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/sigopcount_tests.cpp</includedby>
    <includedby refid="wallet_8cpp" local="yes">/home/dev/ds-160209/src/wallet.cpp</includedby>
    <incdepgraph>
      <node id="6289">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="6305">
        <label>limits</label>
      </node>
      <node id="6314">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="6300" relation="include">
        </childnode>
        <childnode refid="6286" relation="include">
        </childnode>
      </node>
      <node id="6315">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="6316" relation="include">
        </childnode>
        <childnode refid="6300" relation="include">
        </childnode>
        <childnode refid="6292" relation="include">
        </childnode>
      </node>
      <node id="6308">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="6297">
        <label>assert.h</label>
      </node>
      <node id="6309">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="6310" relation="include">
        </childnode>
        <childnode refid="6288" relation="include">
        </childnode>
      </node>
      <node id="6291">
        <label>sys/mman.h</label>
      </node>
      <node id="6286">
        <label>stdlib.h</label>
      </node>
      <node id="6311">
        <label>openssl/sha.h</label>
      </node>
      <node id="6304">
        <label>cassert</label>
      </node>
      <node id="6299">
        <label>stdexcept</label>
      </node>
      <node id="6288">
        <label>string</label>
      </node>
      <node id="6290">
        <label>map</label>
      </node>
      <node id="6316">
        <label>stddef.h</label>
      </node>
      <node id="6302">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="6288" relation="include">
        </childnode>
        <childnode refid="6301" relation="include">
        </childnode>
        <childnode refid="6290" relation="include">
        </childnode>
        <childnode refid="6303" relation="include">
        </childnode>
        <childnode refid="6304" relation="include">
        </childnode>
        <childnode refid="6305" relation="include">
        </childnode>
        <childnode refid="6300" relation="include">
        </childnode>
        <childnode refid="6298" relation="include">
        </childnode>
        <childnode refid="6306" relation="include">
        </childnode>
        <childnode refid="6307" relation="include">
        </childnode>
        <childnode refid="6308" relation="include">
        </childnode>
        <childnode refid="6284" relation="include">
        </childnode>
        <childnode refid="6309" relation="include">
        </childnode>
      </node>
      <node id="6292">
        <label>limits.h</label>
      </node>
      <node id="6295">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="6296" relation="include">
        </childnode>
        <childnode refid="6302" relation="include">
        </childnode>
        <childnode refid="6311" relation="include">
        </childnode>
        <childnode refid="6312" relation="include">
        </childnode>
        <childnode refid="6313" relation="include">
        </childnode>
        <childnode refid="6314" relation="include">
        </childnode>
        <childnode refid="6315" relation="include">
        </childnode>
        <childnode refid="6317" relation="include">
        </childnode>
        <childnode refid="6301" relation="include">
        </childnode>
      </node>
      <node id="6287">
        <label>string.h</label>
      </node>
      <node id="6310">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="6306">
        <label>cstdio</label>
      </node>
      <node id="6307">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="6294">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="6295" relation="include">
        </childnode>
        <childnode refid="6302" relation="include">
        </childnode>
        <childnode refid="6296" relation="include">
        </childnode>
        <childnode refid="6299" relation="include">
        </childnode>
        <childnode refid="6301" relation="include">
        </childnode>
      </node>
      <node id="6293">
        <label>unistd.h</label>
      </node>
      <node id="6301">
        <label>vector</label>
      </node>
      <node id="6312">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="6283">
        <label>/home/dev/ds-160209/src/key.h</label>
        <link refid="key.h"/>
        <childnode refid="6284" relation="include">
        </childnode>
        <childnode refid="6294" relation="include">
        </childnode>
        <childnode refid="6299" relation="include">
        </childnode>
        <childnode refid="6301" relation="include">
        </childnode>
      </node>
      <node id="6300">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="6317">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="6300" relation="include">
        </childnode>
        <childnode refid="6316" relation="include">
        </childnode>
        <childnode refid="6292" relation="include">
        </childnode>
      </node>
      <node id="6296">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="6297" relation="include">
        </childnode>
        <childnode refid="6298" relation="include">
        </childnode>
        <childnode refid="6299" relation="include">
        </childnode>
        <childnode refid="6300" relation="include">
        </childnode>
        <childnode refid="6288" relation="include">
        </childnode>
        <childnode refid="6301" relation="include">
        </childnode>
      </node>
      <node id="6284">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="6285" relation="include">
        </childnode>
        <childnode refid="6287" relation="include">
        </childnode>
        <childnode refid="6288" relation="include">
        </childnode>
        <childnode refid="6289" relation="include">
        </childnode>
        <childnode refid="6290" relation="include">
        </childnode>
        <childnode refid="6291" relation="include">
        </childnode>
        <childnode refid="6292" relation="include">
        </childnode>
        <childnode refid="6293" relation="include">
        </childnode>
      </node>
      <node id="6303">
        <label>set</label>
      </node>
      <node id="6313">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="6300" relation="include">
        </childnode>
        <childnode refid="6286" relation="include">
        </childnode>
      </node>
      <node id="6285">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="6286" relation="include">
        </childnode>
      </node>
      <node id="6298">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6352">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="6333">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="6357">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="6399">
        <label>/home/dev/ds-160209/src/rpcserver.cpp</label>
        <link refid="rpcserver_8cpp"/>
      </node>
      <node id="6334">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="6365">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="6395">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6340" relation="include">
        </childnode>
        <childnode refid="6341" relation="include">
        </childnode>
        <childnode refid="6330" relation="include">
        </childnode>
        <childnode refid="6344" relation="include">
        </childnode>
        <childnode refid="6331" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6350">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="6351" relation="include">
        </childnode>
        <childnode refid="6352" relation="include">
        </childnode>
        <childnode refid="6353" relation="include">
        </childnode>
        <childnode refid="6354" relation="include">
        </childnode>
        <childnode refid="6355" relation="include">
        </childnode>
        <childnode refid="6356" relation="include">
        </childnode>
      </node>
      <node id="6363">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="6335">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="6347">
        <label>/home/dev/ds-160209/src/walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="6348" relation="include">
        </childnode>
        <childnode refid="6361" relation="include">
        </childnode>
        <childnode refid="6377" relation="include">
        </childnode>
        <childnode refid="6338" relation="include">
        </childnode>
        <childnode refid="6328" relation="include">
        </childnode>
        <childnode refid="6379" relation="include">
        </childnode>
        <childnode refid="6380" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
        <childnode refid="6383" relation="include">
        </childnode>
      </node>
      <node id="6321">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="6322" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6335" relation="include">
        </childnode>
        <childnode refid="6336" relation="include">
        </childnode>
        <childnode refid="6337" relation="include">
        </childnode>
        <childnode refid="6338" relation="include">
        </childnode>
        <childnode refid="6339" relation="include">
        </childnode>
        <childnode refid="6340" relation="include">
        </childnode>
        <childnode refid="6341" relation="include">
        </childnode>
        <childnode refid="6342" relation="include">
        </childnode>
        <childnode refid="6343" relation="include">
        </childnode>
        <childnode refid="6344" relation="include">
        </childnode>
        <childnode refid="6331" relation="include">
        </childnode>
        <childnode refid="6345" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6390">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="6320" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6391" relation="include">
        </childnode>
        <childnode refid="6352" relation="include">
        </childnode>
        <childnode refid="6360" relation="include">
        </childnode>
        <childnode refid="6329" relation="include">
        </childnode>
        <childnode refid="6340" relation="include">
        </childnode>
        <childnode refid="6341" relation="include">
        </childnode>
        <childnode refid="6343" relation="include">
        </childnode>
        <childnode refid="6344" relation="include">
        </childnode>
        <childnode refid="6331" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6345" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
      </node>
      <node id="6330">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="6378">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="6391">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="6372">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="6396">
        <label>/home/dev/ds-160209/src/base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="6392" relation="include">
        </childnode>
        <childnode refid="6393" relation="include">
        </childnode>
        <childnode refid="6322" relation="include">
        </childnode>
        <childnode refid="6397" relation="include">
        </childnode>
        <childnode refid="6395" relation="include">
        </childnode>
        <childnode refid="6349" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6361" relation="include">
        </childnode>
        <childnode refid="6363" relation="include">
        </childnode>
        <childnode refid="6373" relation="include">
        </childnode>
        <childnode refid="6374" relation="include">
        </childnode>
        <childnode refid="6336" relation="include">
        </childnode>
        <childnode refid="6375" relation="include">
        </childnode>
        <childnode refid="6353" relation="include">
        </childnode>
        <childnode refid="6367" relation="include">
        </childnode>
        <childnode refid="6369" relation="include">
        </childnode>
        <childnode refid="6376" relation="include">
        </childnode>
        <childnode refid="6378" relation="include">
        </childnode>
        <childnode refid="6339" relation="include">
        </childnode>
        <childnode refid="6328" relation="include">
        </childnode>
        <childnode refid="6398" relation="include">
        </childnode>
        <childnode refid="6360" relation="include">
        </childnode>
        <childnode refid="6329" relation="include">
        </childnode>
        <childnode refid="6387" relation="include">
        </childnode>
        <childnode refid="6399" relation="include">
        </childnode>
        <childnode refid="6379" relation="include">
        </childnode>
        <childnode refid="6358" relation="include">
        </childnode>
        <childnode refid="6330" relation="include">
        </childnode>
        <childnode refid="6400" relation="include">
        </childnode>
        <childnode refid="6401" relation="include">
        </childnode>
        <childnode refid="6402" relation="include">
        </childnode>
        <childnode refid="6403" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
        <childnode refid="6383" relation="include">
        </childnode>
      </node>
      <node id="6341">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="6336">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="6353">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="6401">
        <label>/home/dev/ds-160209/src/stormnodeconfig.cpp</label>
        <link refid="stormnodeconfig_8cpp"/>
      </node>
      <node id="6349">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6350" relation="include">
        </childnode>
        <childnode refid="6356" relation="include">
        </childnode>
        <childnode refid="6328" relation="include">
        </childnode>
        <childnode refid="6357" relation="include">
        </childnode>
        <childnode refid="6358" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6351">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="6379">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="6389">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="6390" relation="include">
        </childnode>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6327" relation="include">
        </childnode>
        <childnode refid="6340" relation="include">
        </childnode>
        <childnode refid="6341" relation="include">
        </childnode>
        <childnode refid="6343" relation="include">
        </childnode>
        <childnode refid="6331" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6345" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6376">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="6368">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="6328">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="6370">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="6348">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="6319" relation="include">
        </childnode>
        <childnode refid="6323" relation="include">
        </childnode>
        <childnode refid="6349" relation="include">
        </childnode>
        <childnode refid="6359" relation="include">
        </childnode>
        <childnode refid="6335" relation="include">
        </childnode>
        <childnode refid="6361" relation="include">
        </childnode>
        <childnode refid="6362" relation="include">
        </childnode>
        <childnode refid="6363" relation="include">
        </childnode>
        <childnode refid="6373" relation="include">
        </childnode>
        <childnode refid="6374" relation="include">
        </childnode>
        <childnode refid="6336" relation="include">
        </childnode>
        <childnode refid="6351" relation="include">
        </childnode>
        <childnode refid="6352" relation="include">
        </childnode>
        <childnode refid="6375" relation="include">
        </childnode>
        <childnode refid="6377" relation="include">
        </childnode>
        <childnode refid="6369" relation="include">
        </childnode>
        <childnode refid="6376" relation="include">
        </childnode>
        <childnode refid="6338" relation="include">
        </childnode>
        <childnode refid="6378" relation="include">
        </childnode>
        <childnode refid="6339" relation="include">
        </childnode>
        <childnode refid="6371" relation="include">
        </childnode>
        <childnode refid="6328" relation="include">
        </childnode>
        <childnode refid="6379" relation="include">
        </childnode>
        <childnode refid="6380" relation="include">
        </childnode>
        <childnode refid="6381" relation="include">
        </childnode>
        <childnode refid="6382" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
        <childnode refid="6383" relation="include">
        </childnode>
      </node>
      <node id="6405">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="6369">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="6327">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="6332">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="6360">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="6394">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="6342" relation="include">
        </childnode>
      </node>
      <node id="6374">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="6392">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="6389" relation="include">
        </childnode>
        <childnode refid="6393" relation="include">
        </childnode>
        <childnode refid="6395" relation="include">
        </childnode>
        <childnode refid="6338" relation="include">
        </childnode>
        <childnode refid="6344" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6345" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6398">
        <label>/home/dev/ds-160209/src/rpcdump.cpp</label>
        <link refid="rpcdump_8cpp"/>
      </node>
      <node id="6339">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="6397">
        <label>/home/dev/ds-160209/src/base58.cpp</label>
        <link refid="base58_8cpp"/>
      </node>
      <node id="6388">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="6381">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="6338">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="6366">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="6331">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="6384">
        <label>/home/dev/ds-160209/src/crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="6348" relation="include">
        </childnode>
        <childnode refid="6385" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6382">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="6346">
        <label>/home/dev/ds-160209/src/keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="6347" relation="include">
        </childnode>
        <childnode refid="6384" relation="include">
        </childnode>
        <childnode refid="6348" relation="include">
        </childnode>
        <childnode refid="6386" relation="include">
        </childnode>
        <childnode refid="6387" relation="include">
        </childnode>
        <childnode refid="6388" relation="include">
        </childnode>
      </node>
      <node id="6377">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="6380">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="6400">
        <label>/home/dev/ds-160209/src/stealth.cpp</label>
        <link refid="stealth_8cpp"/>
      </node>
      <node id="6387">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="6342">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="6393">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="6320" relation="include">
        </childnode>
        <childnode refid="6321" relation="include">
        </childnode>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6327" relation="include">
        </childnode>
        <childnode refid="6391" relation="include">
        </childnode>
        <childnode refid="6338" relation="include">
        </childnode>
        <childnode refid="6340" relation="include">
        </childnode>
        <childnode refid="6341" relation="include">
        </childnode>
        <childnode refid="6394" relation="include">
        </childnode>
        <childnode refid="6344" relation="include">
        </childnode>
        <childnode refid="6331" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6345" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
      </node>
      <node id="6406">
        <label>/home/dev/ds-160209/src/test/sigopcount_tests.cpp</label>
        <link refid="sigopcount__tests_8cpp"/>
      </node>
      <node id="6364">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="6340">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="6320">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="6383">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="6323">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="6344">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="6318">
        <label>/home/dev/ds-160209/src/key.h</label>
        <link refid="key.h"/>
        <childnode refid="6319" relation="include">
        </childnode>
        <childnode refid="6346" relation="include">
        </childnode>
        <childnode refid="6348" relation="include">
        </childnode>
        <childnode refid="6389" relation="include">
        </childnode>
        <childnode refid="6392" relation="include">
        </childnode>
        <childnode refid="6396" relation="include">
        </childnode>
        <childnode refid="6393" relation="include">
        </childnode>
        <childnode refid="6322" relation="include">
        </childnode>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6395" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6404" relation="include">
        </childnode>
        <childnode refid="6361" relation="include">
        </childnode>
        <childnode refid="6405" relation="include">
        </childnode>
        <childnode refid="6330" relation="include">
        </childnode>
        <childnode refid="6403" relation="include">
        </childnode>
        <childnode refid="6406" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6361">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="6325">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="6324">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="6354">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="6322">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="6320" relation="include">
        </childnode>
        <childnode refid="6323" relation="include">
        </childnode>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6327" relation="include">
        </childnode>
        <childnode refid="6328" relation="include">
        </childnode>
        <childnode refid="6329" relation="include">
        </childnode>
        <childnode refid="6330" relation="include">
        </childnode>
        <childnode refid="6331" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
        <childnode refid="6334" relation="include">
        </childnode>
      </node>
      <node id="6355">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="6356">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="6403">
        <label>/home/dev/ds-160209/src/test/key_tests.cpp</label>
        <link refid="key__tests_8cpp"/>
      </node>
      <node id="6359">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="6327" relation="include">
        </childnode>
        <childnode refid="6360" relation="include">
        </childnode>
      </node>
      <node id="6358">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="6375">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="6352" relation="include">
        </childnode>
        <childnode refid="6376" relation="include">
        </childnode>
      </node>
      <node id="6402">
        <label>/home/dev/ds-160209/src/test/base58_tests.cpp</label>
        <link refid="base58__tests_8cpp"/>
      </node>
      <node id="6371">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="6326">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="6329">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="6367">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="6319">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="6320" relation="include">
        </childnode>
        <childnode refid="6321" relation="include">
        </childnode>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6338" relation="include">
        </childnode>
        <childnode refid="6340" relation="include">
        </childnode>
        <childnode refid="6341" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
      </node>
      <node id="6386">
        <label>/home/dev/ds-160209/src/keystore.cpp</label>
        <link refid="keystore_8cpp"/>
      </node>
      <node id="6362">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="6363" relation="include">
        </childnode>
        <childnode refid="6364" relation="include">
        </childnode>
        <childnode refid="6336" relation="include">
        </childnode>
        <childnode refid="6351" relation="include">
        </childnode>
        <childnode refid="6352" relation="include">
        </childnode>
        <childnode refid="6365" relation="include">
        </childnode>
        <childnode refid="6353" relation="include">
        </childnode>
        <childnode refid="6337" relation="include">
        </childnode>
        <childnode refid="6366" relation="include">
        </childnode>
        <childnode refid="6367" relation="include">
        </childnode>
        <childnode refid="6368" relation="include">
        </childnode>
        <childnode refid="6355" relation="include">
        </childnode>
        <childnode refid="6356" relation="include">
        </childnode>
        <childnode refid="6369" relation="include">
        </childnode>
        <childnode refid="6338" relation="include">
        </childnode>
        <childnode refid="6370" relation="include">
        </childnode>
        <childnode refid="6371" relation="include">
        </childnode>
        <childnode refid="6372" relation="include">
        </childnode>
        <childnode refid="6328" relation="include">
        </childnode>
      </node>
      <node id="6404">
        <label>/home/dev/ds-160209/src/key.cpp</label>
        <link refid="key_8cpp"/>
      </node>
      <node id="6343">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="6373">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="6374" relation="include">
        </childnode>
        <childnode refid="6352" relation="include">
        </childnode>
      </node>
      <node id="6337">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="6345">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="6385">
        <label>/home/dev/ds-160209/src/crypter.cpp</label>
        <link refid="crypter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_key" prot="public">CKey</innerclass>
    <innerclass refid="struct_c_ext_key" prot="public">CExtKey</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" prot="public" static="no">
        <type>std::vector&lt; unsigned char, <ref refid="structsecure__allocator" kindref="compound">secure_allocator</ref>&lt; unsigned char &gt; &gt;</type>
        <definition>typedef std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; CPrivKey</definition>
        <argsstring></argsstring>
        <name>CPrivKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="24" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" prot="public" static="no">
        <type>std::vector&lt; unsigned char, <ref refid="structsecure__allocator" kindref="compound">secure_allocator</ref>&lt; unsigned char &gt; &gt;</type>
        <definition>typedef std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; CSecret</definition>
        <argsstring></argsstring>
        <name>CSecret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="26" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="key_8h_1a5ee69136607b1012d64a045ee44ccae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ECC_Start</definition>
        <argsstring>(void)</argsstring>
        <name>ECC_Start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the elliptic curve support. May not be called twice without calling ECC_Stop first. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="321" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="key_8h_1a8fb68c634cf5491218253147eb4e04c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ECC_Stop</definition>
        <argsstring>(void)</argsstring>
        <name>ECC_Stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deinitialize the elliptic curve support. No-op if ECC_Start wasn&apos;t called first. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="159" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="340" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="key_8h_1a55cc40f04bf887c1000667caccb0684a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ECC_InitSanityCheck</definition>
        <argsstring>(void)</argsstring>
        <name>ECC_InitSanityCheck</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check that required EC support is available at runtime. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="162" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="313" bodyend="318"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DARKSILK_KEY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_KEY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allocators_8h" kindref="compound">allocators.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pubkey_8h" kindref="compound">pubkey.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>secp256k1:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>unsigned<sp/>int<sp/>PRIVATE_KEY_SIZE<sp/>=<sp/>279;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>unsigned<sp/>int<sp/>PUBLIC_KEY_SIZE<sp/><sp/>=<sp/>65;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>unsigned<sp/>int<sp/>SIGNATURE_SIZE<sp/><sp/><sp/>=<sp/>72;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>www.keylength.com</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>script<sp/>supports<sp/>up<sp/>to<sp/>75<sp/>for<sp/>single<sp/>byte<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>secure_allocator<sp/>is<sp/>defined<sp/>in<sp/>allocators.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CPrivKey<sp/>is<sp/>a<sp/>serialized<sp/>private<sp/>key,<sp/>with<sp/>all<sp/>parameters<sp/>included<sp/>(279<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char,<sp/>secure_allocator&lt;unsigned<sp/>char&gt;<sp/>&gt;<sp/><ref refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" kindref="member">CPrivKey</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CSecret<sp/>is<sp/>a<sp/>serialization<sp/>of<sp/>just<sp/>the<sp/>secret<sp/>parameter<sp/>(32<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char,<sp/>secure_allocator&lt;unsigned<sp/>char&gt;<sp/>&gt;<sp/><ref refid="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" kindref="member">CSecret</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_c_key" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>this<sp/>private<sp/>key<sp/>is<sp/>valid.<sp/>We<sp/>check<sp/>for<sp/>correctness<sp/>when<sp/>modifying<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data,<sp/>so<sp/>fValid<sp/>should<sp/>always<sp/>correspond<sp/>to<sp/>the<sp/>actual<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fValid;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>the<sp/>public<sp/>key<sp/>corresponding<sp/>to<sp/>this<sp/>private<sp/>key<sp/>is<sp/>(to<sp/>be)<sp/>compressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCompressed;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>actual<sp/>byte<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>vch[32];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>32-byte<sp/>array<sp/>pointed<sp/>to<sp/>be<sp/>vch<sp/>is<sp/>valid<sp/>keydata.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Check(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vch);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>an<sp/>invalid<sp/>private<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_c_key_1a8f4ca910c7b7e729a3f2a5c59d060d3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_1a8f4ca910c7b7e729a3f2a5c59d060d3d" kindref="member">CKey</ref>()<sp/>:<sp/>fValid(false)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1ab73cc3988a03bed966c0c2bb191a8d2a" kindref="member">LockObject</ref>(vch);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor.<sp/>This<sp/>is<sp/>necessary<sp/>because<sp/>of<sp/>memlocking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_c_key_1afcea34cefd25675f4cf9b03eaa4bb7d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_1afcea34cefd25675f4cf9b03eaa4bb7d9" kindref="member">CKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>&amp;secret)<sp/>:<sp/>fValid(secret.fValid),<sp/>fCompressed(secret.fCompressed)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1ab73cc3988a03bed966c0c2bb191a8d2a" kindref="member">LockObject</ref>(vch);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(vch,<sp/>secret.vch,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vch));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor<sp/>(again<sp/>necessary<sp/>because<sp/>of<sp/>memlocking).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_c_key_1a57d5b254748cef054c40f99c1c339147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_1a57d5b254748cef054c40f99c1c339147" kindref="member">~CKey</ref>()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a49577b8da0ecffd2fbc222896283004c" kindref="member">UnlockObject</ref>(vch);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_c_key_1a381efd9184dc467e73e690329c70371d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a381efd9184dc467e73e690329c70371d" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.fCompressed<sp/>==<sp/>b.fCompressed<sp/>&amp;&amp;<sp/>a.<ref refid="class_c_key_1a6329a38926a8af8112d06da96afbfe39" kindref="member">size</ref>()<sp/>==<sp/>b.<ref refid="class_c_key_1a6329a38926a8af8112d06da96afbfe39" kindref="member">size</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcmp(&amp;a.vch[0],<sp/>&amp;b.vch[0],<sp/>a.<ref refid="class_c_key_1a6329a38926a8af8112d06da96afbfe39" kindref="member">size</ref>())<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>using<sp/>begin<sp/>and<sp/>end<sp/>iterators<sp/>to<sp/>byte<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="68" refid="class_c_key_1aaa13d5f08456bba094210c5eeabf64c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1aaa13d5f08456bba094210c5eeabf64c8" kindref="member">Set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>pbegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>pend,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCompressedIn)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pend<sp/>-<sp/>pbegin<sp/>!=<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Check(&amp;pbegin[0]))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(vch,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;pbegin[0],<sp/>32);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fCompressed<sp/>=<sp/>fCompressedIn;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>read-only<sp/>vector-like<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_c_key_1a6329a38926a8af8112d06da96afbfe39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a6329a38926a8af8112d06da96afbfe39" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fValid<sp/>?<sp/>32<sp/>:<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="84" refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vch;<sp/>}</highlight></codeline>
<codeline lineno="85" refid="class_c_key_1a651d1e10b4085da5e4c4a764f3a384df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_c_key_1a651d1e10b4085da5e4c4a764f3a384df" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vch<sp/>+<sp/><ref refid="class_c_key_1a6329a38926a8af8112d06da96afbfe39" kindref="member">size</ref>();<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>this<sp/>private<sp/>key<sp/>is<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_c_key_1a62094263b7422a45b45ac508396f19eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a62094263b7422a45b45ac508396f19eb" kindref="member">IsValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fValid;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>public<sp/>key<sp/>corresponding<sp/>to<sp/>this<sp/>private<sp/>key<sp/>is<sp/>(to<sp/>be)<sp/>compressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_c_key_1abdc7d807f7a1b27ff3ad9dd5164a2273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1abdc7d807f7a1b27ff3ad9dd5164a2273" kindref="member">IsCompressed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCompressed;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>from<sp/>a<sp/>CPrivKey<sp/>(serialized<sp/>OpenSSL<sp/>private<sp/>key<sp/>data).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1aa62c082c9037565fce02b457cc335e7b" kindref="member">SetPrivKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" kindref="member">CPrivKey</ref><sp/>&amp;vchPrivKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCompressed);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>new<sp/>private<sp/>key<sp/>using<sp/>a<sp/>cryptographic<sp/>PRNG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" kindref="member">MakeNewKey</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCompressed);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>private<sp/>key<sp/>to<sp/>a<sp/>CPrivKey<sp/>(serialized<sp/>OpenSSL<sp/>private<sp/>key<sp/>data).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>expensive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" kindref="member">CPrivKey</ref><sp/><ref refid="class_c_key_1ab38813e7091f658612dfb14f17c9e317" kindref="member">GetPrivKey</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>public<sp/>key<sp/>from<sp/>a<sp/>private<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>expensive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/><ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a3b161899b4fa79f5a7036d2ccf12ce3a" kindref="member">Sign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vchSig,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>test_case<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>compact<sp/>signature<sp/>(65<sp/>bytes),<sp/>which<sp/>allows<sp/>reconstructing<sp/>the<sp/>used<sp/>public<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>is<sp/>one<sp/>header<sp/>byte,<sp/>followed<sp/>by<sp/>two<sp/>times<sp/>32<sp/>bytes<sp/>for<sp/>the<sp/>serialized<sp/>r<sp/>and<sp/>s<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>header<sp/>byte:<sp/>0x1B<sp/>=<sp/>first<sp/>key<sp/>with<sp/>even<sp/>y,<sp/>0x1C<sp/>=<sp/>first<sp/>key<sp/>with<sp/>odd<sp/>y,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1D<sp/>=<sp/>second<sp/>key<sp/>with<sp/>even<sp/>y,<sp/>0x1E<sp/>=<sp/>second<sp/>key<sp/>with<sp/>odd<sp/>y,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>0x04<sp/>for<sp/>compressed<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" kindref="member">SignCompact</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vchSig)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Derive<sp/>BIP32<sp/>child<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1abb0091d4390dcece3c56ea4c1fdd6036" kindref="member">Derive</ref>(<ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>keyChild,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ccChild[32],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChild,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cc[32])<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" kindref="member">VerifyPubKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>vchPubKey)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>private<sp/>key<sp/>and<sp/>check<sp/>that<sp/>public<sp/>key<sp/>matches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a141751588f8bfe5f1b6fc27f4e64b63f" kindref="member">Load</ref>(<ref refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" kindref="member">CPrivKey</ref><sp/>&amp;privkey,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;vchPubKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSkipCheck);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>an<sp/>element<sp/>of<sp/>a<sp/>signature<sp/>(r<sp/>or<sp/>s)<sp/>is<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_1a625c363d9adfbd4dda22f3a67a898cf4" kindref="member">CheckSignatureElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>half);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="struct_c_ext_key" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_ext_key" kindref="compound">CExtKey</ref><sp/>{</highlight></codeline>
<codeline lineno="137" refid="struct_c_ext_key_1ab197a253f41646975405b4ead8027b55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1ab197a253f41646975405b4ead8027b55" kindref="member">nDepth</ref>;</highlight></codeline>
<codeline lineno="138" refid="struct_c_ext_key_1a22efb3f5dfb26cd8d88d2ab5db885978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1a22efb3f5dfb26cd8d88d2ab5db885978" kindref="member">vchFingerprint</ref>[4];</highlight></codeline>
<codeline lineno="139" refid="struct_c_ext_key_1ad15cb7ab68b59495eec71f6586803048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1ad15cb7ab68b59495eec71f6586803048" kindref="member">nChild</ref>;</highlight></codeline>
<codeline lineno="140" refid="struct_c_ext_key_1a637ce75955e2883d20172b707c26a459" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1a637ce75955e2883d20172b707c26a459" kindref="member">vchChainCode</ref>[32];</highlight></codeline>
<codeline lineno="141" refid="struct_c_ext_key_1a93cd93ef3311d9dbcf475282a5f80fb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/><ref refid="struct_c_ext_key_1a93cd93ef3311d9dbcf475282a5f80fb2" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="struct_c_ext_key_1abd1d7fa4544c5a730a0d2a21d06fd3b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1abd1d7fa4544c5a730a0d2a21d06fd3b3" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key" kindref="compound">CExtKey</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key" kindref="compound">CExtKey</ref><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="struct_c_ext_key_1ab197a253f41646975405b4ead8027b55" kindref="member">nDepth</ref><sp/>==<sp/>b.<ref refid="struct_c_ext_key_1ab197a253f41646975405b4ead8027b55" kindref="member">nDepth</ref><sp/>&amp;&amp;<sp/>memcmp(&amp;a.<ref refid="struct_c_ext_key_1a22efb3f5dfb26cd8d88d2ab5db885978" kindref="member">vchFingerprint</ref>[0],<sp/>&amp;b.<ref refid="struct_c_ext_key_1a22efb3f5dfb26cd8d88d2ab5db885978" kindref="member">vchFingerprint</ref>[0],<sp/>4)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>a.<ref refid="struct_c_ext_key_1ad15cb7ab68b59495eec71f6586803048" kindref="member">nChild</ref><sp/>==<sp/>b.<ref refid="struct_c_ext_key_1ad15cb7ab68b59495eec71f6586803048" kindref="member">nChild</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcmp(&amp;a.<ref refid="struct_c_ext_key_1a637ce75955e2883d20172b707c26a459" kindref="member">vchChainCode</ref>[0],<sp/>&amp;b.<ref refid="struct_c_ext_key_1a637ce75955e2883d20172b707c26a459" kindref="member">vchChainCode</ref>[0],<sp/>32)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>a.<ref refid="struct_c_ext_key_1a93cd93ef3311d9dbcf475282a5f80fb2" kindref="member">key</ref><sp/>==<sp/>b.<ref refid="struct_c_ext_key_1a93cd93ef3311d9dbcf475282a5f80fb2" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1aa60d612abaa124e00f66f81ac4a74699" kindref="member">Encode</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>code[74])<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1a9720e119745472336b6729e19f0819dd" kindref="member">Decode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>code[74]);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1a2fa3a39434ae09efbbd4058d1d081aa2" kindref="member">Derive</ref>(<ref refid="struct_c_ext_key" kindref="compound">CExtKey</ref><sp/>&amp;out,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChild)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_ext_pub_key" kindref="compound">CExtPubKey</ref><sp/><ref refid="struct_c_ext_key_1a49f98a470d61ab1f2948b7c414ec9563" kindref="member">Neuter</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_c_ext_key_1a8cd6ecafdd649082601d7eebbec79688" kindref="member">SetMaster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seed,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSeedLen);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key_8h_1a5ee69136607b1012d64a045ee44ccae2" kindref="member">ECC_Start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key_8h_1a8fb68c634cf5491218253147eb4e04c8" kindref="member">ECC_Stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="key_8h_1a55cc40f04bf887c1000667caccb0684a" kindref="member">ECC_InitSanityCheck</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DARKSILK_KEY_H</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/key.h"/>
  </compounddef>
</doxygen>
