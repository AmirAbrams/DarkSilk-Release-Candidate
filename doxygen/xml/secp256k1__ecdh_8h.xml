<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="secp256k1__ecdh_8h" kind="file" language="C++">
    <compoundname>secp256k1_ecdh.h</compoundname>
    <includes refid="secp256k1_8h" local="yes">secp256k1.h</includes>
    <includedby refid="bench__ecdh_8c" local="yes">/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c</includedby>
    <includedby refid="ecdh_2main__impl_8h" local="yes">/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/main_impl.h</includedby>
    <incdepgraph>
      <node id="51554">
        <label>secp256k1.h</label>
        <link refid="secp256k1_8h"/>
        <childnode refid="51555" relation="include">
        </childnode>
      </node>
      <node id="51555">
        <label>stddef.h</label>
      </node>
      <node id="51553">
        <label>/home/dev/ds-160209/src/secp256k1/include/secp256k1_ecdh.h</label>
        <link refid="secp256k1_ecdh.h"/>
        <childnode refid="51554" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="51558">
        <label>/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/main_impl.h</label>
        <link refid="ecdh_2main__impl_8h"/>
      </node>
      <node id="51556">
        <label>/home/dev/ds-160209/src/secp256k1/include/secp256k1_ecdh.h</label>
        <link refid="secp256k1_ecdh.h"/>
        <childnode refid="51557" relation="include">
        </childnode>
        <childnode refid="51558" relation="include">
        </childnode>
      </node>
      <node id="51557">
        <label>/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c</label>
        <link refid="bench__ecdh_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a3f1967acd0fe26283877c61b3f2694a5" kindref="member">SECP256K1_API</ref> <ref refid="secp256k1_8h_1aebd5ca8fbfcbb0ba0754a46115143c2c" kindref="member">SECP256K1_WARN_UNUSED_RESULT</ref> int</type>
        <definition>SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdh</definition>
        <argsstring>(const secp256k1_context *ctx, unsigned char *result, const secp256k1_pubkey *pubkey, const unsigned char *privkey) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4)</argsstring>
        <name>secp256k1_ecdh</name>
        <param>
          <type>const <ref refid="secp256k1_8h_1a282ec9e6dfec8c35955c3eb2f7476e5e" kindref="member">secp256k1_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__pubkey" kindref="compound">secp256k1_pubkey</ref> *</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>privkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute an EC Diffie-Hellman secret in constant time Returns: 1: exponentiation was successful 0: scalar was invalid (zero or overflow) Args: ctx: pointer to a context object (cannot be NULL) Out: result: a 32-byte array which will be populated by an ECDH secret computed from the point and scalar In: pubkey: a pointer to a <ref refid="structsecp256k1__pubkey" kindref="compound">secp256k1_pubkey</ref> containing an initialized public key privkey: a 32-byte scalar with which to multiply the point </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/include/secp256k1_ecdh.h" line="20" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/main_impl.h" bodystart="13" bodyend="52"/>
        <references refid="secp256k1_8c_1a6e1f88c6ce07376501097b42a2b40727" compoundref="secp256k1_8c" startline="23">ARG_CHECK</references>
        <references refid="structsecp256k1__ge_1a3c04a97b606c82ea87e55d4a06f06b6e" compoundref="group_8h" startline="15">secp256k1_ge::x</references>
        <references refid="structsecp256k1__ge_1a604295983a1f4aa6e8b5b0f1e46f9ee0" compoundref="group_8h" startline="16">secp256k1_ge::y</references>
        <referencedby refid="ecdh_2tests__impl_8h_1ab13157e14f777c18f14fefc834d067c5" compoundref="ecdh_2tests__impl_8h" startline="10" endline="42">test_ecdh_generator_basepoint</referencedby>
        <referencedby refid="ecdh_2tests__impl_8h_1a505bff7cea922e6d8aa4f7525cfd191a" compoundref="ecdh_2tests__impl_8h" startline="44" endline="68">test_bad_scalar</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_ECDH_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_SECP256K1_ECDH_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="secp256k1_8h" kindref="compound">secp256k1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="secp256k1_8h_1a3f1967acd0fe26283877c61b3f2694a5" kindref="member">SECP256K1_API</ref><sp/><ref refid="secp256k1_8h_1aebd5ca8fbfcbb0ba0754a46115143c2c" kindref="member">SECP256K1_WARN_UNUSED_RESULT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" kindref="member">secp256k1_ecdh</ref>(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__context__struct" kindref="compound">secp256k1_context</ref>*<sp/>ctx,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__pubkey" kindref="compound">secp256k1_pubkey</ref><sp/>*pubkey,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*privkey</highlight></codeline>
<codeline lineno="25"><highlight class="normal">)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(1)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(2)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(3)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(4);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/include/secp256k1_ecdh.h"/>
  </compounddef>
</doxygen>
