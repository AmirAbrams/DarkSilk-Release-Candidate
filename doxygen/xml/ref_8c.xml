<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="ref_8c" kind="file" language="C++">
    <compoundname>ref.c</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="argon2_8h" local="yes">argon2.h</includes>
    <includes refid="ref_8h" local="yes">ref.h</includes>
    <includes refid="blamka-round-ref_8h" local="yes">blake2/blamka-round-ref.h</includes>
    <includes refid="blake2-impl_8h" local="yes">blake2/blake2-impl.h</includes>
    <includes refid="blake2_8h" local="yes">blake2/blake2.h</includes>
    <incdepgraph>
      <node id="33529">
        <label>blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="33524" relation="include">
        </childnode>
        <childnode refid="33520" relation="include">
        </childnode>
        <childnode refid="33525" relation="include">
        </childnode>
      </node>
      <node id="33522">
        <label>stdlib.h</label>
      </node>
      <node id="33524">
        <label>stddef.h</label>
      </node>
      <node id="33530">
        <label>blake2-impl.h</label>
        <link refid="blake2-impl_8h"/>
        <childnode refid="33520" relation="include">
        </childnode>
        <childnode refid="33521" relation="include">
        </childnode>
      </node>
      <node id="33525">
        <label>limits.h</label>
      </node>
      <node id="33528">
        <label>blake2/blamka-round-ref.h</label>
        <link refid="blamka-round-ref_8h"/>
        <childnode refid="33529" relation="include">
        </childnode>
        <childnode refid="33530" relation="include">
        </childnode>
      </node>
      <node id="33521">
        <label>string.h</label>
      </node>
      <node id="33519">
        <label>/home/dev/ds-160209/src/crypto/argon2/ref.c</label>
        <link refid="ref.c"/>
        <childnode refid="33520" relation="include">
        </childnode>
        <childnode refid="33521" relation="include">
        </childnode>
        <childnode refid="33522" relation="include">
        </childnode>
        <childnode refid="33523" relation="include">
        </childnode>
        <childnode refid="33526" relation="include">
        </childnode>
        <childnode refid="33528" relation="include">
        </childnode>
        <childnode refid="33530" relation="include">
        </childnode>
        <childnode refid="33529" relation="include">
        </childnode>
      </node>
      <node id="33526">
        <label>ref.h</label>
        <link refid="ref_8h"/>
        <childnode refid="33527" relation="include">
        </childnode>
      </node>
      <node id="33520">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="33523">
        <label>argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="33520" relation="include">
        </childnode>
        <childnode refid="33524" relation="include">
        </childnode>
        <childnode refid="33525" relation="include">
        </childnode>
      </node>
      <node id="33527">
        <label>core.h</label>
        <link refid="core_8h"/>
        <childnode refid="33523" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ref_8c_1a815c1bdb75f515c4b6bf35bcbf185c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_block</definition>
        <argsstring>(const block *prev_block, const block *ref_block, block *next_block)</argsstring>
        <name>fill_block</name>
        <param>
          <type>const <ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>prev_block</declname>
        </param>
        <param>
          <type>const <ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>ref_block</declname>
        </param>
        <param>
          <type><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>next_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/ref.c" line="25" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/ref.c" bodystart="25" bodyend="60"/>
        <references refid="core_8c_1a7c9154420e1de71f92c54207dbfb9f53" compoundref="core_8c" startline="56" endline="58">copy_block</references>
        <references refid="core_8c_1abd86e6d9a6a744ec69ee9cba596a84fb" compoundref="core_8c" startline="60" endline="65">xor_block</references>
        <references refid="blamka-round-ref_8h_1a454fab5e1df1ce9be6cc153331c4958a" compoundref="blamka-round-ref_8h" startline="26">BLAKE2_ROUND_NOMSG</references>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <referencedby refid="ref_8c_1a4109a2142513c6e3fc7441fdfa64a25f" compoundref="ref_8c" startline="62" endline="90">generate_addresses</referencedby>
        <referencedby refid="ref_8c_1a7ba7d65e159824e7011eb23068e15f72" compoundref="ref_8c" startline="92" endline="176">fill_segment</referencedby>
      </memberdef>
      <memberdef kind="function" id="ref_8c_1a4109a2142513c6e3fc7441fdfa64a25f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_addresses</definition>
        <argsstring>(const argon2_instance_t *instance, const argon2_position_t *position, uint64_t *pseudo_rands)</argsstring>
        <name>generate_addresses</name>
        <param>
          <type>const <ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const <ref refid="core_8h_1a24aa65731593323bf283524ded8b6cdb" kindref="member">argon2_position_t</ref> *</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>pseudo_rands</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/ref.c" line="62" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/ref.c" bodystart="62" bodyend="90"/>
        <references refid="core_8c_1a7115f6986a42420746ebdd264404a05c" compoundref="core_8c" startline="54" endline="54">init_block_value</references>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <references refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" compoundref="core_8h" startline="95">Argon2_position_t::pass</references>
        <references refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" compoundref="core_8h" startline="96">Argon2_position_t::lane</references>
        <references refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" compoundref="core_8h" startline="97">Argon2_position_t::slice</references>
        <references refid="struct_argon2__instance__t_1a40e32466250c3eaa25458b89050f1d0d" compoundref="core_8h" startline="81">Argon2_instance_t::memory_blocks</references>
        <references refid="struct_argon2__instance__t_1a2783db68ff7f7801616f7c78e319ffd5" compoundref="core_8h" startline="80">Argon2_instance_t::passes</references>
        <references refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" compoundref="core_8h" startline="86">Argon2_instance_t::type</references>
        <references refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" compoundref="core_8h" startline="82">Argon2_instance_t::segment_length</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca3e55548ad9759ef13649dc00ec9043f9" compoundref="core_8h" startline="44">ARGON2_ADDRESSES_IN_BLOCK</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cad77d2fc87fee45d7465b0664d47c3789" compoundref="core_8h" startline="39">ARGON2_OWORDS_IN_BLOCK</references>
        <references refid="opt_8c_1afc518d118f89b23021fbe00ee1da2751" compoundref="opt_8c" startline="24" endline="49">fill_block</references>
        <referencedby refid="ref_8c_1a7ba7d65e159824e7011eb23068e15f72" compoundref="ref_8c" startline="92" endline="176">fill_segment</referencedby>
      </memberdef>
      <memberdef kind="function" id="ref_8c_1a7ba7d65e159824e7011eb23068e15f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_segment</definition>
        <argsstring>(const argon2_instance_t *instance, argon2_position_t position)</argsstring>
        <name>fill_segment</name>
        <param>
          <type>const <ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="core_8h_1a24aa65731593323bf283524ded8b6cdb" kindref="member">argon2_position_t</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/ref.c" line="92" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/ref.c" bodystart="92" bodyend="176"/>
        <references refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" compoundref="core_8h" startline="86">Argon2_instance_t::type</references>
        <references refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695ad879f03535165a16f3040eeae7eedefa" compoundref="argon2_8h" startline="197">Argon2_i</references>
        <references refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" compoundref="core_8h" startline="82">Argon2_instance_t::segment_length</references>
        <references refid="ref_8c_1a4109a2142513c6e3fc7441fdfa64a25f" compoundref="ref_8c" startline="62" endline="90">generate_addresses</references>
        <references refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" compoundref="core_8h" startline="95">Argon2_position_t::pass</references>
        <references refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" compoundref="core_8h" startline="97">Argon2_position_t::slice</references>
        <references refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" compoundref="core_8h" startline="96">Argon2_position_t::lane</references>
        <references refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" compoundref="core_8h" startline="83">Argon2_instance_t::lane_length</references>
        <references refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" compoundref="core_8h" startline="79">Argon2_instance_t::memory</references>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <references refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" compoundref="core_8h" startline="84">Argon2_instance_t::lanes</references>
        <references refid="struct_argon2__position__t_1afb869bff35a0933daf00575b47dad939" compoundref="core_8h" startline="98">Argon2_position_t::index</references>
        <references refid="core_8c_1a67f6f4720426f8e34553e2f1608f70bf" compoundref="core_8c" startline="170" endline="238">index_alpha</references>
        <references refid="ref_8c_1a815c1bdb75f515c4b6bf35bcbf185c06" compoundref="ref_8c" startline="25" endline="60">fill_block</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Argon2<sp/>source<sp/>code<sp/>package</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Written<sp/>by<sp/>Daniel<sp/>Dinu<sp/>and<sp/>Dmitry<sp/>Khovratovich,<sp/>2015</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>is<sp/>licensed<sp/>under<sp/>a<sp/>Creative<sp/>Commons<sp/>CC0<sp/>1.0<sp/>License/Waiver.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>CC0<sp/>Public<sp/>Domain<sp/>Dedication<sp/>along</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>with</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>this<sp/>software.<sp/>If<sp/>not,<sp/>see</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>&lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="argon2_8h" kindref="compound">argon2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ref_8h" kindref="compound">ref.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blamka-round-ref_8h" kindref="compound">blake2/blamka-round-ref.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blake2-impl_8h" kindref="compound">blake2/blake2-impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blake2_8h" kindref="compound">blake2/blake2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="ref_8h_1a815c1bdb75f515c4b6bf35bcbf185c06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ref_8c_1a815c1bdb75f515c4b6bf35bcbf185c06" kindref="member">fill_block</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>*prev_block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>*ref_block,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>*next_block)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>blockR,<sp/>block_tmp;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1a7c9154420e1de71f92c54207dbfb9f53" kindref="member">copy_block</ref>(&amp;blockR,<sp/>ref_block);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1abd86e6d9a6a744ec69ee9cba596a84fb" kindref="member">xor_block</ref>(&amp;blockR,<sp/>prev_block);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1a7c9154420e1de71f92c54207dbfb9f53" kindref="member">copy_block</ref>(&amp;block_tmp,<sp/>&amp;blockR);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Apply<sp/>Blake2<sp/>on<sp/>columns<sp/>of<sp/>64-bit<sp/>words:<sp/>(0,1,...,15)<sp/>,<sp/>then</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(16,17,..31)...<sp/>finally<sp/>(112,113,...127)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blamka-round-ref_8h_1a454fab5e1df1ce9be6cc153331c4958a" kindref="member">BLAKE2_ROUND_NOMSG</ref>(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>1],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>2],</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>3],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>4],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>5],</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>6],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>7],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>8],</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>9],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>10],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>11],</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>12],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>13],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>14],</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[16<sp/>*<sp/>i<sp/>+<sp/>15]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Apply<sp/>Blake2<sp/>on<sp/>rows<sp/>of<sp/>64-bit<sp/>words:<sp/>(0,1,16,17,...112,113),<sp/>then</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2,3,18,19,...,114,115)..<sp/>finally<sp/>(14,15,30,31,...,126,127)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blamka-round-ref_8h_1a454fab5e1df1ce9be6cc153331c4958a" kindref="member">BLAKE2_ROUND_NOMSG</ref>(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>1],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>16],</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>17],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>32],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>33],</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>48],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>49],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>64],</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>65],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>80],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>81],</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>96],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>97],<sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>112],</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockR.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2<sp/>*<sp/>i<sp/>+<sp/>113]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1a7c9154420e1de71f92c54207dbfb9f53" kindref="member">copy_block</ref>(next_block,<sp/>&amp;block_tmp);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1abd86e6d9a6a744ec69ee9cba596a84fb" kindref="member">xor_block</ref>(next_block,<sp/>&amp;blockR);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="ref_8c_1a4109a2142513c6e3fc7441fdfa64a25f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ref_8c_1a4109a2142513c6e3fc7441fdfa64a25f" kindref="member">generate_addresses</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__position__t" kindref="compound">argon2_position_t</ref><sp/>*position,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>*pseudo_rands)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>zero_block,<sp/>input_block,<sp/>address_block;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1a7115f6986a42420746ebdd264404a05c" kindref="member">init_block_value</ref>(&amp;zero_block,<sp/>0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1a7115f6986a42420746ebdd264404a05c" kindref="member">init_block_value</ref>(&amp;input_block,<sp/>0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8c_1a7115f6986a42420746ebdd264404a05c" kindref="member">init_block_value</ref>(&amp;address_block,<sp/>0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>position<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[0]<sp/>=<sp/>position-&gt;<ref refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" kindref="member">pass</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[1]<sp/>=<sp/>position-&gt;<ref refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" kindref="member">lane</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[2]<sp/>=<sp/>position-&gt;<ref refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" kindref="member">slice</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[3]<sp/>=<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a40e32466250c3eaa25458b89050f1d0d" kindref="member">memory_blocks</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[4]<sp/>=<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a2783db68ff7f7801616f7c78e319ffd5" kindref="member">passes</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[5]<sp/>=<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" kindref="member">segment_length</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca3e55548ad9759ef13649dc00ec9043f9" kindref="member">ARGON2_ADDRESSES_IN_BLOCK</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[6]++;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ref_8c_1a815c1bdb75f515c4b6bf35bcbf185c06" kindref="member">fill_block</ref>(&amp;zero_block,<sp/>&amp;input_block,<sp/>&amp;address_block);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ref_8c_1a815c1bdb75f515c4b6bf35bcbf185c06" kindref="member">fill_block</ref>(&amp;zero_block,<sp/>&amp;address_block,<sp/>&amp;address_block);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_rands[i]<sp/>=<sp/>address_block.<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[i<sp/>%<sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca3e55548ad9759ef13649dc00ec9043f9" kindref="member">ARGON2_ADDRESSES_IN_BLOCK</ref>];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="ref_8c_1a7ba7d65e159824e7011eb23068e15f72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ref_8c_1a7ba7d65e159824e7011eb23068e15f72" kindref="member">fill_segment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_argon2__position__t" kindref="compound">argon2_position_t</ref><sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>*ref_block<sp/>=<sp/>NULL,<sp/>*curr_block<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>pseudo_rand,<sp/>ref_index,<sp/>ref_lane;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>prev_offset,<sp/>curr_offset;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>starting_index;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_independent_addressing;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pseudo-random<sp/>values<sp/>that<sp/>determine<sp/>the<sp/>reference<sp/>block<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>*pseudo_rands<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>data_independent_addressing<sp/>=<sp/>(instance-&gt;<ref refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" kindref="member">type</ref><sp/>==<sp/><ref refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695ad879f03535165a16f3040eeae7eedefa" kindref="member">Argon2_i</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>pseudo_rands<sp/>=</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<sp/>*<sp/>(instance-&gt;<ref refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" kindref="member">segment_length</ref>));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pseudo_rands<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_independent_addressing)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ref_8c_1a4109a2142513c6e3fc7441fdfa64a25f" kindref="member">generate_addresses</ref>(instance,<sp/>&amp;position,<sp/>pseudo_rands);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>starting_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0<sp/>==<sp/>position.<ref refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" kindref="member">pass</ref>)<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>position.<ref refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" kindref="member">slice</ref>))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>starting_index<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>already<sp/>generated<sp/>the<sp/>first<sp/>two<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>of<sp/>the<sp/>current<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_offset<sp/>=<sp/>position.<ref refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" kindref="member">lane</ref><sp/>*<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" kindref="member">lane_length</ref><sp/>+</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position.<ref refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" kindref="member">slice</ref><sp/>*<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" kindref="member">segment_length</ref><sp/>+<sp/>starting_index;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>curr_offset<sp/>%<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" kindref="member">lane_length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>block<sp/>in<sp/>this<sp/>lane<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_offset<sp/>=<sp/>curr_offset<sp/>+<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" kindref="member">lane_length</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Previous<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_offset<sp/>=<sp/>curr_offset<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>starting_index;<sp/>i<sp/>&lt;<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" kindref="member">segment_length</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i,<sp/>++curr_offset,<sp/>++prev_offset)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*1.1<sp/>Rotating<sp/>prev_offset<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_offset<sp/>%<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" kindref="member">lane_length</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_offset<sp/>=<sp/>curr_offset<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.2<sp/>Computing<sp/>the<sp/>index<sp/>of<sp/>the<sp/>reference<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.2.1<sp/>Taking<sp/>pseudo-random<sp/>value<sp/>from<sp/>the<sp/>previous<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_independent_addressing)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_rand<sp/>=<sp/>pseudo_rands[i];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_rand<sp/>=<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" kindref="member">memory</ref>[prev_offset].<ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[0];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.2.2<sp/>Computing<sp/>the<sp/>lane<sp/>of<sp/>the<sp/>reference<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_lane<sp/>=<sp/>((pseudo_rand<sp/>&gt;&gt;<sp/>32))<sp/>%<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" kindref="member">lanes</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((position.<ref refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" kindref="member">pass</ref><sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(position.<ref refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" kindref="member">slice</ref><sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can<sp/>not<sp/>reference<sp/>other<sp/>lanes<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_lane<sp/>=<sp/>position.<ref refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" kindref="member">lane</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.2.3<sp/>Computing<sp/>the<sp/>number<sp/>of<sp/>possible<sp/>reference<sp/>block<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>lane.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position.<ref refid="struct_argon2__position__t_1afb869bff35a0933daf00575b47dad939" kindref="member">index</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_index<sp/>=<sp/><ref refid="core_8c_1a67f6f4720426f8e34553e2f1608f70bf" kindref="member">index_alpha</ref>(instance,<sp/>&amp;position,<sp/>pseudo_rand<sp/>&amp;<sp/>0xFFFFFFFF,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_lane<sp/>==<sp/>position.<ref refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" kindref="member">lane</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>Creating<sp/>a<sp/>new<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_block<sp/>=</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" kindref="member">memory</ref><sp/>+<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" kindref="member">lane_length</ref><sp/>*<sp/>ref_lane<sp/>+<sp/>ref_index;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_block<sp/>=<sp/>instance-&gt;<ref refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" kindref="member">memory</ref><sp/>+<sp/>curr_offset;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ref_8c_1a815c1bdb75f515c4b6bf35bcbf185c06" kindref="member">fill_block</ref>(instance-&gt;<ref refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" kindref="member">memory</ref><sp/>+<sp/>prev_offset,<sp/>ref_block,<sp/>curr_block);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>free(pseudo_rands);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/crypto/argon2/ref.c"/>
  </compounddef>
</doxygen>
