<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="keystore_8cpp" kind="file" language="C++">
    <compoundname>keystore.cpp</compoundname>
    <includes refid="keystore_8h" local="yes">keystore.h</includes>
    <incdepgraph>
      <node id="6462">
        <label>list</label>
      </node>
      <node id="6415">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="6461">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="6428" relation="include">
        </childnode>
        <childnode refid="6412" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
      </node>
      <node id="6446">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="6431">
        <label>limits</label>
      </node>
      <node id="6440">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6412" relation="include">
        </childnode>
      </node>
      <node id="6441">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="6442" relation="include">
        </childnode>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6418" relation="include">
        </childnode>
      </node>
      <node id="6449">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6450" relation="include">
        </childnode>
        <childnode refid="6451" relation="include">
        </childnode>
        <childnode refid="6420" relation="include">
        </childnode>
        <childnode refid="6452" relation="include">
        </childnode>
        <childnode refid="6454" relation="include">
        </childnode>
        <childnode refid="6474" relation="include">
        </childnode>
      </node>
      <node id="6473">
        <label>openssl/rand.h</label>
      </node>
      <node id="6434">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="6423">
        <label>assert.h</label>
      </node>
      <node id="6448">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="6435">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="6436" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
      </node>
      <node id="6417">
        <label>sys/mman.h</label>
      </node>
      <node id="6412">
        <label>stdlib.h</label>
      </node>
      <node id="6450">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="6472">
        <label>openssl/crypto.h</label>
      </node>
      <node id="6468">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="6437">
        <label>openssl/sha.h</label>
      </node>
      <node id="6430">
        <label>cassert</label>
      </node>
      <node id="6425">
        <label>stdexcept</label>
      </node>
      <node id="6454">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="6455" relation="include">
        </childnode>
        <childnode refid="6456" relation="include">
        </childnode>
        <childnode refid="6457" relation="include">
        </childnode>
        <childnode refid="6428" relation="include">
        </childnode>
        <childnode refid="6458" relation="include">
        </childnode>
        <childnode refid="6461" relation="include">
        </childnode>
        <childnode refid="6416" relation="include">
        </childnode>
        <childnode refid="6462" relation="include">
        </childnode>
        <childnode refid="6463" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6464" relation="include">
        </childnode>
        <childnode refid="6465" relation="include">
        </childnode>
        <childnode refid="6466" relation="include">
        </childnode>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6468" relation="include">
        </childnode>
        <childnode refid="6469" relation="include">
        </childnode>
        <childnode refid="6470" relation="include">
        </childnode>
        <childnode refid="6471" relation="include">
        </childnode>
        <childnode refid="6472" relation="include">
        </childnode>
        <childnode refid="6473" relation="include">
        </childnode>
        <childnode refid="6453" relation="include">
        </childnode>
        <childnode refid="6426" relation="include">
        </childnode>
      </node>
      <node id="6467">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="6414">
        <label>string</label>
      </node>
      <node id="6416">
        <label>map</label>
      </node>
      <node id="6464">
        <label>boost/thread.hpp</label>
      </node>
      <node id="6442">
        <label>stddef.h</label>
      </node>
      <node id="6451">
        <label>boost/variant.hpp</label>
      </node>
      <node id="6428">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
        <childnode refid="6416" relation="include">
        </childnode>
        <childnode refid="6429" relation="include">
        </childnode>
        <childnode refid="6430" relation="include">
        </childnode>
        <childnode refid="6431" relation="include">
        </childnode>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6424" relation="include">
        </childnode>
        <childnode refid="6432" relation="include">
        </childnode>
        <childnode refid="6433" relation="include">
        </childnode>
        <childnode refid="6434" relation="include">
        </childnode>
        <childnode refid="6410" relation="include">
        </childnode>
        <childnode refid="6435" relation="include">
        </childnode>
      </node>
      <node id="6418">
        <label>limits.h</label>
      </node>
      <node id="6445">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="6457">
        <label>sys/resource.h</label>
      </node>
      <node id="6469">
        <label>openssl/bio.h</label>
      </node>
      <node id="6477">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="6408">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="6409" relation="include">
        </childnode>
        <childnode refid="6420" relation="include">
        </childnode>
        <childnode refid="6444" relation="include">
        </childnode>
        <childnode refid="6449" relation="include">
        </childnode>
        <childnode refid="6477" relation="include">
        </childnode>
        <childnode refid="6451" relation="include">
        </childnode>
      </node>
      <node id="6421">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="6422" relation="include">
        </childnode>
        <childnode refid="6428" relation="include">
        </childnode>
        <childnode refid="6437" relation="include">
        </childnode>
        <childnode refid="6438" relation="include">
        </childnode>
        <childnode refid="6439" relation="include">
        </childnode>
        <childnode refid="6440" relation="include">
        </childnode>
        <childnode refid="6441" relation="include">
        </childnode>
        <childnode refid="6443" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
      </node>
      <node id="6474">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="6454" relation="include">
        </childnode>
        <childnode refid="6428" relation="include">
        </childnode>
        <childnode refid="6412" relation="include">
        </childnode>
        <childnode refid="6475" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
        <childnode refid="6476" relation="include">
        </childnode>
      </node>
      <node id="6455">
        <label>sys/types.h</label>
      </node>
      <node id="6413">
        <label>string.h</label>
      </node>
      <node id="6436">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="6432">
        <label>cstdio</label>
      </node>
      <node id="6447">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="6471">
        <label>openssl/buffer.h</label>
      </node>
      <node id="6433">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="6466">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="6420">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="6421" relation="include">
        </childnode>
        <childnode refid="6428" relation="include">
        </childnode>
        <childnode refid="6422" relation="include">
        </childnode>
        <childnode refid="6425" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
      </node>
      <node id="6419">
        <label>unistd.h</label>
      </node>
      <node id="6427">
        <label>vector</label>
      </node>
      <node id="6452">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="6428" relation="include">
        </childnode>
        <childnode refid="6422" relation="include">
        </childnode>
        <childnode refid="6453" relation="include">
        </childnode>
        <childnode refid="6425" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
        <childnode refid="6426" relation="include">
        </childnode>
      </node>
      <node id="6438">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="6465">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="6463">
        <label>utility</label>
      </node>
      <node id="6460">
        <label>sstream</label>
      </node>
      <node id="6409">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="6410" relation="include">
        </childnode>
        <childnode refid="6420" relation="include">
        </childnode>
        <childnode refid="6425" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
      </node>
      <node id="6470">
        <label>openssl/evp.h</label>
      </node>
      <node id="6458">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="6430" relation="include">
        </childnode>
        <childnode refid="6459" relation="include">
        </childnode>
        <childnode refid="6460" relation="include">
        </childnode>
        <childnode refid="6425" relation="include">
        </childnode>
      </node>
      <node id="6426">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="6443">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6442" relation="include">
        </childnode>
        <childnode refid="6418" relation="include">
        </childnode>
      </node>
      <node id="6456">
        <label>sys/time.h</label>
      </node>
      <node id="6459">
        <label>iostream</label>
      </node>
      <node id="6422">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="6423" relation="include">
        </childnode>
        <childnode refid="6424" relation="include">
        </childnode>
        <childnode refid="6425" relation="include">
        </childnode>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
      </node>
      <node id="6453">
        <label>openssl/bn.h</label>
      </node>
      <node id="6410">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="6411" relation="include">
        </childnode>
        <childnode refid="6413" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6416" relation="include">
        </childnode>
        <childnode refid="6417" relation="include">
        </childnode>
        <childnode refid="6418" relation="include">
        </childnode>
        <childnode refid="6419" relation="include">
        </childnode>
      </node>
      <node id="6429">
        <label>set</label>
      </node>
      <node id="6407">
        <label>/home/dev/ds-160209/src/keystore.cpp</label>
        <link refid="keystore.cpp"/>
        <childnode refid="6408" relation="include">
        </childnode>
      </node>
      <node id="6439">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6412" relation="include">
        </childnode>
      </node>
      <node id="6475">
        <label>stdio.h</label>
      </node>
      <node id="6411">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="6412" relation="include">
        </childnode>
      </node>
      <node id="6424">
        <label>cstring</label>
      </node>
      <node id="6444">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="6445" relation="include">
        </childnode>
        <childnode refid="6446" relation="include">
        </childnode>
        <childnode refid="6447" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6448" relation="include">
        </childnode>
      </node>
      <node id="6476">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keystore_8h" kindref="compound">keystore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_c_key_store_1aba866c1e71c129e7ac2d5d1e5223c8a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_store_1aba866c1e71c129e7ac2d5d1e5223c8a5" kindref="member">CKeyStore::GetPubKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>&amp;address,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;vchPubKeyOut)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_key_store_1a2dffca468fef2e5da2e42a7c983d968a" kindref="member">GetKey</ref>(address,<sp/>key))</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>vchPubKeyOut<sp/>=<sp/>key.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_c_key_store_1a0b4ca43724cfcc6e2ea70c0baa192750" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_key_store_1a0b4ca43724cfcc6e2ea70c0baa192750" kindref="member">CKeyStore::AddKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>&amp;key)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_key_store_1a1956e4f5860ded321d6f697047d8236a" kindref="member">AddKeyPubKey</ref>(key,<sp/>key.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>());</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_c_basic_key_store_1acc2e33f319de88e88f86b0dc79bdcb65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1acc2e33f319de88e88f86b0dc79bdcb65" kindref="member">CBasicKeyStore::AddKeyPubKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;pubkey)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_basic_key_store_1ac520003e5c3d863bf71fde247c6e0672" kindref="member">mapKeys</ref>[pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_c_basic_key_store_1a56249ce3540398999cd397eeb662e836" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a56249ce3540398999cd397eeb662e836" kindref="member">CBasicKeyStore::AddCScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>redeemScript)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(redeemScript.size()<sp/>&gt;<sp/>MAX_SCRIPT_ELEMENT_SIZE)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CBasicKeyStore::AddCScript()<sp/>:<sp/>redeemScripts<sp/>&gt;<sp/>%i<sp/>bytes<sp/>are<sp/>invalid&quot;</highlight><highlight class="normal">,<sp/>MAX_SCRIPT_ELEMENT_SIZE);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_basic_key_store_1a8e9fa81382129c1535a0ee7b0d9c8f3b" kindref="member">mapScripts</ref>[redeemScript.<ref refid="class_c_script_1a59fd961e1b74202a0951a077b576c0ba" kindref="member">GetID</ref>()]<sp/>=<sp/>redeemScript;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_c_basic_key_store_1a2e21398364927d920b15d3e10171cd97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a2e21398364927d920b15d3e10171cd97" kindref="member">CBasicKeyStore::HaveCScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script_i_d" kindref="compound">CScriptID</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="40"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a8e9fa81382129c1535a0ee7b0d9c8f3b" kindref="member">mapScripts</ref>.count(hash)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_c_basic_key_store_1aa7b10f974cfdc078f55fdb6adf8774a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1aa7b10f974cfdc078f55fdb6adf8774a5" kindref="member">CBasicKeyStore::GetCScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script_i_d" kindref="compound">CScriptID</ref><sp/>&amp;<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>redeemScriptOut)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptMap::const_iterator<sp/>mi<sp/>=<sp/><ref refid="class_c_basic_key_store_1a8e9fa81382129c1535a0ee7b0d9c8f3b" kindref="member">mapScripts</ref>.find(hash);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/><ref refid="class_c_basic_key_store_1a8e9fa81382129c1535a0ee7b0d9c8f3b" kindref="member">mapScripts</ref>.end())</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redeemScriptOut<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_c_basic_key_store_1a2417d0ae4e654c88cf47a1ba5f71b5a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a2417d0ae4e654c88cf47a1ba5f71b5a3" kindref="member">CBasicKeyStore::AddWatchOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>&amp;dest)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_basic_key_store_1ac3391cb491e315403ad9af6afd1313da" kindref="member">setWatchOnly</ref>.insert(dest);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_c_basic_key_store_1a20c0eccf943d6d16e24c6e2fb63fb527" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a20c0eccf943d6d16e24c6e2fb63fb527" kindref="member">CBasicKeyStore::RemoveWatchOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>&amp;dest)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_basic_key_store_1ac3391cb491e315403ad9af6afd1313da" kindref="member">setWatchOnly</ref>.erase(dest);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_c_basic_key_store_1a51d4c7e95cb782d749939d01612926f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a3d89af8d9e9e0bb4eb90f331a638ff6d" kindref="member">CBasicKeyStore::HaveWatchOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>&amp;dest)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1ac3391cb491e315403ad9af6afd1313da" kindref="member">setWatchOnly</ref>.count(dest)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_c_basic_key_store_1a3d89af8d9e9e0bb4eb90f331a638ff6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a3d89af8d9e9e0bb4eb90f331a638ff6d" kindref="member">CBasicKeyStore::HaveWatchOnly</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="78"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_key_store_1a386524ff4a00959b81c195cb39fe307d" kindref="member">cs_KeyStore</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_basic_key_store_1ac3391cb491e315403ad9af6afd1313da" kindref="member">setWatchOnly</ref>.empty());</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/keystore.cpp"/>
  </compounddef>
</doxygen>
