<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="bench__internal_8c" kind="file" language="C++">
    <compoundname>bench_internal.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="secp256k1_8h" local="yes">include/secp256k1.h</includes>
    <includes refid="secp256k1_2src_2util_8h" local="yes">util.h</includes>
    <includes refid="hash__impl_8h" local="yes">hash_impl.h</includes>
    <includes refid="num__impl_8h" local="yes">num_impl.h</includes>
    <includes refid="field__impl_8h" local="yes">field_impl.h</includes>
    <includes refid="group__impl_8h" local="yes">group_impl.h</includes>
    <includes refid="scalar__impl_8h" local="yes">scalar_impl.h</includes>
    <includes refid="ecmult__const__impl_8h" local="yes">ecmult_const_impl.h</includes>
    <includes refid="ecmult__impl_8h" local="yes">ecmult_impl.h</includes>
    <includes refid="bench_8h" local="yes">bench.h</includes>
    <includes refid="secp256k1_8c" local="yes">secp256k1.c</includes>
    <incdepgraph>
      <node id="22156">
        <label>scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="22150" relation="include">
        </childnode>
      </node>
      <node id="22159">
        <label>ecmult_impl.h</label>
        <link refid="ecmult__impl_8h"/>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22160" relation="include">
        </childnode>
      </node>
      <node id="22144">
        <label>stdlib.h</label>
      </node>
      <node id="22155">
        <label>scalar_impl.h</label>
        <link refid="scalar__impl_8h"/>
        <childnode refid="22148" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22156" relation="include">
        </childnode>
      </node>
      <node id="22150">
        <label>num.h</label>
        <link refid="num_8h"/>
      </node>
      <node id="22141">
        <label>include/secp256k1.h</label>
        <link refid="secp256k1_8h"/>
        <childnode refid="22142" relation="include">
        </childnode>
      </node>
      <node id="22154">
        <label>group.h</label>
        <link refid="group_8h"/>
        <childnode refid="22150" relation="include">
        </childnode>
        <childnode refid="22153" relation="include">
        </childnode>
      </node>
      <node id="22146">
        <label>hash_impl.h</label>
        <link refid="hash__impl_8h"/>
        <childnode refid="22147" relation="include">
        </childnode>
        <childnode refid="22144" relation="include">
        </childnode>
        <childnode refid="22145" relation="include">
        </childnode>
        <childnode refid="22148" relation="include">
        </childnode>
      </node>
      <node id="22142">
        <label>stddef.h</label>
      </node>
      <node id="22164">
        <label>secp256k1.c</label>
        <link refid="secp256k1_8c"/>
        <childnode refid="22141" relation="include">
        </childnode>
        <childnode refid="22143" relation="include">
        </childnode>
        <childnode refid="22149" relation="include">
        </childnode>
        <childnode refid="22151" relation="include">
        </childnode>
        <childnode refid="22155" relation="include">
        </childnode>
        <childnode refid="22152" relation="include">
        </childnode>
        <childnode refid="22159" relation="include">
        </childnode>
        <childnode refid="22157" relation="include">
        </childnode>
        <childnode refid="22165" relation="include">
        </childnode>
        <childnode refid="22167" relation="include">
        </childnode>
        <childnode refid="22169" relation="include">
        </childnode>
        <childnode refid="22146" relation="include">
        </childnode>
      </node>
      <node id="22160">
        <label>ecmult.h</label>
        <link refid="ecmult_8h"/>
        <childnode refid="22150" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
      </node>
      <node id="22152">
        <label>group_impl.h</label>
        <link refid="group__impl_8h"/>
        <childnode refid="22148" relation="include">
        </childnode>
        <childnode refid="22150" relation="include">
        </childnode>
        <childnode refid="22153" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
      </node>
      <node id="22148">
        <label>string.h</label>
      </node>
      <node id="22149">
        <label>num_impl.h</label>
        <link refid="num__impl_8h"/>
        <childnode refid="22150" relation="include">
        </childnode>
      </node>
      <node id="22166">
        <label>ecmult_gen.h</label>
        <link refid="ecmult__gen_8h"/>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
      </node>
      <node id="22147">
        <label>hash.h</label>
        <link refid="secp256k1_2src_2hash_8h"/>
        <childnode refid="22144" relation="include">
        </childnode>
        <childnode refid="22145" relation="include">
        </childnode>
      </node>
      <node id="22169">
        <label>eckey_impl.h</label>
        <link refid="eckey__impl_8h"/>
        <childnode refid="22170" relation="include">
        </childnode>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22153" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22166" relation="include">
        </childnode>
      </node>
      <node id="22143">
        <label>util.h</label>
        <link refid="secp256k1_2src_2util_8h"/>
        <childnode refid="22144" relation="include">
        </childnode>
        <childnode refid="22145" relation="include">
        </childnode>
        <childnode refid="22140" relation="include">
        </childnode>
      </node>
      <node id="22157">
        <label>ecmult_const_impl.h</label>
        <link refid="ecmult__const__impl_8h"/>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22158" relation="include">
        </childnode>
        <childnode refid="22159" relation="include">
        </childnode>
      </node>
      <node id="22168">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h"/>
        <childnode refid="22142" relation="include">
        </childnode>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22160" relation="include">
        </childnode>
      </node>
      <node id="22153">
        <label>field.h</label>
        <link refid="field_8h"/>
      </node>
      <node id="22162">
        <label>math.h</label>
      </node>
      <node id="22145">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="22158">
        <label>ecmult_const.h</label>
        <link refid="ecmult__const_8h"/>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
      </node>
      <node id="22151">
        <label>field_impl.h</label>
        <link refid="field__impl_8h"/>
        <childnode refid="22143" relation="include">
        </childnode>
      </node>
      <node id="22163">
        <label>sys/time.h</label>
      </node>
      <node id="22170">
        <label>eckey.h</label>
        <link refid="eckey_8h"/>
        <childnode refid="22142" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22160" relation="include">
        </childnode>
        <childnode refid="22166" relation="include">
        </childnode>
      </node>
      <node id="22139">
        <label>/home/dev/ds-160209/src/secp256k1/src/bench_internal.c</label>
        <link refid="bench_internal.c"/>
        <childnode refid="22140" relation="include">
        </childnode>
        <childnode refid="22141" relation="include">
        </childnode>
        <childnode refid="22143" relation="include">
        </childnode>
        <childnode refid="22146" relation="include">
        </childnode>
        <childnode refid="22149" relation="include">
        </childnode>
        <childnode refid="22151" relation="include">
        </childnode>
        <childnode refid="22152" relation="include">
        </childnode>
        <childnode refid="22155" relation="include">
        </childnode>
        <childnode refid="22157" relation="include">
        </childnode>
        <childnode refid="22159" relation="include">
        </childnode>
        <childnode refid="22161" relation="include">
        </childnode>
        <childnode refid="22164" relation="include">
        </childnode>
      </node>
      <node id="22165">
        <label>ecmult_gen_impl.h</label>
        <link refid="ecmult__gen__impl_8h"/>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22166" relation="include">
        </childnode>
        <childnode refid="22146" relation="include">
        </childnode>
      </node>
      <node id="22167">
        <label>ecdsa_impl.h</label>
        <link refid="ecdsa__impl_8h"/>
        <childnode refid="22156" relation="include">
        </childnode>
        <childnode refid="22153" relation="include">
        </childnode>
        <childnode refid="22154" relation="include">
        </childnode>
        <childnode refid="22160" relation="include">
        </childnode>
        <childnode refid="22166" relation="include">
        </childnode>
        <childnode refid="22168" relation="include">
        </childnode>
      </node>
      <node id="22140">
        <label>stdio.h</label>
      </node>
      <node id="22161">
        <label>bench.h</label>
        <link refid="bench_8h"/>
        <childnode refid="22140" relation="include">
        </childnode>
        <childnode refid="22162" relation="include">
        </childnode>
        <childnode refid="22163" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structbench__inv__t" prot="public">bench_inv_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_setup</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_setup</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="30" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="30" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a0b539623bdc89b13ef2b6c7652eb49ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_scalar_add</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_scalar_add</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="59" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1ae3fb5f28fb450096dcd04f36abfdb462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_scalar_negate</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_scalar_negate</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="68" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1abe9892c7c25aa6262dfd2d3c8eb6cc68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_scalar_sqr</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_scalar_sqr</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="77" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="77" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a01cf2d68b95f3289092b392a96afb45f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_scalar_mul</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_scalar_mul</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="86" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a3514e9903b441b8d32d09a56ea1ab203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_scalar_inverse</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_scalar_inverse</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="108" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a9587e1fb40ba7e4d0c50b1d67419dd0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_scalar_inverse_var</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_scalar_inverse_var</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="118" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1ac3485538e4fa9af40a4cef001232ddd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_field_normalize</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_field_normalize</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="128" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a2c64e320d361391c4173beb301ffedd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_field_normalize_weak</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_field_normalize_weak</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="137" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1af8408941f23caa6b2f966d5ad5a3bcf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_field_mul</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_field_mul</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="146" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="146" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a8254149a8227aa2a8a608a2ad33bfeb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_field_sqr</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_field_sqr</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="155" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="155" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1aadfd2513d7e62f1bea711ca496f8a3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_field_inverse</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_field_inverse</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="164" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="164" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1afe3b788c31c7bb78714db48b2d43fd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_field_inverse_var</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_field_inverse_var</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="174" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="174" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a886402d0f9385791697bf5de08bdccd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_field_sqrt_var</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_field_sqrt_var</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="184" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="184" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a2e04291c03d8680c2c4d55933e8fbe49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_group_double_var</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_group_double_var</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="194" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="194" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a6bedf8eeeb6567d891a777f3828b42e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_group_add_var</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_group_add_var</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="203" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a035c2e84ac8291dcfc8e3cc11c9af781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_group_add_affine</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_group_add_affine</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="212" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="212" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a4964d22380325912e3235e21b5525be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_group_add_affine_var</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_group_add_affine_var</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="221" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="221" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1ac942d1b5df119c9d41304dfa566ddea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_ecmult_wnaf</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_ecmult_wnaf</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="230" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="230" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a3326bba18d9522d84a82ea50974b3811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_wnaf_const</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_wnaf_const</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="240" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="240" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1ac8924b9ed09efcfbc1fd3c0039188d46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_sha256</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_sha256</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="251" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="251" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a85fea17693c6843a3b0c33b693736d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_hmac_sha256</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_hmac_sha256</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="263" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="263" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a6dca5af2be4140aa38f95f36baab0014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_rfc6979_hmac_sha256</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_rfc6979_hmac_sha256</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="275" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="275" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a0267a6fcf26df5e2625c0f93eed876a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_context_verify</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_context_verify</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="286" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="286" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a0d6ae07fc12e8c74ebdcb49871cbfc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_context_sign</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_context_sign</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="294" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int have_flag</definition>
        <argsstring>(int argc, char **argv, char *flag)</argsstring>
        <name>have_flag</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="303" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="303" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="bench__internal_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" line="318" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c" bodystart="318" bodyend="354"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014-2015<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_8h" kindref="compound">include/secp256k1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_2src_2util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hash__impl_8h" kindref="compound">hash_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="num__impl_8h" kindref="compound">num_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="field__impl_8h" kindref="compound">field_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group__impl_8h" kindref="compound">group_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scalar__impl_8h" kindref="compound">scalar_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ecmult__const__impl_8h" kindref="compound">ecmult_const_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ecmult__impl_8h" kindref="compound">ecmult_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bench_8h" kindref="compound">bench.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_8c" kindref="compound">secp256k1.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structbench__inv__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>scalar_x,<sp/><ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>;</highlight></codeline>
<codeline lineno="23" refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__fe" kindref="compound">secp256k1_fe</ref><sp/>fe_x,<sp/><ref refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" kindref="member">fe_y</ref>;</highlight></codeline>
<codeline lineno="24" refid="structbench__inv__t_1a0ff79efc25c6a6157bfe32eb51e231a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__ge" kindref="compound">secp256k1_ge</ref><sp/>ge_x,<sp/><ref refid="structbench__inv__t_1a0ff79efc25c6a6157bfe32eb51e231a3" kindref="member">ge_y</ref>;</highlight></codeline>
<codeline lineno="25" refid="structbench__inv__t_1a3723df1adf93d090562d8e3c1cf9a6c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__gej" kindref="compound">secp256k1_gej</ref><sp/>gej_x,<sp/><ref refid="structbench__inv__t_1a3723df1adf93d090562d8e3c1cf9a6c1" kindref="member">gej_y</ref>;</highlight></codeline>
<codeline lineno="26" refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[64];</highlight></codeline>
<codeline lineno="27" refid="structbench__inv__t_1ad3f27ccce40e43c4d9efd6942b911de1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wnaf[256];</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>init_x[32]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02,<sp/>0x03,<sp/>0x05,<sp/>0x07,<sp/>0x0b,<sp/>0x0d,<sp/>0x11,<sp/>0x13,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x17,<sp/>0x1d,<sp/>0x1f,<sp/>0x25,<sp/>0x29,<sp/>0x2b,<sp/>0x2f,<sp/>0x35,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3b,<sp/>0x3d,<sp/>0x43,<sp/>0x47,<sp/>0x49,<sp/>0x4f,<sp/>0x53,<sp/>0x59,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x61,<sp/>0x65,<sp/>0x67,<sp/>0x6b,<sp/>0x6d,<sp/>0x71,<sp/>0x7f,<sp/>0x83</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>init_y[32]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x82,<sp/>0x83,<sp/>0x85,<sp/>0x87,<sp/>0x8b,<sp/>0x8d,<sp/>0x81,<sp/>0x83,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x97,<sp/>0xad,<sp/>0xaf,<sp/>0xb5,<sp/>0xb9,<sp/>0xbb,<sp/>0xbf,<sp/>0xc5,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xdb,<sp/>0xdd,<sp/>0xe3,<sp/>0xe7,<sp/>0xe9,<sp/>0xef,<sp/>0xf3,<sp/>0xf9,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x11,<sp/>0x15,<sp/>0x17,<sp/>0x1b,<sp/>0x1d,<sp/>0xb1,<sp/>0xbf,<sp/>0xd3</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_set_b32(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>init_x,<sp/>NULL);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_set_b32(&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>,<sp/>init_y,<sp/>NULL);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_fe_set_b32(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>init_x);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_fe_set_b32(&amp;data-&gt;<ref refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" kindref="member">fe_y</ref>,<sp/>init_y);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(secp256k1_ge_set_xo_var(&amp;data-&gt;<ref refid="structbench__inv__t_1a61098b92fed00ae0f9f28707a9651f1d" kindref="member">ge_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(secp256k1_ge_set_xo_var(&amp;data-&gt;<ref refid="structbench__inv__t_1a0ff79efc25c6a6157bfe32eb51e231a3" kindref="member">ge_y</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" kindref="member">fe_y</ref>,<sp/>1));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_gej_set_ge(&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a61098b92fed00ae0f9f28707a9651f1d" kindref="member">ge_x</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_gej_set_ge(&amp;data-&gt;<ref refid="structbench__inv__t_1a3723df1adf93d090562d8e3c1cf9a6c1" kindref="member">gej_y</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a0ff79efc25c6a6157bfe32eb51e231a3" kindref="member">ge_y</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>,<sp/>init_x,<sp/>32);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref><sp/>+<sp/>32,<sp/>init_y,<sp/>32);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="bench__internal_8c_1a0b539623bdc89b13ef2b6c7652eb49ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a0b539623bdc89b13ef2b6c7652eb49ff" kindref="member">bench_scalar_add</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2000000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_add(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="bench__internal_8c_1ae3fb5f28fb450096dcd04f36abfdb462" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1ae3fb5f28fb450096dcd04f36abfdb462" kindref="member">bench_scalar_negate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2000000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_negate(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="bench__internal_8c_1abe9892c7c25aa6262dfd2d3c8eb6cc68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1abe9892c7c25aa6262dfd2d3c8eb6cc68" kindref="member">bench_scalar_sqr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_sqr(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="bench__internal_8c_1a01cf2d68b95f3289092b392a96afb45f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a01cf2d68b95f3289092b392a96afb45f" kindref="member">bench_scalar_mul</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_mul(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ENDOMORPHISM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bench_scalar_split(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>l,<sp/>r;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_split_lambda(&amp;l,<sp/>&amp;r,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_add(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="bench__internal_8c_1a3514e9903b441b8d32d09a56ea1ab203" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a3514e9903b441b8d32d09a56ea1ab203" kindref="member">bench_scalar_inverse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_inverse(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_add(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="bench__internal_8c_1a9587e1fb40ba7e4d0c50b1d67419dd0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a9587e1fb40ba7e4d0c50b1d67419dd0d" kindref="member">bench_scalar_inverse_var</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_inverse_var(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_add(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="bench__internal_8c_1ac3485538e4fa9af40a4cef001232ddd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1ac3485538e4fa9af40a4cef001232ddd3" kindref="member">bench_field_normalize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2000000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_normalize(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="bench__internal_8c_1a2c64e320d361391c4173beb301ffedd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a2c64e320d361391c4173beb301ffedd5" kindref="member">bench_field_normalize_weak</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2000000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_normalize_weak(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="bench__internal_8c_1af8408941f23caa6b2f966d5ad5a3bcf5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1af8408941f23caa6b2f966d5ad5a3bcf5" kindref="member">bench_field_mul</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_mul(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" kindref="member">fe_y</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="bench__internal_8c_1a8254149a8227aa2a8a608a2ad33bfeb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a8254149a8227aa2a8a608a2ad33bfeb0" kindref="member">bench_field_sqr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_sqr(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="bench__internal_8c_1aadfd2513d7e62f1bea711ca496f8a3c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1aadfd2513d7e62f1bea711ca496f8a3c2" kindref="member">bench_field_inverse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_inv(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_add(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" kindref="member">fe_y</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="bench__internal_8c_1afe3b788c31c7bb78714db48b2d43fd60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1afe3b788c31c7bb78714db48b2d43fd60" kindref="member">bench_field_inverse_var</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_inv_var(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_add(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" kindref="member">fe_y</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="bench__internal_8c_1a886402d0f9385791697bf5de08bdccd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a886402d0f9385791697bf5de08bdccd3" kindref="member">bench_field_sqrt_var</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_sqrt_var(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_fe_add(&amp;data-&gt;<ref refid="structbench__inv__t_1a295aac5b6fa7c667c2869472e2512a4b" kindref="member">fe_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1af075523af15e7d92c74dd0748e8227af" kindref="member">fe_y</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="bench__internal_8c_1a2e04291c03d8680c2c4d55933e8fbe49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a2e04291c03d8680c2c4d55933e8fbe49" kindref="member">bench_group_double_var</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_gej_double_var(&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="bench__internal_8c_1a6bedf8eeeb6567d891a777f3828b42e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a6bedf8eeeb6567d891a777f3828b42e6" kindref="member">bench_group_add_var</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_gej_add_var(&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a3723df1adf93d090562d8e3c1cf9a6c1" kindref="member">gej_y</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="bench__internal_8c_1a035c2e84ac8291dcfc8e3cc11c9af781" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a035c2e84ac8291dcfc8e3cc11c9af781" kindref="member">bench_group_add_affine</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_gej_add_ge(&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a0ff79efc25c6a6157bfe32eb51e231a3" kindref="member">ge_y</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="bench__internal_8c_1a4964d22380325912e3235e21b5525be3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a4964d22380325912e3235e21b5525be3" kindref="member">bench_group_add_affine_var</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_gej_add_ge_var(&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1ad800b15a5597e319593b9b5dc216c3e7" kindref="member">gej_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a0ff79efc25c6a6157bfe32eb51e231a3" kindref="member">ge_y</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="bench__internal_8c_1ac942d1b5df119c9d41304dfa566ddea5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1ac942d1b5df119c9d41304dfa566ddea5" kindref="member">bench_ecmult_wnaf</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_ecmult_wnaf(data-&gt;<ref refid="structbench__inv__t_1ad3f27ccce40e43c4d9efd6942b911de1" kindref="member">wnaf</ref>,<sp/>256,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/><ref refid="ecmult__impl_8h_1a6216c81c6adbb8796c55fe0c8d3b6718" kindref="member">WINDOW_A</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_add(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="bench__internal_8c_1a3326bba18d9522d84a82ea50974b3811" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a3326bba18d9522d84a82ea50974b3811" kindref="member">bench_wnaf_const</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_wnaf_const(data-&gt;<ref refid="structbench__inv__t_1ad3f27ccce40e43c4d9efd6942b911de1" kindref="member">wnaf</ref>,<sp/>data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/><ref refid="ecmult__impl_8h_1a6216c81c6adbb8796c55fe0c8d3b6718" kindref="member">WINDOW_A</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_add(&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1afbceac71719c71325b7ad1b126b73734" kindref="member">scalar_x</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__inv__t_1a87f434ca8cb31f90f37dab4099e78822" kindref="member">scalar_y</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="bench__internal_8c_1ac8924b9ed09efcfbc1fd3c0039188d46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1ac8924b9ed09efcfbc1fd3c0039188d46" kindref="member">bench_sha256</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref><sp/>sha;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_initialize(&amp;sha);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_write(&amp;sha,<sp/>data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_finalize(&amp;sha,<sp/>data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="bench__internal_8c_1a85fea17693c6843a3b0c33b693736d15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a85fea17693c6843a3b0c33b693736d15" kindref="member">bench_hmac_sha256</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref><sp/>hmac;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="bench__internal_8c_1a6dca5af2be4140aa38f95f36baab0014" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a6dca5af2be4140aa38f95f36baab0014" kindref="member">bench_rfc6979_hmac_sha256</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref>*)arg;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__rfc6979__hmac__sha256__t" kindref="compound">secp256k1_rfc6979_hmac_sha256_t</ref><sp/>rng;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_rfc6979_hmac_sha256_initialize(&amp;rng,<sp/>data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>,<sp/>64);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_rfc6979_hmac_sha256_generate(&amp;rng,<sp/>data-&gt;<ref refid="structbench__inv__t_1a56475198397964faa420c67fb2af4c7c" kindref="member">data</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="bench__internal_8c_1a0267a6fcf26df5e2625c0f93eed876a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a0267a6fcf26df5e2625c0f93eed876a9" kindref="member">bench_context_verify</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)arg;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_8h_1af8569fb9aa73c0acf46afce4df662950" kindref="member">secp256k1_context_destroy</ref>(<ref refid="secp256k1_8h_1a769d478f352afbb55200e33970533a3c" kindref="member">secp256k1_context_create</ref>(<ref refid="secp256k1_8h_1add20a6c320e247ca7bd524cbc4259d64" kindref="member">SECP256K1_CONTEXT_VERIFY</ref>));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="bench__internal_8c_1a0d6ae07fc12e8c74ebdcb49871cbfc0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a0d6ae07fc12e8c74ebdcb49871cbfc0e" kindref="member">bench_context_sign</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)arg;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_8h_1af8569fb9aa73c0acf46afce4df662950" kindref="member">secp256k1_context_destroy</ref>(<ref refid="secp256k1_8h_1a769d478f352afbb55200e33970533a3c" kindref="member">secp256k1_context_create</ref>(<ref refid="secp256k1_8h_1a0d34fe6baa73d3145f2e376e43de0b15" kindref="member">SECP256K1_CONTEXT_SIGN</ref>));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flag)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argm<sp/>=<sp/>argv<sp/>+<sp/>argc;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>argv++;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv<sp/>==<sp/>argm)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(argv<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>argv<sp/>!=<sp/>argm)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*argv,<sp/>flag)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv++;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="bench__internal_8c_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bench__internal_8c_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__inv__t" kindref="compound">bench_inv_t</ref><sp/>data;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;scalar_add&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a0b539623bdc89b13ef2b6c7652eb49ff" kindref="member">bench_scalar_add</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>2000000);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;negate&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;scalar_negate&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1ae3fb5f28fb450096dcd04f36abfdb462" kindref="member">bench_scalar_negate</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>2000000);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;sqr&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;scalar_sqr&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1abe9892c7c25aa6262dfd2d3c8eb6cc68" kindref="member">bench_scalar_sqr</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;mul&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;scalar_mul&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a01cf2d68b95f3289092b392a96afb45f" kindref="member">bench_scalar_mul</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ENDOMORPHISM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;split&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;scalar_split&quot;</highlight><highlight class="normal">,<sp/>bench_scalar_split,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;inverse&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;scalar_inverse&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a3514e9903b441b8d32d09a56ea1ab203" kindref="member">bench_scalar_inverse</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>2000);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;inverse&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;scalar_inverse_var&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a9587e1fb40ba7e4d0c50b1d67419dd0d" kindref="member">bench_scalar_inverse_var</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>2000);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;field&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;normalize&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;field_normalize&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1ac3485538e4fa9af40a4cef001232ddd3" kindref="member">bench_field_normalize</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>2000000);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;field&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;normalize&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;field_normalize_weak&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a2c64e320d361391c4173beb301ffedd5" kindref="member">bench_field_normalize_weak</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>2000000);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;field&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;sqr&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;field_sqr&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a8254149a8227aa2a8a608a2ad33bfeb0" kindref="member">bench_field_sqr</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;field&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;mul&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;field_mul&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1af8408941f23caa6b2f966d5ad5a3bcf5" kindref="member">bench_field_mul</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;field&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;inverse&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;field_inverse&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1aadfd2513d7e62f1bea711ca496f8a3c2" kindref="member">bench_field_inverse</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;field&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;inverse&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;field_inverse_var&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1afe3b788c31c7bb78714db48b2d43fd60" kindref="member">bench_field_inverse_var</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;field&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;sqrt&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;field_sqrt_var&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a886402d0f9385791697bf5de08bdccd3" kindref="member">bench_field_sqrt_var</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;group_double_var&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a2e04291c03d8680c2c4d55933e8fbe49" kindref="member">bench_group_double_var</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;group_add_var&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a6bedf8eeeb6567d891a777f3828b42e6" kindref="member">bench_group_add_var</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;group_add_affine&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a035c2e84ac8291dcfc8e3cc11c9af781" kindref="member">bench_group_add_affine</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;group_add_affine_var&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a4964d22380325912e3235e21b5525be3" kindref="member">bench_group_add_affine_var</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200000);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;ecmult&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;wnaf&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;wnaf_const&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a3326bba18d9522d84a82ea50974b3811" kindref="member">bench_wnaf_const</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;ecmult&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;wnaf&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;ecmult_wnaf&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1ac942d1b5df119c9d41304dfa566ddea5" kindref="member">bench_ecmult_wnaf</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;hash&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;sha256&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;hash_sha256&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1ac8924b9ed09efcfbc1fd3c0039188d46" kindref="member">bench_sha256</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;hash&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;hmac&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;hash_hmac_sha256&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a85fea17693c6843a3b0c33b693736d15" kindref="member">bench_hmac_sha256</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;hash&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;rng6979&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;hash_rfc6979_hmac_sha256&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a6dca5af2be4140aa38f95f36baab0014" kindref="member">bench_rfc6979_hmac_sha256</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;verify&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;context_verify&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a0267a6fcf26df5e2625c0f93eed876a9" kindref="member">bench_context_verify</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="bench__internal_8c_1a11ad6602b2858a905ba935d8002639db" kindref="member">have_flag</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;sign&quot;</highlight><highlight class="normal">))<sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;context_sign&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__internal_8c_1a0d6ae07fc12e8c74ebdcb49871cbfc0e" kindref="member">bench_context_sign</ref>,<sp/><ref refid="bench__internal_8c_1af48be8297385d0d32de62ae12a07d55c" kindref="member">bench_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>200);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/bench_internal.c"/>
  </compounddef>
</doxygen>
