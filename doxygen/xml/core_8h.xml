<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="core_8h" kind="file" language="C++">
    <compoundname>core.h</compoundname>
    <includes refid="argon2_8h" local="yes">argon2.h</includes>
    <includedby refid="argon2_8c" local="yes">/home/dev/ds-160209/src/crypto/argon2/argon2.c</includedby>
    <includedby refid="core_8c" local="yes">/home/dev/ds-160209/src/crypto/argon2/core.c</includedby>
    <includedby refid="genkat_8c" local="yes">/home/dev/ds-160209/src/crypto/argon2/genkat.c</includedby>
    <includedby refid="opt_8h" local="yes">/home/dev/ds-160209/src/crypto/argon2/opt.h</includedby>
    <includedby refid="ref_8h" local="yes">/home/dev/ds-160209/src/crypto/argon2/ref.h</includedby>
    <includedby refid="run_8c" local="yes">/home/dev/ds-160209/src/crypto/argon2/run.c</includedby>
    <incdepgraph>
      <node id="33454">
        <label>stddef.h</label>
      </node>
      <node id="33455">
        <label>limits.h</label>
      </node>
      <node id="33453">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="33452">
        <label>argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="33453" relation="include">
        </childnode>
        <childnode refid="33454" relation="include">
        </childnode>
        <childnode refid="33455" relation="include">
        </childnode>
      </node>
      <node id="33451">
        <label>/home/dev/ds-160209/src/crypto/argon2/core.h</label>
        <link refid="core.h"/>
        <childnode refid="33452" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="33460">
        <label>/home/dev/ds-160209/src/crypto/argon2/opt.h</label>
        <link refid="opt_8h"/>
        <childnode refid="33461" relation="include">
        </childnode>
      </node>
      <node id="33459">
        <label>/home/dev/ds-160209/src/crypto/argon2/genkat.c</label>
        <link refid="genkat_8c"/>
      </node>
      <node id="33463">
        <label>/home/dev/ds-160209/src/crypto/argon2/ref.c</label>
        <link refid="ref_8c"/>
      </node>
      <node id="33462">
        <label>/home/dev/ds-160209/src/crypto/argon2/ref.h</label>
        <link refid="ref_8h"/>
        <childnode refid="33463" relation="include">
        </childnode>
      </node>
      <node id="33457">
        <label>/home/dev/ds-160209/src/crypto/argon2/argon2.c</label>
        <link refid="argon2_8c"/>
      </node>
      <node id="33464">
        <label>/home/dev/ds-160209/src/crypto/argon2/run.c</label>
        <link refid="run_8c"/>
      </node>
      <node id="33458">
        <label>/home/dev/ds-160209/src/crypto/argon2/core.c</label>
        <link refid="core_8c"/>
      </node>
      <node id="33456">
        <label>/home/dev/ds-160209/src/crypto/argon2/core.h</label>
        <link refid="core.h"/>
        <childnode refid="33457" relation="include">
        </childnode>
        <childnode refid="33458" relation="include">
        </childnode>
        <childnode refid="33459" relation="include">
        </childnode>
        <childnode refid="33460" relation="include">
        </childnode>
        <childnode refid="33462" relation="include">
        </childnode>
        <childnode refid="33464" relation="include">
        </childnode>
      </node>
      <node id="33461">
        <label>/home/dev/ds-160209/src/crypto/argon2/opt.c</label>
        <link refid="opt_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structblock__" prot="public">block_</innerclass>
    <innerclass refid="struct_argon2__instance__t" prot="public">Argon2_instance_t</innerclass>
    <innerclass refid="struct_argon2__position__t" prot="public">Argon2_position_t</innerclass>
    <innerclass refid="struct_argon2__thread__data" prot="public">Argon2_thread_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="core_8h_1abe7f8cd9a0ce69b71567a3870415be66" prot="public" static="no">
        <name>ALIGN</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="24" column="10" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a2f0e75e2f3550734177e96d518a16131" prot="public" static="no">
        <name>CONST_CAST</name>
        <param><defname>x</defname></param>
        <initializer>(x)(uintptr_t)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="27" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="argon2_8h_1a49e50c1bc7f51a1230d1ce7bbcf18f9f" compoundref="argon2_8c" startline="166" endline="239">argon2_hash</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93c" prot="public" static="no">
        <name>argon2_core_constants</name>
        <enumvalue id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7df6eafcd1c55e7d3e8a345df7dc1573" prot="public">
          <name>ARGON2_VERSION_NUMBER</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" prot="public">
          <name>ARGON2_BLOCK_SIZE</name>
          <initializer>= 1024</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cae7f95c31492458d44a7c7511a9212e18" prot="public">
          <name>ARGON2_QWORDS_IN_BLOCK</name>
          <initializer>= ARGON2_BLOCK_SIZE / 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cad77d2fc87fee45d7465b0664d47c3789" prot="public">
          <name>ARGON2_OWORDS_IN_BLOCK</name>
          <initializer>= ARGON2_BLOCK_SIZE / 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca3e55548ad9759ef13649dc00ec9043f9" prot="public">
          <name>ARGON2_ADDRESSES_IN_BLOCK</name>
          <initializer>= 128</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93caf287344a0238ddbec64b9ab12c03facd" prot="public">
          <name>ARGON2_PREHASH_DIGEST_LENGTH</name>
          <initializer>= 64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e78c4d3c85cf3491030e561ff21133b" prot="public">
          <name>ARGON2_PREHASH_SEED_LENGTH</name>
          <initializer>= 72</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.h" bodystart="32" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="core_8h_1ace80c27428e237fe24f54ae915a36133" prot="public" static="no">
        <type>struct <ref refid="structblock__" kindref="compound">block_</ref></type>
        <definition>typedef struct block_  block</definition>
        <argsstring></argsstring>
        <name>block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" prot="public" static="no">
        <type>struct <ref refid="struct_argon2__instance__t" kindref="compound">Argon2_instance_t</ref></type>
        <definition>typedef struct Argon2_instance_t  argon2_instance_t</definition>
        <argsstring></argsstring>
        <name>argon2_instance_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a24aa65731593323bf283524ded8b6cdb" prot="public" static="no">
        <type>struct <ref refid="struct_argon2__position__t" kindref="compound">Argon2_position_t</ref></type>
        <definition>typedef struct Argon2_position_t  argon2_position_t</definition>
        <argsstring></argsstring>
        <name>argon2_position_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a27cd8868d8f007ca6ee66a0239336c33" prot="public" static="no">
        <type>struct <ref refid="struct_argon2__thread__data" kindref="compound">Argon2_thread_data</ref></type>
        <definition>typedef struct Argon2_thread_data  argon2_thread_data</definition>
        <argsstring></argsstring>
        <name>argon2_thread_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="core_8h_1a7115f6986a42420746ebdd264404a05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_block_value</definition>
        <argsstring>(block *b, uint8_t in)</argsstring>
        <name>init_block_value</name>
        <param>
          <type><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="64" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="54" bodyend="54"/>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <referencedby refid="ref_8h_1a4109a2142513c6e3fc7441fdfa64a25f" compoundref="opt_8c" startline="51" endline="84">generate_addresses</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a7c9154420e1de71f92c54207dbfb9f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copy_block</definition>
        <argsstring>(block *dst, const block *src)</argsstring>
        <name>copy_block</name>
        <param>
          <type><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="67" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="56" bodyend="58"/>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cae7f95c31492458d44a7c7511a9212e18" compoundref="core_8h" startline="38">ARGON2_QWORDS_IN_BLOCK</references>
        <referencedby refid="core_8h_1aafd756bf3475038e2eada05bcaf31b18" compoundref="core_8c" startline="127" endline="168">finalize</referencedby>
        <referencedby refid="ref_8h_1a815c1bdb75f515c4b6bf35bcbf185c06" compoundref="ref_8c" startline="25" endline="60">fill_block</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1abd86e6d9a6a744ec69ee9cba596a84fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xor_block</definition>
        <argsstring>(block *dst, const block *src)</argsstring>
        <name>xor_block</name>
        <param>
          <type><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="70" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="60" bodyend="65"/>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cae7f95c31492458d44a7c7511a9212e18" compoundref="core_8h" startline="38">ARGON2_QWORDS_IN_BLOCK</references>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <referencedby refid="core_8h_1aafd756bf3475038e2eada05bcaf31b18" compoundref="core_8c" startline="127" endline="168">finalize</referencedby>
        <referencedby refid="ref_8h_1a815c1bdb75f515c4b6bf35bcbf185c06" compoundref="ref_8c" startline="25" endline="60">fill_block</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a583432693a831e17af94e1c22997b700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocate_memory</definition>
        <argsstring>(block **memory, uint32_t m_cost)</argsstring>
        <name>allocate_memory</name>
        <param>
          <type><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> **</type>
          <declname>memory</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>m_cost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="115" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="82" bodyend="101"/>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a61587718eb9f4006cd9e4d71380fdd85" compoundref="argon2_8h" startline="113">ARGON2_MEMORY_ALLOCATION_ERROR</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" compoundref="argon2_8h" startline="80">ARGON2_OK</references>
        <referencedby refid="core_8h_1ac4f3546c9e156e161179b7cb1b6565e5" compoundref="core_8c" startline="559" endline="604">initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1aecea0a34f254c587bcf1b05a35816488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void secure_wipe_memory</definition>
        <argsstring>(void *v, size_t n)</argsstring>
        <name>secure_wipe_memory</name>
        <param>
          <type>void *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="121" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="103" bodyend="114"/>
        <referencedby refid="core_8h_1a6d372c2918bb6ae9838a25df7167d471" compoundref="core_8c" startline="118" endline="123">clear_memory</referencedby>
        <referencedby refid="core_8h_1aafd756bf3475038e2eada05bcaf31b18" compoundref="core_8c" startline="127" endline="168">finalize</referencedby>
        <referencedby refid="core_8h_1a96c3c9f5727d9f0224b923c723f0ed8e" compoundref="core_8c" startline="462" endline="483">fill_first_blocks</referencedby>
        <referencedby refid="core_8h_1a777bb6205a6ad0da9b85a7c2ae61f7c8" compoundref="core_8c" startline="485" endline="557">initial_hash</referencedby>
        <referencedby refid="core_8h_1ac4f3546c9e156e161179b7cb1b6565e5" compoundref="core_8c" startline="559" endline="604">initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a6d372c2918bb6ae9838a25df7167d471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clear_memory</definition>
        <argsstring>(argon2_instance_t *instance, int clear)</argsstring>
        <name>clear_memory</name>
        <param>
          <type><ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="118" bodyend="123"/>
        <references refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" compoundref="core_8h" startline="79">Argon2_instance_t::memory</references>
        <references refid="core_8c_1a4dddd8d2a28d3d10722ce287579426aa" compoundref="core_8c" startline="103" endline="114">secure_wipe_memory</references>
        <references refid="struct_argon2__instance__t_1a40e32466250c3eaa25458b89050f1d0d" compoundref="core_8h" startline="81">Argon2_instance_t::memory_blocks</references>
        <referencedby refid="core_8h_1aafd756bf3475038e2eada05bcaf31b18" compoundref="core_8c" startline="127" endline="168">finalize</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a2374821cf76a4624e6577b00653094e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_memory</definition>
        <argsstring>(block *memory)</argsstring>
        <name>free_memory</name>
        <param>
          <type><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref> *</type>
          <declname>memory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="125" bodyend="125"/>
        <referencedby refid="core_8h_1aafd756bf3475038e2eada05bcaf31b18" compoundref="core_8c" startline="127" endline="168">finalize</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a67f6f4720426f8e34553e2f1608f70bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t index_alpha</definition>
        <argsstring>(const argon2_instance_t *instance, const argon2_position_t *position, uint32_t pseudo_rand, int same_lane)</argsstring>
        <name>index_alpha</name>
        <param>
          <type>const <ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const <ref refid="core_8h_1a24aa65731593323bf283524ded8b6cdb" kindref="member">argon2_position_t</ref> *</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>pseudo_rand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>same_lane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="170" bodyend="238"/>
        <references refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" compoundref="core_8h" startline="95">Argon2_position_t::pass</references>
        <references refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" compoundref="core_8h" startline="97">Argon2_position_t::slice</references>
        <references refid="struct_argon2__position__t_1afb869bff35a0933daf00575b47dad939" compoundref="core_8h" startline="98">Argon2_position_t::index</references>
        <references refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" compoundref="core_8h" startline="82">Argon2_instance_t::segment_length</references>
        <references refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" compoundref="core_8h" startline="83">Argon2_instance_t::lane_length</references>
        <references refid="argon2_8h_1a0a0791457b23d7c7440b030deef959ba" compoundref="argon2_8h" startline="36">ARGON2_SYNC_POINTS</references>
        <referencedby refid="opt_8c_1a7ba7d65e159824e7011eb23068e15f72" compoundref="opt_8c" startline="86" endline="172">fill_segment</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1afff47dd1eae5498564ec99545dedece8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int validate_inputs</definition>
        <argsstring>(const argon2_context *context)</argsstring>
        <name>validate_inputs</name>
        <param>
          <type>const <ref refid="argon2_8h_1a43c74dc5ed515632feee9b2e1ff3e09f" kindref="member">argon2_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="155" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="333" bodyend="460"/>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a3ec2a0969ef82f440257be8493fbad74" compoundref="argon2_8h" startline="118">ARGON2_INCORRECT_PARAMETER</references>
        <references refid="struct_argon2___context_1a53bc334f5ca86d2ff639abddb9b08177" compoundref="argon2_8h" startline="170">Argon2_Context::out</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9adf4e32314d4d96ecbd53ded9ccf221d4" compoundref="argon2_8h" startline="82">ARGON2_OUTPUT_PTR_NULL</references>
        <references refid="argon2_8h_1a2a22b83de56deb022d2606fbfa74097b" compoundref="argon2_8h" startline="39">ARGON2_MIN_OUTLEN</references>
        <references refid="struct_argon2___context_1a11cb0932b2a6fd6fa0e6f5f5148f3ba9" compoundref="argon2_8h" startline="171">Argon2_Context::outlen</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9afa8596ab853bb11b5ab59c56085243c0" compoundref="argon2_8h" startline="84">ARGON2_OUTPUT_TOO_SHORT</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a8517282911ba40c46e4e7718be3b841c" compoundref="argon2_8h" startline="85">ARGON2_OUTPUT_TOO_LONG</references>
        <references refid="struct_argon2___context_1a0ddb2c07c361a668e1f925f9a2eb6523" compoundref="argon2_8h" startline="173">Argon2_Context::pwd</references>
        <references refid="struct_argon2___context_1a734b6a24aa48806715a5b81d7dfa98c3" compoundref="argon2_8h" startline="174">Argon2_Context::pwdlen</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ac504bc411a2303860302282d60676414" compoundref="argon2_8h" startline="108">ARGON2_PWD_PTR_MISMATCH</references>
        <references refid="argon2_8h_1af7de735fb517b8d2a9352ae47c60407c" compoundref="argon2_8h" startline="58">ARGON2_MIN_PWD_LENGTH</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a5ecc76ae6a9e95477163339ab80b0e7c" compoundref="argon2_8h" startline="87">ARGON2_PWD_TOO_SHORT</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a5a7ef47de184c148345256b7a5234c7f" compoundref="argon2_8h" startline="88">ARGON2_PWD_TOO_LONG</references>
        <references refid="struct_argon2___context_1a36bfd9d93195daafa0d7e4afdbbee1dc" compoundref="argon2_8h" startline="176">Argon2_Context::salt</references>
        <references refid="struct_argon2___context_1a1f151741022a0b25c66c704408522cca" compoundref="argon2_8h" startline="177">Argon2_Context::saltlen</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ae23a0c2b85708add42f4b5bff9210b2c" compoundref="argon2_8h" startline="109">ARGON2_SALT_PTR_MISMATCH</references>
        <references refid="argon2_8h_1a35b00d052de3168a7307af1484281598" compoundref="argon2_8h" startline="66">ARGON2_MIN_SALT_LENGTH</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a7e5c8a5273df41db81a262bbf13cbd4e" compoundref="argon2_8h" startline="90">ARGON2_SALT_TOO_SHORT</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a90732265191dbd3ff3fd743cd6cca138" compoundref="argon2_8h" startline="91">ARGON2_SALT_TOO_LONG</references>
        <references refid="struct_argon2___context_1a7c35fd8bd296f776a9db6278c9bdacb6" compoundref="argon2_8h" startline="179">Argon2_Context::secret</references>
        <references refid="struct_argon2___context_1a9530abd766c77aba4e841445e5c70a08" compoundref="argon2_8h" startline="180">Argon2_Context::secretlen</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ad7830b7924ed1ed6490776f4fb2d653c" compoundref="argon2_8h" startline="110">ARGON2_SECRET_PTR_MISMATCH</references>
        <references refid="argon2_8h_1a62a7d113426c754dfee78aadc38d47a0" compoundref="argon2_8h" startline="70">ARGON2_MIN_SECRET</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a552a95d518c2f860abc2b49b069b1f04" compoundref="argon2_8h" startline="96">ARGON2_SECRET_TOO_SHORT</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ad0636461042e2675cd466087d1a2d5bf" compoundref="argon2_8h" startline="97">ARGON2_SECRET_TOO_LONG</references>
        <references refid="struct_argon2___context_1a20329e319449d710c4f5bf591690b4c4" compoundref="argon2_8h" startline="182">Argon2_Context::ad</references>
        <references refid="struct_argon2___context_1a27f944c49530b5a43d754c1a5ec30918" compoundref="argon2_8h" startline="183">Argon2_Context::adlen</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a65bc9d77682c682a63dea744921baeb7" compoundref="argon2_8h" startline="111">ARGON2_AD_PTR_MISMATCH</references>
        <references refid="argon2_8h_1a6008e0c44a02d3c39b2cf9bc273aeabd" compoundref="argon2_8h" startline="62">ARGON2_MIN_AD_LENGTH</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9adb3cf10189e2158df5c9d7fd079e93bf" compoundref="argon2_8h" startline="93">ARGON2_AD_TOO_SHORT</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a855601d62b56f8ddd7a96ed78a4704af" compoundref="argon2_8h" startline="94">ARGON2_AD_TOO_LONG</references>
        <references refid="argon2_8h_1a932f77627e0163cb2cb0aee55362040a" compoundref="argon2_8h" startline="43">ARGON2_MIN_MEMORY</references>
        <references refid="struct_argon2___context_1a78b6d500cdb208f3b09a10c07716d6ab" compoundref="argon2_8h" startline="186">Argon2_Context::m_cost</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a95283c5b29427895b1e3d23a32b072d1" compoundref="argon2_8h" startline="102">ARGON2_MEMORY_TOO_LITTLE</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ac12be32f11cee03ceb8563d3a24a3433" compoundref="argon2_8h" startline="103">ARGON2_MEMORY_TOO_MUCH</references>
        <references refid="struct_argon2___context_1a8ab1ecf163c039d8db1d9eeb119b6112" compoundref="argon2_8h" startline="187">Argon2_Context::lanes</references>
        <references refid="argon2_8h_1affd5c79b677694e2e3bff6e1cebebd0d" compoundref="argon2_8h" startline="54">ARGON2_MIN_TIME</references>
        <references refid="struct_argon2___context_1adffe97f0527779835c511385dfc5d63d" compoundref="argon2_8h" startline="185">Argon2_Context::t_cost</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ade28c498e3e74a7e19cac4764a419b82" compoundref="argon2_8h" startline="99">ARGON2_TIME_TOO_SMALL</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ab0c762e9641e28d86ff075b3354ac3f3" compoundref="argon2_8h" startline="100">ARGON2_TIME_TOO_LARGE</references>
        <references refid="argon2_8h_1a8805592f8c677578022fcd894a60dd23" compoundref="argon2_8h" startline="28">ARGON2_MIN_LANES</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a18270c6f00c12a6118525492c770ba84" compoundref="argon2_8h" startline="105">ARGON2_LANES_TOO_FEW</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a24259cbe72ac43bf48d93ec07e500be9" compoundref="argon2_8h" startline="106">ARGON2_LANES_TOO_MANY</references>
        <references refid="argon2_8h_1a8cc1e956c3ba8c617bf5a5b1a4b19ca6" compoundref="argon2_8h" startline="32">ARGON2_MIN_THREADS</references>
        <references refid="struct_argon2___context_1a1efec02e4fd164068c7e77ec5f8b5b01" compoundref="argon2_8h" startline="188">Argon2_Context::threads</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ad0a13e1f51f96d4d844cccba84438d7c" compoundref="argon2_8h" startline="123">ARGON2_THREADS_TOO_FEW</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ab2cca39e26a3a359597f35573e0d231d" compoundref="argon2_8h" startline="124">ARGON2_THREADS_TOO_MANY</references>
        <references refid="struct_argon2___context_1aee437e28f004ff3e4a0ea15a7526bf63" compoundref="argon2_8h" startline="190">Argon2_Context::allocate_cbk</references>
        <references refid="struct_argon2___context_1a496ae30b7ad3db25e1a1ef1fbf98ce0b" compoundref="argon2_8h" startline="191">Argon2_Context::free_cbk</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9adeb2d3570eead78c681d323426addff4" compoundref="argon2_8h" startline="115">ARGON2_FREE_MEMORY_CBK_NULL</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9ae83b96dd41db8a7f394d70ab3397c647" compoundref="argon2_8h" startline="116">ARGON2_ALLOCATE_MEMORY_CBK_NULL</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" compoundref="argon2_8h" startline="80">ARGON2_OK</references>
        <referencedby refid="argon2_8h_1a46052a12b5448759fa3b5de616cb783a" compoundref="argon2_8c" startline="109" endline="163">argon2_core</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a777bb6205a6ad0da9b85a7c2ae61f7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initial_hash</definition>
        <argsstring>(uint8_t *blockhash, argon2_context *context, argon2_type type)</argsstring>
        <name>initial_hash</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>blockhash</declname>
        </param>
        <param>
          <type><ref refid="argon2_8h_1a43c74dc5ed515632feee9b2e1ff3e09f" kindref="member">argon2_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="argon2_8h_1af51eac9927f7f234943d076166aacf84" kindref="member">argon2_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="167" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="485" bodyend="557"/>
        <references refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" compoundref="version__set_8cc" startline="256">value</references>
        <references refid="blake2_8h_1a7cefd211bfec58d37d8b67741955ce8a" compoundref="blake2b_8c" startline="74" endline="100">blake2b_init</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93caf287344a0238ddbec64b9ab12c03facd" compoundref="core_8h" startline="47">ARGON2_PREHASH_DIGEST_LENGTH</references>
        <references refid="struct_argon2___context_1a8ab1ecf163c039d8db1d9eeb119b6112" compoundref="argon2_8h" startline="187">Argon2_Context::lanes</references>
        <references refid="blake2_8h_1a1ee160fb796e342c9ee8a99ea0ffab0a" compoundref="blake2b_8c" startline="206" endline="244">blake2b_update</references>
        <references refid="struct_argon2___context_1a11cb0932b2a6fd6fa0e6f5f5148f3ba9" compoundref="argon2_8h" startline="171">Argon2_Context::outlen</references>
        <references refid="struct_argon2___context_1a78b6d500cdb208f3b09a10c07716d6ab" compoundref="argon2_8h" startline="186">Argon2_Context::m_cost</references>
        <references refid="struct_argon2___context_1adffe97f0527779835c511385dfc5d63d" compoundref="argon2_8h" startline="185">Argon2_Context::t_cost</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7df6eafcd1c55e7d3e8a345df7dc1573" compoundref="core_8h" startline="34">ARGON2_VERSION_NUMBER</references>
        <references refid="struct_argon2___context_1a734b6a24aa48806715a5b81d7dfa98c3" compoundref="argon2_8h" startline="174">Argon2_Context::pwdlen</references>
        <references refid="struct_argon2___context_1a0ddb2c07c361a668e1f925f9a2eb6523" compoundref="argon2_8h" startline="173">Argon2_Context::pwd</references>
        <references refid="struct_argon2___context_1a17f2c93463a2d9c0f6017b2d843c6d0c" compoundref="argon2_8h" startline="193">Argon2_Context::flags</references>
        <references refid="argon2_8h_1a682bd9a3712a2d49f022e0936b3ea7e8" compoundref="argon2_8h" startline="73">ARGON2_FLAG_CLEAR_PASSWORD</references>
        <references refid="core_8c_1a4dddd8d2a28d3d10722ce287579426aa" compoundref="core_8c" startline="103" endline="114">secure_wipe_memory</references>
        <references refid="struct_argon2___context_1a1f151741022a0b25c66c704408522cca" compoundref="argon2_8h" startline="177">Argon2_Context::saltlen</references>
        <references refid="struct_argon2___context_1a36bfd9d93195daafa0d7e4afdbbee1dc" compoundref="argon2_8h" startline="176">Argon2_Context::salt</references>
        <references refid="struct_argon2___context_1a9530abd766c77aba4e841445e5c70a08" compoundref="argon2_8h" startline="180">Argon2_Context::secretlen</references>
        <references refid="struct_argon2___context_1a7c35fd8bd296f776a9db6278c9bdacb6" compoundref="argon2_8h" startline="179">Argon2_Context::secret</references>
        <references refid="argon2_8h_1ad1a7a07ada3a442790847d4e56dacf6d" compoundref="argon2_8h" startline="74">ARGON2_FLAG_CLEAR_SECRET</references>
        <references refid="struct_argon2___context_1a27f944c49530b5a43d754c1a5ec30918" compoundref="argon2_8h" startline="183">Argon2_Context::adlen</references>
        <references refid="struct_argon2___context_1a20329e319449d710c4f5bf591690b4c4" compoundref="argon2_8h" startline="182">Argon2_Context::ad</references>
        <references refid="blake2_8h_1ae3265f4a4ba468da48c850ad815bed2d" compoundref="blake2b_8c" startline="246" endline="274">blake2b_final</references>
        <referencedby refid="core_8h_1ac4f3546c9e156e161179b7cb1b6565e5" compoundref="core_8c" startline="559" endline="604">initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a96c3c9f5727d9f0224b923c723f0ed8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_first_blocks</definition>
        <argsstring>(uint8_t *blockhash, const argon2_instance_t *instance)</argsstring>
        <name>fill_first_blocks</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>blockhash</declname>
        </param>
        <param>
          <type>const <ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="176" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="462" bodyend="483"/>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" compoundref="core_8h" startline="37">ARGON2_BLOCK_SIZE</references>
        <references refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" compoundref="core_8h" startline="84">Argon2_instance_t::lanes</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93caf287344a0238ddbec64b9ab12c03facd" compoundref="core_8h" startline="47">ARGON2_PREHASH_DIGEST_LENGTH</references>
        <references refid="blake2_8h_1a3f5be97635c0bbd72359193a301a764c" compoundref="blake2b_8c" startline="315" endline="371">blake2b_long</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e78c4d3c85cf3491030e561ff21133b" compoundref="core_8h" startline="48">ARGON2_PREHASH_SEED_LENGTH</references>
        <references refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" compoundref="core_8h" startline="79">Argon2_instance_t::memory</references>
        <references refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" compoundref="core_8h" startline="83">Argon2_instance_t::lane_length</references>
        <references refid="core_8c_1a4dddd8d2a28d3d10722ce287579426aa" compoundref="core_8c" startline="103" endline="114">secure_wipe_memory</references>
        <referencedby refid="core_8h_1ac4f3546c9e156e161179b7cb1b6565e5" compoundref="core_8c" startline="559" endline="604">initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ac4f3546c9e156e161179b7cb1b6565e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initialize</definition>
        <argsstring>(argon2_instance_t *instance, argon2_context *context)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="argon2_8h_1a43c74dc5ed515632feee9b2e1ff3e09f" kindref="member">argon2_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="188" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="559" bodyend="604"/>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e78c4d3c85cf3491030e561ff21133b" compoundref="core_8h" startline="48">ARGON2_PREHASH_SEED_LENGTH</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" compoundref="argon2_8h" startline="80">ARGON2_OK</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a3ec2a0969ef82f440257be8493fbad74" compoundref="argon2_8h" startline="118">ARGON2_INCORRECT_PARAMETER</references>
        <references refid="struct_argon2___context_1aee437e28f004ff3e4a0ea15a7526bf63" compoundref="argon2_8h" startline="190">Argon2_Context::allocate_cbk</references>
        <references refid="struct_argon2__instance__t_1a40e32466250c3eaa25458b89050f1d0d" compoundref="core_8h" startline="81">Argon2_instance_t::memory_blocks</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" compoundref="core_8h" startline="37">ARGON2_BLOCK_SIZE</references>
        <references refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" compoundref="core_8h" startline="79">Argon2_instance_t::memory</references>
        <references refid="core_8c_1a583432693a831e17af94e1c22997b700" compoundref="core_8c" startline="82" endline="101">allocate_memory</references>
        <references refid="core_8c_1a777bb6205a6ad0da9b85a7c2ae61f7c8" compoundref="core_8c" startline="485" endline="557">initial_hash</references>
        <references refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" compoundref="core_8h" startline="86">Argon2_instance_t::type</references>
        <references refid="core_8c_1a4dddd8d2a28d3d10722ce287579426aa" compoundref="core_8c" startline="103" endline="114">secure_wipe_memory</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93caf287344a0238ddbec64b9ab12c03facd" compoundref="core_8h" startline="47">ARGON2_PREHASH_DIGEST_LENGTH</references>
        <references refid="genkat_8c_1a28a5cfda428fc2ab9dd743f5d44d66a6" compoundref="genkat_8c" startline="21" endline="94">initial_kat</references>
        <references refid="core_8c_1a96c3c9f5727d9f0224b923c723f0ed8e" compoundref="core_8c" startline="462" endline="483">fill_first_blocks</references>
        <referencedby refid="argon2_8h_1a46052a12b5448759fa3b5de616cb783a" compoundref="argon2_8c" startline="109" endline="163">argon2_core</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1aafd756bf3475038e2eada05bcaf31b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void finalize</definition>
        <argsstring>(const argon2_context *context, argon2_instance_t *instance)</argsstring>
        <name>finalize</name>
        <param>
          <type>const <ref refid="argon2_8h_1a43c74dc5ed515632feee9b2e1ff3e09f" kindref="member">argon2_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="201" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="127" bodyend="168"/>
        <references refid="core_8c_1a7c9154420e1de71f92c54207dbfb9f53" compoundref="core_8c" startline="56" endline="58">copy_block</references>
        <references refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" compoundref="core_8h" startline="79">Argon2_instance_t::memory</references>
        <references refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" compoundref="core_8h" startline="83">Argon2_instance_t::lane_length</references>
        <references refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" compoundref="core_8h" startline="84">Argon2_instance_t::lanes</references>
        <references refid="core_8c_1abd86e6d9a6a744ec69ee9cba596a84fb" compoundref="core_8c" startline="60" endline="65">xor_block</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" compoundref="core_8h" startline="37">ARGON2_BLOCK_SIZE</references>
        <references refid="blake2_8h_1a3f5be97635c0bbd72359193a301a764c" compoundref="blake2b_8c" startline="315" endline="371">blake2b_long</references>
        <references refid="struct_argon2___context_1a53bc334f5ca86d2ff639abddb9b08177" compoundref="argon2_8h" startline="170">Argon2_Context::out</references>
        <references refid="struct_argon2___context_1a11cb0932b2a6fd6fa0e6f5f5148f3ba9" compoundref="argon2_8h" startline="171">Argon2_Context::outlen</references>
        <references refid="core_8c_1a4dddd8d2a28d3d10722ce287579426aa" compoundref="core_8c" startline="103" endline="114">secure_wipe_memory</references>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <references refid="genkat_8c_1ae9f51a4f9ebe1b42c724153dae1e181e" compoundref="genkat_8c" startline="96" endline="107">print_tag</references>
        <references refid="core_8c_1a6d372c2918bb6ae9838a25df7167d471" compoundref="core_8c" startline="118" endline="123">clear_memory</references>
        <references refid="struct_argon2___context_1a17f2c93463a2d9c0f6017b2d843c6d0c" compoundref="argon2_8h" startline="193">Argon2_Context::flags</references>
        <references refid="argon2_8h_1a682bd9a3712a2d49f022e0936b3ea7e8" compoundref="argon2_8h" startline="73">ARGON2_FLAG_CLEAR_PASSWORD</references>
        <references refid="struct_argon2___context_1a496ae30b7ad3db25e1a1ef1fbf98ce0b" compoundref="argon2_8h" startline="191">Argon2_Context::free_cbk</references>
        <references refid="struct_argon2__instance__t_1a40e32466250c3eaa25458b89050f1d0d" compoundref="core_8h" startline="81">Argon2_instance_t::memory_blocks</references>
        <references refid="core_8c_1a2374821cf76a4624e6577b00653094e2" compoundref="core_8c" startline="125" endline="125">free_memory</references>
        <referencedby refid="argon2_8h_1a46052a12b5448759fa3b5de616cb783a" compoundref="argon2_8c" startline="109" endline="163">argon2_core</referencedby>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a7ba7d65e159824e7011eb23068e15f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_segment</definition>
        <argsstring>(const argon2_instance_t *instance, argon2_position_t position)</argsstring>
        <name>fill_segment</name>
        <param>
          <type>const <ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="core_8h_1a24aa65731593323bf283524ded8b6cdb" kindref="member">argon2_position_t</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="210" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/opt.c" bodystart="86" bodyend="172"/>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" compoundref="core_8h" startline="86">Argon2_instance_t::type</references>
        <references refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695ad879f03535165a16f3040eeae7eedefa" compoundref="argon2_8h" startline="197">Argon2_i</references>
        <references refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" compoundref="core_8h" startline="82">Argon2_instance_t::segment_length</references>
        <references refid="opt_8c_1a4109a2142513c6e3fc7441fdfa64a25f" compoundref="opt_8c" startline="51" endline="84">generate_addresses</references>
        <references refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" compoundref="core_8h" startline="95">Argon2_position_t::pass</references>
        <references refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" compoundref="core_8h" startline="97">Argon2_position_t::slice</references>
        <references refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" compoundref="core_8h" startline="96">Argon2_position_t::lane</references>
        <references refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" compoundref="core_8h" startline="83">Argon2_instance_t::lane_length</references>
        <references refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" compoundref="core_8h" startline="79">Argon2_instance_t::memory</references>
        <references refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" compoundref="core_8h" startline="37">ARGON2_BLOCK_SIZE</references>
        <references refid="structblock___1a2dda5556500153c8ad1323b6310bb549" compoundref="core_8h" startline="59">block_::v</references>
        <references refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" compoundref="core_8h" startline="84">Argon2_instance_t::lanes</references>
        <references refid="struct_argon2__position__t_1afb869bff35a0933daf00575b47dad939" compoundref="core_8h" startline="98">Argon2_position_t::index</references>
        <references refid="core_8c_1a67f6f4720426f8e34553e2f1608f70bf" compoundref="core_8c" startline="170" endline="238">index_alpha</references>
        <references refid="opt_8c_1afc518d118f89b23021fbe00ee1da2751" compoundref="opt_8c" startline="24" endline="49">fill_block</references>
      </memberdef>
      <memberdef kind="function" id="core_8h_1afc8e1540c9738230c2a993c9efcf2620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fill_memory_blocks</definition>
        <argsstring>(argon2_instance_t *instance)</argsstring>
        <name>fill_memory_blocks</name>
        <param>
          <type><ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/core.h" line="219" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/core.c" bodystart="252" bodyend="331"/>
        <references refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" compoundref="core_8h" startline="84">Argon2_instance_t::lanes</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a7e45c40b726ab12914c5533c3b76a8f0" compoundref="argon2_8h" startline="132">ARGON2_THREAD_FAIL</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a61587718eb9f4006cd9e4d71380fdd85" compoundref="argon2_8h" startline="113">ARGON2_MEMORY_ALLOCATION_ERROR</references>
        <references refid="struct_argon2__instance__t_1a2783db68ff7f7801616f7c78e319ffd5" compoundref="core_8h" startline="80">Argon2_instance_t::passes</references>
        <references refid="argon2_8h_1a0a0791457b23d7c7440b030deef959ba" compoundref="argon2_8h" startline="36">ARGON2_SYNC_POINTS</references>
        <references refid="struct_argon2__instance__t_1ae44c8933040075bc8b4fc3d15b170a2f" compoundref="core_8h" startline="85">Argon2_instance_t::threads</references>
        <references refid="thread_8c_1a2e67f9a3df17200908ee0801c7e5f1f1" compoundref="thread_8c" startline="19" endline="28">argon2_thread_join</references>
        <references refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" compoundref="core_8h" startline="95">Argon2_position_t::pass</references>
        <references refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" compoundref="core_8h" startline="96">Argon2_position_t::lane</references>
        <references refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" compoundref="core_8h" startline="97">Argon2_position_t::slice</references>
        <references refid="struct_argon2__position__t_1afb869bff35a0933daf00575b47dad939" compoundref="core_8h" startline="98">Argon2_position_t::index</references>
        <references refid="struct_argon2__thread__data_1a54d0463f4eb4d9808383c29bfb5704cf" compoundref="core_8h" startline="103">Argon2_thread_data::instance_ptr</references>
        <references refid="thread_8c_1a17ddfe963b3747e06a8c134f38f58bc1" compoundref="thread_8c" startline="6" endline="17">argon2_thread_create</references>
        <references refid="genkat_8c_1a612941d3015f44d978fbd01598212929" compoundref="genkat_8c" startline="109" endline="126">internal_kat</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" compoundref="argon2_8h" startline="80">ARGON2_OK</references>
        <referencedby refid="argon2_8h_1a46052a12b5448759fa3b5de616cb783a" compoundref="argon2_8c" startline="109" endline="163">argon2_core</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Argon2<sp/>source<sp/>code<sp/>package</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Written<sp/>by<sp/>Daniel<sp/>Dinu<sp/>and<sp/>Dmitry<sp/>Khovratovich,<sp/>2015</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>is<sp/>licensed<sp/>under<sp/>a<sp/>Creative<sp/>Commons<sp/>CC0<sp/>1.0<sp/>License/Waiver.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>CC0<sp/>Public<sp/>Domain<sp/>Dedication<sp/>along</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>with</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>this<sp/>software.<sp/>If<sp/>not,<sp/>see</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>&lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ARGON2_CORE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGON2_CORE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="argon2_8h" kindref="compound">argon2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALIGN(n)<sp/>__declspec(align(16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALIGN(x)<sp/>__attribute__((__aligned__(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="core_8h_1abe7f8cd9a0ce69b71567a3870415be66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALIGN(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="core_8h_1a2f0e75e2f3550734177e96d518a16131" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONST_CAST(x)<sp/>(x)(uintptr_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*************************Argon2<sp/>internal</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>constants**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93c" kindref="member">argon2_core_constants</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Version<sp/>of<sp/>the<sp/>algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7df6eafcd1c55e7d3e8a345df7dc1573" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7df6eafcd1c55e7d3e8a345df7dc1573" kindref="member">ARGON2_VERSION_NUMBER</ref><sp/>=<sp/>0x10,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>block<sp/>size<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" kindref="member">ARGON2_BLOCK_SIZE</ref><sp/>=<sp/>1024,</highlight></codeline>
<codeline lineno="38" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cae7f95c31492458d44a7c7511a9212e18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cae7f95c31492458d44a7c7511a9212e18" kindref="member">ARGON2_QWORDS_IN_BLOCK</ref><sp/>=<sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" kindref="member">ARGON2_BLOCK_SIZE</ref><sp/>/<sp/>8,</highlight></codeline>
<codeline lineno="39" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cad77d2fc87fee45d7465b0664d47c3789" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cad77d2fc87fee45d7465b0664d47c3789" kindref="member">ARGON2_OWORDS_IN_BLOCK</ref><sp/>=<sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e67b2b3fa64292ce300e481924d0f00" kindref="member">ARGON2_BLOCK_SIZE</ref><sp/>/<sp/>16,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>pseudo-random<sp/>values<sp/>generated<sp/>by<sp/>one<sp/>call<sp/>to<sp/>Blake<sp/>in<sp/>Argon2i</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate<sp/>reference<sp/>block<sp/>positions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca3e55548ad9759ef13649dc00ec9043f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca3e55548ad9759ef13649dc00ec9043f9" kindref="member">ARGON2_ADDRESSES_IN_BLOCK</ref><sp/>=<sp/>128,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-hashing<sp/>digest<sp/>length<sp/>and<sp/>its<sp/>extension*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93caf287344a0238ddbec64b9ab12c03facd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93caf287344a0238ddbec64b9ab12c03facd" kindref="member">ARGON2_PREHASH_DIGEST_LENGTH</ref><sp/>=<sp/>64,</highlight></codeline>
<codeline lineno="48" refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e78c4d3c85cf3491030e561ff21133b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93ca7e78c4d3c85cf3491030e561ff21133b" kindref="member">ARGON2_PREHASH_SEED_LENGTH</ref><sp/>=<sp/>72</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*************************Argon2<sp/>internal<sp/>data</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>types**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Structure<sp/>for<sp/>the<sp/>(1KB)<sp/>memory<sp/>block<sp/>implemented<sp/>as<sp/>128<sp/>64-bit<sp/>words.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Memory<sp/>blocks<sp/>can<sp/>be<sp/>copied,<sp/>XORed.<sp/>Internal<sp/>words<sp/>can<sp/>be<sp/>accessed<sp/>by<sp/>[]<sp/>(no</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>bounds<sp/>checking).</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structblock___1a2dda5556500153c8ad1323b6310bb549" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structblock__" kindref="compound">block_</ref><sp/>{<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="structblock___1a2dda5556500153c8ad1323b6310bb549" kindref="member">v</ref>[<ref refid="core_8h_1a7f5657d0a2dc42b3d802b8200858b93cae7f95c31492458d44a7c7511a9212e18" kindref="member">ARGON2_QWORDS_IN_BLOCK</ref>];<sp/>}<sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*****************Functions<sp/>that<sp/>work<sp/>with<sp/>the<sp/>block******************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>each<sp/>byte<sp/>of<sp/>the<sp/>block<sp/>with<sp/>@in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a7115f6986a42420746ebdd264404a05c" kindref="member">init_block_value</ref>(<ref refid="structblock__" kindref="compound">block</ref><sp/>*b,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>in);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>block<sp/>@src<sp/>to<sp/>block<sp/>@dst<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a7c9154420e1de71f92c54207dbfb9f53" kindref="member">copy_block</ref>(<ref refid="structblock__" kindref="compound">block</ref><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>*src);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XOR<sp/>@src<sp/>onto<sp/>@dst<sp/>bytewise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1abd86e6d9a6a744ec69ee9cba596a84fb" kindref="member">xor_block</ref>(<ref refid="structblock__" kindref="compound">block</ref><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>*src);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>Argon2<sp/>instance:<sp/>memory<sp/>pointer,<sp/>number<sp/>of<sp/>passes,<sp/>amount<sp/>of<sp/>memory,<sp/>type,</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>and<sp/>derived<sp/>values.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>Used<sp/>to<sp/>evaluate<sp/>the<sp/>number<sp/>and<sp/>location<sp/>of<sp/>blocks<sp/>to<sp/>construct<sp/>in<sp/>each</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>thread</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="struct_argon2__instance__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_argon2__instance__t" kindref="compound">Argon2_instance_t</ref><sp/>{</highlight></codeline>
<codeline lineno="79" refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block</ref><sp/>*<ref refid="struct_argon2__instance__t_1a7feaf5341041e1c7aca88eb093ad67a3" kindref="member">memory</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="struct_argon2__instance__t_1a2783db68ff7f7801616f7c78e319ffd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__instance__t_1a2783db68ff7f7801616f7c78e319ffd5" kindref="member">passes</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>passes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="struct_argon2__instance__t_1a40e32466250c3eaa25458b89050f1d0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__instance__t_1a40e32466250c3eaa25458b89050f1d0d" kindref="member">memory_blocks</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>blocks<sp/>in<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__instance__t_1a027cbd7a67c433446811f3c0f00099be" kindref="member">segment_length</ref>;</highlight></codeline>
<codeline lineno="83" refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__instance__t_1a91274f0e1d85a39d29d7ab90a44e4c79" kindref="member">lane_length</ref>;</highlight></codeline>
<codeline lineno="84" refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__instance__t_1ad2f436030b823c86269c589d6a923120" kindref="member">lanes</ref>;</highlight></codeline>
<codeline lineno="85" refid="struct_argon2__instance__t_1ae44c8933040075bc8b4fc3d15b170a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__instance__t_1ae44c8933040075bc8b4fc3d15b170a2f" kindref="member">threads</ref>;</highlight></codeline>
<codeline lineno="86" refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="argon2_8h_1af51eac9927f7f234943d076166aacf84" kindref="member">argon2_type</ref><sp/><ref refid="struct_argon2__instance__t_1a5632fb070b91ef79ed3a7f915b032d90" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="87" refid="struct_argon2__instance__t_1a475fcf721a2e26d5239b21eb5fd01375" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__instance__t_1a475fcf721a2e26d5239b21eb5fd01375" kindref="member">print_internals</ref>;<sp/></highlight><highlight class="comment">/*<sp/>whether<sp/>to<sp/>print<sp/>the<sp/>memory<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><ref refid="core_8h_1ac888abc6f5f9faa538ff23dc92b1e1c2" kindref="member">argon2_instance_t</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>Argon2<sp/>position:<sp/>where<sp/>we<sp/>construct<sp/>the<sp/>block<sp/>right<sp/>now.<sp/>Used<sp/>to<sp/>distribute</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>work<sp/>between<sp/>threads.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="struct_argon2__position__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_argon2__position__t" kindref="compound">Argon2_position_t</ref><sp/>{</highlight></codeline>
<codeline lineno="95" refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__position__t_1aa216fa94d8094fe78f18b3979ddfb471" kindref="member">pass</ref>;</highlight></codeline>
<codeline lineno="96" refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__position__t_1ac17e6249186213e0ddbaa1b469df7283" kindref="member">lane</ref>;</highlight></codeline>
<codeline lineno="97" refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><ref refid="struct_argon2__position__t_1a3fba685c73afabb933fb48088fc3c063" kindref="member">slice</ref>;</highlight></codeline>
<codeline lineno="98" refid="struct_argon2__position__t_1afb869bff35a0933daf00575b47dad939" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_argon2__position__t_1afb869bff35a0933daf00575b47dad939" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/><ref refid="core_8h_1a24aa65731593323bf283524ded8b6cdb" kindref="member">argon2_position_t</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*Struct<sp/>that<sp/>holds<sp/>the<sp/>inputs<sp/>for<sp/>thread<sp/>handling<sp/>FillSegment*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="struct_argon2__thread__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_argon2__thread__data" kindref="compound">Argon2_thread_data</ref><sp/>{</highlight></codeline>
<codeline lineno="103" refid="struct_argon2__thread__data_1a54d0463f4eb4d9808383c29bfb5704cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*<ref refid="struct_argon2__thread__data_1a54d0463f4eb4d9808383c29bfb5704cf" kindref="member">instance_ptr</ref>;</highlight></codeline>
<codeline lineno="104" refid="struct_argon2__thread__data_1a4f4c0a70218ac7ac50497b0abb33d439" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_argon2__position__t" kindref="compound">argon2_position_t</ref><sp/><ref refid="struct_argon2__thread__data_1a4f4c0a70218ac7ac50497b0abb33d439" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="core_8h_1a27cd8868d8f007ca6ee66a0239336c33" kindref="member">argon2_thread_data</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*************************Argon2<sp/>core</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>functions**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocates<sp/>memory<sp/>to<sp/>the<sp/>given<sp/>pointer</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@param<sp/>memory<sp/>pointer<sp/>to<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@param<sp/>m_cost<sp/>number<sp/>of<sp/>blocks<sp/>to<sp/>allocate<sp/>in<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>@return<sp/>ARGON2_OK<sp/>if<sp/>@memory<sp/>is<sp/>a<sp/>valid<sp/>pointer<sp/>and<sp/>memory<sp/>is<sp/>allocated</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a583432693a831e17af94e1c22997b700" kindref="member">allocate_memory</ref>(<ref refid="structblock__" kindref="compound">block</ref><sp/>**memory,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>m_cost);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>that<sp/>securely<sp/>cleans<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>@param<sp/>mem<sp/>Pointer<sp/>to<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>@param<sp/>s<sp/>Memory<sp/>size<sp/>in<sp/>bytes</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1aecea0a34f254c587bcf1b05a35816488" kindref="member">secure_wipe_memory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*v,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Clears<sp/>memory</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>@param<sp/>instance<sp/>pointer<sp/>to<sp/>the<sp/>current<sp/>instance</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param<sp/>clear_memory<sp/>indicates<sp/>if<sp/>we<sp/>clear<sp/>the<sp/>memory<sp/>with<sp/>zeros.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a6d372c2918bb6ae9838a25df7167d471" kindref="member">clear_memory</ref>(<ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clear);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deallocates<sp/>memory</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>@param<sp/>memory<sp/>pointer<sp/>to<sp/>the<sp/>blocks</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a2374821cf76a4624e6577b00653094e2" kindref="member">free_memory</ref>(<ref refid="structblock__" kindref="compound">block</ref><sp/>*memory);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>Computes<sp/>absolute<sp/>position<sp/>of<sp/>reference<sp/>block<sp/>in<sp/>the<sp/>lane<sp/>following<sp/>a<sp/>skewed</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>distribution<sp/>and<sp/>using<sp/>a<sp/>pseudo-random<sp/>value<sp/>as<sp/>input</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>@param<sp/>instance<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>instance</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>@param<sp/>position<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>position</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>@param<sp/>pseudo_rand<sp/>32-bit<sp/>pseudo-random<sp/>value<sp/>used<sp/>to<sp/>determine<sp/>the<sp/>position</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>@param<sp/>same_lane<sp/>Indicates<sp/>if<sp/>the<sp/>block<sp/>will<sp/>be<sp/>taken<sp/>from<sp/>the<sp/>current<sp/>lane.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>If<sp/>so<sp/>we<sp/>can<sp/>reference<sp/>the<sp/>current<sp/>segment</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>@pre<sp/>All<sp/>pointers<sp/>must<sp/>be<sp/>valid</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="core_8h_1a67f6f4720426f8e34553e2f1608f70bf" kindref="member">index_alpha</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__position__t" kindref="compound">argon2_position_t</ref><sp/>*position,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>pseudo_rand,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>same_lane);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>Function<sp/>that<sp/>validates<sp/>all<sp/>inputs<sp/>against<sp/>predefined<sp/>restrictions<sp/>and<sp/>return</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>an<sp/>error<sp/>code</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>@param<sp/>context<sp/>Pointer<sp/>to<sp/>current<sp/>Argon2<sp/>context</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@return<sp/>ARGON2_OK<sp/>if<sp/>everything<sp/>is<sp/>all<sp/>right,<sp/>otherwise<sp/>one<sp/>of<sp/>error<sp/>codes</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>(all<sp/>defined<sp/>in<sp/>&lt;argon2.h&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="core_8h_1afff47dd1eae5498564ec99545dedece8" kindref="member">validate_inputs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2___context" kindref="compound">argon2_context</ref><sp/>*context);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>Hashes<sp/>all<sp/>the<sp/>inputs<sp/>into<sp/>@a<sp/>blockhash[PREHASH_DIGEST_LENGTH],<sp/>clears</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>password<sp/>and<sp/>secret<sp/>if<sp/>needed</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/>context<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>Argon2<sp/>internal<sp/>structure<sp/>containing<sp/>memory</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>pointer,<sp/>and<sp/>parameters<sp/>for<sp/>time<sp/>and<sp/>space<sp/>requirements.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/>blockhash<sp/>Buffer<sp/>for<sp/>pre-hashing<sp/>digest</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/>type<sp/>Argon2<sp/>type</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@pre<sp/><sp/><sp/><sp/>@a<sp/>blockhash<sp/>must<sp/>have<sp/>at<sp/>least<sp/>@a<sp/>PREHASH_DIGEST_LENGTH<sp/>bytes</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>allocated</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a777bb6205a6ad0da9b85a7c2ae61f7c8" kindref="member">initial_hash</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*blockhash,<sp/><ref refid="struct_argon2___context" kindref="compound">argon2_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="argon2_8h_1af51eac9927f7f234943d076166aacf84" kindref="member">argon2_type</ref><sp/>type);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>Function<sp/>creates<sp/>first<sp/>2<sp/>blocks<sp/>per<sp/>lane</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@param<sp/>instance<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>instance</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>@param<sp/>blockhash<sp/>Pointer<sp/>to<sp/>the<sp/>pre-hashing<sp/>digest</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@pre<sp/>blockhash<sp/>must<sp/>point<sp/>to<sp/>@a<sp/>PREHASH_SEED_LENGTH<sp/>allocated<sp/>values</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a96c3c9f5727d9f0224b923c723f0ed8e" kindref="member">fill_first_blocks</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*blockhash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>Function<sp/>allocates<sp/>memory,<sp/>hashes<sp/>the<sp/>inputs<sp/>with<sp/>Blake,<sp/><sp/>and<sp/>creates<sp/>first</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>two<sp/>blocks.<sp/>Returns<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>main<sp/>memory<sp/>with<sp/>2<sp/>blocks<sp/>per<sp/>lane</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>initialized</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/>context<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>Argon2<sp/>internal<sp/>structure<sp/>containing<sp/>memory</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>pointer,<sp/>and<sp/>parameters<sp/>for<sp/>time<sp/>and<sp/>space<sp/>requirements.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/>instance<sp/>Current<sp/>Argon2<sp/>instance</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@return<sp/>Zero<sp/>if<sp/>successful,<sp/>-1<sp/>if<sp/>memory<sp/>failed<sp/>to<sp/>allocate.<sp/>@context-&gt;state</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>will<sp/>be<sp/>modified<sp/>if<sp/>successful.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="core_8h_1ac4f3546c9e156e161179b7cb1b6565e5" kindref="member">initialize</ref>(<ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance,<sp/><ref refid="struct_argon2___context" kindref="compound">argon2_context</ref><sp/>*context);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>XORing<sp/>the<sp/>last<sp/>block<sp/>of<sp/>each<sp/>lane,<sp/>hashing<sp/>it,<sp/>making<sp/>the<sp/>tag.<sp/>Deallocates</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>the<sp/>memory.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@param<sp/>context<sp/>Pointer<sp/>to<sp/>current<sp/>Argon2<sp/>context<sp/>(use<sp/>only<sp/>the<sp/>out<sp/>parameters</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>from<sp/>it)</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>@param<sp/>instance<sp/>Pointer<sp/>to<sp/>current<sp/>instance<sp/>of<sp/>Argon2</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>@pre<sp/>instance-&gt;state<sp/>must<sp/>point<sp/>to<sp/>necessary<sp/>amount<sp/>of<sp/>memory</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>@pre<sp/>context-&gt;out<sp/>must<sp/>point<sp/>to<sp/>outlen<sp/>bytes<sp/>of<sp/>memory</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@pre<sp/>if<sp/>context-&gt;free_cbk<sp/>is<sp/>not<sp/>NULL,<sp/>it<sp/>should<sp/>point<sp/>to<sp/>a<sp/>function<sp/>that</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>deallocates<sp/>memory</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1aafd756bf3475038e2eada05bcaf31b18" kindref="member">finalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2___context" kindref="compound">argon2_context</ref><sp/>*context,<sp/><ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>Function<sp/>that<sp/>fills<sp/>the<sp/>segment<sp/>using<sp/>previous<sp/>segments<sp/>also<sp/>from<sp/>other</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>threads</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param<sp/>instance<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>instance</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param<sp/>position<sp/>Current<sp/>position</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@pre<sp/>all<sp/>block<sp/>pointers<sp/>must<sp/>be<sp/>valid</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a7ba7d65e159824e7011eb23068e15f72" kindref="member">fill_segment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_argon2__position__t" kindref="compound">argon2_position_t</ref><sp/>position);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>Function<sp/>that<sp/>fills<sp/>the<sp/>entire<sp/>memory<sp/>t_cost<sp/>times<sp/>based<sp/>on<sp/>the<sp/>first<sp/>two</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>blocks<sp/>in<sp/>each<sp/>lane</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>@param<sp/>instance<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>instance</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@return<sp/>ARGON2_OK<sp/>if<sp/>successful,<sp/>@context-&gt;state</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="core_8h_1afc8e1540c9738230c2a993c9efcf2620" kindref="member">fill_memory_blocks</ref>(<ref refid="struct_argon2__instance__t" kindref="compound">argon2_instance_t</ref><sp/>*instance);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/crypto/argon2/core.h"/>
  </compounddef>
</doxygen>
