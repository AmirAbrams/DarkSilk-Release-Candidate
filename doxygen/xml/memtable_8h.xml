<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="memtable_8h" kind="file" language="C++">
    <compoundname>memtable.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="yes">leveldb/db.h</includes>
    <includes refid="dbformat_8h" local="yes">db/dbformat.h</includes>
    <includes refid="skiplist_8h" local="yes">db/skiplist.h</includes>
    <includes refid="arena_8h" local="yes">util/arena.h</includes>
    <includedby refid="db__impl_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_impl.cc</includedby>
    <includedby refid="memtable_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/memtable.cc</includedby>
    <includedby refid="repair_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/repair.cc</includedby>
    <includedby refid="version__set_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_set.cc</includedby>
    <includedby refid="write__batch_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/write_batch.cc</includedby>
    <includedby refid="write__batch__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc</includedby>
    <includedby refid="table__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/table_test.cc</includedby>
    <incdepgraph>
      <node id="7391">
        <label>db/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="7379" relation="include">
        </childnode>
        <childnode refid="7392" relation="include">
        </childnode>
        <childnode refid="7389" relation="include">
        </childnode>
        <childnode refid="7393" relation="include">
        </childnode>
        <childnode refid="7395" relation="include">
        </childnode>
      </node>
      <node id="7395">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="7375" relation="include">
        </childnode>
      </node>
      <node id="7390">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="7376" relation="include">
        </childnode>
        <childnode refid="7375" relation="include">
        </childnode>
        <childnode refid="7373" relation="include">
        </childnode>
        <childnode refid="7389" relation="include">
        </childnode>
      </node>
      <node id="7379">
        <label>assert.h</label>
      </node>
      <node id="7383">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="7380" relation="include">
        </childnode>
      </node>
      <node id="7393">
        <label>util/arena.h</label>
        <link refid="arena_8h"/>
        <childnode refid="7394" relation="include">
        </childnode>
        <childnode refid="7379" relation="include">
        </childnode>
        <childnode refid="7380" relation="include">
        </childnode>
        <childnode refid="7375" relation="include">
        </childnode>
      </node>
      <node id="7392">
        <label>stdlib.h</label>
      </node>
      <node id="7384">
        <label>db/dbformat.h</label>
        <link refid="dbformat_8h"/>
        <childnode refid="7376" relation="include">
        </childnode>
        <childnode refid="7385" relation="include">
        </childnode>
        <childnode refid="7374" relation="include">
        </childnode>
        <childnode refid="7386" relation="include">
        </childnode>
        <childnode refid="7378" relation="include">
        </childnode>
        <childnode refid="7387" relation="include">
        </childnode>
        <childnode refid="7388" relation="include">
        </childnode>
        <childnode refid="7390" relation="include">
        </childnode>
      </node>
      <node id="7374">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="7375" relation="include">
        </childnode>
        <childnode refid="7376" relation="include">
        </childnode>
        <childnode refid="7377" relation="include">
        </childnode>
        <childnode refid="7383" relation="include">
        </childnode>
      </node>
      <node id="7373">
        <label>string</label>
      </node>
      <node id="7380">
        <label>stddef.h</label>
      </node>
      <node id="7382">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="7373" relation="include">
        </childnode>
        <childnode refid="7378" relation="include">
        </childnode>
      </node>
      <node id="7388">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="7375" relation="include">
        </childnode>
        <childnode refid="7381" relation="include">
        </childnode>
        <childnode refid="7373" relation="include">
        </childnode>
        <childnode refid="7378" relation="include">
        </childnode>
        <childnode refid="7389" relation="include">
        </childnode>
      </node>
      <node id="7381">
        <label>string.h</label>
      </node>
      <node id="7394">
        <label>vector</label>
      </node>
      <node id="7389">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="7381" relation="include">
        </childnode>
      </node>
      <node id="7375">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="7372">
        <label>/home/dev/ds-160209/src/leveldb/db/memtable.h</label>
        <link refid="memtable.h"/>
        <childnode refid="7373" relation="include">
        </childnode>
        <childnode refid="7374" relation="include">
        </childnode>
        <childnode refid="7384" relation="include">
        </childnode>
        <childnode refid="7391" relation="include">
        </childnode>
        <childnode refid="7393" relation="include">
        </childnode>
      </node>
      <node id="7387">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="7375" relation="include">
        </childnode>
        <childnode refid="7383" relation="include">
        </childnode>
        <childnode refid="7382" relation="include">
        </childnode>
      </node>
      <node id="7378">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="7379" relation="include">
        </childnode>
        <childnode refid="7380" relation="include">
        </childnode>
        <childnode refid="7381" relation="include">
        </childnode>
        <childnode refid="7373" relation="include">
        </childnode>
      </node>
      <node id="7376">
        <label>stdio.h</label>
      </node>
      <node id="7386">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="7373" relation="include">
        </childnode>
      </node>
      <node id="7385">
        <label>leveldb/comparator.h</label>
        <link refid="comparator_8h"/>
        <childnode refid="7373" relation="include">
        </childnode>
      </node>
      <node id="7377">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="7378" relation="include">
        </childnode>
        <childnode refid="7382" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7397">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.cc</label>
        <link refid="db__impl_8cc"/>
      </node>
      <node id="7402">
        <label>/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc</label>
        <link refid="write__batch__test_8cc"/>
      </node>
      <node id="7400">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.cc</label>
        <link refid="version__set_8cc"/>
      </node>
      <node id="7399">
        <label>/home/dev/ds-160209/src/leveldb/db/repair.cc</label>
        <link refid="repair_8cc"/>
      </node>
      <node id="7401">
        <label>/home/dev/ds-160209/src/leveldb/db/write_batch.cc</label>
        <link refid="write__batch_8cc"/>
      </node>
      <node id="7396">
        <label>/home/dev/ds-160209/src/leveldb/db/memtable.h</label>
        <link refid="memtable.h"/>
        <childnode refid="7397" relation="include">
        </childnode>
        <childnode refid="7398" relation="include">
        </childnode>
        <childnode refid="7399" relation="include">
        </childnode>
        <childnode refid="7400" relation="include">
        </childnode>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7402" relation="include">
        </childnode>
        <childnode refid="7403" relation="include">
        </childnode>
      </node>
      <node id="7403">
        <label>/home/dev/ds-160209/src/leveldb/table/table_test.cc</label>
        <link refid="table__test_8cc"/>
      </node>
      <node id="7398">
        <label>/home/dev/ds-160209/src/leveldb/db/memtable.cc</label>
        <link refid="memtable_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classleveldb_1_1_mem_table" prot="public">leveldb::MemTable</innerclass>
    <innerclass refid="structleveldb_1_1_mem_table_1_1_key_comparator" prot="private">leveldb::MemTable::KeyComparator</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STORAGE_LEVELDB_DB_MEMTABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORAGE_LEVELDB_DB_MEMTABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2include_2leveldb_2db_8h" kindref="compound">leveldb/db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dbformat_8h" kindref="compound">db/dbformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="skiplist_8h" kindref="compound">db/skiplist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arena_8h" kindref="compound">util/arena.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InternalKeyComparator;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Mutex;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemTableIterator;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classleveldb_1_1_mem_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MemTables<sp/>are<sp/>reference<sp/>counted.<sp/><sp/>The<sp/>initial<sp/>reference<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>zero<sp/>and<sp/>the<sp/>caller<sp/>must<sp/>call<sp/>Ref()<sp/>at<sp/>least<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1a23add92a4a6e5d1521f3b6695dba5c2d" kindref="member">MemTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>&amp;<sp/>comparator);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>reference<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>()<sp/>{<sp/>++refs_;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Drop<sp/>reference<sp/>count.<sp/><sp/>Delete<sp/>if<sp/>no<sp/>more<sp/>references<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>--refs_;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(refs_<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refs_<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>of<sp/>data<sp/>in<sp/>use<sp/>by<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>external<sp/>synchronization<sp/>to<sp/>prevent<sp/>simultaneous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operations<sp/>on<sp/>the<sp/>same<sp/>MemTable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1a667a1ada274201f0bdd3615baf1bd882" kindref="member">ApproximateMemoryUsage</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>iterator<sp/>that<sp/>yields<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>memtable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>caller<sp/>must<sp/>ensure<sp/>that<sp/>the<sp/>underlying<sp/>MemTable<sp/>remains<sp/>live</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>returned<sp/>iterator<sp/>is<sp/>live.<sp/><sp/>The<sp/>keys<sp/>returned<sp/>by<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterator<sp/>are<sp/>internal<sp/>keys<sp/>encoded<sp/>by<sp/>AppendInternalKey<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>db/format.{h,cc}<sp/>module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" kindref="member">NewIterator</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>entry<sp/>into<sp/>memtable<sp/>that<sp/>maps<sp/>key<sp/>to<sp/>value<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>sequence<sp/>number<sp/>and<sp/>with<sp/>the<sp/>specified<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Typically<sp/>value<sp/>will<sp/>be<sp/>empty<sp/>if<sp/>type==kTypeDeletion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1a37bec80954badb2354426aa175e9371f" kindref="member">Add</ref>(<ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/>seq,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" kindref="member">ValueType</ref><sp/>type,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>memtable<sp/>contains<sp/>a<sp/>value<sp/>for<sp/>key,<sp/>store<sp/>it<sp/>in<sp/>*value<sp/>and<sp/>return<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>memtable<sp/>contains<sp/>a<sp/>deletion<sp/>for<sp/>key,<sp/>store<sp/>a<sp/>NotFound()<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>*status<sp/>and<sp/>return<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Else,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1af94f80a5909a440d0675afa68f8765c5" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_lookup_key" kindref="compound">LookupKey</ref>&amp;<sp/>key,<sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>,<sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>~<ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>since<sp/>only<sp/>Unref()<sp/>should<sp/>be<sp/>used<sp/>to<sp/>delete<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">KeyComparator<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref><sp/>comparator;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>KeyComparator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>&amp;<sp/>c)<sp/>:<sp/>comparator(c)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="74" refid="classleveldb_1_1_mem_table_1ad6cb602bccb9af617c8cb348ae693d4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_mem_table_iterator" kindref="compound">MemTableIterator</ref>;</highlight></codeline>
<codeline lineno="75" refid="classleveldb_1_1_mem_table_1ab6427243fb396d56604898725f9f2327" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_mem_table_1ab6427243fb396d56604898725f9f2327" kindref="member">MemTableBackwardIterator</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_skip_list" kindref="compound">SkipList&lt;const char*, KeyComparator&gt;</ref><sp/><ref refid="classleveldb_1_1_skip_list" kindref="compound">Table</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>KeyComparator<sp/><ref refid="merger_8cc_1a29ff5c524642d9eface6bf6b5dec44d3" kindref="member">comparator_</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memenv_8cc_1af5ddacec8db71e6c2253bcb2050a8d2e" kindref="member">refs_</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_arena" kindref="compound">Arena</ref><sp/>arena_;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>Table<sp/><ref refid="cache_8cc_1ae64a918efc86efd2537d69b8e5652d8e" kindref="member">table_</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mem_table_1a23add92a4a6e5d1521f3b6695dba5c2d" kindref="member">MemTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>&amp;);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>&amp;);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>STORAGE_LEVELDB_DB_MEMTABLE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/db/memtable.h"/>
  </compounddef>
</doxygen>
