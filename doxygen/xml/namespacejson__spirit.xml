<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="namespacejson__spirit" kind="namespace" language="C++">
    <compoundname>json_spirit</compoundname>
    <innerclass refid="structjson__spirit_1_1_config__map" prot="public">json_spirit::Config_map</innerclass>
    <innerclass refid="structjson__spirit_1_1_config__vector" prot="public">json_spirit::Config_vector</innerclass>
    <innerclass refid="structjson__spirit_1_1_error__position" prot="public">json_spirit::Error_position</innerclass>
    <innerclass refid="classjson__spirit_1_1_generator" prot="public">json_spirit::Generator</innerclass>
    <innerclass refid="classjson__spirit_1_1_json__grammer" prot="public">json_spirit::Json_grammer</innerclass>
    <innerclass refid="structjson__spirit_1_1_multi__pass__iters" prot="public">json_spirit::Multi_pass_iters</innerclass>
    <innerclass refid="structjson__spirit_1_1_pair__impl" prot="public">json_spirit::Pair_impl</innerclass>
    <innerclass refid="classjson__spirit_1_1_semantic__actions" prot="public">json_spirit::Semantic_actions</innerclass>
    <innerclass refid="classjson__spirit_1_1_stream__reader" prot="public">json_spirit::Stream_reader</innerclass>
    <innerclass refid="classjson__spirit_1_1_stream__reader__thrower" prot="public">json_spirit::Stream_reader_thrower</innerclass>
    <innerclass refid="classjson__spirit_1_1_value__impl" prot="public">json_spirit::Value_impl</innerclass>
    <innernamespace refid="namespacejson__spirit_1_1internal__">json_spirit::internal_</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" prot="public" static="no">
        <name>Value_type</name>
        <enumvalue id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a565d5d50b32d0e652d62aae12baef6b5" prot="public">
          <name>obj_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a8a173a0de09f9f4e59c89abe4a965504" prot="public">
          <name>array_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" prot="public">
          <name>str_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74acb4555092080cd3b93638a2a8b8c6a6f" prot="public">
          <name>bool_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa2975b4fc32d1b1c74976404c7064294" prot="public">
          <name>int_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aefcdb1c0c1803588da76a11ef8bb7b14" prot="public">
          <name>real_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a38ef470443cb345064758efff2e303fc" prot="public">
          <name>null_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="26" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacejson__spirit_1a739353ac8509b778792f15eed140b5e8" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &gt;</type>
        <definition>typedef std::map&lt; std::string, Value &gt; json_spirit::Mapped_obj</definition>
        <argsstring></argsstring>
        <name>Mapped_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_utils.h" line="40" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_utils.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a4cc7fea4369942dbce7b920fe9d62eab" prot="public" static="no">
        <type>std::map&lt; std::wstring, <ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &gt;</type>
        <definition>typedef std::map&lt; std::wstring, wValue &gt; json_spirit::wMapped_obj</definition>
        <argsstring></argsstring>
        <name>wMapped_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_utils.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_utils.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1aaf9079ef41a2fa7db0861c24b89d4254" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector" kindref="compound">Config_vector</ref>&lt; std::string &gt;</type>
        <definition>typedef Config_vector&lt; std::string &gt; json_spirit::Config</definition>
        <argsstring></argsstring>
        <name>Config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="138" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1aa06382368ae0d04aa77534d6f73592c8" kindref="member">Config::Value_type</ref></type>
        <definition>typedef Config::Value_type json_spirit::Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1ae65b82636d991e02baba4eb5ddfbd0d1" kindref="member">Config::Pair_type</ref></type>
        <definition>typedef Config::Pair_type json_spirit::Pair</definition>
        <argsstring></argsstring>
        <name>Pair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1a070c3d1a0aea6da7c24a60400d52f15d" kindref="member">Config::Object_type</ref></type>
        <definition>typedef Config::Object_type json_spirit::Object</definition>
        <argsstring></argsstring>
        <name>Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1af33059c26ec27a5153b53dd4bd312815" kindref="member">Config::Array_type</ref></type>
        <definition>typedef Config::Array_type json_spirit::Array</definition>
        <argsstring></argsstring>
        <name>Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="143" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1ac076d3c2bcc063f3654a053b63ee9268" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector" kindref="compound">Config_vector</ref>&lt; std::wstring &gt;</type>
        <definition>typedef Config_vector&lt; std::wstring &gt; json_spirit::wConfig</definition>
        <argsstring></argsstring>
        <name>wConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="149" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1aa06382368ae0d04aa77534d6f73592c8" kindref="member">wConfig::Value_type</ref></type>
        <definition>typedef wConfig::Value_type json_spirit::wValue</definition>
        <argsstring></argsstring>
        <name>wValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a01eb532cdeea8e5fb47857e67444408c" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1ae65b82636d991e02baba4eb5ddfbd0d1" kindref="member">wConfig::Pair_type</ref></type>
        <definition>typedef wConfig::Pair_type json_spirit::wPair</definition>
        <argsstring></argsstring>
        <name>wPair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="152" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a0f2593cf7c48c581b018a80cd2400c22" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1a070c3d1a0aea6da7c24a60400d52f15d" kindref="member">wConfig::Object_type</ref></type>
        <definition>typedef wConfig::Object_type json_spirit::wObject</definition>
        <argsstring></argsstring>
        <name>wObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="153" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1ae12b0f52e988920d99e90df589d1a551" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__vector_1af33059c26ec27a5153b53dd4bd312815" kindref="member">wConfig::Array_type</ref></type>
        <definition>typedef wConfig::Array_type json_spirit::wArray</definition>
        <argsstring></argsstring>
        <name>wArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a289a50461fb90a7771e9956489ab53d0" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map" kindref="compound">Config_map</ref>&lt; std::string &gt;</type>
        <definition>typedef Config_map&lt; std::string &gt; json_spirit::mConfig</definition>
        <argsstring></argsstring>
        <name>mConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="186" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map_1a1beec86663fb1ca76e98852b93a90c5c" kindref="member">mConfig::Value_type</ref></type>
        <definition>typedef mConfig::Value_type json_spirit::mValue</definition>
        <argsstring></argsstring>
        <name>mValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="188" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a235e5d2ccd2bbf3b05ca082988cd6d33" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map_1a64fd50a8a903e22e3909e83244a0c92f" kindref="member">mConfig::Object_type</ref></type>
        <definition>typedef mConfig::Object_type json_spirit::mObject</definition>
        <argsstring></argsstring>
        <name>mObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="189" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1ad8188045899c36f157d67e13b277fa36" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map_1a2efd6f753201c1c08c30d96e27c192d7" kindref="member">mConfig::Array_type</ref></type>
        <definition>typedef mConfig::Array_type json_spirit::mArray</definition>
        <argsstring></argsstring>
        <name>mArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="190" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a7a9abcf0ae8c9bc1d946c10e935c28c6" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map" kindref="compound">Config_map</ref>&lt; std::wstring &gt;</type>
        <definition>typedef Config_map&lt; std::wstring &gt; json_spirit::wmConfig</definition>
        <argsstring></argsstring>
        <name>wmConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="196" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map_1a1beec86663fb1ca76e98852b93a90c5c" kindref="member">wmConfig::Value_type</ref></type>
        <definition>typedef wmConfig::Value_type json_spirit::wmValue</definition>
        <argsstring></argsstring>
        <name>wmValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="198" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a485c7d9bf9e138b0b89ec61a03dc6c2a" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map_1a64fd50a8a903e22e3909e83244a0c92f" kindref="member">wmConfig::Object_type</ref></type>
        <definition>typedef wmConfig::Object_type json_spirit::wmObject</definition>
        <argsstring></argsstring>
        <name>wmObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="199" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejson__spirit_1a189949a59336840dc8c8d844453a3cd5" prot="public" static="no">
        <type><ref refid="structjson__spirit_1_1_config__map_1a2efd6f753201c1c08c30d96e27c192d7" kindref="member">wmConfig::Array_type</ref></type>
        <definition>typedef wmConfig::Array_type json_spirit::wmArray</definition>
        <argsstring></argsstring>
        <name>wmArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="200" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacejson__spirit_1a535c3aa28f9c7a6ff7493e31141b3175" prot="public" static="no" mutable="no">
        <type>const spirit_namespace::int_parser&lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &gt;</type>
        <definition>const spirit_namespace::int_parser&lt; int64_t &gt; json_spirit::int64_p</definition>
        <argsstring></argsstring>
        <name>int64_p</name>
        <initializer>= spirit_namespace::int_parser &lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>  &gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacejson__spirit_1a316b07479099fbe08a190f1a44707c85" prot="public" static="no" mutable="no">
        <type>const spirit_namespace::uint_parser&lt; <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> &gt;</type>
        <definition>const spirit_namespace::uint_parser&lt; uint64_t &gt; json_spirit::uint64_p</definition>
        <argsstring></argsstring>
        <name>uint64_p</name>
        <initializer>= spirit_namespace::uint_parser&lt; <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> &gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="37" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacejson__spirit_1a9cc24bfbd82c313dd5dde23a2c2dd25c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* json_spirit::Value_type_name[]</definition>
        <argsstring>[]</argsstring>
        <name>Value_type_name</name>
        <initializer>={&quot;obj&quot;, &quot;array&quot;, &quot;str&quot;, &quot;bool&quot;, &quot;int&quot;, &quot;real&quot;, &quot;null&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="27" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(const std::string &amp;s, Value &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a0ed9d1adfd2e5a7a0d6513c84c28a319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::istream &amp;is, Value &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="22" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a5e2c0bb72aebce09905ac59f8622213e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::string::const_iterator &amp;begin, std::string::const_iterator end, Value &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::string::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::string::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="23" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(const std::string &amp;s, Value &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="25" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ab9fc7fcf57980ae8cc83d6ceb22813ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::istream &amp;is, Value &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="26" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a3ca4eb69c9f7eeab6ac872059cbcd9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::string::const_iterator &amp;begin, std::string::const_iterator end, Value &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::string::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::string::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="27" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a538a172b430526e4eb01135f83a1c1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(const std::wstring &amp;s, wValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="31" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1aeafe75d70df613cb617a8a9b084fcb0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::wistream &amp;is, wValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::wistream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ad6621b74ba6446cfda2a18fd1e8aaea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::wstring::const_iterator &amp;begin, std::wstring::const_iterator end, wValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::wstring::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::wstring::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ae08a5a85ec667e48c9600f13feceda76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(const std::wstring &amp;s, wValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a398a27db2887002e93564f3ab06b25e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::wistream &amp;is, wValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::wistream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ac360d2265e5ac8a0263b7961dc2ea589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::wstring::const_iterator &amp;begin, std::wstring::const_iterator end, wValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::wstring::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::wstring::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="37" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a5c5dbf8b42bd01e1bc8b6ee7f6653927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(const std::string &amp;s, mValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="41" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a3be801f0f291800560a2104c66598cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::istream &amp;is, mValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a80aa651af7d7b496a18f80fe591267c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::string::const_iterator &amp;begin, std::string::const_iterator end, mValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::string::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::string::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a6795e273fb7304a083bcb6ad8430cf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(const std::string &amp;s, mValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="45" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ab89d300348df2281cd5f021f19cd02a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::istream &amp;is, mValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="46" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a965fb92985785a8c65837a106f914834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::string::const_iterator &amp;begin, std::string::const_iterator end, mValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::string::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::string::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a40037a316f72030c69378d353352b74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(const std::wstring &amp;s, wmValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a7539d141deb6f3e3e1146d862cd345bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::wistream &amp;is, wmValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::wistream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="52" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1aab9b4ea73ae430b93c108beee0731f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool json_spirit::read</definition>
        <argsstring>(std::wstring::const_iterator &amp;begin, std::wstring::const_iterator end, wmValue &amp;value)</argsstring>
        <name>read</name>
        <param>
          <type>std::wstring::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::wstring::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="53" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a2664a86bf770543bf65dd02ae38b5af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(const std::wstring &amp;s, wmValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="55" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1afd54d0a469fdbc0fae6ce0ed69db00fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::wistream &amp;is, wmValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::wistream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="56" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a33ed25ccb0affbd12914186dccda6c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::read_or_throw</definition>
        <argsstring>(std::wstring::const_iterator &amp;begin, std::wstring::const_iterator end, wmValue &amp;value)</argsstring>
        <name>read_or_throw</name>
        <param>
          <type>std::wstring::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::wstring::const_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a53e80b1bd29d90350b3da6fff580b050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iter_type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool json_spirit::is_eq</definition>
        <argsstring>(Iter_type first, Iter_type last, const char *c_str)</argsstring>
        <name>is_eq</name>
        <param>
          <type>Iter_type</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>last</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="40" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a8344e49f7e655382be49c45cf4d6163b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char_type</type>
          </param>
        </templateparamlist>
        <type>Char_type</type>
        <definition>Char_type json_spirit::hex_to_num</definition>
        <argsstring>(const Char_type c)</argsstring>
        <name>hex_to_num</name>
        <param>
          <type>const Char_type</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="53" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a7219596848f3e2b5428a8526178ba14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char_type</type>
          </param>
          <param>
            <type>class Iter_type</type>
          </param>
        </templateparamlist>
        <type>Char_type</type>
        <definition>Char_type json_spirit::hex_str_to_char</definition>
        <argsstring>(Iter_type &amp;begin)</argsstring>
        <name>hex_str_to_char</name>
        <param>
          <type>Iter_type &amp;</type>
          <declname>begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a2c710514f8ef0633145aa56121c87cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char_type</type>
          </param>
          <param>
            <type>class Iter_type</type>
          </param>
        </templateparamlist>
        <type>Char_type</type>
        <definition>Char_type json_spirit::unicode_str_to_char</definition>
        <argsstring>(Iter_type &amp;begin)</argsstring>
        <name>unicode_str_to_char</name>
        <param>
          <type>Iter_type &amp;</type>
          <declname>begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="71" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="71" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a037ac1ac79edad3a30c21d90c79b7c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::append_esc_char_and_incr_iter</definition>
        <argsstring>(String_type &amp;s, typename String_type::const_iterator &amp;begin, typename String_type::const_iterator end)</argsstring>
        <name>append_esc_char_and_incr_iter</name>
        <param>
          <type>String_type &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>typename String_type::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>typename String_type::const_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="85" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="85" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a32f8593d9468f269cbe9a2555a0a60c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>String_type</type>
        <definition>String_type json_spirit::substitute_esc_chars</definition>
        <argsstring>(typename String_type::const_iterator begin, typename String_type::const_iterator end)</argsstring>
        <name>substitute_esc_chars</name>
        <param>
          <type>typename String_type::const_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>typename String_type::const_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="123" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="123" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a1f9bd28ced5a2e0b84929f439138c91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>String_type</type>
        <definition>String_type json_spirit::get_str_</definition>
        <argsstring>(typename String_type::const_iterator begin, typename String_type::const_iterator end)</argsstring>
        <name>get_str_</name>
        <param>
          <type>typename String_type::const_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>typename String_type::const_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="159" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="159" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string json_spirit::get_str</definition>
        <argsstring>(std::string::const_iterator begin, std::string::const_iterator end)</argsstring>
        <name>get_str</name>
        <param>
          <type>std::string::const_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::string::const_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="172" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ad8f8578288693f4dd36a6f742e649fae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring json_spirit::get_str</definition>
        <argsstring>(std::wstring::const_iterator begin, std::wstring::const_iterator end)</argsstring>
        <name>get_str</name>
        <param>
          <type>std::wstring::const_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::wstring::const_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="177" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a1e84f072e0f58bcfed1b02714d1d54ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
          <param>
            <type>class Iter_type</type>
          </param>
        </templateparamlist>
        <type>String_type</type>
        <definition>String_type json_spirit::get_str</definition>
        <argsstring>(Iter_type begin, Iter_type end)</argsstring>
        <name>get_str</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="183" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a64cacddc2cc8e854f25b4447c610f823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::throw_error</definition>
        <argsstring>(spirit_namespace::position_iterator&lt; Iter_type &gt; i, const std::string &amp;reason)</argsstring>
        <name>throw_error</name>
        <param>
          <type>spirit_namespace::position_iterator&lt; Iter_type &gt;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="356" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a3887adc0d09e15f2ea0de09543f69ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::throw_error</definition>
        <argsstring>(Iter_type i, const std::string &amp;reason)</argsstring>
        <name>throw_error</name>
        <param>
          <type>Iter_type</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="362" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a51fe762aa870e8b669cb7fdde4b8d5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iter_type</type>
          </param>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>Iter_type</type>
        <definition>Iter_type json_spirit::read_range_or_throw</definition>
        <argsstring>(Iter_type begin, Iter_type end, Value_type &amp;value)</argsstring>
        <name>read_range_or_throw</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="518" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="518" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a32818031cba0001699e93fff14c84523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iter_type</type>
          </param>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::add_posn_iter_and_read_range_or_throw</definition>
        <argsstring>(Iter_type begin, Iter_type end, Value_type &amp;value)</argsstring>
        <name>add_posn_iter_and_read_range_or_throw</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="537" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="537" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a7d872b9b58689ef3797d0b56556a3326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iter_type</type>
          </param>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool json_spirit::read_range</definition>
        <argsstring>(Iter_type &amp;begin, Iter_type end, Value_type &amp;value)</argsstring>
        <name>read_range</name>
        <param>
          <type>Iter_type &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="548" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="548" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a7c76113cd38b5ca0e5c24024a52116c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::read_string_or_throw</definition>
        <argsstring>(const String_type &amp;s, Value_type &amp;value)</argsstring>
        <name>read_string_or_throw</name>
        <param>
          <type>const String_type &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="563" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool json_spirit::read_string</definition>
        <argsstring>(const String_type &amp;s, Value_type &amp;value)</argsstring>
        <name>read_string</name>
        <param>
          <type>const String_type &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="569" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="569" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a89befb0829356b903a7379244f1c6a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Istream_type</type>
          </param>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool json_spirit::read_stream</definition>
        <argsstring>(Istream_type &amp;is, Value_type &amp;value)</argsstring>
        <name>read_stream</name>
        <param>
          <type>Istream_type &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="596" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="596" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ac36ae8d0e650f1d2cd0f1b1baf83bbbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Istream_type</type>
          </param>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::read_stream_or_throw</definition>
        <argsstring>(Istream_type &amp;is, Value_type &amp;value)</argsstring>
        <name>read_stream_or_throw</name>
        <param>
          <type>Istream_type &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="604" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="604" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1afeba4f344890a112ac7d993485f0aca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Obj_t</type>
          </param>
          <param>
            <type>class Map_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::obj_to_map</definition>
        <argsstring>(const Obj_t &amp;obj, Map_t &amp;mp_obj)</argsstring>
        <name>obj_to_map</name>
        <param>
          <type>const Obj_t &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Map_t &amp;</type>
          <declname>mp_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_utils.h" line="19" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_utils.h" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a1a00c9c1df066be75ea6bc7be155a22e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Obj_t</type>
          </param>
          <param>
            <type>class Map_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::map_to_obj</definition>
        <argsstring>(const Map_t &amp;mp_obj, Obj_t &amp;obj)</argsstring>
        <name>map_to_obj</name>
        <param>
          <type>const Map_t &amp;</type>
          <declname>mp_obj</declname>
        </param>
        <param>
          <type>Obj_t &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_utils.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_utils.h" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Object_type</type>
          </param>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>const Object_type::value_type::Value_type &amp;</type>
        <definition>const Object_type::value_type::Value_type&amp; json_spirit::find_value</definition>
        <argsstring>(const Object_type &amp;obj, const String_type &amp;name)</argsstring>
        <name>find_value</name>
        <param>
          <type>const Object_type &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const String_type &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_utils.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_utils.h" bodystart="47" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1aaf952c34ac6bef11bec49187a0be04f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>String_type</type>
        <definition>String_type json_spirit::to_str</definition>
        <argsstring>(const char *c_str)</argsstring>
        <name>to_str</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="456" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="456" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ab0495845642137298531065dbf3a50a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write</definition>
        <argsstring>(const Value &amp;value, std::ostream &amp;os)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a12daa479056bf3b6ca0a499d88377dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write_formatted</definition>
        <argsstring>(const Value &amp;value, std::ostream &amp;os)</argsstring>
        <name>write_formatted</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="22" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a58f99b2d0424a2d38ab41613db85ae19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::wstring json_spirit::write</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="23" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1afdfb49009fd564ba2b0b6a1f6a323a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::wstring json_spirit::write_formatted</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>write_formatted</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="24" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a19923564668b16428e81c0ce8153435b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write</definition>
        <argsstring>(const wValue &amp;value, std::wostream &amp;os)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::wostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="28" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a1ca6b5595247770b45ff9ea7eb18ef79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write_formatted</definition>
        <argsstring>(const wValue &amp;value, std::wostream &amp;os)</argsstring>
        <name>write_formatted</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::wostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="29" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1aa52cc05ad3f9da4c32aacf800af9c6c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write</definition>
        <argsstring>(const mValue &amp;value, std::ostream &amp;os)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a29d5386d0e45834f005d09a43c8f2e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write_formatted</definition>
        <argsstring>(const mValue &amp;value, std::ostream &amp;os)</argsstring>
        <name>write_formatted</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1acf65083c68ab2506c337bd830b122c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::wstring json_spirit::write</definition>
        <argsstring>(const mValue &amp;value)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="37" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a8770d920edbc69d90943bc758655213f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::wstring json_spirit::write_formatted</definition>
        <argsstring>(const mValue &amp;value)</argsstring>
        <name>write_formatted</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a2f9bf61dc880999a1ebe35791e23b13c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write</definition>
        <argsstring>(const wmValue &amp;value, std::wostream &amp;os)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::wostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ab0f72757c74b7b0874662433aa9559f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_spirit::write_formatted</definition>
        <argsstring>(const wmValue &amp;value, std::wostream &amp;os)</argsstring>
        <name>write_formatted</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::wostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a7ee656ae3409689f3ec6c60e74e5158f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char json_spirit::to_hex_char</definition>
        <argsstring>(unsigned int c)</argsstring>
        <name>to_hex_char</name>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" line="17" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" bodystart="17" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1abe6464cf2c12f2e474590fb35ea27be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>String_type</type>
        <definition>String_type json_spirit::non_printable_to_string</definition>
        <argsstring>(unsigned int c)</argsstring>
        <name>non_printable_to_string</name>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" line="29" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" bodystart="29" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a159eb9aa99d2bc308935c798cd692981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char_type</type>
          </param>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool json_spirit::add_esc_char</definition>
        <argsstring>(Char_type c, String_type &amp;s)</argsstring>
        <name>add_esc_char</name>
        <param>
          <type>Char_type</type>
          <declname>c</declname>
        </param>
        <param>
          <type>String_type &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" bodystart="47" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a26a0654687c7613fd19d2a7e941b1e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class String_type</type>
          </param>
        </templateparamlist>
        <type>String_type</type>
        <definition>String_type json_spirit::add_esc_chars</definition>
        <argsstring>(const String_type &amp;s)</argsstring>
        <name>add_esc_chars</name>
        <param>
          <type>const String_type &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" line="64" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" bodystart="64" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1a6eea0630f81345600834e8be70d87095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value_type</type>
          </param>
          <param>
            <type>class Ostream_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void json_spirit::write_stream</definition>
        <argsstring>(const Value_type &amp;value, Ostream_type &amp;os, bool pretty)</argsstring>
        <name>write_stream</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Ostream_type &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pretty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" line="231" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1ad4b51f460af6cdec5b128f53f233b0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value_type</type>
          </param>
        </templateparamlist>
        <type>Value_type::String_type</type>
        <definition>Value_type::String_type json_spirit::write_string</definition>
        <argsstring>(const Value_type &amp;value, bool pretty)</argsstring>
        <name>write_string</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pretty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" line="237" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_writer_template.h" bodystart="237" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/json/json_spirit_error_position.h" line="16" column="1"/>
  </compounddef>
</doxygen>
