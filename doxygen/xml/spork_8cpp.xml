<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="spork_8cpp" kind="file" language="C++">
    <compoundname>spork.cpp</compoundname>
    <includes refid="bignum_8h" local="yes">bignum.h</includes>
    <includes refid="sync_8h" local="yes">sync.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <includes refid="key_8h" local="yes">key.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="script_8h" local="yes">script.h</includes>
    <includes refid="base58_8h" local="yes">base58.h</includes>
    <includes refid="protocol_8h" local="yes">protocol.h</includes>
    <includes refid="spork_8h" local="yes">spork.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="stormnode-budget_8h" local="yes">stormnode-budget.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <incdepgraph>
      <node id="23491">
        <label>list</label>
      </node>
      <node id="23447">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="23536">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23534" relation="include">
        </childnode>
      </node>
      <node id="23476">
        <label>netinet/in.h</label>
      </node>
      <node id="23490">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23445" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
      </node>
      <node id="23468">
        <label>arpa/inet.h</label>
      </node>
      <node id="23459">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="23437">
        <label>limits</label>
      </node>
      <node id="23556">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="23506">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23445" relation="include">
        </childnode>
      </node>
      <node id="23555">
        <label>stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23520" relation="include">
        </childnode>
        <childnode refid="23553" relation="include">
        </childnode>
        <childnode refid="23554" relation="include">
        </childnode>
        <childnode refid="23556" relation="include">
        </childnode>
      </node>
      <node id="23524">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="23490" relation="include">
        </childnode>
        <childnode refid="23453" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23525" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23483" relation="include">
        </childnode>
        <childnode refid="23518" relation="include">
        </childnode>
      </node>
      <node id="23507">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="23508" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23449" relation="include">
        </childnode>
      </node>
      <node id="23515">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23465" relation="include">
        </childnode>
        <childnode refid="23516" relation="include">
        </childnode>
        <childnode refid="23514" relation="include">
        </childnode>
        <childnode refid="23430" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23517" relation="include">
        </childnode>
      </node>
      <node id="23467">
        <label>openssl/rand.h</label>
      </node>
      <node id="23545">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="23546" relation="include">
        </childnode>
        <childnode refid="23548" relation="include">
        </childnode>
        <childnode refid="23517" relation="include">
        </childnode>
        <childnode refid="23490" relation="include">
        </childnode>
        <childnode refid="23491" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23492" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23454">
        <label>assert.h</label>
      </node>
      <node id="23442">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="23475">
        <label>net/if.h</label>
      </node>
      <node id="23542">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23543" relation="include">
        </childnode>
        <childnode refid="23552" relation="include">
        </childnode>
      </node>
      <node id="23523">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="23524" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23526" relation="include">
        </childnode>
        <childnode refid="23490" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
      </node>
      <node id="23429">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork.cpp"/>
        <childnode refid="23430" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23520" relation="include">
        </childnode>
        <childnode refid="23480" relation="include">
        </childnode>
        <childnode refid="23521" relation="include">
        </childnode>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23555" relation="include">
        </childnode>
        <childnode refid="23554" relation="include">
        </childnode>
      </node>
      <node id="23554">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="23535">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="23508" relation="include">
        </childnode>
      </node>
      <node id="23461">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="23520">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="23481" relation="include">
        </childnode>
        <childnode refid="23514" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23443" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23451">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="23452" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
      </node>
      <node id="23526">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="23527" relation="include">
        </childnode>
        <childnode refid="23523" relation="include">
        </childnode>
        <childnode refid="23454" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23465" relation="include">
        </childnode>
        <childnode refid="23537" relation="include">
        </childnode>
      </node>
      <node id="23448">
        <label>sys/mman.h</label>
      </node>
      <node id="23445">
        <label>stdlib.h</label>
      </node>
      <node id="23539">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="23540" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23481" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23465" relation="include">
        </childnode>
      </node>
      <node id="23465">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="23501">
        <label>openssl/crypto.h</label>
      </node>
      <node id="23471">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="23472" relation="include">
        </childnode>
        <childnode refid="23448" relation="include">
        </childnode>
        <childnode refid="23473" relation="include">
        </childnode>
        <childnode refid="23474" relation="include">
        </childnode>
        <childnode refid="23475" relation="include">
        </childnode>
        <childnode refid="23476" relation="include">
        </childnode>
        <childnode refid="23468" relation="include">
        </childnode>
        <childnode refid="23477" relation="include">
        </childnode>
        <childnode refid="23449" relation="include">
        </childnode>
        <childnode refid="23478" relation="include">
        </childnode>
        <childnode refid="23450" relation="include">
        </childnode>
        <childnode refid="23479" relation="include">
        </childnode>
      </node>
      <node id="23497">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="23503">
        <label>openssl/sha.h</label>
      </node>
      <node id="23479">
        <label>errno.h</label>
      </node>
      <node id="23436">
        <label>cassert</label>
      </node>
      <node id="23455">
        <label>stdexcept</label>
      </node>
      <node id="23484">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23474" relation="include">
        </childnode>
        <childnode refid="23485" relation="include">
        </childnode>
        <childnode refid="23486" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23487" relation="include">
        </childnode>
        <childnode refid="23490" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23491" relation="include">
        </childnode>
        <childnode refid="23492" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23493" relation="include">
        </childnode>
        <childnode refid="23494" relation="include">
        </childnode>
        <childnode refid="23495" relation="include">
        </childnode>
        <childnode refid="23496" relation="include">
        </childnode>
        <childnode refid="23497" relation="include">
        </childnode>
        <childnode refid="23498" relation="include">
        </childnode>
        <childnode refid="23499" relation="include">
        </childnode>
        <childnode refid="23500" relation="include">
        </childnode>
        <childnode refid="23501" relation="include">
        </childnode>
        <childnode refid="23467" relation="include">
        </childnode>
        <childnode refid="23456" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
      </node>
      <node id="23480">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="23481" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23470" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
      </node>
      <node id="23496">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="23531">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23518" relation="include">
        </childnode>
        <childnode refid="23532" relation="include">
        </childnode>
        <childnode refid="23535" relation="include">
        </childnode>
      </node>
      <node id="23432">
        <label>string</label>
      </node>
      <node id="23544">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="23545" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23445" relation="include">
        </childnode>
        <childnode refid="23540" relation="include">
        </childnode>
        <childnode refid="23524" relation="include">
        </childnode>
        <childnode refid="23549" relation="include">
        </childnode>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23548" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23550" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23517" relation="include">
        </childnode>
      </node>
      <node id="23541">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23445" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
      </node>
      <node id="23434">
        <label>map</label>
      </node>
      <node id="23493">
        <label>boost/thread.hpp</label>
      </node>
      <node id="23482">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="23470" relation="include">
        </childnode>
        <childnode refid="23480" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23483" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23553">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23520" relation="include">
        </childnode>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23483" relation="include">
        </childnode>
      </node>
      <node id="23550">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="23490" relation="include">
        </childnode>
        <childnode refid="23551" relation="include">
        </childnode>
        <childnode refid="23466" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
      </node>
      <node id="23530">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23510" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23495" relation="include">
        </childnode>
        <childnode refid="23531" relation="include">
        </childnode>
        <childnode refid="23536" relation="include">
        </childnode>
      </node>
      <node id="23508">
        <label>stddef.h</label>
      </node>
      <node id="23516">
        <label>boost/variant.hpp</label>
      </node>
      <node id="23478">
        <label>netdb.h</label>
      </node>
      <node id="23472">
        <label>sys/fcntl.h</label>
      </node>
      <node id="23527">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="23528" relation="include">
        </childnode>
      </node>
      <node id="23534">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23533" relation="include">
        </childnode>
      </node>
      <node id="23538">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="23431">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23435" relation="include">
        </childnode>
        <childnode refid="23436" relation="include">
        </childnode>
        <childnode refid="23437" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23439" relation="include">
        </childnode>
        <childnode refid="23440" relation="include">
        </childnode>
        <childnode refid="23441" relation="include">
        </childnode>
        <childnode refid="23442" relation="include">
        </childnode>
        <childnode refid="23443" relation="include">
        </childnode>
        <childnode refid="23451" relation="include">
        </childnode>
      </node>
      <node id="23449">
        <label>limits.h</label>
      </node>
      <node id="23458">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="23486">
        <label>sys/resource.h</label>
      </node>
      <node id="23469">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="23435" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
      </node>
      <node id="23498">
        <label>openssl/bio.h</label>
      </node>
      <node id="23549">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="23443" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23548" relation="include">
        </childnode>
      </node>
      <node id="23466">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="23470">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23471" relation="include">
        </childnode>
      </node>
      <node id="23548">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23514" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23466" relation="include">
        </childnode>
        <childnode refid="23516" relation="include">
        </childnode>
      </node>
      <node id="23502">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="23453" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23503" relation="include">
        </childnode>
        <childnode refid="23504" relation="include">
        </childnode>
        <childnode refid="23505" relation="include">
        </childnode>
        <childnode refid="23506" relation="include">
        </childnode>
        <childnode refid="23507" relation="include">
        </childnode>
        <childnode refid="23509" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23477">
        <label>ifaddrs.h</label>
      </node>
      <node id="23517">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23445" relation="include">
        </childnode>
        <childnode refid="23518" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23519" relation="include">
        </childnode>
      </node>
      <node id="23474">
        <label>sys/types.h</label>
      </node>
      <node id="23512">
        <label>ios</label>
      </node>
      <node id="23446">
        <label>string.h</label>
      </node>
      <node id="23452">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="23440">
        <label>cstdio</label>
      </node>
      <node id="23460">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="23500">
        <label>openssl/buffer.h</label>
      </node>
      <node id="23441">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="23522">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="23523" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23510" relation="include">
        </childnode>
        <childnode refid="23529" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23491" relation="include">
        </childnode>
        <childnode refid="23537" relation="include">
        </childnode>
      </node>
      <node id="23495">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="23552">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23520" relation="include">
        </childnode>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23553" relation="include">
        </childnode>
      </node>
      <node id="23537">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="23514">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="23502" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23453" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23450">
        <label>unistd.h</label>
      </node>
      <node id="23547">
        <label>db_cxx.h</label>
      </node>
      <node id="23433">
        <label>vector</label>
      </node>
      <node id="23430">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23453" relation="include">
        </childnode>
        <childnode refid="23456" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
      </node>
      <node id="23462">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23465" relation="include">
        </childnode>
        <childnode refid="23466" relation="include">
        </childnode>
        <childnode refid="23467" relation="include">
        </childnode>
        <childnode refid="23468" relation="include">
        </childnode>
        <childnode refid="23469" relation="include">
        </childnode>
        <childnode refid="23470" relation="include">
        </childnode>
        <childnode refid="23480" relation="include">
        </childnode>
        <childnode refid="23482" relation="include">
        </childnode>
        <childnode refid="23502" relation="include">
        </childnode>
        <childnode refid="23510" relation="include">
        </childnode>
      </node>
      <node id="23504">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="23494">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="23492">
        <label>utility</label>
      </node>
      <node id="23528">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="23524" relation="include">
        </childnode>
        <childnode refid="23529" relation="include">
        </childnode>
      </node>
      <node id="23489">
        <label>sstream</label>
      </node>
      <node id="23551">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="23513">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="23443" relation="include">
        </childnode>
        <childnode refid="23514" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23499">
        <label>openssl/evp.h</label>
      </node>
      <node id="23487">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="23436" relation="include">
        </childnode>
        <childnode refid="23488" relation="include">
        </childnode>
        <childnode refid="23489" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
      </node>
      <node id="23438">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="23546">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23510" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23495" relation="include">
        </childnode>
        <childnode refid="23547" relation="include">
        </childnode>
      </node>
      <node id="23510">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="23443" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23511" relation="include">
        </childnode>
        <childnode refid="23454" relation="include">
        </childnode>
        <childnode refid="23512" relation="include">
        </childnode>
        <childnode refid="23437" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23435" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23446" relation="include">
        </childnode>
        <childnode refid="23492" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23509">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23508" relation="include">
        </childnode>
        <childnode refid="23449" relation="include">
        </childnode>
      </node>
      <node id="23521">
        <label>spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="23430" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23520" relation="include">
        </childnode>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23480" relation="include">
        </childnode>
        <childnode refid="23542" relation="include">
        </childnode>
        <childnode refid="23554" relation="include">
        </childnode>
      </node>
      <node id="23485">
        <label>sys/time.h</label>
      </node>
      <node id="23488">
        <label>iostream</label>
      </node>
      <node id="23463">
        <label>deque</label>
      </node>
      <node id="23453">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="23454" relation="include">
        </childnode>
        <childnode refid="23439" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23473">
        <label>sys/socket.h</label>
      </node>
      <node id="23533">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="23454" relation="include">
        </childnode>
        <childnode refid="23508" relation="include">
        </childnode>
        <childnode refid="23446" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
      </node>
      <node id="23464">
        <label>boost/array.hpp</label>
      </node>
      <node id="23456">
        <label>openssl/bn.h</label>
      </node>
      <node id="23529">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="23530" relation="include">
        </childnode>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23492" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23483">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="23438" relation="include">
        </childnode>
      </node>
      <node id="23443">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="23444" relation="include">
        </childnode>
        <childnode refid="23446" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23447" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23448" relation="include">
        </childnode>
        <childnode refid="23449" relation="include">
        </childnode>
        <childnode refid="23450" relation="include">
        </childnode>
      </node>
      <node id="23481">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="23430" relation="include">
        </childnode>
        <childnode refid="23453" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
      </node>
      <node id="23435">
        <label>set</label>
      </node>
      <node id="23511">
        <label>algorithm</label>
      </node>
      <node id="23543">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23544" relation="include">
        </childnode>
      </node>
      <node id="23505">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23445" relation="include">
        </childnode>
      </node>
      <node id="23525">
        <label>util.h</label>
      </node>
      <node id="23518">
        <label>stdio.h</label>
      </node>
      <node id="23444">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="23445" relation="include">
        </childnode>
      </node>
      <node id="23439">
        <label>cstring</label>
      </node>
      <node id="23457">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="23458" relation="include">
        </childnode>
        <childnode refid="23459" relation="include">
        </childnode>
        <childnode refid="23460" relation="include">
        </childnode>
        <childnode refid="23447" relation="include">
        </childnode>
        <childnode refid="23461" relation="include">
        </childnode>
      </node>
      <node id="23519">
        <label>inttypes.h</label>
      </node>
      <node id="23532">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="23533" relation="include">
        </childnode>
        <childnode refid="23534" relation="include">
        </childnode>
      </node>
      <node id="23540">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="23524" relation="include">
        </childnode>
        <childnode refid="23509" relation="include">
        </childnode>
        <childnode refid="23541" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="spork_8cpp_1af58b736428e7bc0e4a7fc590f2da8d2e" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref> &gt;</type>
        <definition>std::map&lt;uint256, CSporkMessage&gt; mapSporks</definition>
        <argsstring></argsstring>
        <name>mapSporks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="26" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="spork_8cpp_1a2a71a101417469de26e8505fb929462d" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref> &gt;</type>
        <definition>std::map&lt;int, CSporkMessage&gt; mapSporksActive</definition>
        <argsstring></argsstring>
        <name>mapSporksActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="27" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="spork_8cpp_1af6873019c3095ea6b554795e4040395c" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_spork_manager" kindref="compound">CSporkManager</ref></type>
        <definition>CSporkManager sporkManager</definition>
        <argsstring></argsstring>
        <name>sporkManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="28" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="spork_8cpp_1a3f9c24c1f4c012152fb4422ca981610a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ProcessSpork</definition>
        <argsstring>(CNode *pfrom, std::string &amp;strCommand, CDataStream &amp;vRecv)</argsstring>
        <name>ProcessSpork</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strCommand</declname>
        </param>
        <param>
          <type><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref> &amp;</type>
          <declname>vRecv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="30" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="30" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsSporkActive</definition>
        <argsstring>(int nSporkID)</argsstring>
        <name>IsSporkActive</name>
        <param>
          <type>int</type>
          <declname>nSporkID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="82" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="82" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="spork_8cpp_1a8ae4e3d41526bf334ac3bb100db62146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetSporkValue</definition>
        <argsstring>(int nSporkID)</argsstring>
        <name>GetSporkValue</name>
        <param>
          <type>int</type>
          <declname>nSporkID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="105" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="105" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="spork_8cpp_1a6b20cdba297d137a4d7a91691cc4457b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReprocessBlocks</definition>
        <argsstring>(int nBlocks)</argsstring>
        <name>ReprocessBlocks</name>
        <param>
          <type>int</type>
          <declname>nBlocks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="125" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="125" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="spork_8cpp_1aa6bf94bc9d68d2931ea6cbf013e52f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ExecuteSpork</definition>
        <argsstring>(int nSporkID, int nValue)</argsstring>
        <name>ExecuteSpork</name>
        <param>
          <type>int</type>
          <declname>nSporkID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/spork.cpp" line="161" column="1" bodyfile="/home/dev/ds-160209/src/spork.cpp" bodystart="161" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2015<sp/>The<sp/>Darkcoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bignum_8h" kindref="compound">bignum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sync_8h" kindref="compound">sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key_8h" kindref="compound">key.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="script_8h" kindref="compound">script.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base58_8h" kindref="compound">base58.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protocol_8h" kindref="compound">protocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spork_8h" kindref="compound">spork.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-budget_8h" kindref="compound">stormnode-budget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref>;</highlight></codeline>
<codeline lineno="24" refid="spork_8h_1af58b736428e7bc0e4a7fc590f2da8d2e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_spork_manager" kindref="compound">CSporkManager</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::map&lt;uint256,<sp/>CSporkMessage&gt;<sp/><ref refid="spork_8cpp_1af58b736428e7bc0e4a7fc590f2da8d2e" kindref="member">mapSporks</ref>;</highlight></codeline>
<codeline lineno="27" refid="spork_8h_1a2a71a101417469de26e8505fb929462d" refkind="member"><highlight class="normal">std::map&lt;int,<sp/>CSporkMessage&gt;<sp/><ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>;</highlight></codeline>
<codeline lineno="28" refid="spork_8h_1af6873019c3095ea6b554795e4040395c" refkind="member"><highlight class="normal"><ref refid="class_c_spork_manager" kindref="compound">CSporkManager</ref><sp/><ref refid="spork_8cpp_1af6873019c3095ea6b554795e4040395c" kindref="member">sporkManager</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="spork_8h_1a3f9c24c1f4c012152fb4422ca981610a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spork_8cpp_1a3f9c24c1f4c012152fb4422ca981610a" kindref="member">ProcessSpork</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::string&amp;<sp/>strCommand,<sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>vRecv)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//disable<sp/>all<sp/>sandstorm/stormnode<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;spork&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;ProcessSpork::spork\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>vMsg(vRecv);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref><sp/><ref refid="rpcmisc_8cpp_1a8dcc7f3e5749bbd1dad163b85d0abdcb" kindref="member">spork</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/><ref refid="rpcmisc_8cpp_1a8dcc7f3e5749bbd1dad163b85d0abdcb" kindref="member">spork</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>spork.GetHash();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>.count(spork.nSporkID))<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>[spork.nSporkID].nTimeSigned<sp/>&gt;=<sp/>spork.nTimeSigned){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;spork<sp/>-<sp/>seen<sp/>%s<sp/>block<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str(),<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;spork<sp/>-<sp/>got<sp/>updated<sp/>spork<sp/>%s<sp/>block<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str(),<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;spork<sp/>-<sp/>new<sp/>%s<sp/>ID<sp/>%d<sp/>Time<sp/>%d<sp/>bestHeight<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str(),<sp/>spork.nSporkID,<sp/>spork.nValue,<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sporkManager.<ref refid="class_c_spork_manager_1a697d8c0ce5c422ea125eee96687aa7b3" kindref="member">CheckSignature</ref>(spork)){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;spork<sp/>-<sp/>invalid<sp/>signature\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>100);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1af58b736428e7bc0e4a7fc590f2da8d2e" kindref="member">mapSporks</ref>[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>]<sp/>=<sp/><ref refid="rpcmisc_8cpp_1a8dcc7f3e5749bbd1dad163b85d0abdcb" kindref="member">spork</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>[spork.nSporkID]<sp/>=<sp/><ref refid="rpcmisc_8cpp_1a8dcc7f3e5749bbd1dad163b85d0abdcb" kindref="member">spork</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sporkManager.<ref refid="class_c_spork_manager_1ae8651894670c02ecb5f99806376d5af2" kindref="member">Relay</ref>(spork);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//does<sp/>a<sp/>task<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1aa6bf94bc9d68d2931ea6cbf013e52f5a" kindref="member">ExecuteSpork</ref>(spork.nSporkID,<sp/>spork.nValue);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getsporks&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>CSporkMessage&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>.begin();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;spork&quot;</highlight><highlight class="normal">,<sp/>it-&gt;second);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>spork,<sp/>otherwise<sp/>say<sp/>it&apos;s<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="spork_8h_1a3305663176e21e81c80dc951a7f8ea5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSporkID)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>.count(nSporkID)){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>[nSporkID].nValue;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT)<sp/>r<sp/>=<sp/>SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT_DEFAULT;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_2_INSTANTX)<sp/>r<sp/>=<sp/>SPORK_2_INSTANTX_DEFAULT;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_3_INSTANTX_BLOCK_FILTERING)<sp/>r<sp/>=<sp/>SPORK_3_INSTANTX_BLOCK_FILTERING_DEFAULT;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_5_MAX_VALUE)<sp/>r<sp/>=<sp/>SPORK_5_MAX_VALUE_DEFAULT;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_7_STORMNODE_SCANNING)<sp/>r<sp/>=<sp/>SPORK_7_STORMNODE_SCANNING;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT)<sp/>r<sp/>=<sp/>SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_9_STORMNODE_BUDGET_ENFORCEMENT)<sp/>r<sp/>=<sp/>SPORK_9_STORMNODE_BUDGET_ENFORCEMENT;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>==<sp/>0)<sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;GetSpork::Unknown<sp/>Spork<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nSporkID);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>==<sp/>0)<sp/>r<sp/>=<sp/>4070908800;<sp/></highlight><highlight class="comment">//return<sp/>2099-1-1<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>&lt;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>value<sp/>of<sp/>the<sp/>spork<sp/>on<sp/>the<sp/>network,<sp/>or<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="spork_8h_1a8ae4e3d41526bf334ac3bb100db62146" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spork_8cpp_1a8ae4e3d41526bf334ac3bb100db62146" kindref="member">GetSporkValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSporkID)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>.count(nSporkID)){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>[nSporkID].nValue;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT)<sp/>r<sp/>=<sp/>SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT_DEFAULT;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_2_INSTANTX)<sp/>r<sp/>=<sp/>SPORK_2_INSTANTX_DEFAULT;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_3_INSTANTX_BLOCK_FILTERING)<sp/>r<sp/>=<sp/>SPORK_3_INSTANTX_BLOCK_FILTERING_DEFAULT;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_5_MAX_VALUE)<sp/>r<sp/>=<sp/>SPORK_5_MAX_VALUE_DEFAULT;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_7_STORMNODE_SCANNING)<sp/>r<sp/>=<sp/>SPORK_7_STORMNODE_SCANNING_DEFAULT;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT)<sp/>r<sp/>=<sp/>SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT_DEFAULT;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_9_STORMNODE_BUDGET_ENFORCEMENT)<sp/>r<sp/>=<sp/>SPORK_9_STORMNODE_BUDGET_ENFORCEMENT_DEFAULT;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>==<sp/>0)<sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;GetSpork::Unknown<sp/>Spork<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nSporkID);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="spork_8h_1a6b20cdba297d137a4d7a91691cc4457b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spork_8cpp_1a6b20cdba297d137a4d7a91691cc4457b" kindref="member">ReprocessBlocks</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlocks)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Put<sp/>this<sp/>back.<sp/>Needs<sp/>CChain,<sp/>ActivateBestChain,<sp/>etc...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>int64_t&gt;::iterator<sp/>it<sp/>=<sp/>mapRejectedBlocks.begin();</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>while(it<sp/>!=<sp/>mapRejectedBlocks.end()){</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//use<sp/>a<sp/>window<sp/>twice<sp/>as<sp/>large<sp/>as<sp/>is<sp/>usual<sp/>for<sp/>the<sp/>nBlocks<sp/>we<sp/>want<sp/>to<sp/>reset</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((*it).second<sp/><sp/>&gt;<sp/>GetTime()<sp/>-<sp/>(nBlocks*60*5))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockMap::iterator<sp/>mi<sp/>=<sp/>mapBlockIndex.find((*it).first);</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(mi<sp/>!=<sp/>mapBlockIndex.end()<sp/>&amp;&amp;<sp/>(*mi).second)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOCK(cs_main);</highlight></codeline>
<codeline lineno="137"><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBlockIndex*<sp/>pindex<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;ReprocessBlocks<sp/>-<sp/>%s\n&quot;,<sp/>(*it).first.ToString());</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CValidationState<sp/>state;</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReconsiderBlock(state,<sp/>pindex);</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/>CValidationState<sp/>state;</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOCK(cs_main);</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisconnectBlocksAndReprocess(nBlocks);</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(state.IsValid())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActivateBestChain(state);</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ReprocessBlocks<sp/>--<sp/>Not<sp/>implemented!<sp/>Blocks<sp/>=<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>nBlocks);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="spork_8h_1aa6bf94bc9d68d2931ea6cbf013e52f5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spork_8cpp_1aa6bf94bc9d68d2931ea6cbf013e52f5a" kindref="member">ExecuteSpork</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSporkID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nValue)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_11_RESET_BUDGET<sp/>&amp;&amp;<sp/>nValue<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a3a9115af29a10e955c2e1d50fd697411" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//correct<sp/>fork<sp/>via<sp/>spork<sp/>technology</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSporkID<sp/>==<sp/>SPORK_12_RECONSIDER_BLOCKS<sp/>&amp;&amp;<sp/>nValue<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Spork::ExecuteSpork<sp/>--<sp/>Reconsider<sp/>Last<sp/>%d<sp/>Blocks\n&quot;</highlight><highlight class="normal">,<sp/>nValue);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1a6b20cdba297d137a4d7a91691cc4457b" kindref="member">ReprocessBlocks</ref>(nValue);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_c_spork_manager_1a697d8c0ce5c422ea125eee96687aa7b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_spork_manager_1a697d8c0ce5c422ea125eee96687aa7b3" kindref="member">CSporkManager::CheckSignature</ref>(<ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref>&amp;<sp/><ref refid="rpcmisc_8cpp_1a8dcc7f3e5749bbd1dad163b85d0abdcb" kindref="member">spork</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//note:<sp/>need<sp/>to<sp/>investigate<sp/>why<sp/>this<sp/>is<sp/>failing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/>boost::lexical_cast&lt;std::string&gt;(spork.<ref refid="class_c_spork_message_1a081216533339aed53adbb0dad2a78f73" kindref="member">nSporkID</ref>)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(spork.<ref refid="class_c_spork_message_1ae15a1fa999993177b2549c4316c89643" kindref="member">nValue</ref>)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(spork.<ref refid="class_c_spork_message_1a66a80692ffda8526efa272bb2847030b" kindref="member">nTimeSigned</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strPubKey<sp/>=<sp/>strMainPubKey;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey(<ref refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" kindref="member">ParseHex</ref>(strPubKey));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(pubkey,<sp/>spork.<ref refid="class_c_spork_message_1a23740331f22a1ed4a8af5a299a618cc1" kindref="member">vchSig</ref>,<sp/>strMessage,<sp/>errorMessage)){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" kindref="member">CSporkManager::Sign</ref>(<ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref>&amp;<sp/><ref refid="rpcmisc_8cpp_1a8dcc7f3e5749bbd1dad163b85d0abdcb" kindref="member">spork</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/>boost::lexical_cast&lt;std::string&gt;(spork.<ref refid="class_c_spork_message_1a081216533339aed53adbb0dad2a78f73" kindref="member">nSporkID</ref>)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(spork.<ref refid="class_c_spork_message_1ae15a1fa999993177b2549c4316c89643" kindref="member">nValue</ref>)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(spork.<ref refid="class_c_spork_message_1a66a80692ffda8526efa272bb2847030b" kindref="member">nTimeSigned</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key2;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey2;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(strMasterPrivKey,<sp/>errorMessage,<sp/>key2,<sp/>pubkey2))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::Sign<sp/>-<sp/>ERROR:<sp/>Invalid<sp/>stormnodeprivkey:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage.c_str());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">SignMessage</ref>(strMessage,<sp/>errorMessage,<sp/>spork.<ref refid="class_c_spork_message_1a23740331f22a1ed4a8af5a299a618cc1" kindref="member">vchSig</ref>,<sp/>key2))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::Sign<sp/>-<sp/>Sign<sp/>message<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(pubkey2,<sp/>spork.<ref refid="class_c_spork_message_1a23740331f22a1ed4a8af5a299a618cc1" kindref="member">vchSig</ref>,<sp/>strMessage,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::Sign<sp/>-<sp/>Verify<sp/>message<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="class_c_spork_manager_1afb7e15fe29bd548939657a20ca5feafb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_spork_manager_1afb7e15fe29bd548939657a20ca5feafb" kindref="member">CSporkManager::UpdateSpork</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSporkID,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nValue)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref><sp/>msg;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="class_c_spork_message_1a081216533339aed53adbb0dad2a78f73" kindref="member">nSporkID</ref><sp/>=<sp/>nSporkID;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="class_c_spork_message_1ae15a1fa999993177b2549c4316c89643" kindref="member">nValue</ref><sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="class_c_spork_message_1a66a80692ffda8526efa272bb2847030b" kindref="member">nTimeSigned</ref><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" kindref="member">Sign</ref>(msg)){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_spork_manager_1ae8651894670c02ecb5f99806376d5af2" kindref="member">Relay</ref>(msg);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1af58b736428e7bc0e4a7fc590f2da8d2e" kindref="member">mapSporks</ref>[msg.<ref refid="class_c_spork_message_1aa71d5976465a8edb3f11901b14b9df65" kindref="member">GetHash</ref>()]<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1a2a71a101417469de26e8505fb929462d" kindref="member">mapSporksActive</ref>[nSporkID]<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_c_spork_manager_1ae8651894670c02ecb5f99806376d5af2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_spork_manager_1ae8651894670c02ecb5f99806376d5af2" kindref="member">CSporkManager::Relay</ref>(<ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8abacdb1618207a44c1301ae59acf7f5d8" kindref="member">MSG_SPORK</ref>,<sp/>msg.<ref refid="class_c_spork_message_1aa71d5976465a8edb3f11901b14b9df65" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;CInv&gt;<sp/>vInv;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>vInv.push_back(inv);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;inv&quot;</highlight><highlight class="normal">,<sp/>vInv);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="class_c_spork_manager_1a599d088218de9d242e4dc5cb17dd310b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_spork_manager_1a599d088218de9d242e4dc5cb17dd310b" kindref="member">CSporkManager::SetPrivKey</ref>(std::string<sp/>strPrivKey)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_spork_message" kindref="compound">CSporkMessage</ref><sp/>msg;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>signing<sp/>successful,<sp/>proceed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>strMasterPrivKey<sp/>=<sp/>strPrivKey;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" kindref="member">Sign</ref>(msg);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_spork_manager_1a697d8c0ce5c422ea125eee96687aa7b3" kindref="member">CheckSignature</ref>(msg)){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSporkManager::SetPrivKey<sp/>-<sp/>Successfully<sp/>initialized<sp/>as<sp/>spork<sp/>signer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="class_c_spork_manager_1ae72689cf7a2e87ef57f8f7e875a5c21d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_spork_manager_1ae72689cf7a2e87ef57f8f7e875a5c21d" kindref="member">CSporkManager::GetSporkIDByName</ref>(std::string<sp/>strName)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SPORK_2_INSTANTX&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPORK_2_INSTANTX;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SPORK_3_INSTANTX_BLOCK_FILTERING&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPORK_3_INSTANTX_BLOCK_FILTERING;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SPORK_5_MAX_VALUE&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPORK_5_MAX_VALUE;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SPORK_7_STORMNODE_SCANNING&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPORK_7_STORMNODE_SCANNING;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SPORK_9_STORMNODE_BUDGET_ENFORCEMENT&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPORK_9_STORMNODE_BUDGET_ENFORCEMENT;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="class_c_spork_manager_1a1a2960fa69bc49f5e4d36db583d4a840" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_spork_manager_1a1a2960fa69bc49f5e4d36db583d4a840" kindref="member">CSporkManager::GetSporkNameByID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SPORK_1_STORMNODE_PAYMENTS_ENFORCEMENT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>SPORK_2_INSTANTX)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SPORK_2_INSTANTX&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>SPORK_3_INSTANTX_BLOCK_FILTERING)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SPORK_3_INSTANTX_BLOCK_FILTERING&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>SPORK_5_MAX_VALUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SPORK_5_MAX_VALUE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>SPORK_7_STORMNODE_SCANNING)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SPORK_7_STORMNODE_SCANNING&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>SPORK_9_STORMNODE_BUDGET_ENFORCEMENT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SPORK_9_STORMNODE_BUDGET_ENFORCEMENT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/spork.cpp"/>
  </compounddef>
</doxygen>
