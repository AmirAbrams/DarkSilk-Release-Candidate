<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="version__set_8cc" kind="file" language="C++">
    <compoundname>version_set.cc</compoundname>
    <includes refid="version__set_8h" local="yes">db/version_set.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="filename_8h" local="yes">db/filename.h</includes>
    <includes refid="log__reader_8h" local="yes">db/log_reader.h</includes>
    <includes refid="log__writer_8h" local="yes">db/log_writer.h</includes>
    <includes refid="memtable_8h" local="yes">db/memtable.h</includes>
    <includes refid="table__cache_8h" local="yes">db/table_cache.h</includes>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="table__builder_8h" local="yes">leveldb/table_builder.h</includes>
    <includes refid="merger_8h" local="yes">table/merger.h</includes>
    <includes refid="two__level__iterator_8h" local="yes">table/two_level_iterator.h</includes>
    <includes refid="coding_8h" local="yes">util/coding.h</includes>
    <includes refid="logging_8h" local="yes">util/logging.h</includes>
    <incdepgraph>
      <node id="37159">
        <label>leveldb/table.h</label>
        <link refid="table_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37132" relation="include">
        </childnode>
      </node>
      <node id="37161">
        <label>stdarg.h</label>
      </node>
      <node id="37153">
        <label>db/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="37134" relation="include">
        </childnode>
        <childnode refid="37154" relation="include">
        </childnode>
        <childnode refid="37142" relation="include">
        </childnode>
        <childnode refid="37155" relation="include">
        </childnode>
        <childnode refid="37156" relation="include">
        </childnode>
      </node>
      <node id="37156">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
      </node>
      <node id="37143">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="37127" relation="include">
        </childnode>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37142" relation="include">
        </childnode>
      </node>
      <node id="37134">
        <label>assert.h</label>
      </node>
      <node id="37138">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="37135" relation="include">
        </childnode>
      </node>
      <node id="37144">
        <label>db/version_edit.h</label>
        <link refid="version__edit_8h"/>
        <childnode refid="37124" relation="include">
        </childnode>
        <childnode refid="37145" relation="include">
        </childnode>
        <childnode refid="37125" relation="include">
        </childnode>
        <childnode refid="37126" relation="include">
        </childnode>
      </node>
      <node id="37155">
        <label>util/arena.h</label>
        <link refid="arena_8h"/>
        <childnode refid="37125" relation="include">
        </childnode>
        <childnode refid="37134" relation="include">
        </childnode>
        <childnode refid="37135" relation="include">
        </childnode>
        <childnode refid="37131" relation="include">
        </childnode>
      </node>
      <node id="37154">
        <label>stdlib.h</label>
      </node>
      <node id="37126">
        <label>db/dbformat.h</label>
        <link refid="dbformat_8h"/>
        <childnode refid="37127" relation="include">
        </childnode>
        <childnode refid="37128" relation="include">
        </childnode>
        <childnode refid="37130" relation="include">
        </childnode>
        <childnode refid="37139" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
        <childnode refid="37140" relation="include">
        </childnode>
        <childnode refid="37141" relation="include">
        </childnode>
        <childnode refid="37143" relation="include">
        </childnode>
      </node>
      <node id="37130">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37127" relation="include">
        </childnode>
        <childnode refid="37132" relation="include">
        </childnode>
        <childnode refid="37138" relation="include">
        </childnode>
      </node>
      <node id="37129">
        <label>string</label>
      </node>
      <node id="37123">
        <label>map</label>
      </node>
      <node id="37163">
        <label>table/two_level_iterator.h</label>
        <link refid="two__level__iterator_8h"/>
        <childnode refid="37132" relation="include">
        </childnode>
      </node>
      <node id="37135">
        <label>stddef.h</label>
      </node>
      <node id="37158">
        <label>leveldb/cache.h</label>
        <link refid="cache_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
      </node>
      <node id="37149">
        <label>db/log_reader.h</label>
        <link refid="log__reader_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37150" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
        <childnode refid="37137" relation="include">
        </childnode>
      </node>
      <node id="37121">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.cc</label>
        <link refid="version_set.cc"/>
        <childnode refid="37122" relation="include">
        </childnode>
        <childnode refid="37147" relation="include">
        </childnode>
        <childnode refid="37127" relation="include">
        </childnode>
        <childnode refid="37148" relation="include">
        </childnode>
        <childnode refid="37149" relation="include">
        </childnode>
        <childnode refid="37151" relation="include">
        </childnode>
        <childnode refid="37152" relation="include">
        </childnode>
        <childnode refid="37157" relation="include">
        </childnode>
        <childnode refid="37160" relation="include">
        </childnode>
        <childnode refid="37140" relation="include">
        </childnode>
        <childnode refid="37162" relation="include">
        </childnode>
        <childnode refid="37163" relation="include">
        </childnode>
        <childnode refid="37141" relation="include">
        </childnode>
        <childnode refid="37143" relation="include">
        </childnode>
      </node>
      <node id="37137">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
      </node>
      <node id="37122">
        <label>db/version_set.h</label>
        <link refid="version__set_8h"/>
        <childnode refid="37123" relation="include">
        </childnode>
        <childnode refid="37124" relation="include">
        </childnode>
        <childnode refid="37125" relation="include">
        </childnode>
        <childnode refid="37126" relation="include">
        </childnode>
        <childnode refid="37144" relation="include">
        </childnode>
        <childnode refid="37142" relation="include">
        </childnode>
        <childnode refid="37146" relation="include">
        </childnode>
      </node>
      <node id="37141">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37136" relation="include">
        </childnode>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
        <childnode refid="37142" relation="include">
        </childnode>
      </node>
      <node id="37148">
        <label>db/filename.h</label>
        <link refid="filename_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
        <childnode refid="37137" relation="include">
        </childnode>
        <childnode refid="37142" relation="include">
        </childnode>
      </node>
      <node id="37136">
        <label>string.h</label>
      </node>
      <node id="37151">
        <label>db/log_writer.h</label>
        <link refid="log__writer_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37150" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
        <childnode refid="37137" relation="include">
        </childnode>
      </node>
      <node id="37125">
        <label>vector</label>
      </node>
      <node id="37145">
        <label>utility</label>
      </node>
      <node id="37150">
        <label>db/log_format.h</label>
        <link refid="log__format_8h"/>
      </node>
      <node id="37142">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="37136" relation="include">
        </childnode>
      </node>
      <node id="37131">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="37152">
        <label>db/memtable.h</label>
        <link refid="memtable_8h"/>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37130" relation="include">
        </childnode>
        <childnode refid="37126" relation="include">
        </childnode>
        <childnode refid="37153" relation="include">
        </childnode>
        <childnode refid="37155" relation="include">
        </childnode>
      </node>
      <node id="37140">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37138" relation="include">
        </childnode>
        <childnode refid="37137" relation="include">
        </childnode>
      </node>
      <node id="37162">
        <label>table/merger.h</label>
        <link refid="merger_8h"/>
      </node>
      <node id="37133">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="37134" relation="include">
        </childnode>
        <childnode refid="37135" relation="include">
        </childnode>
        <childnode refid="37136" relation="include">
        </childnode>
        <childnode refid="37129" relation="include">
        </childnode>
      </node>
      <node id="37157">
        <label>db/table_cache.h</label>
        <link refid="table__cache_8h"/>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37126" relation="include">
        </childnode>
        <childnode refid="37158" relation="include">
        </childnode>
        <childnode refid="37159" relation="include">
        </childnode>
        <childnode refid="37142" relation="include">
        </childnode>
      </node>
      <node id="37160">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37125" relation="include">
        </childnode>
        <childnode refid="37161" relation="include">
        </childnode>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37137" relation="include">
        </childnode>
      </node>
      <node id="37124">
        <label>set</label>
      </node>
      <node id="37147">
        <label>algorithm</label>
      </node>
      <node id="37146">
        <label>port/thread_annotations.h</label>
        <link refid="thread__annotations_8h"/>
      </node>
      <node id="37127">
        <label>stdio.h</label>
      </node>
      <node id="37139">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="37129" relation="include">
        </childnode>
      </node>
      <node id="37128">
        <label>leveldb/comparator.h</label>
        <link refid="comparator_8h"/>
        <childnode refid="37129" relation="include">
        </childnode>
      </node>
      <node id="37132">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="37133" relation="include">
        </childnode>
        <childnode refid="37137" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classleveldb_1_1_version_1_1_level_file_num_iterator" prot="public">leveldb::Version::LevelFileNumIterator</innerclass>
    <innerclass refid="classleveldb_1_1_version_set_1_1_builder" prot="public">leveldb::VersionSet::Builder</innerclass>
    <innerclass refid="structleveldb_1_1_version_set_1_1_builder_1_1_by_smallest_key" prot="private">leveldb::VersionSet::Builder::BySmallestKey</innerclass>
    <innerclass refid="structleveldb_1_1_version_set_1_1_builder_1_1_level_state" prot="private">leveldb::VersionSet::Builder::LevelState</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="version__set_8cc_1a6aad002d0db5e5e85dc31927a5a6f503" prot="public" static="no" mutable="no">
        <type>SaverState</type>
        <definition>SaverState state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="253" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="253" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_version_1a8b9e51b3d0503fe5868f656356557ded" compoundref="version__set_8cc" startline="435" endline="471">leveldb::Version::RecordReadSample</referencedby>
      </memberdef>
      <memberdef kind="variable" id="version__set_8cc_1a598e50ba29b234ea6ee753e383e79452" prot="public" static="no" mutable="no">
        <type>const Comparator *</type>
        <definition>const Comparator* ucmp</definition>
        <argsstring></argsstring>
        <name>ucmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="254" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="254" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" compoundref="version__set_8cc" startline="323" endline="420">leveldb::Version::Get</referencedby>
      </memberdef>
      <memberdef kind="variable" id="version__set_8cc_1afced2118ae0bf03db7c7e75a21cfd004" prot="public" static="no" mutable="no">
        <type>Slice</type>
        <definition>Slice user_key</definition>
        <argsstring></argsstring>
        <name>user_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="255" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="255" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_internal_key_comparator_1a5dc88f433ef3a0d9508ec17cb40d3e27" compoundref="dbformat_8cc" startline="87" endline="99">leveldb::InternalKeyComparator::FindShortSuccessor</referencedby>
        <referencedby refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" compoundref="version__set_8cc" startline="323" endline="420">leveldb::Version::Get</referencedby>
      </memberdef>
      <memberdef kind="variable" id="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="256" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="256" bodyend="-1"/>
        <referencedby refid="core_8h_1a777bb6205a6ad0da9b85a7c2ae61f7c8" compoundref="core_8c" startline="485" endline="557">initial_hash</referencedby>
        <referencedby refid="class_c_d_b_1adfd2c079df629d5f7cac0ca923ffd698" compoundref="db_8h" startline="116" endline="147">CDB::Read</referencedby>
        <referencedby refid="class_c_d_b_1a7fb5b4fa36e57e17287f2c1c762bd708" compoundref="db_8h" startline="150" endline="176">CDB::Write</referencedby>
        <referencedby refid="namespacejson__spirit_1a7c76113cd38b5ca0e5c24024a52116c1" compoundref="json__spirit__reader__template_8h" startline="563" endline="566">json_spirit::read_string_or_throw</referencedby>
        <referencedby refid="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" compoundref="json__spirit__reader__template_8h" startline="569" endline="574">json_spirit::read_string</referencedby>
        <referencedby refid="structjson__spirit_1_1_config__map_1aef0dfe17dd6bb674f65a7c631189f1d0" compoundref="json__spirit__value_8h" startline="168" endline="171">json_spirit::Config_map&lt; String &gt;::add</referencedby>
        <referencedby refid="namespacejson__spirit_1a6eea0630f81345600834e8be70d87095" compoundref="json__spirit__writer__template_8h" startline="231" endline="234">json_spirit::write_stream</referencedby>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="c_8h_1aaba8eb336dc649672bfd273abc6c2514" compoundref="c_8cc" startline="362" endline="384">leveldb_writebatch_iterate</referencedby>
        <referencedby refid="namespaceleveldb_1acb51ac2eb77bd1af22372748f9fb44da" compoundref="db__test_8cc" startline="989" endline="1006">leveldb::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" compoundref="version__set_8cc" startline="323" endline="420">leveldb::Version::Get</referencedby>
        <referencedby refid="classleveldb_1_1_write_batch_1ac6cb5a360bb095f4e9a6e817c4322a9d" compoundref="write__batch_8cc" startline="42" endline="80">leveldb::WriteBatch::Iterate</referencedby>
        <referencedby refid="classleveldb_1_1_benchmark_1a86876b2882d9015610330e69acfdff0d" compoundref="db__bench__sqlite3_8cc" startline="478" endline="579">leveldb::Benchmark::Write</referencedby>
        <referencedby refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" compoundref="coding_8cc" startline="35" endline="39">leveldb::PutFixed32</referencedby>
        <referencedby refid="namespaceleveldb_1a720cd9030ba5f867ded835b57caa1d06" compoundref="coding_8cc" startline="41" endline="45">leveldb::PutFixed64</referencedby>
        <referencedby refid="classleveldb_1_1_histogram_1a7dd7147b7f6548f0bebde25ca40e4457" compoundref="histogram_8cc" startline="44" endline="56">leveldb::Histogram::Add</referencedby>
        <referencedby refid="classleveldb_1_1test_1_1_tester_1a4e776d487df19ac9daeed5527cd1d80e" compoundref="testharness_8h" startline="97" endline="102">leveldb::test::Tester::operator&lt;&lt;</referencedby>
        <referencedby refid="class_c_level_d_b_batch_1ab459da1abafa27e834de9a4cc25b6f2d" compoundref="leveldbwrapper_8h" startline="35" endline="48">CLevelDBBatch::Write</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1aa3b816ae43c930b4bf1f85461bff4b5b" compoundref="leveldbwrapper_8h" startline="91" endline="113">CLevelDBWrapper::Read</referencedby>
        <referencedby refid="blockbrowser_8h_1a60cc8549d68eb368aa21e8d9ef466d50" compoundref="blockbrowser_8cpp" startline="157" endline="181">getTxTotalValue</referencedby>
        <referencedby refid="blockbrowser_8h_1a21c25275086d5e7da5b0e91a26080173" compoundref="blockbrowser_8cpp" startline="278" endline="321">getTxFees</referencedby>
        <referencedby refid="class_block_browser_1ad6d698399c521b503106f1d768a76f32" compoundref="blockbrowser_8cpp" startline="336" endline="416">BlockBrowser::updateExplorer</referencedby>
        <referencedby refid="class_tx_view_delegate_1affeec94c01339a5eeb31b648c41baf02" compoundref="overviewpage_8cpp" startline="35" endline="88">TxViewDelegate::paint</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aa2570646d53e4ca21553f1535c9d7084" compoundref="rpcsmessage_8cpp" startline="62" endline="138">smsgoptions</referencedby>
        <referencedby refid="class_c_script_num_1a2e2c60f2646f03b5cec8d92a6d31b1e8" compoundref="script_8h" startline="487" endline="518">CScriptNum::serialize</referencedby>
        <referencedby refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" compoundref="smessage_8cpp" startline="259" endline="277">SecMsgDB::ScanBatch</referencedby>
        <referencedby refid="structtinyformat_1_1detail_1_1format_value_as_type_3_01_t_00_01fmt_t_00_01true_01_4_1a7680bc0f7b6b5eee0e27c494812fb667" compoundref="tinyformat_8h" startline="206" endline="207">tinyformat::detail::formatValueAsType&lt; T, fmtT, true &gt;::invoke</referencedby>
        <referencedby refid="structtinyformat_1_1detail_1_1convert_to_int_3_01_t_00_01true_01_4_1a7d03793b995eb4428bb13349004f5fcd" compoundref="tinyformat_8h" startline="247" endline="247">tinyformat::detail::convertToInt&lt; T, true &gt;::invoke</referencedby>
        <referencedby refid="namespacetinyformat_1adc03c92f312158ae351d38ac867b9296" compoundref="tinyformat_8h" startline="268" endline="293">tinyformat::formatValue</referencedby>
        <referencedby refid="class_c_tx_d_b_1a8c718f82f43d567b5bf7487b5d6685e5" compoundref="txdb-leveldb_8cpp" startline="194" endline="206">CTxDB::ScanBatch</referencedby>
        <referencedby refid="class_c_tx_d_b_1a9e223a10434f8a73002e84cc75c682de" compoundref="txdb-leveldb_8h" startline="67" endline="105">CTxDB::Read</referencedby>
        <referencedby refid="class_c_tx_d_b_1a58885f67364829a8e0957a5dc810886d" compoundref="txdb-leveldb_8h" startline="108" endline="130">CTxDB::Write</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version__set_8h" kindref="compound">db/version_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filename_8h" kindref="compound">db/filename.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="log__reader_8h" kindref="compound">db/log_reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="log__writer_8h" kindref="compound">db/log_writer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtable_8h" kindref="compound">db/memtable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__cache_8h" kindref="compound">db/table_cache.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__builder_8h" kindref="compound">leveldb/table_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="merger_8h" kindref="compound">table/merger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="two__level__iterator_8h" kindref="compound">table/two_level_iterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coding_8h" kindref="compound">util/coding.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logging_8h" kindref="compound">util/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kTargetFileSize<sp/>=<sp/>2<sp/>*<sp/>1048576;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>bytes<sp/>of<sp/>overlaps<sp/>in<sp/>grandparent<sp/>(i.e.,<sp/>level+2)<sp/>before<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stop<sp/>building<sp/>a<sp/>single<sp/>file<sp/>in<sp/>a<sp/>level-&gt;level+1<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>kMaxGrandParentOverlapBytes<sp/>=<sp/>10<sp/>*<sp/>kTargetFileSize;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>bytes<sp/>in<sp/>all<sp/>compacted<sp/>files.<sp/><sp/>We<sp/>avoid<sp/>expanding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>lower<sp/>level<sp/>file<sp/>set<sp/>of<sp/>a<sp/>compaction<sp/>if<sp/>it<sp/>would<sp/>make<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>total<sp/>compaction<sp/>cover<sp/>more<sp/>than<sp/>this<sp/>many<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>kExpandedCompactionByteSizeLimit<sp/>=<sp/>25<sp/>*<sp/>kTargetFileSize;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxBytesForLevel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>the<sp/>result<sp/>for<sp/>level<sp/>zero<sp/>is<sp/>not<sp/>really<sp/>used<sp/>since<sp/>we<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>level-0<sp/>compaction<sp/>threshold<sp/>based<sp/>on<sp/>number<sp/>of<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>10<sp/>*<sp/>1048576.0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Result<sp/>for<sp/>both<sp/>level-0<sp/>and<sp/>level-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>level--;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>MaxFileSizeForLevel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kTargetFileSize;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>vary<sp/>per<sp/>level<sp/>to<sp/>reduce<sp/>number<sp/>of<sp/>files?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>TotalFileSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>files[i]-&gt;file_size;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">Version::~Version()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>assert(refs_<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>from<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>prev_-&gt;next_<sp/>=<sp/>next_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>next_-&gt;prev_<sp/>=<sp/>prev_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Drop<sp/>references<sp/>to<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files_[level].size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FileMetaData*<sp/>f<sp/>=<sp/>files_[level][i];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(f-&gt;refs<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;refs--;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f-&gt;refs<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" kindref="member">FindFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>&amp;<sp/>icmp,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>right<sp/>=<sp/>files.size();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(left<sp/>&lt;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>mid<sp/>=<sp/>(left<sp/>+<sp/>right)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>files[mid];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icmp.InternalKeyComparator::Compare(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>.<ref refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" kindref="member">Encode</ref>(),<sp/>key)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>at<sp/>&quot;mid.largest&quot;<sp/>is<sp/>&lt;<sp/>&quot;target&quot;.<sp/><sp/>Therefore<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>files<sp/>at<sp/>or<sp/>before<sp/>&quot;mid&quot;<sp/>are<sp/>uninteresting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>at<sp/>&quot;mid.largest&quot;<sp/>is<sp/>&gt;=<sp/>&quot;target&quot;.<sp/><sp/>Therefore<sp/>all<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>&quot;mid&quot;<sp/>are<sp/>uninteresting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AfterFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/><ref refid="version__set_8cc_1a598e50ba29b234ea6ee753e383e79452" kindref="member">ucmp</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice*<sp/><ref refid="version__set_8cc_1afced2118ae0bf03db7c7e75a21cfd004" kindref="member">user_key</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileMetaData*<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>user_key<sp/>occurs<sp/>before<sp/>all<sp/>keys<sp/>and<sp/>is<sp/>therefore<sp/>never<sp/>after<sp/>*f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(user_key<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucmp-&gt;Compare(*user_key,<sp/>f-&gt;largest.user_key())<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BeforeFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/>ucmp,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice*<sp/>user_key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileMetaData*<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>user_key<sp/>occurs<sp/>after<sp/>all<sp/>keys<sp/>and<sp/>is<sp/>therefore<sp/>never<sp/>before<sp/>*f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(user_key<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucmp-&gt;Compare(*user_key,<sp/>f-&gt;smallest.user_key())<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespaceleveldb_1a1a6a370f17b20667b885b5b91159c5a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a1a6a370f17b20667b885b5b91159c5a9" kindref="member">SomeFileOverlapsRange</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>&amp;<sp/>icmp,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disjoint_sorted_files,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>smallest_user_key,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>largest_user_key)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>ucmp<sp/>=<sp/>icmp.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!disjoint_sorted_files)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>check<sp/>against<sp/>all<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>files[i];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AfterFile(ucmp,<sp/>smallest_user_key,<sp/>f)<sp/>||</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeforeFile(ucmp,<sp/>largest_user_key,<sp/>f))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search<sp/>over<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smallest_user_key<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>earliest<sp/>possible<sp/>internal<sp/>key<sp/>for<sp/>smallest_user_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>small(*smallest_user_key,<sp/>kMaxSequenceNumber,kValueTypeForSeek);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" kindref="member">FindFile</ref>(icmp,<sp/>files,<sp/>small.<ref refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" kindref="member">Encode</ref>());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>files.size())<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>range<sp/>is<sp/>after<sp/>all<sp/>files,<sp/>so<sp/>no<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!BeforeFile(ucmp,<sp/>largest_user_key,<sp/>files[index]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>internal<sp/>iterator.<sp/><sp/>For<sp/>a<sp/>given<sp/>version/level<sp/>pair,<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>information<sp/>about<sp/>the<sp/>files<sp/>in<sp/>the<sp/>level.<sp/><sp/>For<sp/>a<sp/>given<sp/>entry,<sp/>key()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>largest<sp/>key<sp/>that<sp/>occurs<sp/>in<sp/>the<sp/>file,<sp/>and<sp/>value()<sp/>is<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>16-byte<sp/>value<sp/>containing<sp/>the<sp/>file<sp/>number<sp/>and<sp/>file<sp/>size,<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>encoded<sp/>using<sp/>EncodeFixed64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classleveldb_1_1_version_1_1_level_file_num_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator" kindref="compound">Version::LevelFileNumIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a7d9b5b7c74d74974ae322d20535f112a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a7d9b5b7c74d74974ae322d20535f112a" kindref="member">LevelFileNumIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>&amp;<sp/>icmp,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;*<sp/>flist)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>icmp_(icmp),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flist_(flist),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_(flist-&gt;size())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Marks<sp/>as<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1afb097a457cd972895393b3fbde7e2ad2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1afb097a457cd972895393b3fbde7e2ad2" kindref="member">Valid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index_<sp/>&lt;<sp/>flist_-&gt;size();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1adbe855f4a783c2f578e1ff2fbb5259b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1adbe855f4a783c2f578e1ff2fbb5259b2" kindref="member">Seek</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>target)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>index_<sp/>=<sp/><ref refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" kindref="member">FindFile</ref>(icmp_,<sp/>*flist_,<sp/>target);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a8e5d34bf0c1e17e83bbb9941821a7ee2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a8e5d34bf0c1e17e83bbb9941821a7ee2" kindref="member">SeekToFirst</ref>()<sp/>{<sp/>index_<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="169" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1ac7fafc33c049d1e33fdf9b5ae99f73d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1ac7fafc33c049d1e33fdf9b5ae99f73d8" kindref="member">SeekToLast</ref>()<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>flist_-&gt;empty()<sp/>?<sp/>0<sp/>:<sp/>flist_-&gt;size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a7f470d4bd4dd27ff653bd1e61ccfd759" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a7f470d4bd4dd27ff653bd1e61ccfd759" kindref="member">Next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1afb097a457cd972895393b3fbde7e2ad2" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>index_++;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1ab39c60a98d579590231034fdb665cb42" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1ab39c60a98d579590231034fdb665cb42" kindref="member">Prev</ref>()<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1afb097a457cd972895393b3fbde7e2ad2" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>flist_-&gt;size();<sp/><sp/></highlight><highlight class="comment">//<sp/>Marks<sp/>as<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index_--;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a8c2ee5f532fd05b2864f8d69d5c01f45" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a8c2ee5f532fd05b2864f8d69d5c01f45" kindref="member">key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1afb097a457cd972895393b3fbde7e2ad2" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*flist_)[index_]-&gt;largest.Encode();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1ac09a8ed595aca29d90e6af91e80a4f00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1ac09a8ed595aca29d90e6af91e80a4f00" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1afb097a457cd972895393b3fbde7e2ad2" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a725a2c0ebf763116b4ca3fb78564ff70" kindref="member">EncodeFixed64</ref>(value_buf_,<sp/>(*flist_)[index_]-&gt;number);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a725a2c0ebf763116b4ca3fb78564ff70" kindref="member">EncodeFixed64</ref>(value_buf_+8,<sp/>(*flist_)[index_]-&gt;file_size);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(value_buf_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value_buf_));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194" refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a98bae41a244b6a5a6675a7f7b322281d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1a98bae41a244b6a5a6675a7f7b322281d" kindref="member">status</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref><sp/>icmp_;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flist_;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>index_;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backing<sp/>store<sp/>for<sp/>value().<sp/><sp/>Holds<sp/>the<sp/>file<sp/>number<sp/>and<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value_buf_[16];</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>GetFileIterator(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>file_value)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_table_cache" kindref="compound">TableCache</ref>*<sp/>cache<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classleveldb_1_1_table_cache" kindref="compound">TableCache</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_value.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>()<sp/>!=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab2c425a5fcb13b97e50e32c7b93186f5" kindref="member">NewErrorIterator</ref>(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;FileReader<sp/>invoked<sp/>with<sp/>unexpected<sp/>value&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;<ref refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" kindref="member">NewIterator</ref>(options,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a239098b0291873752d0be16633652825" kindref="member">DecodeFixed64</ref>(file_value.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a239098b0291873752d0be16633652825" kindref="member">DecodeFixed64</ref>(file_value.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()<sp/>+<sp/>8));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">Iterator*<sp/>Version::NewConcatenatingIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ReadOptions&amp;<sp/>options,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a44a9b2f992cf66b7046581b72a095ea1" kindref="member">NewTwoLevelIterator</ref>(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LevelFileNumIterator(vset_-&gt;icmp_,<sp/>&amp;files_[level]),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;GetFileIterator,<sp/>vset_-&gt;table_cache_,<sp/>options);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classleveldb_1_1_version_1a035a0fa5bfe7ab84a711b1138b0b9a3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a035a0fa5bfe7ab84a711b1138b0b9a3d" kindref="member">Version::AddIterators</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Iterator*&gt;*<sp/>iters)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>all<sp/>level<sp/>zero<sp/>files<sp/>together<sp/>since<sp/>they<sp/>may<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files_[0].size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>iters-&gt;push_back(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vset_-&gt;table_cache_-&gt;<ref refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" kindref="member">NewIterator</ref>(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options,<sp/>files_[0][i]-&gt;number,<sp/>files_[0][i]-&gt;file_size));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>levels<sp/>&gt;<sp/>0,<sp/>we<sp/>can<sp/>use<sp/>a<sp/>concatenating<sp/>iterator<sp/>that<sp/>sequentially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>walks<sp/>through<sp/>the<sp/>non-overlapping<sp/>files<sp/>in<sp/>the<sp/>level,<sp/>opening<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lazily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>1;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!files_[level].empty())<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iters-&gt;push_back(NewConcatenatingIterator(options,<sp/>level));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callback<sp/>from<sp/>TableCache::Get()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SaverState<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>kNotFound,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>kFound,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>kDeleted,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>kCorrupt,</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Saver<sp/>{</highlight></codeline>
<codeline lineno="253" refid="version__set_8cc_1a6aad002d0db5e5e85dc31927a5a6f503" refkind="member"><highlight class="normal"><sp/><sp/>SaverState<sp/><ref refid="version__set_8cc_1a6aad002d0db5e5e85dc31927a5a6f503" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="254" refid="version__set_8cc_1a598e50ba29b234ea6ee753e383e79452" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/><ref refid="version__set_8cc_1a598e50ba29b234ea6ee753e383e79452" kindref="member">ucmp</ref>;</highlight></codeline>
<codeline lineno="255" refid="version__set_8cc_1afced2118ae0bf03db7c7e75a21cfd004" refkind="member"><highlight class="normal"><sp/><sp/>Slice<sp/><ref refid="version__set_8cc_1afced2118ae0bf03db7c7e75a21cfd004" kindref="member">user_key</ref>;</highlight></codeline>
<codeline lineno="256" refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" refkind="member"><highlight class="normal"><sp/><sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">};</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveValue(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>ikey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>Saver*<sp/>s<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Saver*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>ParsedInternalKey<sp/>parsed_key;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" kindref="member">ParseInternalKey</ref>(ikey,<sp/>&amp;parsed_key))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;state<sp/>=<sp/>kCorrupt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;ucmp-&gt;Compare(parsed_key.user_key,<sp/>s-&gt;user_key)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;state<sp/>=<sp/>(parsed_key.type<sp/>==<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>)<sp/>?<sp/>kFound<sp/>:<sp/>kDeleted;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;state<sp/>==<sp/>kFound)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;value-&gt;assign(v.data(),<sp/>v.size());</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NewestFirst(FileMetaData*<sp/>a,<sp/>FileMetaData*<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a-&gt;number<sp/>&gt;<sp/>b-&gt;number;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Version::ForEachOverlapping(Slice<sp/>user_key,<sp/>Slice<sp/>internal_key,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(*<ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>FileMetaData*))<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(sanjay):<sp/>Change<sp/>Version::Get()<sp/>to<sp/>use<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/>ucmp<sp/>=<sp/>vset_-&gt;icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>level-0<sp/>in<sp/>order<sp/>from<sp/>newest<sp/>to<sp/>oldest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>tmp;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>tmp.reserve(files_[0].size());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files_[0].size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>FileMetaData*<sp/>f<sp/>=<sp/>files_[0][i];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucmp-&gt;Compare(user_key,<sp/>f-&gt;smallest.user_key())<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucmp-&gt;Compare(user_key,<sp/>f-&gt;largest.user_key())<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.push_back(f);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp.empty())<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(tmp.begin(),<sp/>tmp.end(),<sp/>NewestFirst);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tmp.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*<ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>)(<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>,<sp/>0,<sp/>tmp[i]))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>other<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>1;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_files<sp/>=<sp/>files_[level].size();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_files<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search<sp/>to<sp/>find<sp/>earliest<sp/>index<sp/>whose<sp/>largest<sp/>key<sp/>&gt;=<sp/>internal_key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>index<sp/>=<sp/><ref refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" kindref="member">FindFile</ref>(vset_-&gt;icmp_,<sp/>files_[level],<sp/>internal_key);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>num_files)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FileMetaData*<sp/>f<sp/>=<sp/>files_[level][index];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucmp-&gt;Compare(user_key,<sp/>f-&gt;smallest.user_key())<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>of<sp/>&quot;f&quot;<sp/>is<sp/>past<sp/>any<sp/>data<sp/>for<sp/>user_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*<ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>)(<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>,<sp/>level,<sp/>f))<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" kindref="member">Version::Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_lookup_key" kindref="compound">LookupKey</ref>&amp;<sp/>k,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_version_1_1_get_stats" kindref="compound">GetStats</ref>*<sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>ikey<sp/>=<sp/>k.<ref refid="classleveldb_1_1_lookup_key_1a3578de91f795e450b05a870795339b40" kindref="member">internal_key</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>user_key<sp/>=<sp/>k.<ref refid="classleveldb_1_1_lookup_key_1adf91e9804383dd1b2bfd8545df45342f" kindref="member">user_key</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>ucmp<sp/>=<sp/>vset_-&gt;icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>stats-&gt;<ref refid="structleveldb_1_1_version_1_1_get_stats_1a8c677e9a2d5bc48a5bcc40e07dd2cca7" kindref="member">seek_file</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>stats-&gt;<ref refid="structleveldb_1_1_version_1_1_get_stats_1a6cd952d5850faf00c7d45f79973a76d4" kindref="member">seek_file_level</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>last_file_read<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_file_read_level<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>search<sp/>level-by-level<sp/>since<sp/>entries<sp/>never<sp/>hop<sp/>across</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>levels.<sp/><sp/>Therefore<sp/>we<sp/>are<sp/>guaranteed<sp/>that<sp/>if<sp/>we<sp/>find<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>an<sp/>smaller<sp/>level,<sp/>later<sp/>levels<sp/>are<sp/>irrelevant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>tmp;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>tmp2;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_files<sp/>=<sp/>files_[level].size();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_files<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>list<sp/>of<sp/>files<sp/>to<sp/>search<sp/>in<sp/>this<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>files<sp/>=<sp/>&amp;files_[level][0];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Level-0<sp/>files<sp/>may<sp/>overlap<sp/>each<sp/>other.<sp/><sp/>Find<sp/>all<sp/>files<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap<sp/>user_key<sp/>and<sp/>process<sp/>them<sp/>in<sp/>order<sp/>from<sp/>newest<sp/>to<sp/>oldest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.reserve(num_files);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_files;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>files[i];</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(user_key,<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>.<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>())<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(user_key,<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>.<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>())<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.push_back(f);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.empty())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(tmp.begin(),<sp/>tmp.end(),<sp/>NewestFirst);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>files<sp/>=<sp/>&amp;tmp[0];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_files<sp/>=<sp/>tmp.size();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search<sp/>to<sp/>find<sp/>earliest<sp/>index<sp/>whose<sp/>largest<sp/>key<sp/>&gt;=<sp/>ikey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>index<sp/>=<sp/><ref refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" kindref="member">FindFile</ref>(vset_-&gt;icmp_,<sp/>files_[level],<sp/>ikey);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>num_files)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_files<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp2<sp/>=<sp/>files[index];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(user_key,<sp/>tmp2-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>.<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>())<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>of<sp/>&quot;tmp2&quot;<sp/>is<sp/>past<sp/>any<sp/>data<sp/>for<sp/>user_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_files<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files<sp/>=<sp/>&amp;tmp2;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_files<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_files;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_file_read<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>stats-&gt;<ref refid="structleveldb_1_1_version_1_1_get_stats_1a8c677e9a2d5bc48a5bcc40e07dd2cca7" kindref="member">seek_file</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>had<sp/>more<sp/>than<sp/>one<sp/>seek<sp/>for<sp/>this<sp/>read.<sp/><sp/>Charge<sp/>the<sp/>1st<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats-&gt;<ref refid="structleveldb_1_1_version_1_1_get_stats_1a8c677e9a2d5bc48a5bcc40e07dd2cca7" kindref="member">seek_file</ref><sp/>=<sp/>last_file_read;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats-&gt;<ref refid="structleveldb_1_1_version_1_1_get_stats_1a6cd952d5850faf00c7d45f79973a76d4" kindref="member">seek_file_level</ref><sp/>=<sp/>last_file_read_level;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>files[i];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_file_read<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_file_read_level<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Saver<sp/>saver;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saver.state<sp/>=<sp/>kNotFound;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saver.ucmp<sp/>=<sp/><ref refid="version__set_8cc_1a598e50ba29b234ea6ee753e383e79452" kindref="member">ucmp</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saver.user_key<sp/>=<sp/><ref refid="version__set_8cc_1afced2118ae0bf03db7c7e75a21cfd004" kindref="member">user_key</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saver.value<sp/>=<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>vset_-&gt;table_cache_-&gt;<ref refid="classleveldb_1_1_table_cache_1af43ba38b52742e9f5589321747535444" kindref="member">Get</ref>(options,<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1adc63bac3e06fd4387ebb9f085fc88fe7" kindref="member">number</ref>,<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a778ea9c773ad4fdfe4408eecaae754f7" kindref="member">file_size</ref>,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ikey,<sp/>&amp;saver,<sp/>SaveValue);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(saver.state)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kNotFound:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>searching<sp/>in<sp/>other<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kFound:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kDeleted:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a9e5beb5b2e758f041e0c012426e7b1b8" kindref="member">Status::NotFound</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>());<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>empty<sp/>error<sp/>message<sp/>for<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kCorrupt:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;corrupted<sp/>key<sp/>for<sp/>&quot;</highlight><highlight class="normal">,<sp/>user_key);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a9e5beb5b2e758f041e0c012426e7b1b8" kindref="member">Status::NotFound</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>());<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>an<sp/>empty<sp/>error<sp/>message<sp/>for<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classleveldb_1_1_version_1a7e5b8451deb7c4b9006fd9d5ccfc2cef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a7e5b8451deb7c4b9006fd9d5ccfc2cef" kindref="member">Version::UpdateStats</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_version_1_1_get_stats" kindref="compound">GetStats</ref>&amp;<sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>stats.<ref refid="structleveldb_1_1_version_1_1_get_stats_1a8c677e9a2d5bc48a5bcc40e07dd2cca7" kindref="member">seek_file</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a63f9a0149290c7b22bbc871da6b4f619" kindref="member">allowed_seeks</ref>--;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a63f9a0149290c7b22bbc871da6b4f619" kindref="member">allowed_seeks</ref><sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>file_to_compact_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file_to_compact_<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file_to_compact_level_<sp/>=<sp/>stats.<ref refid="structleveldb_1_1_version_1_1_get_stats_1a6cd952d5850faf00c7d45f79973a76d4" kindref="member">seek_file_level</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classleveldb_1_1_version_1a8b9e51b3d0503fe5868f656356557ded" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a8b9e51b3d0503fe5868f656356557ded" kindref="member">Version::RecordReadSample</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>internal_key)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_parsed_internal_key" kindref="compound">ParsedInternalKey</ref><sp/>ikey;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" kindref="member">ParseInternalKey</ref>(internal_key,<sp/>&amp;ikey))<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_state" kindref="compound">State</ref><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_version_1_1_get_stats" kindref="compound">GetStats</ref><sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Holds<sp/>first<sp/>matching<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matches;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Match(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_state" kindref="compound">State</ref>*<sp/><ref refid="version__set_8cc_1a6aad002d0db5e5e85dc31927a5a6f503" kindref="member">state</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structleveldb_1_1_state" kindref="compound">State</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;matches++;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;matches<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>first<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;stats.seek_file<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;stats.seek_file_level<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>stop<sp/>iterating<sp/>once<sp/>we<sp/>have<sp/>a<sp/>second<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;matches<sp/>&lt;<sp/>2;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_state" kindref="compound">State</ref><sp/><ref refid="version__set_8cc_1a6aad002d0db5e5e85dc31927a5a6f503" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>state.matches<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>ForEachOverlapping(ikey.<ref refid="structleveldb_1_1_parsed_internal_key_1aa6e30fcf3c95fc1485d60fa08efe2b9d" kindref="member">user_key</ref>,<sp/>internal_key,<sp/>&amp;state,<sp/>&amp;State::Match);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>have<sp/>at<sp/>least<sp/>two<sp/>matches<sp/>since<sp/>we<sp/>want<sp/>to<sp/>merge<sp/>across</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>files.<sp/>But<sp/>what<sp/>if<sp/>we<sp/>have<sp/>a<sp/>single<sp/>file<sp/>that<sp/>contains<sp/>many</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>overwrites<sp/>and<sp/>deletions?<sp/><sp/>Should<sp/>we<sp/>have<sp/>another<sp/>mechanism<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finding<sp/>such<sp/>files?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.matches<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1MB<sp/>cost<sp/>is<sp/>about<sp/>1<sp/>seek<sp/>(see<sp/>comment<sp/>in<sp/>Builder::Apply).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a7e5b8451deb7c4b9006fd9d5ccfc2cef" kindref="member">UpdateStats</ref>(state.stats);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Version::Ref</ref>()<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>++refs_;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Version::Unref</ref>()<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>assert(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;vset_-&gt;dummy_versions_);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>assert(refs_<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>--refs_;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refs_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="classleveldb_1_1_version_1a7945e88b8a4f2f7b6f3201cb3d791f1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a7945e88b8a4f2f7b6f3201cb3d791f1e" kindref="member">Version::OverlapInLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>smallest_user_key,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>largest_user_key)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a1a6a370f17b20667b885b5b91159c5a9" kindref="member">SomeFileOverlapsRange</ref>(vset_-&gt;icmp_,<sp/>(level<sp/>&gt;<sp/>0),<sp/>files_[level],</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest_user_key,<sp/>largest_user_key);</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="classleveldb_1_1_version_1ac3b623319110ed2a9491723dd4675431" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1ac3b623319110ed2a9491723dd4675431" kindref="member">Version::PickLevelForMemTableOutput</ref>(</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>smallest_user_key,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>largest_user_key)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classleveldb_1_1_version_1a7945e88b8a4f2f7b6f3201cb3d791f1e" kindref="member">OverlapInLevel</ref>(0,<sp/>&amp;smallest_user_key,<sp/>&amp;largest_user_key))<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>to<sp/>next<sp/>level<sp/>if<sp/>there<sp/>is<sp/>no<sp/>overlap<sp/>in<sp/>next<sp/>level,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>#bytes<sp/>overlapping<sp/>in<sp/>the<sp/>level<sp/>after<sp/>that<sp/>are<sp/>limited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>(smallest_user_key,<sp/>kMaxSequenceNumber,<sp/>kValueTypeForSeek);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>limit(largest_user_key,<sp/>0,<sp/>static_cast&lt;ValueType&gt;(0));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>overlaps;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(level<sp/>&lt;<sp/>config::kMaxMemCompactLevel)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classleveldb_1_1_version_1a7945e88b8a4f2f7b6f3201cb3d791f1e" kindref="member">OverlapInLevel</ref>(level<sp/>+<sp/>1,<sp/>&amp;smallest_user_key,<sp/>&amp;largest_user_key))<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>+<sp/>2<sp/>&lt;<sp/>config::kNumLevels)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>file<sp/>does<sp/>not<sp/>overlap<sp/>too<sp/>many<sp/>grandparent<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(level<sp/>+<sp/>2,<sp/>&amp;start,<sp/>&amp;limit,<sp/>&amp;overlaps);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>sum<sp/>=<sp/>TotalFileSize(overlaps);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>&gt;<sp/>kMaxGrandParentOverlapBytes)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level++;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Store<sp/>in<sp/>&quot;*inputs&quot;<sp/>all<sp/>files<sp/>in<sp/>&quot;level&quot;<sp/>that<sp/>overlap<sp/>[begin,end]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">Version::GetOverlappingInputs</ref>(</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>begin,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>end,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;*<sp/>inputs)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>assert(level<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>assert(level<sp/>&lt;<sp/>config::kNumLevels);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>inputs-&gt;clear();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>user_begin,<sp/>user_end;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>user_begin<sp/>=<sp/>begin-&gt;<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>user_end<sp/>=<sp/>end-&gt;<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>user_cmp<sp/>=<sp/>vset_-&gt;icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files_[level].size();<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>files_[level][i++];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>file_start<sp/>=<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>.<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>file_limit<sp/>=<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>.<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>user_cmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(file_limit,<sp/>user_begin)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;f&quot;<sp/>is<sp/>completely<sp/>before<sp/>specified<sp/>range;<sp/>skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>user_cmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(file_start,<sp/>user_end)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;f&quot;<sp/>is<sp/>completely<sp/>after<sp/>specified<sp/>range;<sp/>skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputs-&gt;push_back(f);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Level-0<sp/>files<sp/>may<sp/>overlap<sp/>each<sp/>other.<sp/><sp/>So<sp/>check<sp/>if<sp/>the<sp/>newly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>file<sp/>has<sp/>expanded<sp/>the<sp/>range.<sp/><sp/>If<sp/>so,<sp/>restart<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>user_cmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(file_start,<sp/>user_begin)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_begin<sp/>=<sp/>file_start;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs-&gt;<ref refid="classleveldb_1_1_slice_1ab9b6e340e8a483a5cf713f6be17709e3" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>user_cmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(file_limit,<sp/>user_end)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_end<sp/>=<sp/>file_limit;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs-&gt;<ref refid="classleveldb_1_1_slice_1ab9b6e340e8a483a5cf713f6be17709e3" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="classleveldb_1_1_version_1a83d35444c8e7c617a3a70e4c9050ce08" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classleveldb_1_1_version_1a83d35444c8e7c617a3a70e4c9050ce08" kindref="member">Version::DebugString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>std::string<sp/>r;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E.g.,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>---<sp/>level<sp/>1<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>17:123[&apos;a&apos;<sp/>..<sp/>&apos;d&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>20:43[&apos;e&apos;<sp/>..<sp/>&apos;g&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>r.append(</highlight><highlight class="stringliteral">&quot;---<sp/>level<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a089617d12900e6fe5b712c31f651b5ff" kindref="member">AppendNumberTo</ref>(&amp;r,<sp/>level);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>r.append(</highlight><highlight class="stringliteral">&quot;<sp/>---\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files<sp/>=<sp/>files_[level];</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.push_back(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a089617d12900e6fe5b712c31f651b5ff" kindref="member">AppendNumberTo</ref>(&amp;r,<sp/>files[i]-&gt;number);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.push_back(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a089617d12900e6fe5b712c31f651b5ff" kindref="member">AppendNumberTo</ref>(&amp;r,<sp/>files[i]-&gt;file_size);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.append(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.append(files[i]-&gt;smallest.DebugString());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.append(</highlight><highlight class="stringliteral">&quot;<sp/>..<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.append(files[i]-&gt;largest.DebugString());</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.append(</highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>class<sp/>so<sp/>we<sp/>can<sp/>efficiently<sp/>apply<sp/>a<sp/>whole<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>edits<sp/>to<sp/>a<sp/>particular<sp/>state<sp/>without<sp/>creating<sp/>intermediate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Versions<sp/>that<sp/>contain<sp/>full<sp/>copies<sp/>of<sp/>the<sp/>intermediate<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="classleveldb_1_1_version_set_1_1_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version_set_1_1_builder" kindref="compound">VersionSet::Builder</ref><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>sort<sp/>by<sp/>v-&gt;files_[file_number].smallest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BySmallestKey<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>*<sp/>internal_comparator;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(<ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f1,<sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>internal_comparator-&gt;<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(f1-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>,<sp/>f2-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>ties<sp/>by<sp/>file<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(f1-&gt;<ref refid="structleveldb_1_1_file_meta_data_1adc63bac3e06fd4387ebb9f085fc88fe7" kindref="member">number</ref><sp/>&lt;<sp/>f2-&gt;<ref refid="structleveldb_1_1_file_meta_data_1adc63bac3e06fd4387ebb9f085fc88fe7" kindref="member">number</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::set&lt;FileMetaData*,<sp/>BySmallestKey&gt;<sp/>FileSet;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">LevelState<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;uint64_t&gt;<sp/>deleted_files;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>FileSet*<sp/>added_files;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>*<sp/>vset_;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>base_;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>LevelState<sp/>levels_[config::kNumLevels];</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>builder<sp/>with<sp/>the<sp/>files<sp/>from<sp/>*base<sp/>and<sp/>other<sp/>info<sp/>from<sp/>*vset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="classleveldb_1_1_version_set_1_1_builder_1a19d0dd9aec1b825e7d938e9ac24dc4f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1a19d0dd9aec1b825e7d938e9ac24dc4f7" kindref="member">Builder</ref>(<ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>*<sp/>vset,<sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>vset_(vset),</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_(base)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>base_-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>BySmallestKey<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>cmp.internal_comparator<sp/>=<sp/>&amp;vset_-&gt;icmp_;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>levels_[level].added_files<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FileSet(cmp);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="classleveldb_1_1_version_set_1_1_builder_1acd7047ca78d8c654967101f53d10792c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1acd7047ca78d8c654967101f53d10792c" kindref="member">~Builder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileSet*<sp/>added<sp/>=<sp/>levels_[level].added_files;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>to_unref;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_unref.reserve(added-&gt;size());</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(FileSet::const_iterator<sp/>it<sp/>=<sp/>added-&gt;begin();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>added-&gt;end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_unref.push_back(*it);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>added;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>to_unref.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>to_unref[i];</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a199e4ba2167c8facad8bd41269982935" kindref="member">refs</ref>--;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a199e4ba2167c8facad8bd41269982935" kindref="member">refs</ref><sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>base_-&gt;<ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>all<sp/>of<sp/>the<sp/>edits<sp/>in<sp/>*edit<sp/>to<sp/>the<sp/>current<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="classleveldb_1_1_version_set_1_1_builder_1aef505b4363ebc56b8fa5deb55087993f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1aef505b4363ebc56b8fa5deb55087993f" kindref="member">Apply</ref>(<ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref>*<sp/>edit)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>compaction<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>edit-&gt;compact_pointers_.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>edit-&gt;compact_pointers_[i].first;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vset_-&gt;compact_pointer_[level]<sp/>=</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edit-&gt;compact_pointers_[i].second.Encode().ToString();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VersionEdit::DeletedFileSet&amp;<sp/>del<sp/>=<sp/>edit-&gt;deleted_files_;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(VersionEdit::DeletedFileSet::const_iterator<sp/>iter<sp/>=<sp/>del.begin();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>del.end();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>levels_[level].deleted_files.insert(number);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>new<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>edit-&gt;new_files_.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>edit-&gt;new_files_[i].first;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>(edit-&gt;new_files_[i].second);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a199e4ba2167c8facad8bd41269982935" kindref="member">refs</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>arrange<sp/>to<sp/>automatically<sp/>compact<sp/>this<sp/>file<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>certain<sp/>number<sp/>of<sp/>seeks.<sp/><sp/>Let&apos;s<sp/>assume:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(1)<sp/>One<sp/>seek<sp/>costs<sp/>10ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(2)<sp/>Writing<sp/>or<sp/>reading<sp/>1MB<sp/>costs<sp/>10ms<sp/>(100MB/s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(3)<sp/>A<sp/>compaction<sp/>of<sp/>1MB<sp/>does<sp/>25MB<sp/>of<sp/>IO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1MB<sp/>read<sp/>from<sp/>this<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10-12MB<sp/>read<sp/>from<sp/>next<sp/>level<sp/>(boundaries<sp/>may<sp/>be<sp/>misaligned)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10-12MB<sp/>written<sp/>to<sp/>next<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>implies<sp/>that<sp/>25<sp/>seeks<sp/>cost<sp/>the<sp/>same<sp/>as<sp/>the<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>1MB<sp/>of<sp/>data.<sp/><sp/>I.e.,<sp/>one<sp/>seek<sp/>costs<sp/>approximately<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>the<sp/>compaction<sp/>of<sp/>40KB<sp/>of<sp/>data.<sp/><sp/>We<sp/>are<sp/>a<sp/>little</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conservative<sp/>and<sp/>allow<sp/>approximately<sp/>one<sp/>seek<sp/>for<sp/>every<sp/>16KB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>data<sp/>before<sp/>triggering<sp/>a<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a63f9a0149290c7b22bbc871da6b4f619" kindref="member">allowed_seeks</ref><sp/>=<sp/>(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a778ea9c773ad4fdfe4408eecaae754f7" kindref="member">file_size</ref><sp/>/<sp/>16384);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a63f9a0149290c7b22bbc871da6b4f619" kindref="member">allowed_seeks</ref><sp/>&lt;<sp/>100)<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a63f9a0149290c7b22bbc871da6b4f619" kindref="member">allowed_seeks</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>levels_[level].deleted_files.erase(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1adc63bac3e06fd4387ebb9f085fc88fe7" kindref="member">number</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>levels_[level].added_files-&gt;insert(f);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>current<sp/>state<sp/>in<sp/>*v.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="classleveldb_1_1_version_set_1_1_builder_1a429b23cc022cac08ab2ba880ac5803d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1a429b23cc022cac08ab2ba880ac5803d1" kindref="member">SaveTo</ref>(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>BySmallestKey<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>cmp.internal_comparator<sp/>=<sp/>&amp;vset_-&gt;icmp_;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>the<sp/>set<sp/>of<sp/>added<sp/>files<sp/>with<sp/>the<sp/>set<sp/>of<sp/>pre-existing<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drop<sp/>any<sp/>deleted<sp/>files.<sp/><sp/>Store<sp/>the<sp/>result<sp/>in<sp/>*v.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>base_files<sp/>=<sp/>base_-&gt;files_[level];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;::const_iterator<sp/>base_iter<sp/>=<sp/>base_files.begin();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;::const_iterator<sp/>base_end<sp/>=<sp/>base_files.end();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileSet*<sp/>added<sp/>=<sp/>levels_[level].added_files;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;files_[level].reserve(base_files.size()<sp/>+<sp/>added-&gt;size());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(FileSet::const_iterator<sp/>added_iter<sp/>=<sp/>added-&gt;begin();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>added_iter<sp/>!=<sp/>added-&gt;end();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++added_iter)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>smaller<sp/>files<sp/>listed<sp/>in<sp/>base_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;FileMetaData*&gt;::const_iterator<sp/>bpos</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::upper_bound(base_iter,<sp/>base_end,<sp/>*added_iter,<sp/>cmp);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_iter<sp/>!=<sp/>bpos;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++base_iter)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1aa90e0d9d0f8e05b8bcfa879d4f4a88c6" kindref="member">MaybeAddFile</ref>(v,<sp/>level,<sp/>*base_iter);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1aa90e0d9d0f8e05b8bcfa879d4f4a88c6" kindref="member">MaybeAddFile</ref>(v,<sp/>level,<sp/>*added_iter);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>remaining<sp/>base<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>base_iter<sp/>!=<sp/>base_end;<sp/>++base_iter)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1aa90e0d9d0f8e05b8bcfa879d4f4a88c6" kindref="member">MaybeAddFile</ref>(v,<sp/>level,<sp/>*base_iter);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>there<sp/>is<sp/>no<sp/>overlap<sp/>in<sp/>levels<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>v-&gt;files_[level].size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>&amp;<sp/>prev_end<sp/>=<sp/>v-&gt;files_[level][i-1]-&gt;largest;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>&amp;<sp/>this_begin<sp/>=<sp/>v-&gt;files_[level][i]-&gt;smallest;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vset_-&gt;icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(prev_end,<sp/>this_begin)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;overlapping<sp/>ranges<sp/>in<sp/>same<sp/>level<sp/>%s<sp/>vs.<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_end.<ref refid="classleveldb_1_1_internal_key_1a737053e1b02c3eb8361e960f7fe5befb" kindref="member">DebugString</ref>().c_str(),</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_begin.<ref refid="classleveldb_1_1_internal_key_1a737053e1b02c3eb8361e960f7fe5befb" kindref="member">DebugString</ref>().c_str());</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="classleveldb_1_1_version_set_1_1_builder_1aa90e0d9d0f8e05b8bcfa879d4f4a88c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder_1aa90e0d9d0f8e05b8bcfa879d4f4a88c6" kindref="member">MaybeAddFile</ref>(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(levels_[level].deleted_files.count(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1adc63bac3e06fd4387ebb9f085fc88fe7" kindref="member">number</ref>)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>is<sp/>deleted:<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;*<sp/>files<sp/>=<sp/>&amp;v-&gt;files_[level];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!files-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>not<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(vset_-&gt;icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>((*files)[files-&gt;size()-1]-&gt;largest,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>)<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a199e4ba2167c8facad8bd41269982935" kindref="member">refs</ref>++;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>files-&gt;push_back(f);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal">};</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="classleveldb_1_1_version_set_1a9e57cec002caced94f5355bb705bd52d" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_version_set_1a9e57cec002caced94f5355bb705bd52d" kindref="member">VersionSet::VersionSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dbname,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>*<sp/>options,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_table_cache" kindref="compound">TableCache</ref>*<sp/>table_cache,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>*<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>(options-&gt;env),</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a2661128a4b7cbc28cec2dfc2fa13816f" kindref="member">dbname_</ref>(dbname),</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a277741aecbdc3655b3bde5df34d80513" kindref="member">options_</ref>(options),</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a3a1b17e04f2f36697594146dfd0cdab1" kindref="member">table_cache_</ref>(table_cache),</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a49fb5b3528eb4f2b72f03af0ddc271dc" kindref="member">icmp_</ref>(*cmp),</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1ac836213121a88334277d0736717f3c51" kindref="member">next_file_number_</ref>(2),</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>manifest_file_number_(0),<sp/><sp/></highlight><highlight class="comment">//<sp/>Filled<sp/>by<sp/>Recover()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_sequence_(0),</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_number_(0),</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_log_number_(0),</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>descriptor_file_(NULL),</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>descriptor_log_(NULL),</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dummy_versions_(this),</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merger_8cc_1a29ad3b792b4f045e9e25d657bd605060" kindref="member">current_</ref>(NULL)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>AppendVersion(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1ace162f32d4abb584945d3a55a389b0a3" kindref="member">Version</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="classleveldb_1_1_version_set_1a53a424c5bb7699808193f150e3432e92" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_version_set_1a53a424c5bb7699808193f150e3432e92" kindref="member">VersionSet::~VersionSet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>assert(dummy_versions_.next_<sp/>==<sp/>&amp;dummy_versions_);<sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>must<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>descriptor_log_;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>descriptor_file_;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionSet::AppendVersion(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>&quot;v&quot;<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>assert(v-&gt;refs_<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>assert(v<sp/>!=<sp/>current_);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>current_<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>to<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>v-&gt;prev_<sp/>=<sp/>dummy_versions_.prev_;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>v-&gt;next_<sp/>=<sp/>&amp;dummy_versions_;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>v-&gt;prev_-&gt;next_<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>v-&gt;next_-&gt;prev_<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">VersionSet::LogAndApply</ref>(<ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref>*<sp/>edit,<sp/><ref refid="classleveldb_1_1port_1_1_mutex" kindref="compound">port::Mutex</ref>*<sp/><ref refid="db__bench_8cc_1a1a5c2f3b52d2dec1d9896cec4b02d17e" kindref="member">mu</ref>)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edit-&gt;has_log_number_)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(edit-&gt;log_number_<sp/>&gt;=<sp/>log_number_);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(edit-&gt;log_number_<sp/>&lt;<sp/>next_file_number_);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>edit-&gt;<ref refid="classleveldb_1_1_version_edit_1a47e5c58d34b0e27dc8990687e0c5477a" kindref="member">SetLogNumber</ref>(log_number_);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!edit-&gt;has_prev_log_number_)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>edit-&gt;<ref refid="classleveldb_1_1_version_edit_1ac1b5689f62e7a8f63c4eefa437a4f2f3" kindref="member">SetPrevLogNumber</ref>(prev_log_number_);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>edit-&gt;<ref refid="classleveldb_1_1_version_edit_1a4c104515adf573be0ead29e6835f14fb" kindref="member">SetNextFile</ref>(next_file_number_);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>edit-&gt;<ref refid="classleveldb_1_1_version_edit_1abd6e841ed400672d33d26f4b187a66bf" kindref="member">SetLastSequence</ref>(last_sequence_);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1ace162f32d4abb584945d3a55a389b0a3" kindref="member">Version</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder" kindref="compound">Builder</ref><sp/>builder(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>current_);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.<ref refid="classleveldb_1_1_version_set_1_1_builder_1aef505b4363ebc56b8fa5deb55087993f" kindref="member">Apply</ref>(edit);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.<ref refid="classleveldb_1_1_version_set_1_1_builder_1a429b23cc022cac08ab2ba880ac5803d1" kindref="member">SaveTo</ref>(v);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>Finalize(v);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>new<sp/>descriptor<sp/>log<sp/>file<sp/>if<sp/>necessary<sp/>by<sp/>creating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>temporary<sp/>file<sp/>that<sp/>contains<sp/>a<sp/>snapshot<sp/>of<sp/>the<sp/>current<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>std::string<sp/>new_manifest_file;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descriptor_log_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>reason<sp/>to<sp/>unlock<sp/>*mu<sp/>here<sp/>since<sp/>we<sp/>only<sp/>hit<sp/>this<sp/>path<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>call<sp/>to<sp/>LogAndApply<sp/>(when<sp/>opening<sp/>the<sp/>database).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(descriptor_file_<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>new_manifest_file<sp/>=<sp/><ref refid="namespaceleveldb_1a1ea160b70b18dc85b537e16db3d6ddd0" kindref="member">DescriptorFileName</ref>(dbname_,<sp/>manifest_file_number_);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>edit-&gt;<ref refid="classleveldb_1_1_version_edit_1a4c104515adf573be0ead29e6835f14fb" kindref="member">SetNextFile</ref>(next_file_number_);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(new_manifest_file,<sp/>&amp;descriptor_file_);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>descriptor_log_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_writer" kindref="compound">log::Writer</ref>(descriptor_file_);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>WriteSnapshot(descriptor_log_);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unlock<sp/>during<sp/>expensive<sp/>MANIFEST<sp/>log<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>mu-&gt;<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>new<sp/>record<sp/>to<sp/>MANIFEST<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>record;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edit-&gt;<ref refid="classleveldb_1_1_version_edit_1aa3161c67223f6c5e843be579a8456086" kindref="member">EncodeTo</ref>(&amp;record);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>descriptor_log_-&gt;<ref refid="classleveldb_1_1log_1_1_writer_1acb4abda5a5348ac1771657ff01bf2fad" kindref="member">AddRecord</ref>(record);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>descriptor_file_-&gt;<ref refid="classleveldb_1_1_writable_file_1a2d2dcef02a2c9e71f3d39125bcd5a606" kindref="member">Sync</ref>();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_-&gt;<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;MANIFEST<sp/>write:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>just<sp/>created<sp/>a<sp/>new<sp/>descriptor<sp/>file,<sp/>install<sp/>it<sp/>by<sp/>writing<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>CURRENT<sp/>file<sp/>that<sp/>points<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>()<sp/>&amp;&amp;<sp/>!new_manifest_file.empty())<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="namespaceleveldb_1a73133aa2e18928553d14913491b094e7" kindref="member">SetCurrentFile</ref>(env_,<sp/>dbname_,<sp/>manifest_file_number_);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>mu-&gt;<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Install<sp/>the<sp/>new<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>AppendVersion(v);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>log_number_<sp/>=<sp/>edit-&gt;log_number_;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_log_number_<sp/>=<sp/>edit-&gt;prev_log_number_;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_manifest_file.empty())<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>descriptor_log_;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>descriptor_file_;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>descriptor_log_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>descriptor_file_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af" kindref="member">DeleteFile</ref>(new_manifest_file);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" kindref="member">VersionSet::Recover</ref>()<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">LogReporter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_reader_1_1_reporter" kindref="compound">log::Reader::Reporter</ref><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>*<sp/>status;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Corruption(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;status-&gt;<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>*this-&gt;status<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>&quot;CURRENT&quot;<sp/>file,<sp/>which<sp/>contains<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>current<sp/>manifest<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="namespaceleveldb_1aa47a20ae782e9ad537692c3202cd652d" kindref="member">ReadFileToString</ref>(env_,<sp/><ref refid="namespaceleveldb_1affcb2d434f2a772d7c764cd5d1797a9a" kindref="member">CurrentFileName</ref>(dbname_),<sp/>&amp;current);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current.empty()<sp/>||<sp/>current[current.size()-1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;CURRENT<sp/>file<sp/>does<sp/>not<sp/>end<sp/>with<sp/>newline&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>current.resize(current.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>std::string<sp/>dscname<sp/>=<sp/>dbname_<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref>*<sp/>file;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351" kindref="member">NewSequentialFile</ref>(dscname,<sp/>&amp;file);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_log_number<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_prev_log_number<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_next_file<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_last_sequence<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>next_file<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>last_sequence<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>log_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>prev_log_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set_1_1_builder" kindref="compound">Builder</ref><sp/>builder(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>current_);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>LogReporter<sp/>reporter;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>reporter.status<sp/>=<sp/>&amp;s;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1log_1_1_reader" kindref="compound">log::Reader</ref><sp/>reader(file,<sp/>&amp;reporter,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="comment">/*checksum*/</highlight><highlight class="normal">,<sp/>0</highlight><highlight class="comment">/*initial_offset*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>record;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>scratch;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(reader.<ref refid="classleveldb_1_1log_1_1_reader_1a84059598c9367cb677a9d70d77993282" kindref="member">ReadRecord</ref>(&amp;record,<sp/>&amp;scratch)<sp/>&amp;&amp;<sp/>s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref><sp/>edit;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>edit.<ref refid="classleveldb_1_1_version_edit_1ac0f431c5e8f08c74c697d8480f7c005f" kindref="member">DecodeFrom</ref>(record);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edit.has_comparator_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edit.comparator_<sp/>!=<sp/>icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1a888b039bdd6d59517dca75fb40721f5e" kindref="member">Name</ref>())<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1aefef9f88d0a6ca6d34bd9dec1670309e" kindref="member">Status::InvalidArgument</ref>(</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edit.comparator_<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>match<sp/>existing<sp/>comparator<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1a888b039bdd6d59517dca75fb40721f5e" kindref="member">Name</ref>());</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.<ref refid="classleveldb_1_1_version_set_1_1_builder_1aef505b4363ebc56b8fa5deb55087993f" kindref="member">Apply</ref>(&amp;edit);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edit.has_log_number_)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_number<sp/>=<sp/>edit.log_number_;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have_log_number<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edit.has_prev_log_number_)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_log_number<sp/>=<sp/>edit.prev_log_number_;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have_prev_log_number<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edit.has_next_file_number_)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_file<sp/>=<sp/>edit.next_file_number_;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have_next_file<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edit.has_last_sequence_)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_sequence<sp/>=<sp/>edit.last_sequence_;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have_last_sequence<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have_next_file)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>meta-nextfile<sp/>entry<sp/>in<sp/>descriptor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have_log_number)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>meta-lognumber<sp/>entry<sp/>in<sp/>descriptor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have_last_sequence)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>last-sequence-number<sp/>entry<sp/>in<sp/>descriptor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have_prev_log_number)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_log_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_set_1a8a009a58938b12c7a69bda2b4da115a0" kindref="member">MarkFileNumberUsed</ref>(prev_log_number);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_set_1a8a009a58938b12c7a69bda2b4da115a0" kindref="member">MarkFileNumberUsed</ref>(log_number);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1ace162f32d4abb584945d3a55a389b0a3" kindref="member">Version</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.<ref refid="classleveldb_1_1_version_set_1_1_builder_1a429b23cc022cac08ab2ba880ac5803d1" kindref="member">SaveTo</ref>(v);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Install<sp/>recovered<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>Finalize(v);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>AppendVersion(v);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>manifest_file_number_<sp/>=<sp/>next_file;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>next_file_number_<sp/>=<sp/>next_file<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>last_sequence_<sp/>=<sp/>last_sequence;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>log_number_<sp/>=<sp/>log_number;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_log_number_<sp/>=<sp/>prev_log_number;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="classleveldb_1_1_version_set_1a8a009a58938b12c7a69bda2b4da115a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a8a009a58938b12c7a69bda2b4da115a0" kindref="member">VersionSet::MarkFileNumberUsed</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_file_number_<sp/>&lt;=<sp/>number)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>next_file_number_<sp/>=<sp/>number<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionSet::Finalize(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Precomputed<sp/>best<sp/>level<sp/>for<sp/>next<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_level<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best_score<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels-1;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>treat<sp/>level-0<sp/>specially<sp/>by<sp/>bounding<sp/>the<sp/>number<sp/>of<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>number<sp/>of<sp/>bytes<sp/>for<sp/>two<sp/>reasons:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1)<sp/>With<sp/>larger<sp/>write-buffer<sp/>sizes,<sp/>it<sp/>is<sp/>nice<sp/>not<sp/>to<sp/>do<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>many<sp/>level-0<sp/>compactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(2)<sp/>The<sp/>files<sp/>in<sp/>level-0<sp/>are<sp/>merged<sp/>on<sp/>every<sp/>read<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>therefore<sp/>we<sp/>wish<sp/>to<sp/>avoid<sp/>too<sp/>many<sp/>files<sp/>when<sp/>the<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>size<sp/>is<sp/>small<sp/>(perhaps<sp/>because<sp/>of<sp/>a<sp/>small<sp/>write-buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting,<sp/>or<sp/>very<sp/>high<sp/>compression<sp/>ratios,<sp/>or<sp/>lots<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwrites/deletions).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>v-&gt;files_[level].size()<sp/>/</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config::kL0_CompactionTrigger);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>ratio<sp/>of<sp/>current<sp/>size<sp/>to<sp/>size<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>level_bytes<sp/>=<sp/>TotalFileSize(v-&gt;files_[level]);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(level_bytes)<sp/>/<sp/>MaxBytesForLevel(level);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>&gt;<sp/>best_score)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_level<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_score<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>v-&gt;compaction_level_<sp/>=<sp/>best_level;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>v-&gt;compaction_score_<sp/>=<sp/>best_score;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal">Status<sp/>VersionSet::WriteSnapshot(log::Writer*<sp/>log)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Break<sp/>up<sp/>into<sp/>multiple<sp/>records<sp/>to<sp/>reduce<sp/>memory<sp/>usage<sp/>on<sp/>recovery?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>VersionEdit<sp/>edit;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>edit.SetComparatorName(icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1a888b039bdd6d59517dca75fb40721f5e" kindref="member">Name</ref>());</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>compaction<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compact_pointer_[level].empty())<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InternalKey<sp/>key;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key.DecodeFrom(compact_pointer_[level]);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edit.SetCompactPointer(level,<sp/>key);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files<sp/>=<sp/>current_-&gt;files_[level];</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileMetaData*<sp/>f<sp/>=<sp/>files[i];</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edit.AddFile(level,<sp/>f-&gt;number,<sp/>f-&gt;file_size,<sp/>f-&gt;smallest,<sp/>f-&gt;largest);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>std::string<sp/>record;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>edit.EncodeTo(&amp;record);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log-&gt;AddRecord(record);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084" refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" kindref="member">VersionSet::NumLevelFiles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>assert(level<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>assert(level<sp/>&lt;<sp/>config::kNumLevels);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_-&gt;files_[level].size();</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090" refid="classleveldb_1_1_version_set_1abc156e2c0a7f2d0ef4a14b6f27a382a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classleveldb_1_1_version_set_1abc156e2c0a7f2d0ef4a14b6f27a382a3" kindref="member">VersionSet::LevelSummary</ref>(<ref refid="structleveldb_1_1_version_set_1_1_level_summary_storage" kindref="compound">LevelSummaryStorage</ref>*<sp/>scratch)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>code<sp/>if<sp/>kNumLevels<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>assert(config::kNumLevels<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>snprintf(scratch-&gt;<ref refid="structleveldb_1_1_version_set_1_1_level_summary_storage_1a90b283461affa0f25f41bc21a9c81bbc" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(scratch-&gt;<ref refid="structleveldb_1_1_version_set_1_1_level_summary_storage_1a90b283461affa0f25f41bc21a9c81bbc" kindref="member">buffer</ref>),</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;files[<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current_-&gt;files_[0].size()),</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current_-&gt;files_[1].size()),</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current_-&gt;files_[2].size()),</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current_-&gt;files_[3].size()),</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current_-&gt;files_[4].size()),</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current_-&gt;files_[5].size()),</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current_-&gt;files_[6].size()));</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scratch-&gt;<ref refid="structleveldb_1_1_version_set_1_1_level_summary_storage_1a90b283461affa0f25f41bc21a9c81bbc" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105" refid="classleveldb_1_1_version_set_1ada7f3ed63b1c48adb6e5b38348b300e1" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1ada7f3ed63b1c48adb6e5b38348b300e1" kindref="member">VersionSet::ApproximateOffsetOf</ref>(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>&amp;<sp/>ikey)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files<sp/>=<sp/>v-&gt;files_[level];</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(files[i]-&gt;largest,<sp/>ikey)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entire<sp/>file<sp/>is<sp/>before<sp/>&quot;ikey&quot;,<sp/>so<sp/>just<sp/>add<sp/>the<sp/>file<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>files[i]-&gt;file_size;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(files[i]-&gt;smallest,<sp/>ikey)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entire<sp/>file<sp/>is<sp/>after<sp/>&quot;ikey&quot;,<sp/>so<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Files<sp/>other<sp/>than<sp/>level<sp/>0<sp/>are<sp/>sorted<sp/>by<sp/>meta-&gt;smallest,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>further<sp/>files<sp/>in<sp/>this<sp/>level<sp/>will<sp/>contain<sp/>data<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ikey&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ikey&quot;<sp/>falls<sp/>in<sp/>the<sp/>range<sp/>for<sp/>this<sp/>table.<sp/><sp/>Add<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>approximate<sp/>offset<sp/>of<sp/>&quot;ikey&quot;<sp/>within<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_table" kindref="compound">Table</ref>*<sp/>tableptr;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>table_cache_-&gt;<ref refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" kindref="member">NewIterator</ref>(</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>(),<sp/>files[i]-&gt;number,<sp/>files[i]-&gt;file_size,<sp/>&amp;tableptr);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>tableptr-&gt;<ref refid="classleveldb_1_1_table_1a1795d45c54945ee7652b19e6ad6c030b" kindref="member">ApproximateOffsetOf</ref>(ikey.<ref refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" kindref="member">Encode</ref>());</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137" refid="classleveldb_1_1_version_set_1a3b3c810f0fea88db81b94e604b3dd78f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a3b3c810f0fea88db81b94e604b3dd78f" kindref="member">VersionSet::AddLiveFiles</ref>(std::set&lt;uint64_t&gt;*<sp/>live)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v<sp/>=<sp/>dummy_versions_.next_;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>!=<sp/>&amp;dummy_versions_;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v-&gt;next_)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files<sp/>=<sp/>v-&gt;files_[level];</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>live-&gt;insert(files[i]-&gt;number);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150" refid="classleveldb_1_1_version_set_1adfe3e1061becd9e2756b2dd4447b52e0" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1adfe3e1061becd9e2756b2dd4447b52e0" kindref="member">VersionSet::NumLevelBytes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>assert(level<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>assert(level<sp/>&lt;<sp/>config::kNumLevels);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TotalFileSize(current_-&gt;files_[level]);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156" refid="classleveldb_1_1_version_set_1a32dc1a7e1eaeeeac89286be3483ad612" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1a32dc1a7e1eaeeeac89286be3483ad612" kindref="member">VersionSet::MaxNextLevelOverlappingBytes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>overlaps;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>1;<sp/>level<sp/>&lt;<sp/>config::kNumLevels<sp/>-<sp/>1;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>current_-&gt;files_[level].size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>current_-&gt;files_[level][i];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(level+1,<sp/>&amp;f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>,<sp/>&amp;f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;overlaps);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>sum<sp/>=<sp/>TotalFileSize(overlaps);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>&gt;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stores<sp/>the<sp/>minimal<sp/>range<sp/>that<sp/>covers<sp/>all<sp/>entries<sp/>in<sp/>inputs<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*smallest,<sp/>*largest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>inputs<sp/>is<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionSet::GetRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>smallest,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>largest)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>assert(!inputs.empty());</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>smallest-&gt;<ref refid="classleveldb_1_1_internal_key_1ab6e9ebec1bf567de89d8dd34fdc51f86" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>largest-&gt;<ref refid="classleveldb_1_1_internal_key_1ab6e9ebec1bf567de89d8dd34fdc51f86" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inputs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>inputs[i];</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*smallest<sp/>=<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*largest<sp/>=<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>,<sp/>*smallest)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*smallest<sp/>=<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>,<sp/>*largest)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*largest<sp/>=<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stores<sp/>the<sp/>minimal<sp/>range<sp/>that<sp/>covers<sp/>all<sp/>entries<sp/>in<sp/>inputs1<sp/>and<sp/>inputs2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>*smallest,<sp/>*largest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>inputs<sp/>is<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionSet::GetRange2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>inputs1,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>inputs2,</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalKey*<sp/>smallest,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalKey*<sp/>largest)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>all<sp/>=<sp/>inputs1;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>all.insert(all.end(),<sp/>inputs2.begin(),<sp/>inputs2.end());</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>GetRange(all,<sp/>smallest,<sp/>largest);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210" refid="classleveldb_1_1_version_set_1a181194e96a88e69a60c1fda9cf3c4651" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_version_set_1a181194e96a88e69a60c1fda9cf3c4651" kindref="member">VersionSet::MakeInputIterator</ref>(<ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref><sp/>options;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_read_options_1a43731d67b707995e20571ad33c1f53f2" kindref="member">verify_checksums</ref><sp/>=<sp/>options_-&gt;<ref refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" kindref="member">paranoid_checks</ref>;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_read_options_1a49f3754f8838596148ed5cbf9bbf8664" kindref="member">fill_cache</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Level-0<sp/>files<sp/>have<sp/>to<sp/>be<sp/>merged<sp/>together.<sp/><sp/>For<sp/>other<sp/>levels,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>make<sp/>a<sp/>concatenating<sp/>iterator<sp/>per<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(opt):<sp/>use<sp/>concatenating<sp/>iterator<sp/>for<sp/>level-0<sp/>if<sp/>there<sp/>is<sp/>no<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>space<sp/>=<sp/>(c-&gt;<ref refid="classleveldb_1_1_compaction_1aaf72769cc8dabece3e513399425f91fa" kindref="member">level</ref>()<sp/>==<sp/>0<sp/>?<sp/>c-&gt;inputs_[0].size()<sp/>+<sp/>1<sp/>:<sp/>2);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>**<sp/>list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*[space];</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which<sp/>=<sp/>0;<sp/>which<sp/>&lt;<sp/>2;<sp/>which++)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c-&gt;inputs_[which].empty())<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="classleveldb_1_1_compaction_1aaf72769cc8dabece3e513399425f91fa" kindref="member">level</ref>()<sp/>+<sp/>which<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files<sp/>=<sp/>c-&gt;inputs_[which];</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list[num++]<sp/>=<sp/>table_cache_-&gt;<ref refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" kindref="member">NewIterator</ref>(</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options,<sp/>files[i]-&gt;number,<sp/>files[i]-&gt;file_size);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>concatenating<sp/>iterator<sp/>for<sp/>the<sp/>files<sp/>from<sp/>this<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list[num++]<sp/>=<sp/><ref refid="namespaceleveldb_1a44a9b2f992cf66b7046581b72a095ea1" kindref="member">NewTwoLevelIterator</ref>(</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator" kindref="compound">Version::LevelFileNumIterator</ref>(icmp_,<sp/>&amp;c-&gt;inputs_[which]),</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;GetFileIterator,<sp/>table_cache_,<sp/>options);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>assert(num<sp/>&lt;=<sp/>space);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>result<sp/>=<sp/><ref refid="namespaceleveldb_1ab8bdbd2babe772234f8dee1bc4f44eb5" kindref="member">NewMergingIterator</ref>(&amp;icmp_,<sp/>list,<sp/>num);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>list;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243" refid="classleveldb_1_1_version_set_1a1cdc6a05e0a7df9f29b5bccd485a0219" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/><ref refid="classleveldb_1_1_version_set_1a1cdc6a05e0a7df9f29b5bccd485a0219" kindref="member">VersionSet::PickCompaction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/>c;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>prefer<sp/>compactions<sp/>triggered<sp/>by<sp/>too<sp/>much<sp/>data<sp/>in<sp/>a<sp/>level<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>compactions<sp/>triggered<sp/>by<sp/>seeks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>size_compaction<sp/>=<sp/>(current_-&gt;compaction_score_<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>seek_compaction<sp/>=<sp/>(current_-&gt;file_to_compact_<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_compaction)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>level<sp/>=<sp/>current_-&gt;compaction_level_;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(level<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(level+1<sp/>&lt;<sp/>config::kNumLevels);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a9372e882b35d27c78356228e4b758917" kindref="member">Compaction</ref>(level);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pick<sp/>the<sp/>first<sp/>file<sp/>that<sp/>comes<sp/>after<sp/>compact_pointer_[level]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>current_-&gt;files_[level].size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>current_-&gt;files_[level][i];</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compact_pointer_[level].empty()<sp/>||</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>.<ref refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" kindref="member">Encode</ref>(),<sp/>compact_pointer_[level])<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;inputs_[0].push_back(f);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;inputs_[0].empty())<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap-around<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>key<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;inputs_[0].push_back(current_-&gt;files_[level][0]);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seek_compaction)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>level<sp/>=<sp/>current_-&gt;file_to_compact_level_;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a9372e882b35d27c78356228e4b758917" kindref="member">Compaction</ref>(level);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;inputs_[0].push_back(current_-&gt;file_to_compact_);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>c-&gt;input_version_<sp/>=<sp/>current_;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>c-&gt;input_version_-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Files<sp/>in<sp/>level<sp/>0<sp/>may<sp/>overlap<sp/>each<sp/>other,<sp/>so<sp/>pick<sp/>up<sp/>all<sp/>overlapping<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>smallest,<sp/>largest;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>GetRange(c-&gt;inputs_[0],<sp/>&amp;smallest,<sp/>&amp;largest);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>next<sp/>call<sp/>will<sp/>discard<sp/>the<sp/>file<sp/>we<sp/>placed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>c-&gt;inputs_[0]<sp/>earlier<sp/>and<sp/>replace<sp/>it<sp/>with<sp/>an<sp/>overlapping<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>include<sp/>the<sp/>picked<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(0,<sp/>&amp;smallest,<sp/>&amp;largest,<sp/>&amp;c-&gt;inputs_[0]);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!c-&gt;inputs_[0].empty());</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>SetupOtherInputs(c);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionSet::SetupOtherInputs(<ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>c-&gt;<ref refid="classleveldb_1_1_compaction_1aaf72769cc8dabece3e513399425f91fa" kindref="member">level</ref>();</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>smallest,<sp/>largest;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>GetRange(c-&gt;inputs_[0],<sp/>&amp;smallest,<sp/>&amp;largest);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(level+1,<sp/>&amp;smallest,<sp/>&amp;largest,<sp/>&amp;c-&gt;inputs_[1]);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>entire<sp/>range<sp/>covered<sp/>by<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>all_start,<sp/>all_limit;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>GetRange2(c-&gt;inputs_[0],<sp/>c-&gt;inputs_[1],<sp/>&amp;all_start,<sp/>&amp;all_limit);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>we<sp/>can<sp/>grow<sp/>the<sp/>number<sp/>of<sp/>inputs<sp/>in<sp/>&quot;level&quot;<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>changing<sp/>the<sp/>number<sp/>of<sp/>&quot;level+1&quot;<sp/>files<sp/>we<sp/>pick<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c-&gt;inputs_[1].empty())<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>expanded0;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(level,<sp/>&amp;all_start,<sp/>&amp;all_limit,<sp/>&amp;expanded0);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>inputs0_size<sp/>=<sp/>TotalFileSize(c-&gt;inputs_[0]);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>inputs1_size<sp/>=<sp/>TotalFileSize(c-&gt;inputs_[1]);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>expanded0_size<sp/>=<sp/>TotalFileSize(expanded0);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expanded0.size()<sp/>&gt;<sp/>c-&gt;inputs_[0].size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs1_size<sp/>+<sp/>expanded0_size<sp/>&lt;<sp/>kExpandedCompactionByteSizeLimit)<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>new_start,<sp/>new_limit;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetRange(expanded0,<sp/>&amp;new_start,<sp/>&amp;new_limit);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>expanded1;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(level+1,<sp/>&amp;new_start,<sp/>&amp;new_limit,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;expanded1);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expanded1.size()<sp/>==<sp/>c-&gt;inputs_[1].size())<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_-&gt;<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expanding@%d<sp/>%d+%d<sp/>(%ld+%ld<sp/>bytes)<sp/>to<sp/>%d+%d<sp/>(%ld+%ld<sp/>bytes)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(c-&gt;inputs_[0].size()),</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(c-&gt;inputs_[1].size()),</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(inputs0_size),<sp/>long(inputs1_size),</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(expanded0.size()),</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(expanded1.size()),</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(expanded0_size),<sp/>long(inputs1_size));</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest<sp/>=<sp/>new_start;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest<sp/>=<sp/>new_limit;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;inputs_[0]<sp/>=<sp/>expanded0;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;inputs_[1]<sp/>=<sp/>expanded1;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetRange2(c-&gt;inputs_[0],<sp/>c-&gt;inputs_[1],<sp/>&amp;all_start,<sp/>&amp;all_limit);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>set<sp/>of<sp/>grandparent<sp/>files<sp/>that<sp/>overlap<sp/>this<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(parent<sp/>==<sp/>level+1;<sp/>grandparent<sp/>==<sp/>level+2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>+<sp/>2<sp/>&lt;<sp/>config::kNumLevels)<sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(level<sp/>+<sp/>2,<sp/>&amp;all_start,<sp/>&amp;all_limit,</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c-&gt;grandparents_);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_-&gt;<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Compacting<sp/>%d<sp/>&apos;%s&apos;<sp/>..<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest.<ref refid="classleveldb_1_1_internal_key_1a737053e1b02c3eb8361e960f7fe5befb" kindref="member">DebugString</ref>().c_str(),</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest.<ref refid="classleveldb_1_1_internal_key_1a737053e1b02c3eb8361e960f7fe5befb" kindref="member">DebugString</ref>().c_str());</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>place<sp/>where<sp/>we<sp/>will<sp/>do<sp/>the<sp/>next<sp/>compaction<sp/>for<sp/>this<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>update<sp/>this<sp/>immediately<sp/>instead<sp/>of<sp/>waiting<sp/>for<sp/>the<sp/>VersionEdit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>applied<sp/>so<sp/>that<sp/>if<sp/>the<sp/>compaction<sp/>fails,<sp/>we<sp/>will<sp/>try<sp/>a<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>range<sp/>next<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>compact_pointer_[level]<sp/>=<sp/>largest.<ref refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" kindref="member">Encode</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>c-&gt;edit_.<ref refid="classleveldb_1_1_version_edit_1ac9b26dfba1188705d7fc4deaf047271c" kindref="member">SetCompactPointer</ref>(level,<sp/>largest);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364" refid="classleveldb_1_1_version_set_1a3a03f9a6c86e861be314cf8e01f33142" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/><ref refid="classleveldb_1_1_version_set_1a3a03f9a6c86e861be314cf8e01f33142" kindref="member">VersionSet::CompactRange</ref>(</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>begin,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>current_-&gt;<ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(level,<sp/>begin,<sp/>end,<sp/>&amp;inputs);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputs.empty())<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>compacting<sp/>too<sp/>much<sp/>in<sp/>one<sp/>shot<sp/>in<sp/>case<sp/>the<sp/>range<sp/>is<sp/>large.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>cannot<sp/>do<sp/>this<sp/>for<sp/>level-0<sp/>since<sp/>level-0<sp/>files<sp/>can<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>must<sp/>not<sp/>pick<sp/>one<sp/>file<sp/>and<sp/>drop<sp/>another<sp/>older<sp/>file<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>files<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>limit<sp/>=<sp/>MaxFileSizeForLevel(level);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="db__bench_8cc_1ac7af894858cf396a219d632f40afdc8d" kindref="member">total</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inputs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>s<sp/>=<sp/>inputs[i]-&gt;file_size;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total<sp/>&gt;=<sp/>limit)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.resize(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/>c<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a9372e882b35d27c78356228e4b758917" kindref="member">Compaction</ref>(level);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>c-&gt;input_version_<sp/>=<sp/>current_;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>c-&gt;input_version_-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>c-&gt;inputs_[0]<sp/>=<sp/>inputs;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>SetupOtherInputs(c);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal">Compaction::Compaction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>level_(level),</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_output_file_size_(MaxFileSizeForLevel(level)),</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input_version_(NULL),</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grandparent_index_(0),</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seen_key_(false),</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlapped_bytes_(0)<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>config::kNumLevels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>level_ptrs_[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411" refid="classleveldb_1_1_compaction_1ad29d60feea9dd53f54a2bd9301dbd9c4" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_compaction_1ad29d60feea9dd53f54a2bd9301dbd9c4" kindref="member">Compaction::~Compaction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_version_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>input_version_-&gt;<ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417" refid="classleveldb_1_1_compaction_1a9d88e4a33ba63749cb0f0f04fbc74968" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1a9d88e4a33ba63749cb0f0f04fbc74968" kindref="member">Compaction::IsTrivialMove</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>a<sp/>move<sp/>if<sp/>there<sp/>is<sp/>lots<sp/>of<sp/>overlapping<sp/>grandparent<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>the<sp/>move<sp/>could<sp/>create<sp/>a<sp/>parent<sp/>file<sp/>that<sp/>will<sp/>require</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>very<sp/>expensive<sp/>merge<sp/>later<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classleveldb_1_1_compaction_1a75bcfebad0f838380ef7f63dc083e992" kindref="member">num_input_files</ref>(0)<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_compaction_1a75bcfebad0f838380ef7f63dc083e992" kindref="member">num_input_files</ref>(1)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalFileSize(grandparents_)<sp/>&lt;=<sp/>kMaxGrandParentOverlapBytes);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="classleveldb_1_1_compaction_1abb1acdc9b882a7497603b13386e7e1a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1abb1acdc9b882a7497603b13386e7e1a7" kindref="member">Compaction::AddInputDeletions</ref>(<ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref>*<sp/>edit)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which<sp/>=<sp/>0;<sp/>which<sp/>&lt;<sp/>2;<sp/>which++)<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inputs_[which].size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edit-&gt;<ref refid="classleveldb_1_1_version_edit_1ac222bfd1055114d57aadbd124f24ad0c" kindref="member">DeleteFile</ref>(level_<sp/>+<sp/>which,<sp/>inputs_[which][i]-&gt;number);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434" refid="classleveldb_1_1_compaction_1ae982beb6ee52d92de76a363ef0eefc29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1ae982beb6ee52d92de76a363ef0eefc29" kindref="member">Compaction::IsBaseLevelForKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>user_key)<sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maybe<sp/>use<sp/>binary<sp/>search<sp/>to<sp/>find<sp/>right<sp/>entry<sp/>instead<sp/>of<sp/>linear<sp/>search?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>user_cmp<sp/>=<sp/>input_version_-&gt;vset_-&gt;icmp_.<ref refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" kindref="member">user_comparator</ref>();</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lvl<sp/>=<sp/>level_<sp/>+<sp/>2;<sp/>lvl<sp/>&lt;<sp/>config::kNumLevels;<sp/>lvl++)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files<sp/>=<sp/>input_version_-&gt;files_[lvl];</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>level_ptrs_[lvl]<sp/>&lt;<sp/>files.size();<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>f<sp/>=<sp/>files[level_ptrs_[lvl]];</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_cmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(user_key,<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" kindref="member">largest</ref>.<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>())<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>advanced<sp/>far<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_cmp-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(user_key,<sp/>f-&gt;<ref refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" kindref="member">smallest</ref>.<ref refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" kindref="member">user_key</ref>())<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>falls<sp/>in<sp/>this<sp/>file&apos;s<sp/>range,<sp/>so<sp/>definitely<sp/>not<sp/>base<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level_ptrs_[lvl]++;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455" refid="classleveldb_1_1_compaction_1a07624423bb512fedb358a008a38fa0b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1a07624423bb512fedb358a008a38fa0b9" kindref="member">Compaction::ShouldStopBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>internal_key)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>to<sp/>find<sp/>earliest<sp/>grandparent<sp/>file<sp/>that<sp/>contains<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>*<sp/>icmp<sp/>=<sp/>&amp;input_version_-&gt;vset_-&gt;icmp_;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(grandparent_index_<sp/>&lt;<sp/>grandparents_.size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>icmp-&gt;<ref refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" kindref="member">Compare</ref>(internal_key,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grandparents_[grandparent_index_]-&gt;largest.<ref refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" kindref="member">Encode</ref>())<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seen_key_)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlapped_bytes_<sp/>+=<sp/>grandparents_[grandparent_index_]-&gt;file_size;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>grandparent_index_++;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>seen_key_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlapped_bytes_<sp/>&gt;<sp/>kMaxGrandParentOverlapBytes)<sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>much<sp/>overlap<sp/>for<sp/>current<sp/>output;<sp/>start<sp/>new<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>overlapped_bytes_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477" refid="classleveldb_1_1_compaction_1a87ec90747d22dce0d103149db1ecf709" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1a87ec90747d22dce0d103149db1ecf709" kindref="member">Compaction::ReleaseInputs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_version_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>input_version_-&gt;<ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>input_version_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc"/>
  </compounddef>
</doxygen>
