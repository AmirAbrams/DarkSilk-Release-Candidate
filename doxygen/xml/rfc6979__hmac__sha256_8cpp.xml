<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="rfc6979__hmac__sha256_8cpp" kind="file" language="C++">
    <compoundname>rfc6979_hmac_sha256.cpp</compoundname>
    <includes refid="rfc6979__hmac__sha256_8h" local="yes">crypto/rfc6979_hmac_sha256.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="33601">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="33602" relation="include">
        </childnode>
        <childnode refid="33603" relation="include">
        </childnode>
      </node>
      <node id="33603">
        <label>stdlib.h</label>
      </node>
      <node id="33599">
        <label>crypto/rfc6979_hmac_sha256.h</label>
        <link refid="rfc6979__hmac__sha256_8h"/>
        <childnode refid="33600" relation="include">
        </childnode>
        <childnode refid="33602" relation="include">
        </childnode>
        <childnode refid="33603" relation="include">
        </childnode>
      </node>
      <node id="33600">
        <label>crypto/hmac_sha256.h</label>
        <link refid="hmac__sha256_8h"/>
        <childnode refid="33601" relation="include">
        </childnode>
        <childnode refid="33602" relation="include">
        </childnode>
        <childnode refid="33603" relation="include">
        </childnode>
      </node>
      <node id="33598">
        <label>/home/dev/ds-160209/src/crypto/rfc6979_hmac_sha256.cpp</label>
        <link refid="rfc6979_hmac_sha256.cpp"/>
        <childnode refid="33599" relation="include">
        </childnode>
        <childnode refid="33604" relation="include">
        </childnode>
        <childnode refid="33605" relation="include">
        </childnode>
      </node>
      <node id="33604">
        <label>string.h</label>
      </node>
      <node id="33602">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="33605">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rfc6979__hmac__sha256_8cpp_1af32f7cc6cdd2bf1a0cf58c55803c2f19" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char zero[1]</definition>
        <argsstring>[1]</argsstring>
        <name>zero</name>
        <initializer>= {0x00}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/rfc6979_hmac_sha256.cpp" line="11" column="1" bodyfile="/home/dev/ds-160209/src/crypto/rfc6979_hmac_sha256.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rfc6979__hmac__sha256_8cpp_1ae2a782e1cf97c16007017213f8089352" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char one[1]</definition>
        <argsstring>[1]</argsstring>
        <name>one</name>
        <initializer>= {0x01}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/rfc6979_hmac_sha256.cpp" line="12" column="1" bodyfile="/home/dev/ds-160209/src/crypto/rfc6979_hmac_sha256.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rfc6979__hmac__sha256_8h" kindref="compound">crypto/rfc6979_hmac_sha256.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>zero[1]<sp/>=<sp/>{0x00};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>one[1]<sp/>=<sp/>{0x01};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_r_f_c6979___h_m_a_c___s_h_a256_1aeab9ec7d2a564e2d98f2157ee7b83bef" refkind="member"><highlight class="normal"><ref refid="class_r_f_c6979___h_m_a_c___s_h_a256_1aeab9ec7d2a564e2d98f2157ee7b83bef" kindref="member">RFC6979_HMAC_SHA256::RFC6979_HMAC_SHA256</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msglen)<sp/>:<sp/>retry(false)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(V,<sp/>0x01,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V));</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(K,<sp/>0x00,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_h_m_a_c___s_h_a256" kindref="compound">CHMAC_SHA256</ref>(K,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(V,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(zero,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zero)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(key,<sp/>keylen).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(msg,<sp/>msglen).<ref refid="class_c_h_m_a_c___s_h_a256_1a1cc600fd485b79dc52e11b12635c6dbe" kindref="member">Finalize</ref>(K);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_h_m_a_c___s_h_a256" kindref="compound">CHMAC_SHA256</ref>(K,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(V,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V)).<ref refid="class_c_h_m_a_c___s_h_a256_1a1cc600fd485b79dc52e11b12635c6dbe" kindref="member">Finalize</ref>(V);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_h_m_a_c___s_h_a256" kindref="compound">CHMAC_SHA256</ref>(K,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(V,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(key,<sp/>keylen).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(msg,<sp/>msglen).<ref refid="class_c_h_m_a_c___s_h_a256_1a1cc600fd485b79dc52e11b12635c6dbe" kindref="member">Finalize</ref>(K);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_h_m_a_c___s_h_a256" kindref="compound">CHMAC_SHA256</ref>(K,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(V,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V)).<ref refid="class_c_h_m_a_c___s_h_a256_1a1cc600fd485b79dc52e11b12635c6dbe" kindref="member">Finalize</ref>(V);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_r_f_c6979___h_m_a_c___s_h_a256_1aae9e35137b1201051005a175268f52a7" refkind="member"><highlight class="normal"><ref refid="class_r_f_c6979___h_m_a_c___s_h_a256_1aae9e35137b1201051005a175268f52a7" kindref="member">RFC6979_HMAC_SHA256::~RFC6979_HMAC_SHA256</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(V,<sp/>0x01,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(K,<sp/>0x00,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K));</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_r_f_c6979___h_m_a_c___s_h_a256_1a9f841d552097f528631538e9939e0f70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_f_c6979___h_m_a_c___s_h_a256_1a9f841d552097f528631538e9939e0f70" kindref="member">RFC6979_HMAC_SHA256::Generate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputlen)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_h_m_a_c___s_h_a256" kindref="compound">CHMAC_SHA256</ref>(K,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(V,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(zero,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zero)).<ref refid="class_c_h_m_a_c___s_h_a256_1a1cc600fd485b79dc52e11b12635c6dbe" kindref="member">Finalize</ref>(K);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_h_m_a_c___s_h_a256" kindref="compound">CHMAC_SHA256</ref>(K,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(V,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V)).<ref refid="class_c_h_m_a_c___s_h_a256_1a1cc600fd485b79dc52e11b12635c6dbe" kindref="member">Finalize</ref>(V);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outputlen<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_h_m_a_c___s_h_a256" kindref="compound">CHMAC_SHA256</ref>(K,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(K)).<ref refid="class_c_h_m_a_c___s_h_a256_1a24ac9cf00e60d8028ab79df4aed984ff" kindref="member">Write</ref>(V,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V)).<ref refid="class_c_h_m_a_c___s_h_a256_1a1cc600fd485b79dc52e11b12635c6dbe" kindref="member">Finalize</ref>(V);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>std::min(outputlen,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(V));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(output,<sp/>V,<sp/>len);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputlen<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>retry<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/crypto/rfc6979_hmac_sha256.cpp"/>
  </compounddef>
</doxygen>
