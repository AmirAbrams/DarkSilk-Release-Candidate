<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="testharness_8h" kind="file" language="C++">
    <compoundname>testharness.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">sstream</includes>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="slice_8h" local="yes">leveldb/slice.h</includes>
    <includes refid="random_8h" local="yes">util/random.h</includes>
    <includedby refid="autocompact__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc</includedby>
    <includedby refid="corruption__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</includedby>
    <includedby refid="db__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_test.cc</includedby>
    <includedby refid="dbformat__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc</includedby>
    <includedby refid="filename__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/filename_test.cc</includedby>
    <includedby refid="log__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/log_test.cc</includedby>
    <includedby refid="skiplist__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc</includedby>
    <includedby refid="version__edit__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_edit_test.cc</includedby>
    <includedby refid="version__set__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_set_test.cc</includedby>
    <includedby refid="write__batch__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc</includedby>
    <includedby refid="memenv__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc</includedby>
    <includedby refid="issue178__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/issues/issue178_test.cc</includedby>
    <includedby refid="issue200__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/issues/issue200_test.cc</includedby>
    <includedby refid="filter__block__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc</includedby>
    <includedby refid="table__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/table_test.cc</includedby>
    <includedby refid="arena__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/arena_test.cc</includedby>
    <includedby refid="bloom__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/bloom_test.cc</includedby>
    <includedby refid="cache__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/cache_test.cc</includedby>
    <includedby refid="coding__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/coding_test.cc</includedby>
    <includedby refid="crc32c__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/crc32c_test.cc</includedby>
    <includedby refid="env__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/env_test.cc</includedby>
    <includedby refid="hash__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/hash_test.cc</includedby>
    <includedby refid="testharness_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/testharness.cc</includedby>
    <incdepgraph>
      <node id="40034">
        <label>stdarg.h</label>
      </node>
      <node id="40041">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="40035" relation="include">
        </childnode>
      </node>
      <node id="40038">
        <label>assert.h</label>
      </node>
      <node id="40029">
        <label>stdlib.h</label>
      </node>
      <node id="40032">
        <label>string</label>
      </node>
      <node id="40039">
        <label>stddef.h</label>
      </node>
      <node id="40036">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="40032" relation="include">
        </childnode>
        <childnode refid="40037" relation="include">
        </childnode>
      </node>
      <node id="40040">
        <label>string.h</label>
      </node>
      <node id="40033">
        <label>vector</label>
      </node>
      <node id="40030">
        <label>sstream</label>
      </node>
      <node id="40035">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="40027">
        <label>/home/dev/ds-160209/src/leveldb/util/testharness.h</label>
        <link refid="testharness.h"/>
        <childnode refid="40028" relation="include">
        </childnode>
        <childnode refid="40029" relation="include">
        </childnode>
        <childnode refid="40030" relation="include">
        </childnode>
        <childnode refid="40031" relation="include">
        </childnode>
        <childnode refid="40037" relation="include">
        </childnode>
        <childnode refid="40041" relation="include">
        </childnode>
      </node>
      <node id="40037">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="40038" relation="include">
        </childnode>
        <childnode refid="40039" relation="include">
        </childnode>
        <childnode refid="40040" relation="include">
        </childnode>
        <childnode refid="40032" relation="include">
        </childnode>
      </node>
      <node id="40031">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="40032" relation="include">
        </childnode>
        <childnode refid="40033" relation="include">
        </childnode>
        <childnode refid="40034" relation="include">
        </childnode>
        <childnode refid="40035" relation="include">
        </childnode>
        <childnode refid="40036" relation="include">
        </childnode>
      </node>
      <node id="40028">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="40056">
        <label>/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc</label>
        <link refid="filter__block__test_8cc"/>
      </node>
      <node id="40064">
        <label>/home/dev/ds-160209/src/leveldb/util/hash_test.cc</label>
        <link refid="hash__test_8cc"/>
      </node>
      <node id="40065">
        <label>/home/dev/ds-160209/src/leveldb/util/testharness.cc</label>
        <link refid="testharness_8cc"/>
      </node>
      <node id="40050">
        <label>/home/dev/ds-160209/src/leveldb/db/version_edit_test.cc</label>
        <link refid="version__edit__test_8cc"/>
      </node>
      <node id="40059">
        <label>/home/dev/ds-160209/src/leveldb/util/bloom_test.cc</label>
        <link refid="bloom__test_8cc"/>
      </node>
      <node id="40048">
        <label>/home/dev/ds-160209/src/leveldb/db/log_test.cc</label>
        <link refid="log__test_8cc"/>
      </node>
      <node id="40063">
        <label>/home/dev/ds-160209/src/leveldb/util/env_test.cc</label>
        <link refid="env__test_8cc"/>
      </node>
      <node id="40055">
        <label>/home/dev/ds-160209/src/leveldb/issues/issue200_test.cc</label>
        <link refid="issue200__test_8cc"/>
      </node>
      <node id="40052">
        <label>/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc</label>
        <link refid="write__batch__test_8cc"/>
      </node>
      <node id="40047">
        <label>/home/dev/ds-160209/src/leveldb/db/filename_test.cc</label>
        <link refid="filename__test_8cc"/>
      </node>
      <node id="40062">
        <label>/home/dev/ds-160209/src/leveldb/util/crc32c_test.cc</label>
        <link refid="crc32c__test_8cc"/>
      </node>
      <node id="40060">
        <label>/home/dev/ds-160209/src/leveldb/util/cache_test.cc</label>
        <link refid="cache__test_8cc"/>
      </node>
      <node id="40046">
        <label>/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc</label>
        <link refid="dbformat__test_8cc"/>
      </node>
      <node id="40043">
        <label>/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc</label>
        <link refid="autocompact__test_8cc"/>
      </node>
      <node id="40049">
        <label>/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc</label>
        <link refid="skiplist__test_8cc"/>
      </node>
      <node id="40053">
        <label>/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc</label>
        <link refid="memenv__test_8cc"/>
      </node>
      <node id="40057">
        <label>/home/dev/ds-160209/src/leveldb/table/table_test.cc</label>
        <link refid="table__test_8cc"/>
      </node>
      <node id="40042">
        <label>/home/dev/ds-160209/src/leveldb/util/testharness.h</label>
        <link refid="testharness.h"/>
        <childnode refid="40043" relation="include">
        </childnode>
        <childnode refid="40044" relation="include">
        </childnode>
        <childnode refid="40045" relation="include">
        </childnode>
        <childnode refid="40046" relation="include">
        </childnode>
        <childnode refid="40047" relation="include">
        </childnode>
        <childnode refid="40048" relation="include">
        </childnode>
        <childnode refid="40049" relation="include">
        </childnode>
        <childnode refid="40050" relation="include">
        </childnode>
        <childnode refid="40051" relation="include">
        </childnode>
        <childnode refid="40052" relation="include">
        </childnode>
        <childnode refid="40053" relation="include">
        </childnode>
        <childnode refid="40054" relation="include">
        </childnode>
        <childnode refid="40055" relation="include">
        </childnode>
        <childnode refid="40056" relation="include">
        </childnode>
        <childnode refid="40057" relation="include">
        </childnode>
        <childnode refid="40058" relation="include">
        </childnode>
        <childnode refid="40059" relation="include">
        </childnode>
        <childnode refid="40060" relation="include">
        </childnode>
        <childnode refid="40061" relation="include">
        </childnode>
        <childnode refid="40062" relation="include">
        </childnode>
        <childnode refid="40063" relation="include">
        </childnode>
        <childnode refid="40064" relation="include">
        </childnode>
        <childnode refid="40065" relation="include">
        </childnode>
      </node>
      <node id="40045">
        <label>/home/dev/ds-160209/src/leveldb/db/db_test.cc</label>
        <link refid="db__test_8cc"/>
      </node>
      <node id="40061">
        <label>/home/dev/ds-160209/src/leveldb/util/coding_test.cc</label>
        <link refid="coding__test_8cc"/>
      </node>
      <node id="40044">
        <label>/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</label>
        <link refid="corruption__test_8cc"/>
      </node>
      <node id="40051">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set_test.cc</label>
        <link refid="version__set__test_8cc"/>
      </node>
      <node id="40054">
        <label>/home/dev/ds-160209/src/leveldb/issues/issue178_test.cc</label>
        <link refid="issue178__test_8cc"/>
      </node>
      <node id="40058">
        <label>/home/dev/ds-160209/src/leveldb/util/arena_test.cc</label>
        <link refid="arena__test_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classleveldb_1_1test_1_1_tester" prot="public">leveldb::test::Tester</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1test">leveldb::test</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" prot="public" static="no">
        <name>BINARY_OP</name>
        <param><defname>name</defname></param>
        <param><defname>op</defname></param>
        <initializer>template &lt;class <ref refid="net_8cpp_1a826edd40636cbaa44266b97c8c6a4fa3" kindref="member">X</ref>, class Y&gt;                           \
  Tester&amp; <ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>(const <ref refid="net_8cpp_1a826edd40636cbaa44266b97c8c6a4fa3" kindref="member">X</ref>&amp; x, const Y&amp; y) {                \
    if (! (x op y)) {                                   \
      ss_ &lt;&lt; &quot; failed: &quot; &lt;&lt; x &lt;&lt; (&quot; &quot; #op &quot; &quot;) &lt;&lt; y;    \
      ok_ = false;                                      \
    }                                                   \
    return *this;                                       \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="77" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" prot="public" static="no">
        <name>ASSERT_TRUE</name>
        <param><defname>c</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).Is((c), #c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="105" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="105" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_corruption_test_1a22060ac0a3697640cdcf36973339b646" compoundref="corruption__test_8cc" startline="126" endline="174">leveldb::CorruptionTest::Corrupt</referencedby>
        <referencedby refid="namespaceleveldb_1a22ecc0fbc7435947076320655c5e0265" compoundref="corruption__test_8cc" startline="213" endline="217">leveldb::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" compoundref="db__test_8cc" startline="378" endline="384">leveldb::DBTest::NumTableFilesAtLevel</referencedby>
        <referencedby refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" compoundref="db__test_8cc" startline="2065" endline="2114">leveldb::BM_LogAndApply</referencedby>
        <referencedby refid="classleveldb_1_1log_1_1_log_test_1ab8af1c9335e7fbb42e06a6c01de2d0fc" compoundref="log__test_8cc" startline="121" endline="124">leveldb::log::LogTest::Write</referencedby>
        <referencedby refid="classleveldb_1_1log_1_1_log_test_1a2bf9cdf3b3f722c300f65a7752c0e101" compoundref="log__test_8cc" startline="192" endline="202">leveldb::log::LogTest::CheckOffsetPastEndReturnsNoRecords</referencedby>
        <referencedby refid="classleveldb_1_1log_1_1_log_test_1ab9ca8c2014e78611d66d884f7b46e4ff" compoundref="log__test_8cc" startline="204" endline="220">leveldb::log::LogTest::CheckInitialOffsetRecord</referencedby>
        <referencedby refid="classleveldb_1_1_concurrent_test_1a9dcaf11ec747ad37150526f891627c50" compoundref="skiplist__test_8cc" startline="225" endline="282">leveldb::ConcurrentTest::ReadStep</referencedby>
        <referencedby refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" compoundref="table__test_8cc" startline="153" endline="166">leveldb::Constructor::Finish</referencedby>
        <referencedby refid="classleveldb_1_1_table_constructor_1aa8ce3799a55859c2dee50d3e08f56ef2" compoundref="table__test_8cc" startline="230" endline="251">leveldb::TableConstructor::FinishImpl</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_constructor_1a554d8e348d9135ff72a43a03c647c261" compoundref="table__test_8cc" startline="360" endline="372">leveldb::DBConstructor::FinishImpl</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" compoundref="table__test_8cc" startline="487" endline="500">leveldb::Harness::TestForwardScan</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" compoundref="table__test_8cc" startline="502" endline="515">leveldb::Harness::TestBackwardScan</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" compoundref="table__test_8cc" startline="517" endline="585">leveldb::Harness::TestRandomAccess</referencedby>
        <referencedby refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" compoundref="testharness_8cc" startline="60" endline="65">leveldb::test::TmpDir</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" prot="public" static="no">
        <name>ASSERT_OK</name>
        <param><defname>s</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).IsOk((s))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="106" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="106" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a31fe0ded855f188fac1650c70849760c" compoundref="autocompact__test_8cc" startline="20" endline="28">leveldb::AutoCompactTest::AutoCompactTest</referencedby>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aa2051faee6b6542d35ebdcf99918a713" compoundref="corruption__test_8cc" startline="60" endline="62">leveldb::CorruptionTest::Reopen</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aff36b45496c39a006a14df201ef7d57b" compoundref="corruption__test_8cc" startline="64" endline="68">leveldb::CorruptionTest::RepairDB</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1a54d2114311c61356e879b5ccfc3cda18" compoundref="corruption__test_8cc" startline="70" endline="86">leveldb::CorruptionTest::Build</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1a22060ac0a3697640cdcf36973339b646" compoundref="corruption__test_8cc" startline="126" endline="174">leveldb::CorruptionTest::Corrupt</referencedby>
        <referencedby refid="namespaceleveldb_1acc1b0ed2e8e9e4e6b930a1727d9fe0f8" compoundref="corruption__test_8cc" startline="280" endline="299">leveldb::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" compoundref="db__test_8cc" startline="257" endline="259">leveldb::DBTest::Reopen</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" compoundref="db__test_8cc" startline="266" endline="271">leveldb::DBTest::DestroyAndReopen</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" compoundref="db__test_8cc" startline="473" endline="485">leveldb::DBTest::DeleteAnSSTFile</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" compoundref="db__test_8cc" startline="488" endline="503">leveldb::DBTest::RenameLDBToSST</referencedby>
        <referencedby refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" compoundref="db__test_8cc" startline="2065" endline="2114">leveldb::BM_LogAndApply</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" prot="public" static="no">
        <name>ASSERT_EQ</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).IsEq((a),(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="107" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="107" bodyend="-1"/>
        <referencedby refid="namespaceleveldb_1acc1b0ed2e8e9e4e6b930a1727d9fe0f8" compoundref="corruption__test_8cc" startline="280" endline="299">leveldb::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" compoundref="db__test_8cc" startline="311" endline="334">leveldb::DBTest::Contents</referencedby>
        <referencedby refid="classleveldb_1_1log_1_1_log_test_1ab9ca8c2014e78611d66d884f7b46e4ff" compoundref="log__test_8cc" startline="204" endline="220">leveldb::log::LogTest::CheckInitialOffsetRecord</referencedby>
        <referencedby refid="namespaceleveldb_1_1log_1ab8a02b9419477420eca51cfd47d5f172" compoundref="log__test_8cc" startline="238" endline="240">leveldb::log::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_table_constructor_1aa8ce3799a55859c2dee50d3e08f56ef2" compoundref="table__test_8cc" startline="230" endline="251">leveldb::TableConstructor::FinishImpl</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" compoundref="table__test_8cc" startline="487" endline="500">leveldb::Harness::TestForwardScan</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" compoundref="table__test_8cc" startline="502" endline="515">leveldb::Harness::TestBackwardScan</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" compoundref="table__test_8cc" startline="517" endline="585">leveldb::Harness::TestRandomAccess</referencedby>
        <referencedby refid="namespaceleveldb_1_1crc32c_1a2ef79d6b85c2866295c1573ea6e62a52" compoundref="crc32c__test_8cc" startline="13" endline="48">leveldb::crc32c::TEST</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a0086e0b898cbf7a680ba24ed898edb1f" prot="public" static="no">
        <name>ASSERT_NE</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).IsNe((a),(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="108" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="108" bodyend="-1"/>
        <referencedby refid="namespaceleveldb_1ac871120de5f46199da0d282721c0511c" compoundref="cache__test_8cc" startline="176" endline="180">leveldb::TEST</referencedby>
        <referencedby refid="namespaceleveldb_1_1crc32c_1aeca842cf29e5136e1594dd5e0a714d7f" compoundref="crc32c__test_8cc" startline="50" endline="52">leveldb::crc32c::TEST</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" prot="public" static="no">
        <name>ASSERT_GE</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).IsGe((a),(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="109" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="109" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aa03dcde1d0771ebbcf7d6ac8bda9c725" compoundref="corruption__test_8cc" startline="88" endline="124">leveldb::CorruptionTest::Check</referencedby>
        <referencedby refid="namespaceleveldb_1a25dbda5a48ec782778d331e4ccb81b6b" compoundref="corruption__test_8cc" startline="219" endline="234">leveldb::TEST</referencedby>
        <referencedby refid="namespaceleveldb_1_1log_1a2ea9cc0af9f5d8b6bdc74e3126bd389a" compoundref="log__test_8cc" startline="448" endline="469">leveldb::log::TEST</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" prot="public" static="no">
        <name>ASSERT_GT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).IsGt((a),(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="110" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="namespaceleveldb_1a1ff90ae7b19ecf46c5efb6e5af00fa0a" compoundref="db__test_8cc" startline="914" endline="937">leveldb::TEST</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1ad71f56861528c854666f15f4bad921c2" prot="public" static="no">
        <name>ASSERT_LE</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).IsLe((a),(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="111" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="111" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aa03dcde1d0771ebbcf7d6ac8bda9c725" compoundref="corruption__test_8cc" startline="88" endline="124">leveldb::CorruptionTest::Check</referencedby>
        <referencedby refid="namespaceleveldb_1a0cec95f588ef6c5c121ac0d63eb4238f" compoundref="db__test_8cc" startline="621" endline="658">leveldb::TEST</referencedby>
        <referencedby refid="namespaceleveldb_1_1log_1a2ea9cc0af9f5d8b6bdc74e3126bd389a" compoundref="log__test_8cc" startline="448" endline="469">leveldb::log::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_concurrent_test_1a9dcaf11ec747ad37150526f891627c50" compoundref="skiplist__test_8cc" startline="225" endline="282">leveldb::ConcurrentTest::ReadStep</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a6058af464aa1533b961936d5f6c5aea0" prot="public" static="no">
        <name>ASSERT_LT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>::<ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">leveldb::test::Tester</ref>(__FILE__, __LINE__).IsLt((a),(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="112" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" compoundref="db__test_8cc" startline="311" endline="334">leveldb::DBTest::Contents</referencedby>
        <referencedby refid="namespaceleveldb_1a11f56de4abca34391c0e60f311262b65" compoundref="db__test_8cc" startline="1526" endline="1543">leveldb::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_concurrent_test_1a9dcaf11ec747ad37150526f891627c50" compoundref="skiplist__test_8cc" startline="225" endline="282">leveldb::ConcurrentTest::ReadStep</referencedby>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a1633c3c934cb68a1e7dffcb2565c76c2" prot="public" static="no">
        <name>TCONCAT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer><ref refid="testharness_8h_1a367981cf5bc052d00509d2039f23c5ce" kindref="member">TCONCAT1</ref>(a,b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="114" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a367981cf5bc052d00509d2039f23c5ce" prot="public" static="no">
        <name>TCONCAT1</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>a##b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="115" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testharness_8h_1a3c428ed0cddb46f6075333cf640029ec" prot="public" static="no">
        <name>TEST</name>
        <param><defname>base</defname></param>
        <param><defname>name</defname></param>
        <initializer>class <ref refid="testharness_8h_1a1633c3c934cb68a1e7dffcb2565c76c2" kindref="member">TCONCAT</ref>(_Test_,<ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>) : public <ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref> {                              \
 public:                                                                \
  void _Run();                                                          \
  static void _RunIt() {                                                \
    <ref refid="testharness_8h_1a1633c3c934cb68a1e7dffcb2565c76c2" kindref="member">TCONCAT</ref>(_Test_,<ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>) t;                                             \
    t._Run();                                                           \
  }                                                                     \
};                                                                      \
bool <ref refid="testharness_8h_1a1633c3c934cb68a1e7dffcb2565c76c2" kindref="member">TCONCAT</ref>(_Test_ignored_,<ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>) =                                     \
  ::<ref refid="namespaceleveldb_1_1test_1aecde3e0440c4462e8d73aad728e3e819" kindref="member">leveldb::test::RegisterTest</ref>(#<ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>, #<ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>, &amp;<ref refid="testharness_8h_1a1633c3c934cb68a1e7dffcb2565c76c2" kindref="member">TCONCAT</ref>(_Test_,<ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)::_RunIt); \
void <ref refid="testharness_8h_1a1633c3c934cb68a1e7dffcb2565c76c2" kindref="member">TCONCAT</ref>(_Test_,<ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)::_Run()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h" line="117" column="9" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STORAGE_LEVELDB_UTIL_TESTHARNESS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORAGE_LEVELDB_UTIL_TESTHARNESS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slice_8h" kindref="compound">leveldb/slice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random_8h" kindref="compound">util/random.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="db__test_8cc_1a9cc668c18debdbcad21b45fdd8158648" kindref="member">test</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Run<sp/>some<sp/>of<sp/>the<sp/>tests<sp/>registered<sp/>by<sp/>the<sp/>TEST()<sp/>macro.<sp/><sp/>If<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>environment<sp/>variable<sp/>&quot;LEVELDB_TESTS&quot;<sp/>is<sp/>not<sp/>set,<sp/>runs<sp/>all<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>runs<sp/>only<sp/>the<sp/>tests<sp/>whose<sp/>name<sp/>contains<sp/>the<sp/>value<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;LEVELDB_TESTS&quot;<sp/>as<sp/>a<sp/>substring.<sp/><sp/>E.g.,<sp/>suppose<sp/>the<sp/>tests<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>TEST(Foo,<sp/>Hello)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>TEST(Foo,<sp/>World)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LEVELDB_TESTS=Hello<sp/>will<sp/>run<sp/>the<sp/>first<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LEVELDB_TESTS=o<sp/><sp/><sp/><sp/><sp/>will<sp/>run<sp/>both<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LEVELDB_TESTS=Junk<sp/><sp/>will<sp/>run<sp/>no<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>0<sp/>if<sp/>all<sp/>tests<sp/>pass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dies<sp/>or<sp/>returns<sp/>a<sp/>non-zero<sp/>value<sp/>if<sp/>some<sp/>test<sp/>fails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1a3329162c54a0bff42d41c2ac86b2580a" kindref="member">RunAllTests</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>directory<sp/>to<sp/>use<sp/>for<sp/>temporary<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" kindref="member">TmpDir</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>randomization<sp/>seed<sp/>for<sp/>this<sp/>run.<sp/><sp/>Typically<sp/>returns<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>number<sp/>on<sp/>repeated<sp/>invocations<sp/>of<sp/>this<sp/>binary,<sp/>but<sp/>automated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>runs<sp/>may<sp/>be<sp/>able<sp/>to<sp/>vary<sp/>the<sp/>seed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">RandomSeed</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>instance<sp/>of<sp/>Tester<sp/>is<sp/>allocated<sp/>to<sp/>hold<sp/>temporary<sp/>state<sp/>during</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>execution<sp/>of<sp/>an<sp/>assertion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classleveldb_1_1test_1_1_tester" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">Tester</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok_;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fname_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classleveldb_1_1test_1_1_tester_1a166bc7b18483780292a44425ef5e64f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1test_1_1_tester_1a166bc7b18483780292a44425ef5e64f7" kindref="member">Tester</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ok_(true),<sp/>fname_(f),<sp/>line_(l)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classleveldb_1_1test_1_1_tester_1a832d52d6aa29945cccdf762b54481295" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1test_1_1_tester_1a832d52d6aa29945cccdf762b54481295" kindref="member">~Tester</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok_)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:%d:%s\n&quot;</highlight><highlight class="normal">,<sp/>fname_,<sp/>line_,<sp/>ss_.str().c_str());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classleveldb_1_1test_1_1_tester_1ad75cd5ea132083b72e7fd7271ef1918a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">Tester</ref>&amp;<sp/><ref refid="classleveldb_1_1test_1_1_tester_1ad75cd5ea132083b72e7fd7271ef1918a" kindref="member">Is</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Assertion<sp/>failure<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classleveldb_1_1test_1_1_tester_1af0e4decc6f483a78af44926634d990c2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">Tester</ref>&amp;<sp/><ref refid="classleveldb_1_1test_1_1_tester_1af0e4decc6f483a78af44926634d990c2" kindref="member">IsOk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINARY_OP(name,op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;class<sp/>X,<sp/>class<sp/>Y&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/>Tester&amp;<sp/>name(const<sp/>X&amp;<sp/>x,<sp/>const<sp/>Y&amp;<sp/>y)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!<sp/>(x<sp/>op<sp/>y))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ss_<sp/>&lt;&lt;<sp/>&quot;<sp/>failed:<sp/>&quot;<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>(&quot;<sp/>&quot;<sp/>#op<sp/>&quot;<sp/>&quot;)<sp/>&lt;&lt;<sp/>y;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ok_<sp/>=<sp/>false;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>*this;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" kindref="member">BINARY_OP</ref>(IsEq,<sp/>==)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" kindref="member">BINARY_OP</ref>(IsNe,<sp/>!=)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" kindref="member">BINARY_OP</ref>(IsGe,<sp/>&gt;=)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" kindref="member">BINARY_OP</ref>(IsGt,<sp/>&gt;)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" kindref="member">BINARY_OP</ref>(IsLe,<sp/>&lt;=)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a345ef8ff080f08123c7d688a4eaf5a59" kindref="member">BINARY_OP</ref>(IsLt,<sp/>&lt;)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINARY_OP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>the<sp/>specified<sp/>value<sp/>to<sp/>the<sp/>error<sp/>message<sp/>if<sp/>an<sp/>error<sp/>has<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="97" refid="classleveldb_1_1test_1_1_tester_1a4e776d487df19ac9daeed5527cd1d80e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1test_1_1_tester" kindref="compound">Tester</ref>&amp;<sp/><ref refid="classleveldb_1_1test_1_1_tester_1a4e776d487df19ac9daeed5527cd1d80e" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok_)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_TRUE(c)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).Is((c),<sp/>#c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_OK(s)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).IsOk((s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_EQ(a,b)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).IsEq((a),(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="testharness_8h_1a0086e0b898cbf7a680ba24ed898edb1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_NE(a,b)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).IsNe((a),(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_GE(a,b)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).IsGe((a),(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_GT(a,b)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).IsGt((a),(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_LE(a,b)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).IsLe((a),(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="testharness_8h_1a6058af464aa1533b961936d5f6c5aea0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_LT(a,b)<sp/>::leveldb::test::Tester(__FILE__,<sp/>__LINE__).IsLt((a),(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="testharness_8h_1a1633c3c934cb68a1e7dffcb2565c76c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCONCAT(a,b)<sp/>TCONCAT1(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="testharness_8h_1a367981cf5bc052d00509d2039f23c5ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCONCAT1(a,b)<sp/>a##b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="testharness_8h_1a3c428ed0cddb46f6075333cf640029ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST(base,name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor">class<sp/>TCONCAT(_Test_,name)<sp/>:<sp/>public<sp/>base<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/>public:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/>void<sp/>_Run();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/>static<sp/>void<sp/>_RunIt()<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>TCONCAT(_Test_,name)<sp/>t;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>t._Run();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor">};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor">bool<sp/>TCONCAT(_Test_ignored_,name)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/>::leveldb::test::RegisterTest(#base,<sp/>#name,<sp/>&amp;TCONCAT(_Test_,name)::_RunIt);<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor">void<sp/>TCONCAT(_Test_,name)::_Run()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>specified<sp/>test.<sp/><sp/>Typically<sp/>not<sp/>used<sp/>directly,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>invoked<sp/>via<sp/>the<sp/>macro<sp/>expansion<sp/>of<sp/>TEST.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1aecde3e0440c4462e8d73aad728e3e819" kindref="member">RegisterTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>)());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>STORAGE_LEVELDB_UTIL_TESTHARNESS_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/util/testharness.h"/>
  </compounddef>
</doxygen>
