<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="netbase__tests_8cpp" kind="file" language="C++">
    <compoundname>netbase_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="netbase_8h" local="yes">netbase.h</includes>
    <incdepgraph>
      <node id="55786">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="55797">
        <label>netinet/in.h</label>
      </node>
      <node id="55798">
        <label>arpa/inet.h</label>
      </node>
      <node id="55776">
        <label>limits</label>
      </node>
      <node id="55781">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="55796">
        <label>net/if.h</label>
      </node>
      <node id="55790">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="55791" relation="include">
        </childnode>
        <childnode refid="55769" relation="include">
        </childnode>
      </node>
      <node id="55767">
        <label>/home/dev/ds-160209/src/test/netbase_tests.cpp</label>
        <link refid="netbase_tests.cpp"/>
        <childnode refid="55768" relation="include">
        </childnode>
        <childnode refid="55769" relation="include">
        </childnode>
        <childnode refid="55770" relation="include">
        </childnode>
        <childnode refid="55771" relation="include">
        </childnode>
      </node>
      <node id="55768">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="55787">
        <label>sys/mman.h</label>
      </node>
      <node id="55784">
        <label>stdlib.h</label>
      </node>
      <node id="55792">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="55793" relation="include">
        </childnode>
        <childnode refid="55787" relation="include">
        </childnode>
        <childnode refid="55794" relation="include">
        </childnode>
        <childnode refid="55795" relation="include">
        </childnode>
        <childnode refid="55796" relation="include">
        </childnode>
        <childnode refid="55797" relation="include">
        </childnode>
        <childnode refid="55798" relation="include">
        </childnode>
        <childnode refid="55799" relation="include">
        </childnode>
        <childnode refid="55788" relation="include">
        </childnode>
        <childnode refid="55800" relation="include">
        </childnode>
        <childnode refid="55789" relation="include">
        </childnode>
        <childnode refid="55801" relation="include">
        </childnode>
      </node>
      <node id="55801">
        <label>errno.h</label>
      </node>
      <node id="55775">
        <label>cassert</label>
      </node>
      <node id="55769">
        <label>string</label>
      </node>
      <node id="55773">
        <label>map</label>
      </node>
      <node id="55800">
        <label>netdb.h</label>
      </node>
      <node id="55793">
        <label>sys/fcntl.h</label>
      </node>
      <node id="55772">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="55769" relation="include">
        </childnode>
        <childnode refid="55770" relation="include">
        </childnode>
        <childnode refid="55773" relation="include">
        </childnode>
        <childnode refid="55774" relation="include">
        </childnode>
        <childnode refid="55775" relation="include">
        </childnode>
        <childnode refid="55776" relation="include">
        </childnode>
        <childnode refid="55777" relation="include">
        </childnode>
        <childnode refid="55778" relation="include">
        </childnode>
        <childnode refid="55779" relation="include">
        </childnode>
        <childnode refid="55780" relation="include">
        </childnode>
        <childnode refid="55781" relation="include">
        </childnode>
        <childnode refid="55782" relation="include">
        </childnode>
        <childnode refid="55790" relation="include">
        </childnode>
      </node>
      <node id="55788">
        <label>limits.h</label>
      </node>
      <node id="55771">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="55769" relation="include">
        </childnode>
        <childnode refid="55770" relation="include">
        </childnode>
        <childnode refid="55772" relation="include">
        </childnode>
        <childnode refid="55792" relation="include">
        </childnode>
      </node>
      <node id="55799">
        <label>ifaddrs.h</label>
      </node>
      <node id="55795">
        <label>sys/types.h</label>
      </node>
      <node id="55785">
        <label>string.h</label>
      </node>
      <node id="55791">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="55779">
        <label>cstdio</label>
      </node>
      <node id="55780">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="55789">
        <label>unistd.h</label>
      </node>
      <node id="55770">
        <label>vector</label>
      </node>
      <node id="55777">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="55794">
        <label>sys/socket.h</label>
      </node>
      <node id="55782">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="55783" relation="include">
        </childnode>
        <childnode refid="55785" relation="include">
        </childnode>
        <childnode refid="55769" relation="include">
        </childnode>
        <childnode refid="55786" relation="include">
        </childnode>
        <childnode refid="55773" relation="include">
        </childnode>
        <childnode refid="55787" relation="include">
        </childnode>
        <childnode refid="55788" relation="include">
        </childnode>
        <childnode refid="55789" relation="include">
        </childnode>
      </node>
      <node id="55774">
        <label>set</label>
      </node>
      <node id="55783">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="55784" relation="include">
        </childnode>
      </node>
      <node id="55778">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="netbase__tests_8cpp_1a57cd2aba8cf6c2805a2c0216f3d8b106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(netbase_networks)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>netbase_networks</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp" line="12" column="1" bodyfile="/home/dev/ds-160209/src/test/netbase_tests.cpp" bodystart="12" bodyend="19"/>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3af66f60a80e2a5d99813c3f322cf8a6e1" compoundref="netbase_8h" startline="30">NET_UNROUTABLE</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3ae1598b317168b96919bc3131ee149ebb" compoundref="netbase_8h" startline="31">NET_IPV4</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9a9d9355a4923b33382f9894ba80688d" compoundref="netbase_8h" startline="32">NET_IPV6</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9defff41db522fc865d58fc4e7646e9f" compoundref="netbase_8h" startline="33">NET_TOR</references>
      </memberdef>
      <memberdef kind="function" id="netbase__tests_8cpp_1adbc1c20ef7fc0ca6790a9f162e284cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(netbase_properties)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>netbase_properties</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp" line="21" column="1" bodyfile="/home/dev/ds-160209/src/test/netbase_tests.cpp" bodystart="21" bodyend="43"/>
        <references refid="net_8cpp_1a16fa1bd4d34c4c29c90903fc3cdf7517" compoundref="net_8cpp" startline="317" endline="321">IsLocal</references>
      </memberdef>
      <memberdef kind="function" id="netbase__tests_8cpp_1ad5220acb44c93b839e84db668d51e44c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool TestSplitHost</definition>
        <argsstring>(string test, string host, int port)</argsstring>
        <name>TestSplitHost</name>
        <param>
          <type>string</type>
          <declname>test</declname>
        </param>
        <param>
          <type>string</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp" line="45" column="1" bodyfile="/home/dev/ds-160209/src/test/netbase_tests.cpp" bodystart="45" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="netbase__tests_8cpp_1a4131dc61ab82f98fe120e7871c73887c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(netbase_splithost)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>netbase_splithost</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp" line="53" column="1" bodyfile="/home/dev/ds-160209/src/test/netbase_tests.cpp" bodystart="53" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="netbase__tests_8cpp_1a9f145ba1659e138030f897bce6b0a913" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool TestParse</definition>
        <argsstring>(string src, string canon)</argsstring>
        <name>TestParse</name>
        <param>
          <type>string</type>
          <declname>src</declname>
        </param>
        <param>
          <type>string</type>
          <declname>canon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp" line="72" column="1" bodyfile="/home/dev/ds-160209/src/test/netbase_tests.cpp" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="netbase__tests_8cpp_1a36295abc0d24b5d9cac3e7180ccfcff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(netbase_lookupnumeric)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>netbase_lookupnumeric</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp" line="80" column="1" bodyfile="/home/dev/ds-160209/src/test/netbase_tests.cpp" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="netbase__tests_8cpp_1a8e3c5cce313701b7e8bf305ff86b8bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(onioncat_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>onioncat_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp" line="91" column="1" bodyfile="/home/dev/ds-160209/src/test/netbase_tests.cpp" bodystart="91" bodyend="100"/>
        <references refid="class_c_net_addr_1a3fba9e0b18f531c0ed15794a30e8165d" compoundref="netbase_8cpp" startline="706" endline="709">CNetAddr::IsTor</references>
        <references refid="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" compoundref="netbase_8cpp" startline="822" endline="848">CNetAddr::ToStringIP</references>
        <references refid="class_c_net_addr_1a35131b2792434d1c9a860c583b610ab6" compoundref="netbase_8cpp" startline="795" endline="798">CNetAddr::IsRoutable</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="netbase_8h" kindref="compound">netbase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">BOOST_AUTO_TEST_SUITE(netbase_tests)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="netbase__tests_8cpp_1a57cd2aba8cf6c2805a2c0216f3d8b106" refkind="member"><highlight class="normal"><ref refid="netbase__tests_8cpp_1a57cd2aba8cf6c2805a2c0216f3d8b106" kindref="member">BOOST_AUTO_TEST_CASE</ref>(netbase_networks)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">).GetNetwork()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3af66f60a80e2a5d99813c3f322cf8a6e1" kindref="member">NET_UNROUTABLE</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;::1&quot;</highlight><highlight class="normal">).GetNetwork()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3af66f60a80e2a5d99813c3f322cf8a6e1" kindref="member">NET_UNROUTABLE</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;8.8.8.8&quot;</highlight><highlight class="normal">).GetNetwork()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3ae1598b317168b96919bc3131ee149ebb" kindref="member">NET_IPV4</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;2001::8888&quot;</highlight><highlight class="normal">).GetNetwork()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9a9d9355a4923b33382f9894ba80688d" kindref="member">NET_IPV6</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;FD87:D87E:EB43:edb1:8e4:3588:e546:35ca&quot;</highlight><highlight class="normal">).GetNetwork()<sp/>==<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9defff41db522fc865d58fc4e7646e9f" kindref="member">NET_TOR</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="netbase__tests_8cpp_1adbc1c20ef7fc0ca6790a9f162e284cde" refkind="member"><highlight class="normal"><ref refid="netbase__tests_8cpp_1a57cd2aba8cf6c2805a2c0216f3d8b106" kindref="member">BOOST_AUTO_TEST_CASE</ref>(netbase_properties)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">).IsIPv4());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;::FFFF:192.168.1.1&quot;</highlight><highlight class="normal">).IsIPv4());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;::1&quot;</highlight><highlight class="normal">).IsIPv6());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;10.0.0.1&quot;</highlight><highlight class="normal">).IsRFC1918());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;192.168.1.1&quot;</highlight><highlight class="normal">).IsRFC1918());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;172.31.255.255&quot;</highlight><highlight class="normal">).IsRFC1918());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;2001:0DB8::&quot;</highlight><highlight class="normal">).IsRFC3849());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;169.254.1.1&quot;</highlight><highlight class="normal">).IsRFC3927());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;2002::1&quot;</highlight><highlight class="normal">).IsRFC3964());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;FC00::&quot;</highlight><highlight class="normal">).IsRFC4193());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;2001::2&quot;</highlight><highlight class="normal">).IsRFC4380());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;2001:10::&quot;</highlight><highlight class="normal">).IsRFC4843());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;FE80::&quot;</highlight><highlight class="normal">).IsRFC4862());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;64:FF9B::&quot;</highlight><highlight class="normal">).IsRFC6052());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;FD87:D87E:EB43:edb1:8e4:3588:e546:35ca&quot;</highlight><highlight class="normal">).IsTor());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">).<ref refid="net_8cpp_1a16fa1bd4d34c4c29c90903fc3cdf7517" kindref="member">IsLocal</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;::1&quot;</highlight><highlight class="normal">).<ref refid="net_8cpp_1a16fa1bd4d34c4c29c90903fc3cdf7517" kindref="member">IsLocal</ref>());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;8.8.8.8&quot;</highlight><highlight class="normal">).IsRoutable());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;2001::1&quot;</highlight><highlight class="normal">).IsRoutable());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">).IsValid());</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TestSplitHost(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="db__test_8cc_1a9cc668c18debdbcad21b45fdd8158648" kindref="member">test</ref>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>hostOut;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>portOut<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="netbase_8cpp_1a1b1ce2ba1ffe40785e65ec3ad5a20e79" kindref="member">SplitHostPort</ref>(test,<sp/>portOut,<sp/>hostOut);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hostOut<sp/>==<sp/>host<sp/>&amp;&amp;<sp/>port<sp/>==<sp/>portOut;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="netbase__tests_8cpp_1a4131dc61ab82f98fe120e7871c73887c" refkind="member"><highlight class="normal"><ref refid="netbase__tests_8cpp_1a57cd2aba8cf6c2805a2c0216f3d8b106" kindref="member">BOOST_AUTO_TEST_CASE</ref>(netbase_splithost)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;www.darksilk.org&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;www.darksilk.org&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;[www.darksilk.org]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;www.darksilk.org&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;www.darksilk.org:80&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;www.darksilk.org&quot;</highlight><highlight class="normal">,<sp/>80));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;[www.darksilk.org]:80&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;www.darksilk.org&quot;</highlight><highlight class="normal">,<sp/>80));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;127.0.0.1:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>8333));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;[127.0.0.1]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;[127.0.0.1]:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>8333));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;::ffff:127.0.0.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;::ffff:127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;[::ffff:127.0.0.1]:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;::ffff:127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>8333));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;[::]:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">,<sp/>8333));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;::8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;::8333&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>8333));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;[]:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>8333));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestSplitHost(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TestParse(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>src,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>canon)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addr;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="netbase_8cpp_1aca44bd756958aa16d8d8703e4c90c936" kindref="member">LookupNumeric</ref>(src.c_str(),<sp/>addr,<sp/>65535))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>canon<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>canon<sp/>==<sp/>addr.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="netbase__tests_8cpp_1a36295abc0d24b5d9cac3e7180ccfcff6" refkind="member"><highlight class="normal"><ref refid="netbase__tests_8cpp_1a57cd2aba8cf6c2805a2c0216f3d8b106" kindref="member">BOOST_AUTO_TEST_CASE</ref>(netbase_lookupnumeric)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestParse(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1:65535&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestParse(</highlight><highlight class="stringliteral">&quot;127.0.0.1:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1:8333&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestParse(</highlight><highlight class="stringliteral">&quot;::ffff:127.0.0.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1:65535&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestParse(</highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[::]:65535&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestParse(</highlight><highlight class="stringliteral">&quot;[::]:8333&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[::]:8333&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestParse(</highlight><highlight class="stringliteral">&quot;[127.0.0.1]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1:65535&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(TestParse(</highlight><highlight class="stringliteral">&quot;:::&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="netbase__tests_8cpp_1a8e3c5cce313701b7e8bf305ff86b8bb0" refkind="member"><highlight class="normal"><ref refid="netbase__tests_8cpp_1a57cd2aba8cf6c2805a2c0216f3d8b106" kindref="member">BOOST_AUTO_TEST_CASE</ref>(onioncat_test)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>from<sp/>http://www.cypherpunk.at/onioncat/wiki/OnionCat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref><sp/>addr1(</highlight><highlight class="stringliteral">&quot;5wyqrzbvrdsumnok.onion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref><sp/>addr2(</highlight><highlight class="stringliteral">&quot;FD87:D87E:EB43:edb1:8e4:3588:e546:35ca&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr1<sp/>==<sp/>addr2);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr1.<ref refid="class_c_net_addr_1a3fba9e0b18f531c0ed15794a30e8165d" kindref="member">IsTor</ref>());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr1.<ref refid="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" kindref="member">ToStringIP</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;5wyqrzbvrdsumnok.onion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr1.<ref refid="class_c_net_addr_1a35131b2792434d1c9a860c583b610ab6" kindref="member">IsRoutable</ref>());</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/netbase_tests.cpp"/>
  </compounddef>
</doxygen>
