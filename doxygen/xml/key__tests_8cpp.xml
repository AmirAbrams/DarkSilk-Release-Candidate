<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="key__tests_8cpp" kind="file" language="C++">
    <compoundname>key_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="key_8h" local="yes">key.h</includes>
    <includes refid="base58_8h" local="yes">base58.h</includes>
    <includes refid="uint256_8h" local="yes">uint256.h</includes>
    <includes local="yes">util.h</includes>
    <incdepgraph>
      <node id="26281">
        <label>list</label>
      </node>
      <node id="26238">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="26280">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="26250" relation="include">
        </childnode>
        <childnode refid="26236" relation="include">
        </childnode>
        <childnode refid="26231" relation="include">
        </childnode>
      </node>
      <node id="26253">
        <label>limits</label>
      </node>
      <node id="26262">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="26249" relation="include">
        </childnode>
        <childnode refid="26236" relation="include">
        </childnode>
      </node>
      <node id="26263">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="26264" relation="include">
        </childnode>
        <childnode refid="26249" relation="include">
        </childnode>
        <childnode refid="26241" relation="include">
        </childnode>
      </node>
      <node id="26270">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="26231" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
        <childnode refid="26249" relation="include">
        </childnode>
        <childnode refid="26271" relation="include">
        </childnode>
        <childnode refid="26272" relation="include">
        </childnode>
        <childnode refid="26243" relation="include">
        </childnode>
        <childnode refid="26268" relation="include">
        </childnode>
        <childnode refid="26273" relation="include">
        </childnode>
        <childnode refid="26293" relation="include">
        </childnode>
      </node>
      <node id="26292">
        <label>openssl/rand.h</label>
      </node>
      <node id="26256">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="26246">
        <label>assert.h</label>
      </node>
      <node id="26266">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="26267" relation="include">
        </childnode>
        <childnode refid="26243" relation="include">
        </childnode>
        <childnode refid="26233" relation="include">
        </childnode>
        <childnode refid="26270" relation="include">
        </childnode>
        <childnode refid="26234" relation="include">
        </childnode>
        <childnode refid="26231" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
      </node>
      <node id="26257">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="26258" relation="include">
        </childnode>
        <childnode refid="26231" relation="include">
        </childnode>
      </node>
      <node id="26230">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="26240">
        <label>sys/mman.h</label>
      </node>
      <node id="26236">
        <label>stdlib.h</label>
      </node>
      <node id="26271">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="26291">
        <label>openssl/crypto.h</label>
      </node>
      <node id="26287">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="26259">
        <label>openssl/sha.h</label>
      </node>
      <node id="26252">
        <label>cassert</label>
      </node>
      <node id="26248">
        <label>stdexcept</label>
      </node>
      <node id="26273">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="26274" relation="include">
        </childnode>
        <childnode refid="26275" relation="include">
        </childnode>
        <childnode refid="26276" relation="include">
        </childnode>
        <childnode refid="26250" relation="include">
        </childnode>
        <childnode refid="26277" relation="include">
        </childnode>
        <childnode refid="26280" relation="include">
        </childnode>
        <childnode refid="26239" relation="include">
        </childnode>
        <childnode refid="26281" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
        <childnode refid="26231" relation="include">
        </childnode>
        <childnode refid="26283" relation="include">
        </childnode>
        <childnode refid="26284" relation="include">
        </childnode>
        <childnode refid="26285" relation="include">
        </childnode>
        <childnode refid="26286" relation="include">
        </childnode>
        <childnode refid="26287" relation="include">
        </childnode>
        <childnode refid="26288" relation="include">
        </childnode>
        <childnode refid="26289" relation="include">
        </childnode>
        <childnode refid="26290" relation="include">
        </childnode>
        <childnode refid="26291" relation="include">
        </childnode>
        <childnode refid="26292" relation="include">
        </childnode>
        <childnode refid="26269" relation="include">
        </childnode>
        <childnode refid="26249" relation="include">
        </childnode>
      </node>
      <node id="26286">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="26231">
        <label>string</label>
      </node>
      <node id="26239">
        <label>map</label>
      </node>
      <node id="26283">
        <label>boost/thread.hpp</label>
      </node>
      <node id="26264">
        <label>stddef.h</label>
      </node>
      <node id="26272">
        <label>boost/variant.hpp</label>
      </node>
      <node id="26250">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="26231" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
        <childnode refid="26239" relation="include">
        </childnode>
        <childnode refid="26251" relation="include">
        </childnode>
        <childnode refid="26252" relation="include">
        </childnode>
        <childnode refid="26253" relation="include">
        </childnode>
        <childnode refid="26249" relation="include">
        </childnode>
        <childnode refid="26247" relation="include">
        </childnode>
        <childnode refid="26254" relation="include">
        </childnode>
        <childnode refid="26255" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26234" relation="include">
        </childnode>
        <childnode refid="26257" relation="include">
        </childnode>
      </node>
      <node id="26241">
        <label>limits.h</label>
      </node>
      <node id="26276">
        <label>sys/resource.h</label>
      </node>
      <node id="26288">
        <label>openssl/bio.h</label>
      </node>
      <node id="26244">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="26245" relation="include">
        </childnode>
        <childnode refid="26250" relation="include">
        </childnode>
        <childnode refid="26259" relation="include">
        </childnode>
        <childnode refid="26260" relation="include">
        </childnode>
        <childnode refid="26261" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26263" relation="include">
        </childnode>
        <childnode refid="26265" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
      </node>
      <node id="26293">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="26273" relation="include">
        </childnode>
        <childnode refid="26250" relation="include">
        </childnode>
        <childnode refid="26236" relation="include">
        </childnode>
        <childnode refid="26294" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
        <childnode refid="26295" relation="include">
        </childnode>
      </node>
      <node id="26274">
        <label>sys/types.h</label>
      </node>
      <node id="26237">
        <label>string.h</label>
      </node>
      <node id="26258">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="26254">
        <label>cstdio</label>
      </node>
      <node id="26290">
        <label>openssl/buffer.h</label>
      </node>
      <node id="26255">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="26285">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="26243">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="26244" relation="include">
        </childnode>
        <childnode refid="26250" relation="include">
        </childnode>
        <childnode refid="26245" relation="include">
        </childnode>
        <childnode refid="26248" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
      </node>
      <node id="26242">
        <label>unistd.h</label>
      </node>
      <node id="26232">
        <label>vector</label>
      </node>
      <node id="26268">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="26250" relation="include">
        </childnode>
        <childnode refid="26245" relation="include">
        </childnode>
        <childnode refid="26269" relation="include">
        </childnode>
        <childnode refid="26248" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
        <childnode refid="26249" relation="include">
        </childnode>
      </node>
      <node id="26260">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="26284">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="26282">
        <label>utility</label>
      </node>
      <node id="26279">
        <label>sstream</label>
      </node>
      <node id="26233">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="26234" relation="include">
        </childnode>
        <childnode refid="26243" relation="include">
        </childnode>
        <childnode refid="26248" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
      </node>
      <node id="26289">
        <label>openssl/evp.h</label>
      </node>
      <node id="26277">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="26252" relation="include">
        </childnode>
        <childnode refid="26278" relation="include">
        </childnode>
        <childnode refid="26279" relation="include">
        </childnode>
        <childnode refid="26248" relation="include">
        </childnode>
      </node>
      <node id="26249">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="26265">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="26249" relation="include">
        </childnode>
        <childnode refid="26264" relation="include">
        </childnode>
        <childnode refid="26241" relation="include">
        </childnode>
      </node>
      <node id="26275">
        <label>sys/time.h</label>
      </node>
      <node id="26278">
        <label>iostream</label>
      </node>
      <node id="26245">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="26246" relation="include">
        </childnode>
        <childnode refid="26247" relation="include">
        </childnode>
        <childnode refid="26248" relation="include">
        </childnode>
        <childnode refid="26249" relation="include">
        </childnode>
        <childnode refid="26231" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
      </node>
      <node id="26229">
        <label>/home/dev/ds-160209/src/test/key_tests.cpp</label>
        <link refid="key_tests.cpp"/>
        <childnode refid="26230" relation="include">
        </childnode>
        <childnode refid="26231" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
        <childnode refid="26233" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26245" relation="include">
        </childnode>
        <childnode refid="26296" relation="include">
        </childnode>
      </node>
      <node id="26269">
        <label>openssl/bn.h</label>
      </node>
      <node id="26234">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="26235" relation="include">
        </childnode>
        <childnode refid="26237" relation="include">
        </childnode>
        <childnode refid="26231" relation="include">
        </childnode>
        <childnode refid="26238" relation="include">
        </childnode>
        <childnode refid="26239" relation="include">
        </childnode>
        <childnode refid="26240" relation="include">
        </childnode>
        <childnode refid="26241" relation="include">
        </childnode>
        <childnode refid="26242" relation="include">
        </childnode>
      </node>
      <node id="26267">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="26268" relation="include">
        </childnode>
        <childnode refid="26245" relation="include">
        </childnode>
        <childnode refid="26232" relation="include">
        </childnode>
      </node>
      <node id="26251">
        <label>set</label>
      </node>
      <node id="26261">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="26249" relation="include">
        </childnode>
        <childnode refid="26236" relation="include">
        </childnode>
      </node>
      <node id="26296">
        <label>util.h</label>
      </node>
      <node id="26294">
        <label>stdio.h</label>
      </node>
      <node id="26235">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="26236" relation="include">
        </childnode>
      </node>
      <node id="26247">
        <label>cstring</label>
      </node>
      <node id="26295">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="key__tests_8cpp_1a266b672d3f689fb69331836bd0440362" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref></type>
        <definition>const CDarkSilkAddress addr1(&quot;1QFqqMUD55ZV3PJEJZtaKCsQmjLT6JkjvJ&quot;)</definition>
        <argsstring>(&quot;1QFqqMUD55ZV3PJEJZtaKCsQmjLT6JkjvJ&quot;)</argsstring>
        <name>addr1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="key__tests_8cpp_1af46e7872adecf096ab4c7066905fd17a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref></type>
        <definition>const CDarkSilkAddress addr2(&quot;1F5y5E5FMc5YzdJtB9hLaUe43GDxEKXENJ&quot;)</definition>
        <argsstring>(&quot;1F5y5E5FMc5YzdJtB9hLaUe43GDxEKXENJ&quot;)</argsstring>
        <name>addr2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="key__tests_8cpp_1aebf05a592f1e296cd0b2e789b6bd3c84" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref></type>
        <definition>const CDarkSilkAddress addr1C(&quot;1NoJrossxPBKfCHuJXT4HadJrXRE9Fxiqs&quot;)</definition>
        <argsstring>(&quot;1NoJrossxPBKfCHuJXT4HadJrXRE9Fxiqs&quot;)</argsstring>
        <name>addr1C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="key__tests_8cpp_1ad37146b336e236f50a2e2ea1f2251487" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref></type>
        <definition>const CDarkSilkAddress addr2C(&quot;1CRj2HyM1CXWzHAXLQtiGLyggNT9WQqsDs&quot;)</definition>
        <argsstring>(&quot;1CRj2HyM1CXWzHAXLQtiGLyggNT9WQqsDs&quot;)</argsstring>
        <name>addr2C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="20" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="key__tests_8cpp_1aa51a7952e74e3c46d846c6f51d73a347" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>static const string strSecret1</definition>
        <argsstring>(&quot;5HxWvvfubhXpYYpS3tJkw6fq9jE9j18THftkZjHHfmFiWtmAbrj&quot;)</argsstring>
        <name>strSecret1</name>
        <param>
          <type>&quot;5HxWvvfubhXpYYpS3tJkw6fq9jE9j18THftkZjHHfmFiWtmAbrj&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="key__tests_8cpp_1abac657a03b0f3cc7a42b701b908537a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>static const string strSecret2</definition>
        <argsstring>(&quot;5KC4ejrDjv152FGwP386VD1i2NYc5KkfSMyv1nGy1VGDxGHqVY3&quot;)</argsstring>
        <name>strSecret2</name>
        <param>
          <type>&quot;5KC4ejrDjv152FGwP386VD1i2NYc5KkfSMyv1nGy1VGDxGHqVY3&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="key__tests_8cpp_1a3c472f8eeb27ae32b395201ae71cfe06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>static const string strSecret1C</definition>
        <argsstring>(&quot;Kwr371tjA9u2rFSMZjTNun2PXXP3WPZu2afRHTcta6KxEUdm1vEw&quot;)</argsstring>
        <name>strSecret1C</name>
        <param>
          <type>&quot;Kwr371tjA9u2rFSMZjTNun2PXXP3WPZu2afRHTcta6KxEUdm1vEw&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="key__tests_8cpp_1a9f9a206841c3416ad0e235c264ea18ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>static const string strSecret2C</definition>
        <argsstring>(&quot;L3Hq7a8FEQwJkW1M2GNKDW28546Vp5miewcCzSqUD9kCAXrJdS3g&quot;)</argsstring>
        <name>strSecret2C</name>
        <param>
          <type>&quot;L3Hq7a8FEQwJkW1M2GNKDW28546Vp5miewcCzSqUD9kCAXrJdS3g&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="key__tests_8cpp_1aa0e1282f892851e12f389ca1c88e69d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>static const string strAddressBad</definition>
        <argsstring>(&quot;1HV9Lc3sNHZxwj4Zk6fB38tEmBryq2cBiF&quot;)</argsstring>
        <name>strAddressBad</name>
        <param>
          <type>&quot;1HV9Lc3sNHZxwj4Zk6fB38tEmBryq2cBiF&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="key__tests_8cpp_1add8f8fb6aeee707149cdf29db2eca2b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(key_test1)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>key_test1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/key_tests.cpp" line="56" column="1" bodyfile="/home/dev/ds-160209/src/test/key_tests.cpp" bodystart="56" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key_8h" kindref="compound">key.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base58_8h" kindref="compound">base58.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uint256_8h" kindref="compound">uint256.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strSecret1<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;5HxWvvfubhXpYYpS3tJkw6fq9jE9j18THftkZjHHfmFiWtmAbrj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strSecret2<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;5KC4ejrDjv152FGwP386VD1i2NYc5KkfSMyv1nGy1VGDxGHqVY3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strSecret1C<sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Kwr371tjA9u2rFSMZjTNun2PXXP3WPZu2afRHTcta6KxEUdm1vEw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strSecret2C<sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;L3Hq7a8FEQwJkW1M2GNKDW28546Vp5miewcCzSqUD9kCAXrJdS3g&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>addr1<sp/>(</highlight><highlight class="stringliteral">&quot;1QFqqMUD55ZV3PJEJZtaKCsQmjLT6JkjvJ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>addr2<sp/>(</highlight><highlight class="stringliteral">&quot;1F5y5E5FMc5YzdJtB9hLaUe43GDxEKXENJ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>addr1C(</highlight><highlight class="stringliteral">&quot;1NoJrossxPBKfCHuJXT4HadJrXRE9Fxiqs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>addr2C(</highlight><highlight class="stringliteral">&quot;1CRj2HyM1CXWzHAXLQtiGLyggNT9WQqsDs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strAddressBad(</highlight><highlight class="stringliteral">&quot;1HV9Lc3sNHZxwj4Zk6fB38tEmBryq2cBiF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KEY_TESTS_DUMPINFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dumpKeyInfo(<ref refid="classuint256" kindref="compound">uint256</ref><sp/>privkey)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>key.resize(32);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;secret[0],<sp/>&amp;privkey,<sp/>32);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>sec;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>sec.resize(32);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;sec[0],<sp/>&amp;secret[0],<sp/>32);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>*<sp/>secret<sp/>(hex):<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(sec).c_str());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCompressed=0;<sp/>nCompressed&lt;2;<sp/>nCompressed++)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCompressed<sp/>=<sp/>nCompressed<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>*<sp/>%s:\n&quot;</highlight><highlight class="normal">,<sp/>fCompressed<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;compressed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;uncompressed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_secret" kindref="compound">CDarkSilkSecret</ref><sp/>bsecret;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bsecret.SetSecret(secret,<sp/>fCompressed);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>*<sp/>secret<sp/>(base58):<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>bsecret.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.SetSecret(secret,<sp/>fCompressed);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>vchPubKey<sp/>=<sp/>key.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>*<sp/>pubkey<sp/>(hex):<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(vchPubKey).c_str());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>*<sp/>address<sp/>(base58):<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(vchPubKey).ToString().c_str());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">BOOST_AUTO_TEST_SUITE(key_tests)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="key__tests_8cpp_1add8f8fb6aeee707149cdf29db2eca2b2" refkind="member"><highlight class="normal"><ref refid="key__tests_8cpp_1add8f8fb6aeee707149cdf29db2eca2b2" kindref="member">BOOST_AUTO_TEST_CASE</ref>(key_test1)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_secret" kindref="compound">CDarkSilkSecret</ref><sp/>bsecret1,<sp/>bsecret2,<sp/>bsecret1C,<sp/>bsecret2C,<sp/>baddress1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>bsecret1.<ref refid="class_c_dark_silk_secret_1a06075192fb631c3b406a6ca231d2f926" kindref="member">SetString</ref><sp/>(strSecret1));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>bsecret2.<ref refid="class_c_dark_silk_secret_1a06075192fb631c3b406a6ca231d2f926" kindref="member">SetString</ref><sp/>(strSecret2));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>bsecret1C.<ref refid="class_c_dark_silk_secret_1a06075192fb631c3b406a6ca231d2f926" kindref="member">SetString</ref>(strSecret1C));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>bsecret2C.<ref refid="class_c_dark_silk_secret_1a06075192fb631c3b406a6ca231d2f926" kindref="member">SetString</ref>(strSecret2C));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(!baddress1.<ref refid="class_c_dark_silk_secret_1a06075192fb631c3b406a6ca231d2f926" kindref="member">SetString</ref>(strAddressBad));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key1<sp/><sp/>=<sp/>bsecret1.<ref refid="class_c_dark_silk_secret_1af7b026d90efb897f6e592ce424c8d2c9" kindref="member">GetKey</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(key1.IsCompressed()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key2<sp/><sp/>=<sp/>bsecret2.<ref refid="class_c_dark_silk_secret_1af7b026d90efb897f6e592ce424c8d2c9" kindref="member">GetKey</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(key2.IsCompressed()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key1C<sp/>=<sp/>bsecret1C.<ref refid="class_c_dark_silk_secret_1af7b026d90efb897f6e592ce424c8d2c9" kindref="member">GetKey</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(key1C.IsCompressed()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key2C<sp/>=<sp/>bsecret2C.<ref refid="class_c_dark_silk_secret_1af7b026d90efb897f6e592ce424c8d2c9" kindref="member">GetKey</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(key1C.IsCompressed()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey1<sp/><sp/>=<sp/>key1.<sp/>GetPubKey();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey2<sp/><sp/>=<sp/>key2.<sp/>GetPubKey();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey1C<sp/>=<sp/>key1C.GetPubKey();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey2C<sp/>=<sp/>key2C.GetPubKey();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr1.<ref refid="class_c_dark_silk_address_1a907e63758c7914a246b5807f6babf97d" kindref="member">Get</ref>()<sp/><sp/>==<sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>(pubkey1.GetID()));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr2.<ref refid="class_c_dark_silk_address_1a907e63758c7914a246b5807f6babf97d" kindref="member">Get</ref>()<sp/><sp/>==<sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>(pubkey2.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr1C.<ref refid="class_c_dark_silk_address_1a907e63758c7914a246b5807f6babf97d" kindref="member">Get</ref>()<sp/>==<sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>(pubkey1C.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(addr2C.<ref refid="class_c_dark_silk_address_1a907e63758c7914a246b5807f6babf97d" kindref="member">Get</ref>()<sp/>==<sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>(pubkey2C.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;16;<sp/>n++)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strMsg<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Very<sp/>secret<sp/>message<sp/>%i:<sp/>11&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashMsg<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(strMsg.begin(),<sp/>strMsg.end());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>sign1,<sp/>sign2,<sp/>sign1C,<sp/>sign2C;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key1.Sign<sp/>(hashMsg,<sp/>sign1));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key2.Sign<sp/>(hashMsg,<sp/>sign2));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key1C.Sign(hashMsg,<sp/>sign1C));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key2C.Sign(hashMsg,<sp/>sign2C));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey1.Verify(hashMsg,<sp/>sign1));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey1.Verify(hashMsg,<sp/>sign2));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey1.Verify(hashMsg,<sp/>sign1C));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey1.Verify(hashMsg,<sp/>sign2C));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey2.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign1));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey2.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign2));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey2.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign1C));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey2.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign2C));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey1C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign1));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey1C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign2));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey1C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign1C));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey1C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign2C));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey2C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign1));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey2C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign2));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!pubkey2C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign1C));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>pubkey2C.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(hashMsg,<sp/>sign2C));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compact<sp/>signatures<sp/>(with<sp/>key<sp/>recovery)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>csign1,<sp/>csign2,<sp/>csign1C,<sp/>csign2C;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key1.SignCompact<sp/>(hashMsg,<sp/>csign1));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key2.SignCompact<sp/>(hashMsg,<sp/>csign2));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key1C.SignCompact(hashMsg,<sp/>csign1C));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(key2C.SignCompact(hashMsg,<sp/>csign2C));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>rkey1,<sp/>rkey2,<sp/>rkey1C,<sp/>rkey2C;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey1.RecoverCompact<sp/>(hashMsg,<sp/>csign1));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey2.RecoverCompact<sp/>(hashMsg,<sp/>csign2));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey1C.RecoverCompact(hashMsg,<sp/>csign1C));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey2C.RecoverCompact(hashMsg,<sp/>csign2C));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey1<sp/><sp/>==<sp/>pubkey1);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey2<sp/><sp/>==<sp/>pubkey2);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey1C<sp/>==<sp/>pubkey1C);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(rkey2C<sp/>==<sp/>pubkey2C);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/key_tests.cpp"/>
  </compounddef>
</doxygen>
