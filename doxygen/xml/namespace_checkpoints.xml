<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="namespace_checkpoints" kind="namespace" language="C++">
    <compoundname>Checkpoints</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_checkpoints_1a996cca530c4568a2eb4516e8f351b9a2" prot="public" static="no">
        <type>std::map&lt; int, <ref refid="classuint256" kindref="compound">uint256</ref> &gt;</type>
        <definition>typedef std::map&lt;int, uint256&gt; Checkpoints::MapCheckpoints</definition>
        <argsstring></argsstring>
        <name>MapCheckpoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="20" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_checkpoints_1aa1627e6513521f57d949be771ef9c8ae" prot="public" static="yes" mutable="no">
        <type><ref refid="namespace_checkpoints_1a996cca530c4568a2eb4516e8f351b9a2" kindref="member">MapCheckpoints</ref></type>
        <definition>MapCheckpoints Checkpoints::mapCheckpoints</definition>
        <argsstring></argsstring>
        <name>mapCheckpoints</name>
        <initializer>=
        boost::assign::map_list_of
        ( 0, <ref refid="classuint256" kindref="compound">uint256</ref>(&quot;0xdcc5e22e275eff273799a4c06493f8364316d032813c22845602f05ff13d7ec7&quot;) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="29" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_checkpoints_1adbd2868ceb026e5abc618490d0d4c1d9" prot="public" static="yes" mutable="no">
        <type><ref refid="namespace_checkpoints_1a996cca530c4568a2eb4516e8f351b9a2" kindref="member">MapCheckpoints</ref></type>
        <definition>MapCheckpoints Checkpoints::mapCheckpointsTestnet</definition>
        <argsstring></argsstring>
        <name>mapCheckpointsTestnet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="35" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_checkpoints_1a896b098d769129c8e84c511f838baaa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Checkpoints::CheckHardened</definition>
        <argsstring>(int nHeight, const uint256 &amp;hash)</argsstring>
        <name>CheckHardened</name>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="37" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="37" bodyend="44"/>
        <references refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" compoundref="chainparams_8h" startline="111" endline="114">TestNet</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_checkpoints_1ac4dc0a0ba00009be52fee3eef694c2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Checkpoints::GetTotalBlocksEstimate</definition>
        <argsstring>()</argsstring>
        <name>GetTotalBlocksEstimate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="46" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="46" bodyend="53"/>
        <references refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" compoundref="chainparams_8h" startline="111" endline="114">TestNet</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
        <referencedby refid="chain_8h_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</referencedby>
        <referencedby refid="class_c_transaction_po_s_1a19de7fad0cc156ebd4e5a3858db7619f" compoundref="main_8cpp" startline="3846" endline="3971">CTransactionPoS::ConnectInputs</referencedby>
        <referencedby refid="_checkpoints__tests_8cpp_1a0aedb3a807efef0e5881249f0aee16d3" compoundref="_checkpoints__tests_8cpp" startline="15" endline="32">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_checkpoints_1ad91375160e77c30d6e6ccbfe1c682195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
        <definition>CBlockIndex * Checkpoints::GetLastCheckpoint</definition>
        <argsstring>(const std::map&lt; uint256, CBlockIndex * &gt; &amp;mapBlockIndex)</argsstring>
        <name>GetLastCheckpoint</name>
        <param>
          <type>const std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> * &gt; &amp;</type>
          <declname>mapBlockIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="55" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="55" bodyend="67"/>
        <references refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" compoundref="chainparams_8h" startline="111" endline="114">TestNet</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
      </memberdef>
      <memberdef kind="function" id="namespace_checkpoints_1aa1915d9b1ed1c988b8477c3cc7ed1416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
        <definition>const CBlockIndex * Checkpoints::AutoSelectSyncCheckpoint</definition>
        <argsstring>()</argsstring>
        <name>AutoSelectSyncCheckpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="70" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="70" bodyend="77"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <referencedby refid="namespace_checkpoints_1ab698c7033e4afdd7f7173bbe22b7c2c5" compoundref="checkpoints_8cpp" startline="80" endline="87">CheckSync</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a18e0cd566c85cd589c2d687fa06d77e7" compoundref="rpcblockchain_8cpp" startline="276" endline="293">getcheckpoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_checkpoints_1ab698c7033e4afdd7f7173bbe22b7c2c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Checkpoints::CheckSync</definition>
        <argsstring>(int nHeight)</argsstring>
        <name>CheckSync</name>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="80" column="1" bodyfile="/home/dev/ds-160209/src/checkpoints.cpp" bodystart="80" bodyend="87"/>
        <references refid="namespace_checkpoints_1aa1915d9b1ed1c988b8477c3cc7ed1416" compoundref="checkpoints_8cpp" startline="70" endline="77">AutoSelectSyncCheckpoint</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Block-chain checkpoints are compiled-in sanity checks. They are updated every release or three. </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/checkpoints.cpp" line="18" column="1"/>
  </compounddef>
</doxygen>
