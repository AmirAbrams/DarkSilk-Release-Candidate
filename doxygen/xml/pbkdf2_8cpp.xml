<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="pbkdf2_8cpp" kind="file" language="C++">
    <compoundname>pbkdf2.cpp</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="pbkdf2_8h" local="yes">pbkdf2.h</includes>
    <incdepgraph>
      <node id="41617">
        <label>/home/dev/ds-160209/src/pbkdf2.cpp</label>
        <link refid="pbkdf2.cpp"/>
        <childnode refid="41618" relation="include">
        </childnode>
        <childnode refid="41619" relation="include">
        </childnode>
      </node>
      <node id="41620">
        <label>openssl/sha.h</label>
      </node>
      <node id="41618">
        <label>string.h</label>
      </node>
      <node id="41619">
        <label>pbkdf2.h</label>
        <link refid="pbkdf2_8h"/>
        <childnode refid="41620" relation="include">
        </childnode>
        <childnode refid="41621" relation="include">
        </childnode>
      </node>
      <node id="41621">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pbkdf2_8cpp_1afb9e583c264e530ad0712db75d91a10e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t be32dec</definition>
        <argsstring>(const void *pp)</argsstring>
        <name>be32dec</name>
        <param>
          <type>const void *</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pbkdf2.cpp" line="7" column="1" bodyfile="/home/dev/ds-160209/src/pbkdf2.cpp" bodystart="7" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="pbkdf2_8cpp_1a768653573ba97ba96c9ecdc2fde494a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void be32enc</definition>
        <argsstring>(void *pp, uint32_t x)</argsstring>
        <name>be32enc</name>
        <param>
          <type>void *</type>
          <declname>pp</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pbkdf2.cpp" line="16" column="1" bodyfile="/home/dev/ds-160209/src/pbkdf2.cpp" bodystart="16" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="pbkdf2_8cpp_1a9f0ca2a7707ef211d0475853cb3ac830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HMAC_SHA256_Init</definition>
        <argsstring>(HMAC_SHA256_CTX *ctx, const void *_K, size_t Klen)</argsstring>
        <name>HMAC_SHA256_Init</name>
        <param>
          <type><ref refid="pbkdf2_8h_1ad4496f76f0dd16b29090105336230ba6" kindref="member">HMAC_SHA256_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_K</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>Klen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pbkdf2.cpp" line="30" column="1" bodyfile="/home/dev/ds-160209/src/pbkdf2.cpp" bodystart="30" bodyend="62"/>
        <references refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" compoundref="pbkdf2_8h" startline="9">HMAC_SHA256Context::ictx</references>
        <references refid="struct_h_m_a_c___s_h_a256_context_1a699abe00837406f312a95226741137f4" compoundref="pbkdf2_8h" startline="10">HMAC_SHA256Context::octx</references>
        <referencedby refid="pbkdf2_8h_1aee9e3622e2f69c23a5891ddc86fd1228" compoundref="pbkdf2_8cpp" startline="98" endline="147">PBKDF2_SHA256</referencedby>
      </memberdef>
      <memberdef kind="function" id="pbkdf2_8cpp_1a0a31c1fb31419acd6da17de8b2df7ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HMAC_SHA256_Update</definition>
        <argsstring>(HMAC_SHA256_CTX *ctx, const void *in, size_t len)</argsstring>
        <name>HMAC_SHA256_Update</name>
        <param>
          <type><ref refid="pbkdf2_8h_1ad4496f76f0dd16b29090105336230ba6" kindref="member">HMAC_SHA256_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pbkdf2.cpp" line="66" column="1" bodyfile="/home/dev/ds-160209/src/pbkdf2.cpp" bodystart="66" bodyend="71"/>
        <references refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" compoundref="pbkdf2_8h" startline="9">HMAC_SHA256Context::ictx</references>
        <referencedby refid="pbkdf2_8h_1aee9e3622e2f69c23a5891ddc86fd1228" compoundref="pbkdf2_8cpp" startline="98" endline="147">PBKDF2_SHA256</referencedby>
      </memberdef>
      <memberdef kind="function" id="pbkdf2_8cpp_1a382ad7aa2f3d2d1ba2a9d051cb51a6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HMAC_SHA256_Final</definition>
        <argsstring>(unsigned char digest[32], HMAC_SHA256_CTX *ctx)</argsstring>
        <name>HMAC_SHA256_Final</name>
        <param>
          <type>unsigned char</type>
          <declname>digest</declname>
          <array>[32]</array>
        </param>
        <param>
          <type><ref refid="pbkdf2_8h_1ad4496f76f0dd16b29090105336230ba6" kindref="member">HMAC_SHA256_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pbkdf2.cpp" line="75" column="1" bodyfile="/home/dev/ds-160209/src/pbkdf2.cpp" bodystart="75" bodyend="90"/>
        <references refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" compoundref="pbkdf2_8h" startline="9">HMAC_SHA256Context::ictx</references>
        <references refid="struct_h_m_a_c___s_h_a256_context_1a699abe00837406f312a95226741137f4" compoundref="pbkdf2_8h" startline="10">HMAC_SHA256Context::octx</references>
        <referencedby refid="pbkdf2_8h_1aee9e3622e2f69c23a5891ddc86fd1228" compoundref="pbkdf2_8cpp" startline="98" endline="147">PBKDF2_SHA256</referencedby>
      </memberdef>
      <memberdef kind="function" id="pbkdf2_8cpp_1aee9e3622e2f69c23a5891ddc86fd1228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PBKDF2_SHA256</definition>
        <argsstring>(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt, size_t saltlen, uint64_t c, uint8_t *buf, size_t dkLen)</argsstring>
        <name>PBKDF2_SHA256</name>
        <param>
          <type>const <ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>passwd</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>passwdlen</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dkLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PBKDF2_SHA256(passwd, passwdlen, salt, saltlen, c, buf, dkLen): Compute PBKDF2(passwd, salt, c, dkLen) using HMAC-SHA256 as the PRF, and write the output to buf. The value dkLen must be at most 32 * (2^32 - 1). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pbkdf2.cpp" line="98" column="1" bodyfile="/home/dev/ds-160209/src/pbkdf2.cpp" bodystart="98" bodyend="147"/>
        <references refid="pbkdf2_8cpp_1a9f0ca2a7707ef211d0475853cb3ac830" compoundref="pbkdf2_8cpp" startline="30" endline="62">HMAC_SHA256_Init</references>
        <references refid="pbkdf2_8cpp_1a0a31c1fb31419acd6da17de8b2df7ecb" compoundref="pbkdf2_8cpp" startline="66" endline="71">HMAC_SHA256_Update</references>
        <references refid="pbkdf2_8cpp_1a382ad7aa2f3d2d1ba2a9d051cb51a6fc" compoundref="pbkdf2_8cpp" startline="75" endline="90">HMAC_SHA256_Final</references>
        <referencedby refid="scrypt_8cpp_1a84d48cffe34f5203893f03d56dfc24d5" compoundref="scrypt_8cpp" startline="139" endline="151">scrypt_nosalt</referencedby>
        <referencedby refid="scrypt_8cpp_1af51489d460b3e77446a7db8fa068e19d" compoundref="scrypt_8cpp" startline="153" endline="165">scrypt</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pbkdf2_8h" kindref="compound">pbkdf2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">be32dec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pp)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*p<sp/>=<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)pp;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)(p[3])<sp/>+<sp/>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)(p[2])<sp/>&lt;&lt;<sp/>8)<sp/>+</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)(p[1])<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)(p[0])<sp/>&lt;&lt;<sp/>24));</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">be32enc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pp,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*<sp/>p<sp/>=<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)pp;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>x<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>an<sp/>HMAC-SHA256<sp/>operation<sp/>with<sp/>the<sp/>given<sp/>key.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="pbkdf2_8h_1a9f0ca2a7707ef211d0475853cb3ac830" refkind="member"><highlight class="normal"><ref refid="pbkdf2_8cpp_1a9f0ca2a7707ef211d0475853cb3ac830" kindref="member">HMAC_SHA256_Init</ref>(<ref refid="struct_h_m_a_c___s_h_a256_context" kindref="compound">HMAC_SHA256_CTX</ref><sp/>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_K,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Klen)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pad[64];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>khash[32];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>K<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)_K;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Klen<sp/>&gt;<sp/>64,<sp/>the<sp/>key<sp/>is<sp/>really<sp/>SHA256(K).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Klen<sp/>&gt;<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHA256_Init(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" kindref="member">ictx</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" kindref="member">ictx</ref>,<sp/>K,<sp/>Klen);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHA256_Final(khash,<sp/>&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" kindref="member">ictx</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/>=<sp/>khash;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Klen<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inner<sp/>SHA256<sp/>operation<sp/>is<sp/>SHA256(K<sp/>xor<sp/>[block<sp/>of<sp/>0x36]<sp/>||<sp/>data).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Init(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" kindref="member">ictx</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pad,<sp/>0x36,<sp/>64);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Klen;<sp/>i++)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad[i]<sp/>^=<sp/>K[i];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" kindref="member">ictx</ref>,<sp/>pad,<sp/>64);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Outer<sp/>SHA256<sp/>operation<sp/>is<sp/>SHA256(K<sp/>xor<sp/>[block<sp/>of<sp/>0x5c]<sp/>||<sp/>hash).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Init(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a699abe00837406f312a95226741137f4" kindref="member">octx</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pad,<sp/>0x5c,<sp/>64);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Klen;<sp/>i++)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad[i]<sp/>^=<sp/>K[i];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a699abe00837406f312a95226741137f4" kindref="member">octx</ref>,<sp/>pad,<sp/>64);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clean<sp/>the<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(khash,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Add<sp/>bytes<sp/>to<sp/>the<sp/>HMAC-SHA256<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="pbkdf2_8h_1a0a31c1fb31419acd6da17de8b2df7ecb" refkind="member"><highlight class="normal"><ref refid="pbkdf2_8cpp_1a0a31c1fb31419acd6da17de8b2df7ecb" kindref="member">HMAC_SHA256_Update</ref>(<ref refid="struct_h_m_a_c___s_h_a256_context" kindref="compound">HMAC_SHA256_CTX</ref><sp/>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Feed<sp/>data<sp/>to<sp/>the<sp/>inner<sp/>SHA256<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" kindref="member">ictx</ref>,<sp/>in,<sp/>len);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Finish<sp/>an<sp/>HMAC-SHA256<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="pbkdf2_8h_1a382ad7aa2f3d2d1ba2a9d051cb51a6fc" refkind="member"><highlight class="normal"><ref refid="pbkdf2_8cpp_1a382ad7aa2f3d2d1ba2a9d051cb51a6fc" kindref="member">HMAC_SHA256_Final</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digest[32],<sp/><ref refid="struct_h_m_a_c___s_h_a256_context" kindref="compound">HMAC_SHA256_CTX</ref><sp/>*<sp/>ctx)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ihash[32];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finish<sp/>the<sp/>inner<sp/>SHA256<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Final(ihash,<sp/>&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a3433296fae8500c793388994de730f3c" kindref="member">ictx</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Feed<sp/>the<sp/>inner<sp/>hash<sp/>to<sp/>the<sp/>outer<sp/>SHA256<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a699abe00837406f312a95226741137f4" kindref="member">octx</ref>,<sp/>ihash,<sp/>32);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finish<sp/>the<sp/>outer<sp/>SHA256<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Final(digest,<sp/>&amp;ctx-&gt;<ref refid="struct_h_m_a_c___s_h_a256_context_1a699abe00837406f312a95226741137f4" kindref="member">octx</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clean<sp/>the<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ihash,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="pbkdf2_8h_1aee9e3622e2f69c23a5891ddc86fd1228" refkind="member"><highlight class="normal"><ref refid="pbkdf2_8cpp_1aee9e3622e2f69c23a5891ddc86fd1228" kindref="member">PBKDF2_SHA256</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*<sp/>passwd,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>passwdlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*<sp/>salt,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>c,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dkLen)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_m_a_c___s_h_a256_context" kindref="compound">HMAC_SHA256_CTX</ref><sp/>PShctx,<sp/>hctx;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>ivec[4];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>U[32];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>T[32];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>j;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>clen;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>HMAC<sp/>state<sp/>after<sp/>processing<sp/>P<sp/>and<sp/>S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1a9f0ca2a7707ef211d0475853cb3ac830" kindref="member">HMAC_SHA256_Init</ref>(&amp;PShctx,<sp/>passwd,<sp/>passwdlen);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1a0a31c1fb31419acd6da17de8b2df7ecb" kindref="member">HMAC_SHA256_Update</ref>(&amp;PShctx,<sp/>salt,<sp/>saltlen);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>through<sp/>the<sp/>blocks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>*<sp/>32<sp/>&lt;<sp/>dkLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>INT(i<sp/>+<sp/>1).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be32enc(ivec,<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>U_1<sp/>=<sp/>PRF(P,<sp/>S<sp/>||<sp/>INT(i)).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;hctx,<sp/>&amp;PShctx,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_h_m_a_c___s_h_a256_context" kindref="compound">HMAC_SHA256_CTX</ref>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1a0a31c1fb31419acd6da17de8b2df7ecb" kindref="member">HMAC_SHA256_Update</ref>(&amp;hctx,<sp/>ivec,<sp/>4);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1a382ad7aa2f3d2d1ba2a9d051cb51a6fc" kindref="member">HMAC_SHA256_Final</ref>(U,<sp/>&amp;hctx);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>T_i<sp/>=<sp/>U_1<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(T,<sp/>U,<sp/>32);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>2;<sp/>j<sp/>&lt;=<sp/>c;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>U_j.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1a9f0ca2a7707ef211d0475853cb3ac830" kindref="member">HMAC_SHA256_Init</ref>(&amp;hctx,<sp/>passwd,<sp/>passwdlen);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1a0a31c1fb31419acd6da17de8b2df7ecb" kindref="member">HMAC_SHA256_Update</ref>(&amp;hctx,<sp/>U,<sp/>32);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1a382ad7aa2f3d2d1ba2a9d051cb51a6fc" kindref="member">HMAC_SHA256_Final</ref>(U,<sp/>&amp;hctx);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>xor<sp/>U_j<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>32;<sp/>k++)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[k]<sp/>^=<sp/>U[k];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>as<sp/>many<sp/>bytes<sp/>as<sp/>necessary<sp/>into<sp/>buf.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clen<sp/>=<sp/>dkLen<sp/>-<sp/>i<sp/>*<sp/>32;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clen<sp/>&gt;<sp/>32)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clen<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;buf[i<sp/>*<sp/>32],<sp/>T,<sp/>clen);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clean<sp/>PShctx,<sp/>since<sp/>we<sp/>never<sp/>called<sp/>_Final<sp/>on<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;PShctx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_h_m_a_c___s_h_a256_context" kindref="compound">HMAC_SHA256_CTX</ref>));</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/pbkdf2.cpp"/>
  </compounddef>
</doxygen>
