<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="allocator__tests_8cpp" kind="file" language="C++">
    <compoundname>allocator_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes local="yes">util.h</includes>
    <incdepgraph>
      <node id="25866">
        <label>list</label>
      </node>
      <node id="25835">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="25900">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25898" relation="include">
        </childnode>
      </node>
      <node id="25914">
        <label>netinet/in.h</label>
      </node>
      <node id="25818">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25833" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
      </node>
      <node id="25907">
        <label>arpa/inet.h</label>
      </node>
      <node id="25884">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="25825">
        <label>limits</label>
      </node>
      <node id="25814">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="25853">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25833" relation="include">
        </childnode>
      </node>
      <node id="25854">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="25855" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25837" relation="include">
        </childnode>
      </node>
      <node id="25817">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="25818" relation="include">
        </childnode>
        <childnode refid="25841" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25844" relation="include">
        </childnode>
        <childnode refid="25845" relation="include">
        </childnode>
        <childnode refid="25881" relation="include">
        </childnode>
        <childnode refid="25879" relation="include">
        </childnode>
      </node>
      <node id="25845">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25846" relation="include">
        </childnode>
        <childnode refid="25847" relation="include">
        </childnode>
        <childnode refid="25848" relation="include">
        </childnode>
        <childnode refid="25857" relation="include">
        </childnode>
        <childnode refid="25859" relation="include">
        </childnode>
        <childnode refid="25878" relation="include">
        </childnode>
      </node>
      <node id="25877">
        <label>openssl/rand.h</label>
      </node>
      <node id="25842">
        <label>assert.h</label>
      </node>
      <node id="25830">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="25913">
        <label>net/if.h</label>
      </node>
      <node id="25816">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="25817" relation="include">
        </childnode>
        <childnode refid="25882" relation="include">
        </childnode>
        <childnode refid="25887" relation="include">
        </childnode>
        <childnode refid="25818" relation="include">
        </childnode>
        <childnode refid="25902" relation="include">
        </childnode>
      </node>
      <node id="25899">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="25855" relation="include">
        </childnode>
      </node>
      <node id="25886">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="25839">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="25840" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
      </node>
      <node id="25813">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="25887">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="25888" relation="include">
        </childnode>
        <childnode refid="25816" relation="include">
        </childnode>
        <childnode refid="25842" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25846" relation="include">
        </childnode>
        <childnode refid="25901" relation="include">
        </childnode>
      </node>
      <node id="25836">
        <label>sys/mman.h</label>
      </node>
      <node id="25833">
        <label>stdlib.h</label>
      </node>
      <node id="25921">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="25922" relation="include">
        </childnode>
        <childnode refid="25859" relation="include">
        </childnode>
        <childnode refid="25919" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25846" relation="include">
        </childnode>
      </node>
      <node id="25846">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="25876">
        <label>openssl/crypto.h</label>
      </node>
      <node id="25910">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="25911" relation="include">
        </childnode>
        <childnode refid="25836" relation="include">
        </childnode>
        <childnode refid="25912" relation="include">
        </childnode>
        <childnode refid="25860" relation="include">
        </childnode>
        <childnode refid="25913" relation="include">
        </childnode>
        <childnode refid="25914" relation="include">
        </childnode>
        <childnode refid="25907" relation="include">
        </childnode>
        <childnode refid="25915" relation="include">
        </childnode>
        <childnode refid="25837" relation="include">
        </childnode>
        <childnode refid="25916" relation="include">
        </childnode>
        <childnode refid="25838" relation="include">
        </childnode>
        <childnode refid="25917" relation="include">
        </childnode>
      </node>
      <node id="25872">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="25850">
        <label>openssl/sha.h</label>
      </node>
      <node id="25917">
        <label>errno.h</label>
      </node>
      <node id="25824">
        <label>cassert</label>
      </node>
      <node id="25843">
        <label>stdexcept</label>
      </node>
      <node id="25859">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="25860" relation="include">
        </childnode>
        <childnode refid="25861" relation="include">
        </childnode>
        <childnode refid="25862" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25863" relation="include">
        </childnode>
        <childnode refid="25818" relation="include">
        </childnode>
        <childnode refid="25822" relation="include">
        </childnode>
        <childnode refid="25866" relation="include">
        </childnode>
        <childnode refid="25867" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25868" relation="include">
        </childnode>
        <childnode refid="25869" relation="include">
        </childnode>
        <childnode refid="25870" relation="include">
        </childnode>
        <childnode refid="25871" relation="include">
        </childnode>
        <childnode refid="25872" relation="include">
        </childnode>
        <childnode refid="25873" relation="include">
        </childnode>
        <childnode refid="25874" relation="include">
        </childnode>
        <childnode refid="25875" relation="include">
        </childnode>
        <childnode refid="25876" relation="include">
        </childnode>
        <childnode refid="25877" relation="include">
        </childnode>
        <childnode refid="25858" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
      </node>
      <node id="25918">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="25919" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25909" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
      </node>
      <node id="25871">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="25895">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25879" relation="include">
        </childnode>
        <childnode refid="25896" relation="include">
        </childnode>
        <childnode refid="25899" relation="include">
        </childnode>
      </node>
      <node id="25820">
        <label>string</label>
      </node>
      <node id="25923">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25833" relation="include">
        </childnode>
        <childnode refid="25859" relation="include">
        </childnode>
        <childnode refid="25903" relation="include">
        </childnode>
      </node>
      <node id="25822">
        <label>map</label>
      </node>
      <node id="25868">
        <label>boost/thread.hpp</label>
      </node>
      <node id="25920">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="25909" relation="include">
        </childnode>
        <childnode refid="25918" relation="include">
        </childnode>
        <childnode refid="25882" relation="include">
        </childnode>
        <childnode refid="25881" relation="include">
        </childnode>
        <childnode refid="25859" relation="include">
        </childnode>
        <childnode refid="25822" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
      </node>
      <node id="25891">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25892" relation="include">
        </childnode>
        <childnode refid="25859" relation="include">
        </childnode>
        <childnode refid="25870" relation="include">
        </childnode>
        <childnode refid="25895" relation="include">
        </childnode>
        <childnode refid="25900" relation="include">
        </childnode>
      </node>
      <node id="25855">
        <label>stddef.h</label>
      </node>
      <node id="25847">
        <label>boost/variant.hpp</label>
      </node>
      <node id="25916">
        <label>netdb.h</label>
      </node>
      <node id="25911">
        <label>sys/fcntl.h</label>
      </node>
      <node id="25888">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="25889" relation="include">
        </childnode>
      </node>
      <node id="25898">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25897" relation="include">
        </childnode>
      </node>
      <node id="25812">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator_tests.cpp"/>
        <childnode refid="25813" relation="include">
        </childnode>
        <childnode refid="25814" relation="include">
        </childnode>
        <childnode refid="25815" relation="include">
        </childnode>
        <childnode refid="25844" relation="include">
        </childnode>
      </node>
      <node id="25902">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="25819">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25822" relation="include">
        </childnode>
        <childnode refid="25823" relation="include">
        </childnode>
        <childnode refid="25824" relation="include">
        </childnode>
        <childnode refid="25825" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25827" relation="include">
        </childnode>
        <childnode refid="25828" relation="include">
        </childnode>
        <childnode refid="25829" relation="include">
        </childnode>
        <childnode refid="25830" relation="include">
        </childnode>
        <childnode refid="25831" relation="include">
        </childnode>
        <childnode refid="25839" relation="include">
        </childnode>
      </node>
      <node id="25837">
        <label>limits.h</label>
      </node>
      <node id="25883">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="25908">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="25823" relation="include">
        </childnode>
        <childnode refid="25904" relation="include">
        </childnode>
      </node>
      <node id="25862">
        <label>sys/resource.h</label>
      </node>
      <node id="25873">
        <label>openssl/bio.h</label>
      </node>
      <node id="25906">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="25909">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25910" relation="include">
        </childnode>
      </node>
      <node id="25849">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="25841" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25850" relation="include">
        </childnode>
        <childnode refid="25851" relation="include">
        </childnode>
        <childnode refid="25852" relation="include">
        </childnode>
        <childnode refid="25853" relation="include">
        </childnode>
        <childnode refid="25854" relation="include">
        </childnode>
        <childnode refid="25856" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
      </node>
      <node id="25915">
        <label>ifaddrs.h</label>
      </node>
      <node id="25878">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="25859" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25833" relation="include">
        </childnode>
        <childnode refid="25879" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25880" relation="include">
        </childnode>
      </node>
      <node id="25860">
        <label>sys/types.h</label>
      </node>
      <node id="25894">
        <label>ios</label>
      </node>
      <node id="25834">
        <label>string.h</label>
      </node>
      <node id="25840">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="25828">
        <label>cstdio</label>
      </node>
      <node id="25885">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="25875">
        <label>openssl/buffer.h</label>
      </node>
      <node id="25829">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="25815">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="25816" relation="include">
        </childnode>
        <childnode refid="25903" relation="include">
        </childnode>
        <childnode refid="25845" relation="include">
        </childnode>
        <childnode refid="25892" relation="include">
        </childnode>
        <childnode refid="25890" relation="include">
        </childnode>
        <childnode refid="25921" relation="include">
        </childnode>
        <childnode refid="25866" relation="include">
        </childnode>
        <childnode refid="25901" relation="include">
        </childnode>
      </node>
      <node id="25870">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="25901">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="25848">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="25849" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25841" relation="include">
        </childnode>
        <childnode refid="25843" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
      </node>
      <node id="25838">
        <label>unistd.h</label>
      </node>
      <node id="25821">
        <label>vector</label>
      </node>
      <node id="25857">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25841" relation="include">
        </childnode>
        <childnode refid="25858" relation="include">
        </childnode>
        <childnode refid="25843" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
      </node>
      <node id="25903">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="25904" relation="include">
        </childnode>
        <childnode refid="25905" relation="include">
        </childnode>
        <childnode refid="25846" relation="include">
        </childnode>
        <childnode refid="25906" relation="include">
        </childnode>
        <childnode refid="25877" relation="include">
        </childnode>
        <childnode refid="25907" relation="include">
        </childnode>
        <childnode refid="25908" relation="include">
        </childnode>
        <childnode refid="25909" relation="include">
        </childnode>
        <childnode refid="25918" relation="include">
        </childnode>
        <childnode refid="25920" relation="include">
        </childnode>
        <childnode refid="25849" relation="include">
        </childnode>
        <childnode refid="25892" relation="include">
        </childnode>
      </node>
      <node id="25851">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="25869">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="25867">
        <label>utility</label>
      </node>
      <node id="25889">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="25817" relation="include">
        </childnode>
        <childnode refid="25890" relation="include">
        </childnode>
      </node>
      <node id="25865">
        <label>sstream</label>
      </node>
      <node id="25874">
        <label>openssl/evp.h</label>
      </node>
      <node id="25863">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="25824" relation="include">
        </childnode>
        <childnode refid="25864" relation="include">
        </childnode>
        <childnode refid="25865" relation="include">
        </childnode>
        <childnode refid="25843" relation="include">
        </childnode>
      </node>
      <node id="25826">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="25892">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="25831" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25893" relation="include">
        </childnode>
        <childnode refid="25842" relation="include">
        </childnode>
        <childnode refid="25894" relation="include">
        </childnode>
        <childnode refid="25825" relation="include">
        </childnode>
        <childnode refid="25822" relation="include">
        </childnode>
        <childnode refid="25823" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25834" relation="include">
        </childnode>
        <childnode refid="25867" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
      </node>
      <node id="25856">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25855" relation="include">
        </childnode>
        <childnode refid="25837" relation="include">
        </childnode>
      </node>
      <node id="25861">
        <label>sys/time.h</label>
      </node>
      <node id="25864">
        <label>iostream</label>
      </node>
      <node id="25904">
        <label>deque</label>
      </node>
      <node id="25841">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="25842" relation="include">
        </childnode>
        <childnode refid="25827" relation="include">
        </childnode>
        <childnode refid="25843" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
      </node>
      <node id="25912">
        <label>sys/socket.h</label>
      </node>
      <node id="25897">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="25842" relation="include">
        </childnode>
        <childnode refid="25855" relation="include">
        </childnode>
        <childnode refid="25834" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
      </node>
      <node id="25905">
        <label>boost/array.hpp</label>
      </node>
      <node id="25858">
        <label>openssl/bn.h</label>
      </node>
      <node id="25890">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="25891" relation="include">
        </childnode>
        <childnode refid="25815" relation="include">
        </childnode>
        <childnode refid="25822" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25867" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
      </node>
      <node id="25881">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="25826" relation="include">
        </childnode>
      </node>
      <node id="25831">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="25832" relation="include">
        </childnode>
        <childnode refid="25834" relation="include">
        </childnode>
        <childnode refid="25820" relation="include">
        </childnode>
        <childnode refid="25835" relation="include">
        </childnode>
        <childnode refid="25822" relation="include">
        </childnode>
        <childnode refid="25836" relation="include">
        </childnode>
        <childnode refid="25837" relation="include">
        </childnode>
        <childnode refid="25838" relation="include">
        </childnode>
      </node>
      <node id="25919">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="25857" relation="include">
        </childnode>
        <childnode refid="25841" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
      </node>
      <node id="25823">
        <label>set</label>
      </node>
      <node id="25893">
        <label>algorithm</label>
      </node>
      <node id="25852">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25833" relation="include">
        </childnode>
      </node>
      <node id="25844">
        <label>util.h</label>
      </node>
      <node id="25879">
        <label>stdio.h</label>
      </node>
      <node id="25832">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="25833" relation="include">
        </childnode>
      </node>
      <node id="25827">
        <label>cstring</label>
      </node>
      <node id="25882">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="25883" relation="include">
        </childnode>
        <childnode refid="25884" relation="include">
        </childnode>
        <childnode refid="25885" relation="include">
        </childnode>
        <childnode refid="25835" relation="include">
        </childnode>
        <childnode refid="25886" relation="include">
        </childnode>
      </node>
      <node id="25880">
        <label>inttypes.h</label>
      </node>
      <node id="25896">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="25897" relation="include">
        </childnode>
        <childnode refid="25898" relation="include">
        </childnode>
      </node>
      <node id="25922">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="25817" relation="include">
        </childnode>
        <childnode refid="25856" relation="include">
        </childnode>
        <childnode refid="25923" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_locker" prot="public">TestLocker</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="allocator__tests_8cpp_1a82cf9c56bff43f6755785af8ae46b792" prot="public" static="yes" mutable="no">
        <type>const void *</type>
        <definition>const void* last_lock_addr</definition>
        <argsstring></argsstring>
        <name>last_lock_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="10" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="allocator__tests_8cpp_1ac067028bf9c7080592072da99765993b" prot="public" static="yes" mutable="no">
        <type>const void *</type>
        <definition>const void * last_unlock_addr</definition>
        <argsstring></argsstring>
        <name>last_unlock_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="10" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="allocator__tests_8cpp_1aeaf5b67db37a2df30db4f84e79bf7f35" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t last_lock_len</definition>
        <argsstring></argsstring>
        <name>last_lock_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="11" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="allocator__tests_8cpp_1a81f99ec358ccb1ba07411f102f8058c2" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t last_unlock_len</definition>
        <argsstring></argsstring>
        <name>last_unlock_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="11" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="allocator__tests_8cpp_1aa07f6ed2434510666e4401fe4189fbaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(test_LockedPageManagerBase)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>test_LockedPageManagerBase</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="29" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="29" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">BOOST_AUTO_TEST_SUITE(allocator_tests)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dummy<sp/>memory<sp/>page<sp/>locker<sp/>for<sp/>platform<sp/>independent<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">static<sp/>const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*last_lock_addr,<sp/>*last_unlock_addr;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>last_lock_len,<sp/>last_unlock_len;</highlight></codeline>
<codeline lineno="12" refid="class_test_locker" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_test_locker" kindref="compound">TestLocker</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="class_test_locker_1a3fe641f059dbad71492bf67803c48942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_test_locker_1a3fe641f059dbad71492bf67803c48942" kindref="member">Lock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_lock_addr<sp/>=<sp/>addr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_lock_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21" refid="class_test_locker_1a2dd93706bf6e42cdda57bbab0a88893b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_test_locker_1a2dd93706bf6e42cdda57bbab0a88893b" kindref="member">Unlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_unlock_addr<sp/>=<sp/>addr;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_unlock_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="allocator__tests_8cpp_1aa07f6ed2434510666e4401fe4189fbaa" refkind="member"><highlight class="normal"><ref refid="allocator__tests_8cpp_1aa07f6ed2434510666e4401fe4189fbaa" kindref="member">BOOST_AUTO_TEST_CASE</ref>(test_LockedPageManagerBase)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>test_page_size<sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_locked_page_manager_base" kindref="compound">LockedPageManagerBase&lt;TestLocker&gt;</ref><sp/>lpm(test_page_size);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>last_lock_addr<sp/>=<sp/>last_unlock_addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>last_lock_len<sp/>=<sp/>last_unlock_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>large<sp/>number<sp/>of<sp/>small<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>33);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>33;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>small<sp/>number<sp/>of<sp/>page-sized<sp/>objects,<sp/>straddling<sp/>two<sp/>pages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*100<sp/>+<sp/>53;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>small<sp/>number<sp/>of<sp/>page-sized<sp/>objects<sp/>aligned<sp/>to<sp/>exactly<sp/>one<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*300;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>very<sp/>large<sp/>object,<sp/>straddling<sp/>pages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*600+1),<sp/>test_page_size*500);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(last_lock_addr<sp/>==<sp/>reinterpret_cast&lt;void*&gt;(test_page_size*(600+500)));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>very<sp/>large<sp/>object,<sp/>page<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*1200),<sp/>test_page_size*500-1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(last_lock_addr<sp/>==<sp/>reinterpret_cast&lt;void*&gt;(test_page_size*(1200+500-1)));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1000*33+test_page_size-1)/test_page_size<sp/>+<sp/></highlight><highlight class="comment">//<sp/>small<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101<sp/>+<sp/>100<sp/>+<sp/><sp/></highlight><highlight class="comment">//<sp/>page-sized<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>501<sp/>+<sp/>500));<sp/></highlight><highlight class="comment">//<sp/>large<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK((last_lock_len<sp/>&amp;<sp/>(test_page_size-1))<sp/>==<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>always<sp/>lock<sp/>entire<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(last_unlock_len<sp/>==<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>unlocked<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>unlock<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>33);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>33;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*100<sp/>+<sp/>53;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*300;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*600+1),<sp/>test_page_size*500);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*1200),<sp/>test_page_size*500-1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>everything<sp/>is<sp/>released<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>few<sp/>and<sp/>unlocks<sp/>of<sp/>size<sp/>zero<sp/>(should<sp/>have<sp/>no<sp/>effect)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK((last_unlock_len<sp/>&amp;<sp/>(test_page_size-1))<sp/>==<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>always<sp/>unlock<sp/>entire<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp"/>
  </compounddef>
</doxygen>
