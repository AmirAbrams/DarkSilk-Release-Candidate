<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="allocator__tests_8cpp" kind="file" language="C++">
    <compoundname>allocator_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes local="yes">util.h</includes>
    <incdepgraph>
      <node id="55328">
        <label>list</label>
      </node>
      <node id="55297">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="55362">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55360" relation="include">
        </childnode>
      </node>
      <node id="55376">
        <label>netinet/in.h</label>
      </node>
      <node id="55280">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55295" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
      </node>
      <node id="55369">
        <label>arpa/inet.h</label>
      </node>
      <node id="55346">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="55287">
        <label>limits</label>
      </node>
      <node id="55276">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="55315">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55295" relation="include">
        </childnode>
      </node>
      <node id="55316">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="55317" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55299" relation="include">
        </childnode>
      </node>
      <node id="55279">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="55280" relation="include">
        </childnode>
        <childnode refid="55303" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55306" relation="include">
        </childnode>
        <childnode refid="55307" relation="include">
        </childnode>
        <childnode refid="55343" relation="include">
        </childnode>
        <childnode refid="55341" relation="include">
        </childnode>
      </node>
      <node id="55307">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55308" relation="include">
        </childnode>
        <childnode refid="55309" relation="include">
        </childnode>
        <childnode refid="55310" relation="include">
        </childnode>
        <childnode refid="55319" relation="include">
        </childnode>
        <childnode refid="55321" relation="include">
        </childnode>
        <childnode refid="55340" relation="include">
        </childnode>
      </node>
      <node id="55339">
        <label>openssl/rand.h</label>
      </node>
      <node id="55304">
        <label>assert.h</label>
      </node>
      <node id="55292">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="55375">
        <label>net/if.h</label>
      </node>
      <node id="55278">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="55279" relation="include">
        </childnode>
        <childnode refid="55344" relation="include">
        </childnode>
        <childnode refid="55349" relation="include">
        </childnode>
        <childnode refid="55280" relation="include">
        </childnode>
        <childnode refid="55364" relation="include">
        </childnode>
      </node>
      <node id="55361">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="55317" relation="include">
        </childnode>
      </node>
      <node id="55348">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="55301">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="55302" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
      </node>
      <node id="55275">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="55349">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="55350" relation="include">
        </childnode>
        <childnode refid="55278" relation="include">
        </childnode>
        <childnode refid="55304" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55308" relation="include">
        </childnode>
        <childnode refid="55363" relation="include">
        </childnode>
      </node>
      <node id="55298">
        <label>sys/mman.h</label>
      </node>
      <node id="55295">
        <label>stdlib.h</label>
      </node>
      <node id="55383">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="55384" relation="include">
        </childnode>
        <childnode refid="55321" relation="include">
        </childnode>
        <childnode refid="55381" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
        <childnode refid="55308" relation="include">
        </childnode>
      </node>
      <node id="55308">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="55338">
        <label>openssl/crypto.h</label>
      </node>
      <node id="55372">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="55373" relation="include">
        </childnode>
        <childnode refid="55298" relation="include">
        </childnode>
        <childnode refid="55374" relation="include">
        </childnode>
        <childnode refid="55322" relation="include">
        </childnode>
        <childnode refid="55375" relation="include">
        </childnode>
        <childnode refid="55376" relation="include">
        </childnode>
        <childnode refid="55369" relation="include">
        </childnode>
        <childnode refid="55377" relation="include">
        </childnode>
        <childnode refid="55299" relation="include">
        </childnode>
        <childnode refid="55378" relation="include">
        </childnode>
        <childnode refid="55300" relation="include">
        </childnode>
        <childnode refid="55379" relation="include">
        </childnode>
      </node>
      <node id="55334">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="55312">
        <label>openssl/sha.h</label>
      </node>
      <node id="55379">
        <label>errno.h</label>
      </node>
      <node id="55286">
        <label>cassert</label>
      </node>
      <node id="55305">
        <label>stdexcept</label>
      </node>
      <node id="55321">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="55322" relation="include">
        </childnode>
        <childnode refid="55323" relation="include">
        </childnode>
        <childnode refid="55324" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55325" relation="include">
        </childnode>
        <childnode refid="55280" relation="include">
        </childnode>
        <childnode refid="55284" relation="include">
        </childnode>
        <childnode refid="55328" relation="include">
        </childnode>
        <childnode refid="55329" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55330" relation="include">
        </childnode>
        <childnode refid="55331" relation="include">
        </childnode>
        <childnode refid="55332" relation="include">
        </childnode>
        <childnode refid="55333" relation="include">
        </childnode>
        <childnode refid="55334" relation="include">
        </childnode>
        <childnode refid="55335" relation="include">
        </childnode>
        <childnode refid="55336" relation="include">
        </childnode>
        <childnode refid="55337" relation="include">
        </childnode>
        <childnode refid="55338" relation="include">
        </childnode>
        <childnode refid="55339" relation="include">
        </childnode>
        <childnode refid="55320" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
      </node>
      <node id="55380">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="55381" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55371" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
      </node>
      <node id="55333">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="55357">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55341" relation="include">
        </childnode>
        <childnode refid="55358" relation="include">
        </childnode>
        <childnode refid="55361" relation="include">
        </childnode>
      </node>
      <node id="55282">
        <label>string</label>
      </node>
      <node id="55385">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55295" relation="include">
        </childnode>
        <childnode refid="55321" relation="include">
        </childnode>
        <childnode refid="55365" relation="include">
        </childnode>
      </node>
      <node id="55284">
        <label>map</label>
      </node>
      <node id="55330">
        <label>boost/thread.hpp</label>
      </node>
      <node id="55382">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="55371" relation="include">
        </childnode>
        <childnode refid="55380" relation="include">
        </childnode>
        <childnode refid="55344" relation="include">
        </childnode>
        <childnode refid="55343" relation="include">
        </childnode>
        <childnode refid="55321" relation="include">
        </childnode>
        <childnode refid="55284" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
      </node>
      <node id="55353">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55354" relation="include">
        </childnode>
        <childnode refid="55321" relation="include">
        </childnode>
        <childnode refid="55332" relation="include">
        </childnode>
        <childnode refid="55357" relation="include">
        </childnode>
        <childnode refid="55362" relation="include">
        </childnode>
      </node>
      <node id="55317">
        <label>stddef.h</label>
      </node>
      <node id="55309">
        <label>boost/variant.hpp</label>
      </node>
      <node id="55378">
        <label>netdb.h</label>
      </node>
      <node id="55373">
        <label>sys/fcntl.h</label>
      </node>
      <node id="55350">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="55351" relation="include">
        </childnode>
      </node>
      <node id="55360">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55359" relation="include">
        </childnode>
      </node>
      <node id="55274">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator_tests.cpp"/>
        <childnode refid="55275" relation="include">
        </childnode>
        <childnode refid="55276" relation="include">
        </childnode>
        <childnode refid="55277" relation="include">
        </childnode>
        <childnode refid="55306" relation="include">
        </childnode>
      </node>
      <node id="55364">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="55281">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
        <childnode refid="55284" relation="include">
        </childnode>
        <childnode refid="55285" relation="include">
        </childnode>
        <childnode refid="55286" relation="include">
        </childnode>
        <childnode refid="55287" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55289" relation="include">
        </childnode>
        <childnode refid="55290" relation="include">
        </childnode>
        <childnode refid="55291" relation="include">
        </childnode>
        <childnode refid="55292" relation="include">
        </childnode>
        <childnode refid="55293" relation="include">
        </childnode>
        <childnode refid="55301" relation="include">
        </childnode>
      </node>
      <node id="55299">
        <label>limits.h</label>
      </node>
      <node id="55345">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="55370">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="55285" relation="include">
        </childnode>
        <childnode refid="55366" relation="include">
        </childnode>
      </node>
      <node id="55324">
        <label>sys/resource.h</label>
      </node>
      <node id="55335">
        <label>openssl/bio.h</label>
      </node>
      <node id="55368">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="55371">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55372" relation="include">
        </childnode>
      </node>
      <node id="55311">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="55303" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55312" relation="include">
        </childnode>
        <childnode refid="55313" relation="include">
        </childnode>
        <childnode refid="55314" relation="include">
        </childnode>
        <childnode refid="55315" relation="include">
        </childnode>
        <childnode refid="55316" relation="include">
        </childnode>
        <childnode refid="55318" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
      </node>
      <node id="55377">
        <label>ifaddrs.h</label>
      </node>
      <node id="55340">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="55321" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55295" relation="include">
        </childnode>
        <childnode refid="55341" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
        <childnode refid="55342" relation="include">
        </childnode>
      </node>
      <node id="55322">
        <label>sys/types.h</label>
      </node>
      <node id="55356">
        <label>ios</label>
      </node>
      <node id="55296">
        <label>string.h</label>
      </node>
      <node id="55302">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="55290">
        <label>cstdio</label>
      </node>
      <node id="55347">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="55337">
        <label>openssl/buffer.h</label>
      </node>
      <node id="55291">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="55277">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="55278" relation="include">
        </childnode>
        <childnode refid="55365" relation="include">
        </childnode>
        <childnode refid="55307" relation="include">
        </childnode>
        <childnode refid="55354" relation="include">
        </childnode>
        <childnode refid="55352" relation="include">
        </childnode>
        <childnode refid="55383" relation="include">
        </childnode>
        <childnode refid="55328" relation="include">
        </childnode>
        <childnode refid="55363" relation="include">
        </childnode>
      </node>
      <node id="55332">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="55363">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="55310">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="55311" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55303" relation="include">
        </childnode>
        <childnode refid="55305" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
      </node>
      <node id="55300">
        <label>unistd.h</label>
      </node>
      <node id="55283">
        <label>vector</label>
      </node>
      <node id="55319">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55303" relation="include">
        </childnode>
        <childnode refid="55320" relation="include">
        </childnode>
        <childnode refid="55305" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
      </node>
      <node id="55365">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="55366" relation="include">
        </childnode>
        <childnode refid="55367" relation="include">
        </childnode>
        <childnode refid="55308" relation="include">
        </childnode>
        <childnode refid="55368" relation="include">
        </childnode>
        <childnode refid="55339" relation="include">
        </childnode>
        <childnode refid="55369" relation="include">
        </childnode>
        <childnode refid="55370" relation="include">
        </childnode>
        <childnode refid="55371" relation="include">
        </childnode>
        <childnode refid="55380" relation="include">
        </childnode>
        <childnode refid="55382" relation="include">
        </childnode>
        <childnode refid="55311" relation="include">
        </childnode>
        <childnode refid="55354" relation="include">
        </childnode>
      </node>
      <node id="55313">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="55331">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="55329">
        <label>utility</label>
      </node>
      <node id="55351">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="55279" relation="include">
        </childnode>
        <childnode refid="55352" relation="include">
        </childnode>
      </node>
      <node id="55327">
        <label>sstream</label>
      </node>
      <node id="55336">
        <label>openssl/evp.h</label>
      </node>
      <node id="55325">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="55286" relation="include">
        </childnode>
        <childnode refid="55326" relation="include">
        </childnode>
        <childnode refid="55327" relation="include">
        </childnode>
        <childnode refid="55305" relation="include">
        </childnode>
      </node>
      <node id="55288">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="55354">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="55293" relation="include">
        </childnode>
        <childnode refid="55281" relation="include">
        </childnode>
        <childnode refid="55355" relation="include">
        </childnode>
        <childnode refid="55304" relation="include">
        </childnode>
        <childnode refid="55356" relation="include">
        </childnode>
        <childnode refid="55287" relation="include">
        </childnode>
        <childnode refid="55284" relation="include">
        </childnode>
        <childnode refid="55285" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55296" relation="include">
        </childnode>
        <childnode refid="55329" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
      </node>
      <node id="55318">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55317" relation="include">
        </childnode>
        <childnode refid="55299" relation="include">
        </childnode>
      </node>
      <node id="55323">
        <label>sys/time.h</label>
      </node>
      <node id="55326">
        <label>iostream</label>
      </node>
      <node id="55366">
        <label>deque</label>
      </node>
      <node id="55303">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="55304" relation="include">
        </childnode>
        <childnode refid="55289" relation="include">
        </childnode>
        <childnode refid="55305" relation="include">
        </childnode>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
      </node>
      <node id="55374">
        <label>sys/socket.h</label>
      </node>
      <node id="55359">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="55304" relation="include">
        </childnode>
        <childnode refid="55317" relation="include">
        </childnode>
        <childnode refid="55296" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
      </node>
      <node id="55367">
        <label>boost/array.hpp</label>
      </node>
      <node id="55320">
        <label>openssl/bn.h</label>
      </node>
      <node id="55352">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="55353" relation="include">
        </childnode>
        <childnode refid="55277" relation="include">
        </childnode>
        <childnode refid="55284" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55329" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
      </node>
      <node id="55343">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="55288" relation="include">
        </childnode>
      </node>
      <node id="55293">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="55294" relation="include">
        </childnode>
        <childnode refid="55296" relation="include">
        </childnode>
        <childnode refid="55282" relation="include">
        </childnode>
        <childnode refid="55297" relation="include">
        </childnode>
        <childnode refid="55284" relation="include">
        </childnode>
        <childnode refid="55298" relation="include">
        </childnode>
        <childnode refid="55299" relation="include">
        </childnode>
        <childnode refid="55300" relation="include">
        </childnode>
      </node>
      <node id="55381">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="55319" relation="include">
        </childnode>
        <childnode refid="55303" relation="include">
        </childnode>
        <childnode refid="55283" relation="include">
        </childnode>
      </node>
      <node id="55285">
        <label>set</label>
      </node>
      <node id="55355">
        <label>algorithm</label>
      </node>
      <node id="55314">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="55288" relation="include">
        </childnode>
        <childnode refid="55295" relation="include">
        </childnode>
      </node>
      <node id="55306">
        <label>util.h</label>
      </node>
      <node id="55341">
        <label>stdio.h</label>
      </node>
      <node id="55294">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="55295" relation="include">
        </childnode>
      </node>
      <node id="55289">
        <label>cstring</label>
      </node>
      <node id="55344">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="55345" relation="include">
        </childnode>
        <childnode refid="55346" relation="include">
        </childnode>
        <childnode refid="55347" relation="include">
        </childnode>
        <childnode refid="55297" relation="include">
        </childnode>
        <childnode refid="55348" relation="include">
        </childnode>
      </node>
      <node id="55342">
        <label>inttypes.h</label>
      </node>
      <node id="55358">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="55359" relation="include">
        </childnode>
        <childnode refid="55360" relation="include">
        </childnode>
      </node>
      <node id="55384">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="55279" relation="include">
        </childnode>
        <childnode refid="55318" relation="include">
        </childnode>
        <childnode refid="55385" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_locker" prot="public">TestLocker</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="allocator__tests_8cpp_1a82cf9c56bff43f6755785af8ae46b792" prot="public" static="yes" mutable="no">
        <type>const void *</type>
        <definition>const void* last_lock_addr</definition>
        <argsstring></argsstring>
        <name>last_lock_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="10" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="allocator__tests_8cpp_1ac067028bf9c7080592072da99765993b" prot="public" static="yes" mutable="no">
        <type>const void *</type>
        <definition>const void * last_unlock_addr</definition>
        <argsstring></argsstring>
        <name>last_unlock_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="10" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="allocator__tests_8cpp_1aeaf5b67db37a2df30db4f84e79bf7f35" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t last_lock_len</definition>
        <argsstring></argsstring>
        <name>last_lock_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="11" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="allocator__tests_8cpp_1a81f99ec358ccb1ba07411f102f8058c2" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t last_unlock_len</definition>
        <argsstring></argsstring>
        <name>last_unlock_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="11" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="allocator__tests_8cpp_1aa07f6ed2434510666e4401fe4189fbaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(test_LockedPageManagerBase)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>test_LockedPageManagerBase</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp" line="29" column="1" bodyfile="/home/dev/ds-160209/src/test/allocator_tests.cpp" bodystart="29" bodyend="113"/>
        <references refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" compoundref="allocators_8h" startline="59" endline="79">LockedPageManagerBase&lt; Locker &gt;::LockRange</references>
        <references refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" compoundref="allocators_8h" startline="105" endline="109">LockedPageManagerBase&lt; Locker &gt;::GetLockedPageCount</references>
        <references refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" compoundref="allocators_8h" startline="82" endline="102">LockedPageManagerBase&lt; Locker &gt;::UnlockRange</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">BOOST_AUTO_TEST_SUITE(allocator_tests)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dummy<sp/>memory<sp/>page<sp/>locker<sp/>for<sp/>platform<sp/>independent<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">static<sp/>const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*last_lock_addr,<sp/>*last_unlock_addr;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>last_lock_len,<sp/>last_unlock_len;</highlight></codeline>
<codeline lineno="12" refid="class_test_locker" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_test_locker" kindref="compound">TestLocker</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="class_test_locker_1a3fe641f059dbad71492bf67803c48942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_test_locker_1a3fe641f059dbad71492bf67803c48942" kindref="member">Lock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_lock_addr<sp/>=<sp/>addr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_lock_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21" refid="class_test_locker_1a2dd93706bf6e42cdda57bbab0a88893b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_test_locker_1a2dd93706bf6e42cdda57bbab0a88893b" kindref="member">Unlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_unlock_addr<sp/>=<sp/>addr;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_unlock_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="allocator__tests_8cpp_1aa07f6ed2434510666e4401fe4189fbaa" refkind="member"><highlight class="normal"><ref refid="allocator__tests_8cpp_1aa07f6ed2434510666e4401fe4189fbaa" kindref="member">BOOST_AUTO_TEST_CASE</ref>(test_LockedPageManagerBase)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>test_page_size<sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_locked_page_manager_base" kindref="compound">LockedPageManagerBase&lt;TestLocker&gt;</ref><sp/>lpm(test_page_size);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>last_lock_addr<sp/>=<sp/>last_unlock_addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>last_lock_len<sp/>=<sp/>last_unlock_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>large<sp/>number<sp/>of<sp/>small<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>33);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>33;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>small<sp/>number<sp/>of<sp/>page-sized<sp/>objects,<sp/>straddling<sp/>two<sp/>pages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*100<sp/>+<sp/>53;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>small<sp/>number<sp/>of<sp/>page-sized<sp/>objects<sp/>aligned<sp/>to<sp/>exactly<sp/>one<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*300;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>very<sp/>large<sp/>object,<sp/>straddling<sp/>pages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*600+1),<sp/>test_page_size*500);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(last_lock_addr<sp/>==<sp/>reinterpret_cast&lt;void*&gt;(test_page_size*(600+500)));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>very<sp/>large<sp/>object,<sp/>page<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*1200),<sp/>test_page_size*500-1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(last_lock_addr<sp/>==<sp/>reinterpret_cast&lt;void*&gt;(test_page_size*(1200+500-1)));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1000*33+test_page_size-1)/test_page_size<sp/>+<sp/></highlight><highlight class="comment">//<sp/>small<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101<sp/>+<sp/>100<sp/>+<sp/><sp/></highlight><highlight class="comment">//<sp/>page-sized<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>501<sp/>+<sp/>500));<sp/></highlight><highlight class="comment">//<sp/>large<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK((last_lock_len<sp/>&amp;<sp/>(test_page_size-1))<sp/>==<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>always<sp/>lock<sp/>entire<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(last_unlock_len<sp/>==<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>unlocked<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>unlock<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>33);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>33;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*100<sp/>+<sp/>53;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>test_page_size*300;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;100;<sp/>++i)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>test_page_size);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>test_page_size;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*600+1),<sp/>test_page_size*500);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(test_page_size*1200),<sp/>test_page_size*500-1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>everything<sp/>is<sp/>released<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>few<sp/>and<sp/>unlocks<sp/>of<sp/>size<sp/>zero<sp/>(should<sp/>have<sp/>no<sp/>effect)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;1000;<sp/>++i)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpm.<ref refid="class_locked_page_manager_base_1a34bcf7b9120295ed178fe9545ed229af" kindref="member">UnlockRange</ref>(reinterpret_cast&lt;void*&gt;(addr),<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(lpm.<ref refid="class_locked_page_manager_base_1a8074f7d1b43cc8dd34b3ba9cdb2eca50" kindref="member">GetLockedPageCount</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK((last_unlock_len<sp/>&amp;<sp/>(test_page_size-1))<sp/>==<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>always<sp/>unlock<sp/>entire<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/allocator_tests.cpp"/>
  </compounddef>
</doxygen>
