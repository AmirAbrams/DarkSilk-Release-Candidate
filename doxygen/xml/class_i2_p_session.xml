<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_i2_p_session" kind="class" language="C++" prot="public">
    <compoundname>I2PSession</compoundname>
    <basecompoundref refid="class_s_a_m_1_1_stream_session_adapter" prot="private" virt="non-virtual">SAM::StreamSessionAdapter</basecompoundref>
    <includes refid="i2p_8h" local="no">i2p.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_a_m_1_1_stream_session_adapter" kindref="compound">SAM::StreamSessionAdapter</ref> &amp;</type>
        <definition>static SAM::StreamSessionAdapter&amp; I2PSession::Instance</definition>
        <argsstring>()</argsstring>
        <name>Instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="76" column="1" bodyfile="/home/dev/ds-160209/src/i2p.h" bodystart="76" bodyend="80"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="netbase_8h_1a82264c36c474ed2eee9093db72076910" compoundref="netbase_8cpp" startline="463" endline="500">ConnectSocket</referencedby>
        <referencedby refid="class_c_net_addr_1aa3e44dfd064d9d8da1cb48cdcb7dd231" compoundref="netbase_8cpp" startline="560" endline="591">CNetAddr::SetSpecial</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string I2PSession::GenerateB32AddressFromDestination</definition>
        <argsstring>(const std::string &amp;destination)</argsstring>
        <name>GenerateB32AddressFromDestination</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="82" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="193" bodyend="207"/>
        <references refid="util_8cpp_1a224a1ec4dc69c9463abf0e8ae767af0d" compoundref="util_8cpp" startline="629" endline="710">DecodeBase64</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="util_8cpp_1a71aa75e646de8a10971f887bc71d9a75" compoundref="util_8cpp" startline="775" endline="832">EncodeBase32</references>
        <references refid="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" compoundref="uint256_8h" startline="241" endline="244">base_uint&lt; BITS &gt;::begin</references>
        <references refid="classbase__uint_1a76539ef6be800bc02e4038f457a4f74a" compoundref="uint256_8h" startline="246" endline="249">base_uint&lt; BITS &gt;::end</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_i2_p_session_1a9916c1c58d8010c642bf47fd2411ba57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>I2PSession::I2PSession</definition>
        <argsstring>()</argsstring>
        <name>I2PSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="85" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_i2_p_session_1a971edd2a770750ad19c9a87747230c7a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>I2PSession::~I2PSession</definition>
        <argsstring>()</argsstring>
        <name>~I2PSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="86" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="189" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_i2_p_session_1af27c1fc6183ad452dcfdd7209c915a3d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>I2PSession::I2PSession</definition>
        <argsstring>(const I2PSession &amp;)</argsstring>
        <name>I2PSession</name>
        <param>
          <type>const <ref refid="class_i2_p_session" kindref="compound">I2PSession</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_i2_p_session_1a5f53e9e5272154091d6e10b964fdf1c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_i2_p_session" kindref="compound">I2PSession</ref> &amp;</type>
        <definition>I2PSession&amp; I2PSession::operator=</definition>
        <argsstring>(const I2PSession &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_i2_p_session" kindref="compound">I2PSession</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="89" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3116">
        <label>SAM::StreamSessionAdapter</label>
        <link refid="class_s_a_m_1_1_stream_session_adapter"/>
      </node>
      <node id="3115">
        <label>I2PSession</label>
        <link refid="class_i2_p_session"/>
        <childnode refid="3116" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3118">
        <label>SAM::StreamSessionAdapter</label>
        <link refid="class_s_a_m_1_1_stream_session_adapter"/>
      </node>
      <node id="3117">
        <label>I2PSession</label>
        <link refid="class_i2_p_session"/>
        <childnode refid="3118" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/i2p.h" line="73" column="1" bodyfile="/home/dev/ds-160209/src/i2p.h" bodystart="72" bodyend="90"/>
    <listofallmembers>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a040e02aced837c8409ed1edfc4f8ac69" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>accept</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a983b84796d46f00aee1e4b7c4f6f421f" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>connect</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>destGenerate</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a1ebd1d55194db5bbed563836f06a2b55" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>forward</name></member>
      <member refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" prot="public" virt="non-virtual"><scope>I2PSession</scope><name>GenerateB32AddressFromDestination</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a80d5e268298b1970dbb1119df2bc76d5" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getMyDestination</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a928ff5f1c5546862fedd2f4216e56541" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getNickname</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1adc4e097ce8db41980c540e6c11371585" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getOptions</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a3507ca50cf27d61adaad5ac5006172df" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getSAMAddress</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a154db264cc3b2c442c11280175ae7e8d" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getSAMHost</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1ac9a713a36d06047b54d1a5df477165be" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getSAMMaxVer</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1ab194deeaa1fba6e8eed3e55af17d788c" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getSAMMinVer</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1aceada2034be63523f41ac1153c2dc3fa" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getSAMPort</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1af0911ea5109eb8e0987b328369e80dc2" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>getSAMVersion</name></member>
      <member refid="class_i2_p_session_1a9916c1c58d8010c642bf47fd2411ba57" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>I2PSession</name></member>
      <member refid="class_i2_p_session_1af27c1fc6183ad452dcfdd7209c915a3d" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>I2PSession</name></member>
      <member refid="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" prot="public" virt="non-virtual"><scope>I2PSession</scope><name>Instance</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a865f56708a911fc832953f10c59d96e3" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>namingLookup</name></member>
      <member refid="class_i2_p_session_1a5f53e9e5272154091d6e10b964fdf1c7" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>operator=</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a0c0e5dec8a7ec68aeae7a653e6aa8d13" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>stopForwarding</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a94cb431a3fee60c87f134b1b925ff67a" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>stopForwardingAll</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1aa2c9e13fcfa6570af80d387b3fc5704c" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>StreamSessionAdapter</name></member>
      <member refid="class_i2_p_session_1a971edd2a770750ad19c9a87747230c7a" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>~I2PSession</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1abf40bd7ca543e91544ebd4c03fd8d702" prot="private" virt="non-virtual"><scope>I2PSession</scope><name>~StreamSessionAdapter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
