<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="smessage_8cpp" kind="file" language="C++">
    <compoundname>smessage.cpp</compoundname>
    <includes refid="smessage_8h" local="yes">smessage.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">map</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">sstream</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">openssl/crypto.h</includes>
    <includes local="no">openssl/ec.h</includes>
    <includes local="no">openssl/ecdh.h</includes>
    <includes local="no">openssl/sha.h</includes>
    <includes local="no">openssl/aes.h</includes>
    <includes local="no">openssl/evp.h</includes>
    <includes local="no">openssl/hmac.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">boost/algorithm/string/predicate.hpp</includes>
    <includes refid="base58_8h" local="yes">base58.h</includes>
    <includes refid="db_8h" local="yes">db.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes refid="txdb_8h" local="yes">txdb.h</includes>
    <includes refid="sync_8h" local="yes">sync.h</includes>
    <includes refid="ecwrapper_8h" local="yes">ecwrapper.h</includes>
    <includes refid="txdb-leveldb_8h" local="yes">txdb-leveldb.h</includes>
    <includes refid="lz4_8c" local="yes">lz4/lz4.c</includes>
    <includes refid="xxhash_8h" local="yes">xxhash/xxhash.h</includes>
    <includes refid="xxhash_8c" local="yes">xxhash/xxhash.c</includes>
    <incdepgraph>
      <node id="52690">
        <label>list</label>
      </node>
      <node id="52744">
        <label>openssl/aes.h</label>
      </node>
      <node id="52655">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="52632">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52630" relation="include">
        </childnode>
      </node>
      <node id="52666">
        <label>netinet/in.h</label>
      </node>
      <node id="52689">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52654" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
      </node>
      <node id="52639">
        <label>arpa/inet.h</label>
      </node>
      <node id="52679">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="52647">
        <label>limits</label>
      </node>
      <node id="52748">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="52705">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52654" relation="include">
        </childnode>
      </node>
      <node id="52723">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="52689" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52724" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52623" relation="include">
        </childnode>
      </node>
      <node id="52706">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="52627" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52657" relation="include">
        </childnode>
      </node>
      <node id="52718">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52636" relation="include">
        </childnode>
        <childnode refid="52719" relation="include">
        </childnode>
        <childnode refid="52717" relation="include">
        </childnode>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52720" relation="include">
        </childnode>
      </node>
      <node id="52638">
        <label>openssl/rand.h</label>
      </node>
      <node id="52714">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="52711" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52720" relation="include">
        </childnode>
        <childnode refid="52689" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52651">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="52626">
        <label>assert.h</label>
      </node>
      <node id="52665">
        <label>net/if.h</label>
      </node>
      <node id="52728">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="52723" relation="include">
        </childnode>
        <childnode refid="52677" relation="include">
        </childnode>
        <childnode refid="52729" relation="include">
        </childnode>
        <childnode refid="52689" relation="include">
        </childnode>
        <childnode refid="52735" relation="include">
        </childnode>
      </node>
      <node id="52745">
        <label>openssl/hmac.h</label>
      </node>
      <node id="52746">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="52631">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="52627" relation="include">
        </childnode>
      </node>
      <node id="52681">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="52752">
        <label>lz4/lz4.c</label>
        <link refid="lz4_8c"/>
        <childnode refid="52654" relation="include">
        </childnode>
        <childnode refid="52628" relation="include">
        </childnode>
        <childnode refid="52740" relation="include">
        </childnode>
      </node>
      <node id="52739">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="52671" relation="include">
        </childnode>
        <childnode refid="52717" relation="include">
        </childnode>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52652" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52659">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="52660" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
      </node>
      <node id="52740">
        <label>lz4/lz4.h</label>
        <link refid="lz4_8h"/>
      </node>
      <node id="52754">
        <label>xxhash/xxhash.c</label>
        <link refid="xxhash_8c"/>
        <childnode refid="52753" relation="include">
        </childnode>
        <childnode refid="52654" relation="include">
        </childnode>
        <childnode refid="52628" relation="include">
        </childnode>
      </node>
      <node id="52743">
        <label>openssl/ecdh.h</label>
      </node>
      <node id="52729">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="52730" relation="include">
        </childnode>
        <childnode refid="52728" relation="include">
        </childnode>
        <childnode refid="52626" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52636" relation="include">
        </childnode>
        <childnode refid="52734" relation="include">
        </childnode>
      </node>
      <node id="52753">
        <label>xxhash/xxhash.h</label>
        <link refid="xxhash_8h"/>
      </node>
      <node id="52656">
        <label>sys/mman.h</label>
      </node>
      <node id="52654">
        <label>stdlib.h</label>
      </node>
      <node id="52736">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="52722" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52671" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52636" relation="include">
        </childnode>
      </node>
      <node id="52620">
        <label>smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="52621" relation="include">
        </childnode>
        <childnode refid="52632" relation="include">
        </childnode>
        <childnode refid="52633" relation="include">
        </childnode>
        <childnode refid="52711" relation="include">
        </childnode>
        <childnode refid="52713" relation="include">
        </childnode>
        <childnode refid="52739" relation="include">
        </childnode>
        <childnode refid="52740" relation="include">
        </childnode>
      </node>
      <node id="52636">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="52700">
        <label>openssl/crypto.h</label>
      </node>
      <node id="52661">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="52662" relation="include">
        </childnode>
        <childnode refid="52656" relation="include">
        </childnode>
        <childnode refid="52663" relation="include">
        </childnode>
        <childnode refid="52664" relation="include">
        </childnode>
        <childnode refid="52665" relation="include">
        </childnode>
        <childnode refid="52666" relation="include">
        </childnode>
        <childnode refid="52639" relation="include">
        </childnode>
        <childnode refid="52667" relation="include">
        </childnode>
        <childnode refid="52657" relation="include">
        </childnode>
        <childnode refid="52668" relation="include">
        </childnode>
        <childnode refid="52658" relation="include">
        </childnode>
        <childnode refid="52669" relation="include">
        </childnode>
      </node>
      <node id="52696">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="52702">
        <label>openssl/sha.h</label>
      </node>
      <node id="52669">
        <label>errno.h</label>
      </node>
      <node id="52646">
        <label>cassert</label>
      </node>
      <node id="52674">
        <label>stdexcept</label>
      </node>
      <node id="52683">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="52664" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52685" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52686" relation="include">
        </childnode>
        <childnode refid="52689" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52692" relation="include">
        </childnode>
        <childnode refid="52693" relation="include">
        </childnode>
        <childnode refid="52694" relation="include">
        </childnode>
        <childnode refid="52695" relation="include">
        </childnode>
        <childnode refid="52696" relation="include">
        </childnode>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52698" relation="include">
        </childnode>
        <childnode refid="52699" relation="include">
        </childnode>
        <childnode refid="52700" relation="include">
        </childnode>
        <childnode refid="52638" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
      </node>
      <node id="52670">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="52671" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52642" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
      </node>
      <node id="52695">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="52621">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52623" relation="include">
        </childnode>
        <childnode refid="52624" relation="include">
        </childnode>
        <childnode refid="52631" relation="include">
        </childnode>
      </node>
      <node id="52629">
        <label>string</label>
      </node>
      <node id="52713">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="52714" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52654" relation="include">
        </childnode>
        <childnode refid="52722" relation="include">
        </childnode>
        <childnode refid="52723" relation="include">
        </childnode>
        <childnode refid="52726" relation="include">
        </childnode>
        <childnode refid="52727" relation="include">
        </childnode>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52737" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52720" relation="include">
        </childnode>
      </node>
      <node id="52725">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52654" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52633" relation="include">
        </childnode>
      </node>
      <node id="52645">
        <label>map</label>
      </node>
      <node id="52692">
        <label>boost/thread.hpp</label>
      </node>
      <node id="52676">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="52642" relation="include">
        </childnode>
        <childnode refid="52670" relation="include">
        </childnode>
        <childnode refid="52677" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52737">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="52689" relation="include">
        </childnode>
        <childnode refid="52738" relation="include">
        </childnode>
        <childnode refid="52637" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
      </node>
      <node id="52733">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52694" relation="include">
        </childnode>
        <childnode refid="52621" relation="include">
        </childnode>
        <childnode refid="52632" relation="include">
        </childnode>
      </node>
      <node id="52627">
        <label>stddef.h</label>
      </node>
      <node id="52719">
        <label>boost/variant.hpp</label>
      </node>
      <node id="52668">
        <label>netdb.h</label>
      </node>
      <node id="52662">
        <label>sys/fcntl.h</label>
      </node>
      <node id="52730">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="52731" relation="include">
        </childnode>
      </node>
      <node id="52630">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52625" relation="include">
        </childnode>
      </node>
      <node id="52735">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="52747">
        <label>boost/algorithm/string/predicate.hpp</label>
      </node>
      <node id="52644">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52641" relation="include">
        </childnode>
        <childnode refid="52646" relation="include">
        </childnode>
        <childnode refid="52647" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52648" relation="include">
        </childnode>
        <childnode refid="52649" relation="include">
        </childnode>
        <childnode refid="52650" relation="include">
        </childnode>
        <childnode refid="52651" relation="include">
        </childnode>
        <childnode refid="52652" relation="include">
        </childnode>
        <childnode refid="52659" relation="include">
        </childnode>
      </node>
      <node id="52657">
        <label>limits.h</label>
      </node>
      <node id="52678">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="52685">
        <label>sys/resource.h</label>
      </node>
      <node id="52640">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="52641" relation="include">
        </childnode>
        <childnode refid="52634" relation="include">
        </childnode>
      </node>
      <node id="52697">
        <label>openssl/bio.h</label>
      </node>
      <node id="52726">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="52652" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
      </node>
      <node id="52637">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="52642">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52661" relation="include">
        </childnode>
      </node>
      <node id="52715">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52717" relation="include">
        </childnode>
        <childnode refid="52677" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52637" relation="include">
        </childnode>
        <childnode refid="52719" relation="include">
        </childnode>
      </node>
      <node id="52701">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52702" relation="include">
        </childnode>
        <childnode refid="52703" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52705" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
        <childnode refid="52707" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52667">
        <label>ifaddrs.h</label>
      </node>
      <node id="52720">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52654" relation="include">
        </childnode>
        <childnode refid="52623" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52721" relation="include">
        </childnode>
      </node>
      <node id="52664">
        <label>sys/types.h</label>
      </node>
      <node id="52710">
        <label>ios</label>
      </node>
      <node id="52628">
        <label>string.h</label>
      </node>
      <node id="52660">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="52649">
        <label>cstdio</label>
      </node>
      <node id="52680">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="52699">
        <label>openssl/buffer.h</label>
      </node>
      <node id="52650">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="52727">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="52728" relation="include">
        </childnode>
        <childnode refid="52633" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
        <childnode refid="52732" relation="include">
        </childnode>
        <childnode refid="52736" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52734" relation="include">
        </childnode>
      </node>
      <node id="52694">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="52734">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="52717">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="52701" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52658">
        <label>unistd.h</label>
      </node>
      <node id="52712">
        <label>db_cxx.h</label>
      </node>
      <node id="52643">
        <label>vector</label>
      </node>
      <node id="52672">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
      </node>
      <node id="52633">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="52634" relation="include">
        </childnode>
        <childnode refid="52635" relation="include">
        </childnode>
        <childnode refid="52636" relation="include">
        </childnode>
        <childnode refid="52637" relation="include">
        </childnode>
        <childnode refid="52638" relation="include">
        </childnode>
        <childnode refid="52639" relation="include">
        </childnode>
        <childnode refid="52640" relation="include">
        </childnode>
        <childnode refid="52642" relation="include">
        </childnode>
        <childnode refid="52670" relation="include">
        </childnode>
        <childnode refid="52676" relation="include">
        </childnode>
        <childnode refid="52701" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
      </node>
      <node id="52703">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="52693">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="52691">
        <label>utility</label>
      </node>
      <node id="52731">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="52723" relation="include">
        </childnode>
        <childnode refid="52732" relation="include">
        </childnode>
      </node>
      <node id="52688">
        <label>sstream</label>
      </node>
      <node id="52738">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="52751">
        <label>txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="52727" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52621" relation="include">
        </childnode>
        <childnode refid="52632" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
      </node>
      <node id="52716">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="52652" relation="include">
        </childnode>
        <childnode refid="52717" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52698">
        <label>openssl/evp.h</label>
      </node>
      <node id="52741">
        <label>time.h</label>
      </node>
      <node id="52742">
        <label>openssl/ec.h</label>
      </node>
      <node id="52686">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="52646" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52688" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
      </node>
      <node id="52622">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="52711">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52677" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52694" relation="include">
        </childnode>
        <childnode refid="52712" relation="include">
        </childnode>
      </node>
      <node id="52708">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="52652" relation="include">
        </childnode>
        <childnode refid="52644" relation="include">
        </childnode>
        <childnode refid="52709" relation="include">
        </childnode>
        <childnode refid="52626" relation="include">
        </childnode>
        <childnode refid="52710" relation="include">
        </childnode>
        <childnode refid="52647" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52641" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52628" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52707">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52627" relation="include">
        </childnode>
        <childnode refid="52657" relation="include">
        </childnode>
      </node>
      <node id="52684">
        <label>sys/time.h</label>
      </node>
      <node id="52687">
        <label>iostream</label>
      </node>
      <node id="52749">
        <label>ecwrapper.h</label>
        <link refid="ecwrapper_8h"/>
        <childnode refid="52750" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
        <childnode refid="52742" relation="include">
        </childnode>
      </node>
      <node id="52750">
        <label>cstddef</label>
      </node>
      <node id="52634">
        <label>deque</label>
      </node>
      <node id="52673">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="52626" relation="include">
        </childnode>
        <childnode refid="52648" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52619">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage.cpp"/>
        <childnode refid="52620" relation="include">
        </childnode>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52741" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52688" relation="include">
        </childnode>
        <childnode refid="52669" relation="include">
        </childnode>
        <childnode refid="52700" relation="include">
        </childnode>
        <childnode refid="52742" relation="include">
        </childnode>
        <childnode refid="52743" relation="include">
        </childnode>
        <childnode refid="52702" relation="include">
        </childnode>
        <childnode refid="52744" relation="include">
        </childnode>
        <childnode refid="52698" relation="include">
        </childnode>
        <childnode refid="52745" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
        <childnode refid="52747" relation="include">
        </childnode>
        <childnode refid="52739" relation="include">
        </childnode>
        <childnode refid="52711" relation="include">
        </childnode>
        <childnode refid="52748" relation="include">
        </childnode>
        <childnode refid="52732" relation="include">
        </childnode>
        <childnode refid="52677" relation="include">
        </childnode>
        <childnode refid="52749" relation="include">
        </childnode>
        <childnode refid="52751" relation="include">
        </childnode>
        <childnode refid="52752" relation="include">
        </childnode>
        <childnode refid="52753" relation="include">
        </childnode>
        <childnode refid="52754" relation="include">
        </childnode>
      </node>
      <node id="52663">
        <label>sys/socket.h</label>
      </node>
      <node id="52625">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="52626" relation="include">
        </childnode>
        <childnode refid="52627" relation="include">
        </childnode>
        <childnode refid="52628" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
      </node>
      <node id="52635">
        <label>boost/array.hpp</label>
      </node>
      <node id="52675">
        <label>openssl/bn.h</label>
      </node>
      <node id="52732">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="52733" relation="include">
        </childnode>
        <childnode refid="52727" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52682">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="52622" relation="include">
        </childnode>
      </node>
      <node id="52652">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="52653" relation="include">
        </childnode>
        <childnode refid="52628" relation="include">
        </childnode>
        <childnode refid="52629" relation="include">
        </childnode>
        <childnode refid="52655" relation="include">
        </childnode>
        <childnode refid="52645" relation="include">
        </childnode>
        <childnode refid="52656" relation="include">
        </childnode>
        <childnode refid="52657" relation="include">
        </childnode>
        <childnode refid="52658" relation="include">
        </childnode>
      </node>
      <node id="52671">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52643" relation="include">
        </childnode>
      </node>
      <node id="52641">
        <label>set</label>
      </node>
      <node id="52709">
        <label>algorithm</label>
      </node>
      <node id="52704">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="52622" relation="include">
        </childnode>
        <childnode refid="52654" relation="include">
        </childnode>
      </node>
      <node id="52724">
        <label>util.h</label>
      </node>
      <node id="52623">
        <label>stdio.h</label>
      </node>
      <node id="52653">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="52654" relation="include">
        </childnode>
      </node>
      <node id="52648">
        <label>cstring</label>
      </node>
      <node id="52677">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52679" relation="include">
        </childnode>
        <childnode refid="52680" relation="include">
        </childnode>
        <childnode refid="52655" relation="include">
        </childnode>
        <childnode refid="52681" relation="include">
        </childnode>
      </node>
      <node id="52721">
        <label>inttypes.h</label>
      </node>
      <node id="52624">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="52625" relation="include">
        </childnode>
        <childnode refid="52630" relation="include">
        </childnode>
      </node>
      <node id="52722">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="52723" relation="include">
        </childnode>
        <childnode refid="52707" relation="include">
        </childnode>
        <childnode refid="52725" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_sec_msg_batch_scanner" prot="public">SecMsgBatchScanner</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" prot="public" static="no" mutable="no">
        <type>boost::thread_group</type>
        <definition>boost::thread_group threadGroupSmsg</definition>
        <argsstring></argsstring>
        <name>threadGroupSmsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="68" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="68" bodyend="-1"/>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1a93126f5e674af8370c3f10f3f8de8a37" prot="public" static="no" mutable="no">
        <type>boost::signals2::signal&lt; void(<ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref> &amp;inboxHdr)&gt;</type>
        <definition>boost::signals2::signal&lt;void (SecMsgStored&amp; inboxHdr)&gt; NotifySecMsgInboxChanged</definition>
        <argsstring></argsstring>
        <name>NotifySecMsgInboxChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="70" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="70" bodyend="-1"/>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1aa848b072a4193ed7af7f01276f819170" prot="public" static="no" mutable="no">
        <type>boost::signals2::signal&lt; void(<ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref> &amp;outboxHdr)&gt;</type>
        <definition>boost::signals2::signal&lt;void (SecMsgStored&amp; outboxHdr)&gt; NotifySecMsgOutboxChanged</definition>
        <argsstring></argsstring>
        <name>NotifySecMsgOutboxChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="71" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="71" bodyend="-1"/>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1ac81e578e38c2f309e808d36f4c36dc62" prot="public" static="no" mutable="no">
        <type>boost::signals2::signal&lt; void()&gt;</type>
        <definition>boost::signals2::signal&lt;void ()&gt; NotifySecMsgWalletUnlocked</definition>
        <argsstring></argsstring>
        <name>NotifySecMsgWalletUnlocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="72" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="72" bodyend="-1"/>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fSecMsgEnabled</definition>
        <argsstring></argsstring>
        <name>fSecMsgEnabled</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="74" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="74" bodyend="-1"/>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a6bb03c9454a432862fc0ca6da63b9acd" compoundref="rpcsmessage_8cpp" startline="21" endline="40">smsgenable</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a64a1730a2db8d797bb2bd0f35cc8c0d3" compoundref="rpcsmessage_8cpp" startline="42" endline="60">smsgdisable</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ae8a97c9381cc7d24d3c86f84cef1a9f3" compoundref="rpcsmessage_8cpp" startline="348" endline="367">smsgscanchain</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a5b2bd8a2dd98a14b6342c7b08787bb21" compoundref="rpcsmessage_8cpp" startline="369" endline="391">smsgscanbuckets</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab3f43e65ebac0f02747e50c3d4689e9f" compoundref="rpcsmessage_8cpp" startline="393" endline="425">smsgaddkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a98f31e03cd4847162535ddd58c28ac52" compoundref="rpcsmessage_8cpp" startline="511" endline="537">smsgsend</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a64f22b883ee399f49e1656ef90b7c936" compoundref="rpcsmessage_8cpp" startline="539" endline="564">smsgsendanon</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</referencedby>
        <referencedby refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" compoundref="smessage_8cpp" startline="2446" endline="2480">SecureMsgWalletKeyChanged</referencedby>
        <referencedby refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" compoundref="smessage_8cpp" startline="3168" endline="3274">SecureMsgSetHash</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>, <ref refid="class_sec_msg_bucket" kindref="compound">SecMsgBucket</ref> &gt;</type>
        <definition>std::map&lt;int64_t, SecMsgBucket&gt; smsgBuckets</definition>
        <argsstring></argsstring>
        <name>smsgBuckets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="76" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="76" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_sec_msg_address" kindref="compound">SecMsgAddress</ref> &gt;</type>
        <definition>std::vector&lt;SecMsgAddress&gt; smsgAddresses</definition>
        <argsstring></argsstring>
        <name>smsgAddresses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="77" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="77" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="smessage_8h_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</referencedby>
        <referencedby refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</referencedby>
        <referencedby refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" compoundref="smessage_8cpp" startline="2446" endline="2480">SecureMsgWalletKeyChanged</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1ac6ee7d290a6b6af015c10b95d61c704d" prot="public" static="no" mutable="no">
        <type><ref refid="class_sec_msg_options" kindref="compound">SecMsgOptions</ref></type>
        <definition>SecMsgOptions smsgOptions</definition>
        <argsstring></argsstring>
        <name>smsgOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="78" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="78" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1aa2570646d53e4ca21553f1535c9d7084" compoundref="rpcsmessage_8cpp" startline="62" endline="138">smsgoptions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1a06b6584a0cc47952cc6b071c17c7cbd7" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_smsg</definition>
        <argsstring></argsstring>
        <name>cs_smsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="81" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="81" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1ac42d4f2a114c9e994ebb1379df8ac6d2" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_smsgDB</definition>
        <argsstring></argsstring>
        <name>cs_smsgDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="82" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="82" bodyend="-1"/>
        <referencedby refid="class_message_table_priv_1a0c420e61982703babe27416089ff2bd3" compoundref="messagemodel_8cpp" startline="47" endline="132">MessageTablePriv::refreshMessageTable</referencedby>
        <referencedby refid="class_message_model_1a0bf2ae180e0d137be51b1e1567e66eee" compoundref="messagemodel_8cpp" startline="527" endline="551">MessageModel::removeRows</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1aeea900cb7ff619635360a3d14af80abd" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_smsgThreads</definition>
        <argsstring></argsstring>
        <name>cs_smsgThreads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="83" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" prot="public" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_d_b" kindref="compound">leveldb::DB</ref> *</type>
        <definition>leveldb::DB* smsgDB</definition>
        <argsstring></argsstring>
        <name>smsgDB</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="85" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="85" bodyend="-1"/>
        <referencedby refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</referencedby>
        <referencedby refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ThreadSecureMsg</definition>
        <argsstring>()</argsstring>
        <name>ThreadSecureMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="579" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="579" bodyend="685"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="smessage_8h_1a8efaec21328f5c6b873f6d822b84c6c0" compoundref="smessage_8h" startline="25">SMSG_THREAD_LOG_GAP</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="smessage_8h_1a10bd0be4c103ccf8f76c710ae2a15b83" compoundref="smessage_8h" startline="28">SMSG_TIME_IGNORE</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" compoundref="net_8h" startline="268">CNode::id</references>
        <references refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" compoundref="sync_8h" startline="160">LOCK2</references>
        <references refid="class_c_node_1a79edcac83fc5067567c7b41c26fcc56f" compoundref="net_8h" startline="233">CNode::cs_vSend</references>
        <references refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" compoundref="net_8h" startline="300">CNode::smsgData</references>
        <references refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" compoundref="net_8h" startline="209">SecMsgNode::cs_smsg_net</references>
        <references refid="class_sec_msg_node_1a574e453a229ed2cbed30ca56727fa564" compoundref="net_8h" startline="214">SecMsgNode::ignoreUntil</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="smessage_8h_1a4a4a481ee91964e90efbc0e5a742407e" compoundref="smessage_8h" startline="24">SMSG_THREAD_DELAY</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ThreadSecureMsgPow</definition>
        <argsstring>()</argsstring>
        <name>ThreadSecureMsgPow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="687" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="687" bodyend="766"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" compoundref="smessage_8h" startline="326">SecMsgDB::pdb</references>
        <references refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32">leveldb::DB::NewIterator</references>
        <references refid="class_sec_msg_d_b_1ac16426690cd634af83b90aa39a7a5d51" compoundref="smessage_8cpp" startline="417" endline="443">SecMsgDB::NextSmesg</references>
        <references refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" compoundref="smessage_8h" startline="276">SecMsgStored::vchMessage</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="smessage_8cpp_1ac434a0295e161eb2ebdad951f4049dc6" compoundref="smessage_8cpp" startline="3168" endline="3274">SecureMsgSetHash</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="class_sec_msg_d_b_1a7d00fef57cf02d33e0b076ca114f7af5" compoundref="smessage_8cpp" startline="558" endline="577">SecMsgDB::EraseSmesg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</references>
        <references refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgBuildBucketSet</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgBuildBucketSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="768" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="768" bodyend="909"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" compoundref="smessage_8h" startline="138">SecMsgToken::sample</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1ab47945fac81152e28647920d324ec630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgAddWalletAddresses</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgAddWalletAddresses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="911" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="911" bodyend="961"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" compoundref="wallet_8h" startline="196">CWallet::mapAddressBook</references>
        <references refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" compoundref="script_8cpp" startline="2607" endline="2612">IsMine</references>
        <references refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" compoundref="base58_8cpp" startline="218" endline="223">CDarkSilkAddress::IsValid</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgReadIni</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgReadIni</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="964" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="964" bodyend="1036"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" compoundref="smessage_8h" startline="226">SecMsgOptions::fNewAddressRecv</references>
        <references refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" compoundref="smessage_8h" startline="227">SecMsgOptions::fNewAddressAnon</references>
        <references refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" compoundref="smessage_8h" startline="228">SecMsgOptions::fScanIncoming</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgWriteIni</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgWriteIni</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1038" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1038" bodyend="1100"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" compoundref="smessage_8h" startline="226">SecMsgOptions::fNewAddressRecv</references>
        <references refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" compoundref="smessage_8h" startline="227">SecMsgOptions::fNewAddressAnon</references>
        <references refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" compoundref="smessage_8h" startline="228">SecMsgOptions::fScanIncoming</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <referencedby refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a4c2723040974201407c876e9365ed74c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgStart</definition>
        <argsstring>(bool fDontStart, bool fScanChain)</argsstring>
        <name>SecureMsgStart</name>
        <param>
          <type>bool</type>
          <declname>fDontStart</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fScanChain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>called from <ref refid="init_8cpp_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" kindref="member">AppInit2()</ref> in <ref refid="init_8cpp" kindref="compound">init.cpp</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1104" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1104" bodyend="1142"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="smessage_8cpp_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</references>
        <references refid="smessage_8cpp_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" compoundref="smessage_8cpp" startline="2123" endline="2151">SecureMsgScanBlockChain</references>
        <references refid="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</references>
        <references refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</references>
        <references refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a49c8b6520e51ba498f92accf33eb6c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgShutdown</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgShutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1144" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1144" bodyend="1168"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" compoundref="smessage_8cpp" startline="85">smsgDB</references>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a7e096c63f30bea527e14fef0e7cca460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgEnable</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1170" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1170" bodyend="1229"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</references>
        <references refid="smessage_8cpp_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</references>
        <references refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</references>
        <references refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <referencedby refid="rpcsmessage_8cpp_1a6bb03c9454a432862fc0ca6da63b9acd" compoundref="rpcsmessage_8cpp" startline="21" endline="40">smsgenable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a37253b307b8569fe0d8c3548c15e8e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgDisable</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgDisable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1231" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1231" bodyend="1289"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" compoundref="net_8h" startline="300">CNode::smsgData</references>
        <references refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" compoundref="net_8h" startline="217">SecMsgNode::fEnabled</references>
        <references refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" compoundref="sync_8h" startline="160">LOCK2</references>
        <references refid="class_c_node_1a79edcac83fc5067567c7b41c26fcc56f" compoundref="net_8h" startline="233">CNode::cs_vSend</references>
        <references refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" compoundref="net_8h" startline="209">SecMsgNode::cs_smsg_net</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" compoundref="smessage_8cpp" startline="85">smsgDB</references>
        <referencedby refid="rpcsmessage_8cpp_1a64a1730a2db8d797bb2bd0f35cc8c0d3" compoundref="rpcsmessage_8cpp" startline="42" endline="60">smsgdisable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a10fcf201b1c7066a376692b50988cdbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgReceiveData</definition>
        <argsstring>(CNode *pfrom, std::string strCommand, CDataStream &amp;vRecv)</argsstring>
        <name>SecureMsgReceiveData</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strCommand</declname>
        </param>
        <param>
          <type><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref> &amp;</type>
          <declname>vRecv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1292" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1292" bodyend="1781"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" compoundref="net_8h" startline="246">CNode::addrName</references>
        <references refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" compoundref="net_8h" startline="300">CNode::smsgData</references>
        <references refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" compoundref="net_8h" startline="209">SecMsgNode::cs_smsg_net</references>
        <references refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" compoundref="net_8h" startline="268">CNode::id</references>
        <references refid="class_sec_msg_node_1a574e453a229ed2cbed30ca56727fa564" compoundref="net_8h" startline="214">SecMsgNode::ignoreUntil</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" compoundref="smessage_8h" startline="138">SecMsgToken::sample</references>
        <references refid="class_c_data_stream_1aa91abddde56127bd3d6ac2a0fb005874" compoundref="streams_8h" startline="118" endline="118">CDataStream::resize</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <references refid="smessage_8cpp_1a9a34bfa72cc027350d71f9daaefb8fef" compoundref="smessage_8cpp" startline="2731" endline="2794">SecureMsgRetrieve</references>
        <references refid="smessage_8cpp_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</references>
        <references refid="class_sec_msg_node_1ac714be60c0566e644df2e0eb006a7817" compoundref="net_8h" startline="213">SecMsgNode::lastMatched</references>
        <references refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" compoundref="net_8h" startline="217">SecMsgNode::fEnabled</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1abb934a23a076a4af443e2fb0610d7833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgSendData</definition>
        <argsstring>(CNode *pto, bool fSendTrickle)</argsstring>
        <name>SecureMsgSendData</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pto</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSendTrickle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1783" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1783" bodyend="1882"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" compoundref="net_8h" startline="300">CNode::smsgData</references>
        <references refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" compoundref="net_8h" startline="209">SecMsgNode::cs_smsg_net</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_sec_msg_node_1a3a2e08f929788ebfb517218788e29836" compoundref="net_8h" startline="212">SecMsgNode::lastSeen</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" compoundref="net_8h" startline="246">CNode::addrName</references>
        <references refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" compoundref="net_8h" startline="268">CNode::id</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" compoundref="net_8h" startline="217">SecMsgNode::fEnabled</references>
        <references refid="smessage_8h_1a58ba0f46d3e1d728616c6259c3069db9" compoundref="smessage_8h" startline="23">SMSG_SEND_DELAY</references>
        <references refid="class_sec_msg_node_1a72aad5e6551e9c79fac326a2a2806844" compoundref="net_8h" startline="215">SecMsgNode::nWakeCounter</references>
        <references refid="class_sec_msg_node_1ac714be60c0566e644df2e0eb006a7817" compoundref="net_8h" startline="213">SecMsgNode::lastMatched</references>
        <references refid="util_8cpp_1a0e44e088732172da6662db2d5e37d4b2" compoundref="util_8cpp" startline="213" endline="216">GetRandInt</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" compoundref="smessage_8h" startline="162">SecMsgBucket::setTokens</references>
        <references refid="class_sec_msg_bucket_1a77b045448af083e17a200f042c6d9331" compoundref="smessage_8h" startline="158">SecMsgBucket::timeChanged</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" compoundref="smessage_8h" startline="159">SecMsgBucket::hash</references>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a02d4e2779a9bd7735e3f8d3c57869684" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int SecureMsgInsertAddress</definition>
        <argsstring>(CKeyID &amp;hashKey, CPubKey &amp;pubKey, SecMsgDB &amp;addrpkdb)</argsstring>
        <name>SecureMsgInsertAddress</name>
        <param>
          <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref> &amp;</type>
          <declname>hashKey</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubKey</declname>
        </param>
        <param>
          <type><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref> &amp;</type>
          <declname>addrpkdb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1885" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1885" bodyend="1920"/>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgInsertAddress</definition>
        <argsstring>(CKeyID &amp;hashKey, CPubKey &amp;pubKey)</argsstring>
        <name>SecureMsgInsertAddress</name>
        <param>
          <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref> &amp;</type>
          <declname>hashKey</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1922" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1922" bodyend="1935"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <referencedby refid="smessage_8h_1a7d84ccbc16eb3d679638ba37b822a5e2" compoundref="smessage_8cpp" startline="2676" endline="2729">SecureMsgAddAddress</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1aaa9c16ea4b01a9bba52059d6fbe900e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ScanBlock</definition>
        <argsstring>(CBlock &amp;block, CTxDB &amp;txdb, SecMsgDB &amp;addrpkdb, uint32_t &amp;nTransactions, uint32_t &amp;nElements, uint32_t &amp;nPubkeys, uint32_t &amp;nDuplicates)</argsstring>
        <name>ScanBlock</name>
        <param>
          <type><ref refid="class_c_block" kindref="compound">CBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref> &amp;</type>
          <declname>txdb</declname>
        </param>
        <param>
          <type><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref> &amp;</type>
          <declname>addrpkdb</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> &amp;</type>
          <declname>nTransactions</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> &amp;</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> &amp;</type>
          <declname>nPubkeys</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> &amp;</type>
          <declname>nDuplicates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="1938" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1938" bodyend="2034"/>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a9bd026d2eb7c6dee89c539e99ecac49f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgScanBlock</definition>
        <argsstring>(CBlock &amp;block)</argsstring>
        <name>SecureMsgScanBlock</name>
        <param>
          <type><ref refid="class_c_block" kindref="compound">CBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2037" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2037" bodyend="2071"/>
        <references refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" compoundref="smessage_8h" startline="228">SecMsgOptions::fScanIncoming</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" compoundref="smessage_8cpp" startline="279" endline="285">SecMsgDB::TxnBegin</references>
        <references refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" compoundref="smessage_8cpp" startline="287" endline="305">SecMsgDB::TxnCommit</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a440b38f2f513f80283993a2d81e908b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ScanChainForPublicKeys</definition>
        <argsstring>(CBlockIndex *pindexStart)</argsstring>
        <name>ScanChainForPublicKeys</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexStart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2073" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2073" bodyend="2121"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" compoundref="smessage_8cpp" startline="279" endline="285">SecMsgDB::TxnBegin</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" compoundref="chain_8h" startline="112">CBlockIndex::pnext</references>
        <references refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" compoundref="smessage_8cpp" startline="287" endline="305">SecMsgDB::TxnCommit</references>
        <referencedby refid="smessage_8h_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" compoundref="smessage_8cpp" startline="2123" endline="2151">SecureMsgScanBlockChain</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgScanBlockChain</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgScanBlockChain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2123" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2123" bodyend="2151"/>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" compoundref="main_8cpp" startline="69">pindexGenesisBlock</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1a440b38f2f513f80283993a2d81e908b5" compoundref="smessage_8cpp" startline="2073" endline="2121">ScanChainForPublicKeys</references>
        <referencedby refid="rpcsmessage_8cpp_1ae8a97c9381cc7d24d3c86f84cef1a9f3" compoundref="rpcsmessage_8cpp" startline="348" endline="367">smsgscanchain</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1ae6a19a8d011fefc72c9cab3d0df014bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgScanBuckets</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgScanBuckets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2153" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2153" bodyend="2298"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</references>
        <referencedby refid="rpcsmessage_8cpp_1a5b2bd8a2dd98a14b6342c7b08787bb21" compoundref="rpcsmessage_8cpp" startline="369" endline="391">smsgscanbuckets</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1adf0fa2a06615363dc3ea6360be0939ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgWalletUnlocked</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgWalletUnlocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2301" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2301" bodyend="2444"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</references>
        <references refid="smessage_8cpp_1ac81e578e38c2f309e808d36f4c36dc62" compoundref="smessage_8cpp" startline="72">NotifySecMsgWalletUnlocked</references>
        <referencedby refid="class_c_wallet_1a654ae5a3a7c4c7c7bfd271f108781b40" compoundref="wallet_8cpp" startline="250" endline="283">CWallet::Unlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a2a1e22a7c3bbeb96983dc3f28407657e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgWalletKeyChanged</definition>
        <argsstring>(std::string sAddress, std::string sLabel, ChangeType mode)</argsstring>
        <name>SecureMsgWalletKeyChanged</name>
        <param>
          <type>std::string</type>
          <declname>sAddress</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sLabel</declname>
        </param>
        <param>
          <type><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969" kindref="member">ChangeType</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2446" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2446" bodyend="2480"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" compoundref="ui__interface_8h" startline="25">CT_NEW</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" compoundref="smessage_8h" startline="226">SecMsgOptions::fNewAddressRecv</references>
        <references refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" compoundref="smessage_8h" startline="227">SecMsgOptions::fNewAddressAnon</references>
        <references refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a6aa8d1cd0da86fe8886e3a5c47f194ef" compoundref="ui__interface_8h" startline="27">CT_DELETED</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgScanMessage</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload, bool reportToGui)</argsstring>
        <name>SecureMsgScanMessage</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reportToGui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2482" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2482" bodyend="2599"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="smessage_8cpp_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</references>
        <references refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" compoundref="smessage_8h" startline="106">MessageData::sFromAddress</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" compoundref="smessage_8h" startline="271">SecMsgStored::timeReceived</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_sec_msg_stored_1a63b5b4cfb96450a5c170981e108315fe" compoundref="smessage_8h" startline="272">SecMsgStored::status</references>
        <references refid="smessage_8h_1a67801d51a4169b62fe9f323c04ad928a" compoundref="smessage_8h" startline="38">SMSG_MASK_UNREAD</references>
        <references refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" compoundref="smessage_8h" startline="274">SecMsgStored::sAddrTo</references>
        <references refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" compoundref="smessage_8h" startline="276">SecMsgStored::vchMessage</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1ad9869377019ded94b70a3c4a9ba2afb0" compoundref="smessage_8cpp" startline="535" endline="556">SecMsgDB::ExistsSmesg</references>
        <references refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" compoundref="smessage_8cpp" startline="507" endline="533">SecMsgDB::WriteSmesg</references>
        <references refid="smessage_8cpp_1a93126f5e674af8370c3f10f3f8de8a37" compoundref="smessage_8cpp" startline="70">NotifySecMsgInboxChanged</references>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgGetLocalKey</definition>
        <argsstring>(CKeyID &amp;ckid, CPubKey &amp;cpkOut)</argsstring>
        <name>SecureMsgGetLocalKey</name>
        <param>
          <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref> &amp;</type>
          <declname>ckid</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>cpkOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2601" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2601" bodyend="2617"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1abd897aff07ec5679235b14cb4485dc37" compoundref="crypter_8cpp" startline="325" endline="340">CCryptoKeyStore::GetPubKey</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" compoundref="pubkey_8h" startline="152" endline="154">CPubKey::IsCompressed</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <referencedby refid="class_message_model_1a272e7ceeba4664046472e6f7c4d49d23" compoundref="messagemodel_8cpp" startline="331" endline="352">MessageModel::getAddressOrPubkey</referencedby>
        <referencedby refid="smessage_8h_1a6dadcd107f4196325fd1b0841dbffd2a" compoundref="smessage_8cpp" startline="2619" endline="2647">SecureMsgGetLocalPublicKey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a6dadcd107f4196325fd1b0841dbffd2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgGetLocalPublicKey</definition>
        <argsstring>(std::string &amp;strAddress, std::string &amp;strPublicKey)</argsstring>
        <name>SecureMsgGetLocalPublicKey</name>
        <param>
          <type>std::string &amp;</type>
          <declname>strAddress</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strPublicKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2619" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2619" bodyend="2647"/>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</references>
        <references refid="base58_8cpp_1a8d6f0e9d5df175b4966dcede31dc90ad" compoundref="base58_8cpp" startline="67" endline="99">EncodeBase58</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" compoundref="pubkey_8h" startline="93" endline="93">CPubKey::end</references>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a1341706507a851babcff6ce436b8ce2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgGetStoredKey</definition>
        <argsstring>(CKeyID &amp;ckid, CPubKey &amp;cpkOut)</argsstring>
        <name>SecureMsgGetStoredKey</name>
        <param>
          <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref> &amp;</type>
          <declname>ckid</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>cpkOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2649" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2649" bodyend="2674"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" compoundref="smessage_8cpp" startline="314" endline="357">SecMsgDB::ReadPK</references>
        <referencedby refid="class_message_model_1a272e7ceeba4664046472e6f7c4d49d23" compoundref="messagemodel_8cpp" startline="331" endline="352">MessageModel::getAddressOrPubkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a7d84ccbc16eb3d679638ba37b822a5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgAddAddress</definition>
        <argsstring>(std::string &amp;address, std::string &amp;publicKey)</argsstring>
        <name>SecureMsgAddAddress</name>
        <param>
          <type>std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>publicKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2676" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2676" bodyend="2729"/>
        <references refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" compoundref="base58_8cpp" startline="218" endline="223">CDarkSilkAddress::IsValid</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="base58_8cpp_1a0f74d1d6e7e982cad4b0e538acea4538" compoundref="base58_8cpp" startline="22" endline="65">DecodeBase58</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" compoundref="smessage_8cpp" startline="1922" endline="1935">SecureMsgInsertAddress</references>
        <referencedby refid="class_message_model_1a76c42a7c0940348d6c2bdd2111cc6424" compoundref="messagemodel_8cpp" startline="364" endline="420">MessageModel::sendMessages</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab3f43e65ebac0f02747e50c3d4689e9f" compoundref="rpcsmessage_8cpp" startline="393" endline="425">smsgaddkey</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a9a34bfa72cc027350d71f9daaefb8fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgRetrieve</definition>
        <argsstring>(SecMsgToken &amp;token, std::vector&lt; uint8_t &gt; &amp;vchData)</argsstring>
        <name>SecureMsgRetrieve</name>
        <param>
          <type><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref> &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> &gt; &amp;</type>
          <declname>vchData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2731" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2731" bodyend="2794"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a76ffa50f445c2a6089504aead1239e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgReceive</definition>
        <argsstring>(CNode *pfrom, std::vector&lt; uint8_t &gt; &amp;vchData)</argsstring>
        <name>SecureMsgReceive</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> &gt; &amp;</type>
          <declname>vchData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2796" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2796" bodyend="2909"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="smessage_8cpp_1ae4abbffb060bb486b9e15053f83cbcbf" compoundref="smessage_8cpp" startline="3099" endline="3166">SecureMsgValidate</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</references>
        <references refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</references>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1abdde7d50a54a2f54a3aea64c47af535a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgStoreUnscanned</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload)</argsstring>
        <name>SecureMsgStoreUnscanned</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2911" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2911" bodyend="2975"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgStore</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload, bool fUpdateBucket)</argsstring>
        <name>SecureMsgStore</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fUpdateBucket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="2978" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2978" bodyend="3092"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" compoundref="smessage_8h" startline="138">SecMsgToken::sample</references>
        <references refid="script_8h_1ab545c0a3638ba9151370e91fac78f48d" compoundref="script_8h" startline="354" endline="360">ValueString</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1ae5f8acf9cccf634cdb27b3f77b451f9d" compoundref="smessage_8cpp" startline="3094" endline="3097">SecureMsgStore</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1ae5f8acf9cccf634cdb27b3f77b451f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgStore</definition>
        <argsstring>(SecureMessage &amp;smsg, bool fUpdateBucket)</argsstring>
        <name>SecureMsgStore</name>
        <param>
          <type><ref refid="class_secure_message" kindref="compound">SecureMessage</ref> &amp;</type>
          <declname>smsg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fUpdateBucket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="3094" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3094" bodyend="3097"/>
        <references refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1ae4abbffb060bb486b9e15053f83cbcbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgValidate</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload)</argsstring>
        <name>SecureMsgValidate</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="3099" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3099" bodyend="3166"/>
        <references refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" compoundref="smessage_8h" startline="86">SecureMessage::version</references>
        <references refid="smessage_8h_1af7fb9dac77a91414591c4ef98f772120" compoundref="smessage_8h" startline="34">SMSG_MAX_MSG_WORST</references>
        <references refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" compoundref="smessage_8h" startline="92">SecureMessage::nonse</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1ac434a0295e161eb2ebdad951f4049dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgSetHash</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload)</argsstring>
        <name>SecureMsgSetHash</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="3168" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3168" bodyend="3274"/>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" compoundref="smessage_8h" startline="92">SecureMessage::nonse</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a1a9885d0f94a7d5322eafb31bcf2f90a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgEncrypt</definition>
        <argsstring>(SecureMessage &amp;smsg, const std::string &amp;addressFrom, const std::string &amp;addressTo, const std::string &amp;message)</argsstring>
        <name>SecureMsgEncrypt</name>
        <param>
          <type><ref refid="class_secure_message" kindref="compound">SecureMessage</ref> &amp;</type>
          <declname>smsg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>addressFrom</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>addressTo</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="3276" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3276" bodyend="3531"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" compoundref="smessage_8h" startline="31">SMSG_MAX_MSG_BYTES</references>
        <references refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" compoundref="smessage_8h" startline="86">SecureMessage::version</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="smessage_8cpp_1a1341706507a851babcff6ce436b8ce2d" compoundref="smessage_8cpp" startline="2649" endline="2674">SecureMsgGetStoredKey</references>
        <references refid="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</references>
        <references refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" compoundref="util_8cpp" startline="171" endline="196">RandAddSeedPerfmon</references>
        <references refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" compoundref="smessage_8h" startline="89">SecureMessage::iv</references>
        <references refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" compoundref="key_8cpp" startline="139" endline="146">CKey::MakeNewKey</references>
        <references refid="class_c_e_c_key_1a4f5a374f5aaa622749b7772392c2ef30" compoundref="ecwrapper_8cpp" startline="147" endline="156">CECKey::SetSecretBytes</references>
        <references refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" compoundref="key_8h" startline="84" endline="84">CKey::begin</references>
        <references refid="class_c_e_c_key_1a07055de929aa6e4f4b692fb2bd272fdd" compoundref="ecwrapper_8cpp" startline="193" endline="195">CECKey::SetPubKey</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">CPubKey::size</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" compoundref="ecwrapper_8h" startline="24" endline="24">CECKey::GetECKey</references>
        <references refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" compoundref="key_8cpp" startline="169" endline="180">CKey::GetPubKey</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" compoundref="pubkey_8h" startline="152" endline="154">CPubKey::IsCompressed</references>
        <references refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" compoundref="smessage_8h" startline="90">SecureMessage::cpkR</references>
        <references refid="lz4_8c_1a2b09f5ca41ce609bb136d3637beffe04" compoundref="lz4_8c" startline="372" endline="372">LZ4_compressBound</references>
        <references refid="lz4_8c_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</references>
        <references refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" compoundref="smessage_8h" startline="19">SMSG_PL_HDR_LEN</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" compoundref="crypter_8cpp" startline="301" endline="323">CCryptoKeyStore::GetKey</references>
        <references refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" compoundref="key_8cpp" startline="211" endline="224">CKey::SignCompact</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" compoundref="smessage_8cpp" startline="90" endline="96">SecMsgCrypter::SetKey</references>
        <references refid="class_sec_msg_crypter_1abcd38cca1e7e04486ea959d71465da09" compoundref="smessage_8cpp" startline="108" endline="135">SecMsgCrypter::Encrypt</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" compoundref="smessage_8h" startline="91">SecureMessage::mac</references>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1acbe2815144396344354ffa3022300278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgSend</definition>
        <argsstring>(std::string &amp;addressFrom, std::string &amp;addressTo, std::string &amp;message, std::string &amp;sError)</argsstring>
        <name>SecureMsgSend</name>
        <param>
          <type>std::string &amp;</type>
          <declname>addressFrom</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>addressTo</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>sError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="3533" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3533" bodyend="3699"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" compoundref="smessage_8h" startline="31">SMSG_MAX_MSG_BYTES</references>
        <references refid="smessage_8cpp_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" compoundref="smessage_8h" startline="271">SecMsgStored::timeReceived</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" compoundref="smessage_8h" startline="274">SecMsgStored::sAddrTo</references>
        <references refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" compoundref="smessage_8h" startline="276">SecMsgStored::vchMessage</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" compoundref="smessage_8cpp" startline="507" endline="533">SecMsgDB::WriteSmesg</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" compoundref="wallet_8h" startline="196">CWallet::mapAddressBook</references>
        <references refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" compoundref="script_8cpp" startline="2607" endline="2612">IsMine</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_sec_msg_stored_1a9200ada27d6664d6c4c995fac0ed486d" compoundref="smessage_8h" startline="275">SecMsgStored::sAddrOutbox</references>
        <references refid="smessage_8cpp_1aa848b072a4193ed7af7f01276f819170" compoundref="smessage_8cpp" startline="71">NotifySecMsgOutboxChanged</references>
        <referencedby refid="class_message_model_1a76c42a7c0940348d6c2bdd2111cc6424" compoundref="messagemodel_8cpp" startline="364" endline="420">MessageModel::sendMessages</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a98f31e03cd4847162535ddd58c28ac52" compoundref="rpcsmessage_8cpp" startline="511" endline="537">smsgsend</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a64f22b883ee399f49e1656ef90b7c936" compoundref="rpcsmessage_8cpp" startline="539" endline="564">smsgsendanon</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgDecrypt</definition>
        <argsstring>(bool fTestOnly, std::string &amp;address, uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload, MessageData &amp;msg)</argsstring>
        <name>SecureMsgDecrypt</name>
        <param>
          <type>bool</type>
          <declname>fTestOnly</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <param>
          <type><ref refid="class_message_data" kindref="compound">MessageData</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="3702" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3702" bodyend="3946"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" compoundref="smessage_8h" startline="86">SecureMessage::version</references>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" compoundref="crypter_8cpp" startline="301" endline="323">CCryptoKeyStore::GetKey</references>
        <references refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" compoundref="smessage_8h" startline="90">SecureMessage::cpkR</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_e_c_key_1a07055de929aa6e4f4b692fb2bd272fdd" compoundref="ecwrapper_8cpp" startline="193" endline="195">CECKey::SetPubKey</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">CPubKey::size</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_e_c_key_1a4f5a374f5aaa622749b7772392c2ef30" compoundref="ecwrapper_8cpp" startline="147" endline="156">CECKey::SetSecretBytes</references>
        <references refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" compoundref="key_8h" startline="84" endline="84">CKey::begin</references>
        <references refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" compoundref="ecwrapper_8h" startline="24" endline="24">CECKey::GetECKey</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" compoundref="smessage_8h" startline="91">SecureMessage::mac</references>
        <references refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" compoundref="smessage_8cpp" startline="90" endline="96">SecMsgCrypter::SetKey</references>
        <references refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" compoundref="smessage_8h" startline="89">SecureMessage::iv</references>
        <references refid="class_sec_msg_crypter_1a7ede11e62c67b4c1b205f2ddc9402ddb" compoundref="smessage_8cpp" startline="137" endline="163">SecMsgCrypter::Decrypt</references>
        <references refid="class_message_data_1ab5afd561eaa6bc5f64a6c63de9b09f9d" compoundref="smessage_8h" startline="104">MessageData::timestamp</references>
        <references refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" compoundref="smessage_8h" startline="19">SMSG_PL_HDR_LEN</references>
        <references refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" compoundref="smessage_8h" startline="107">MessageData::vchMessage</references>
        <references refid="lz4_8c_1a76d66de24858903c049171e700c1371c" compoundref="lz4_8c" startline="850" endline="853">LZ4_decompress_safe</references>
        <references refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" compoundref="smessage_8h" startline="106">MessageData::sFromAddress</references>
        <references refid="class_c_dark_silk_address_1adafb09872a993f450999c4e4ea0e795b" compoundref="base58_8cpp" startline="204" endline="207">CDarkSilkAddress::Set</references>
        <references refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" compoundref="base58_8cpp" startline="218" endline="223">CDarkSilkAddress::IsValid</references>
        <references refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" compoundref="pubkey_8cpp" startline="187" endline="205">CPubKey::RecoverCompact</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" compoundref="smessage_8cpp" startline="1922" endline="1935">SecureMsgInsertAddress</references>
        <referencedby refid="class_message_table_priv_1a0c420e61982703babe27416089ff2bd3" compoundref="messagemodel_8cpp" startline="47" endline="132">MessageTablePriv::refreshMessageTable</referencedby>
        <referencedby refid="class_message_table_priv_1a7769c63c504ab64c04e0699c4f4aacd3" compoundref="messagemodel_8cpp" startline="134" endline="170">MessageTablePriv::newMessage</referencedby>
        <referencedby refid="class_message_table_priv_1a4718ccab000f83181ada7e74df2e80b4" compoundref="messagemodel_8cpp" startline="172" endline="207">MessageTablePriv::newOutboxMessage</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
        <referencedby refid="smessage_8h_1a7710a63b846d5a4f35f233cfeae6027b" compoundref="smessage_8cpp" startline="3948" endline="3951">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8cpp_1a7710a63b846d5a4f35f233cfeae6027b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgDecrypt</definition>
        <argsstring>(bool fTestOnly, std::string &amp;address, SecureMessage &amp;smsg, MessageData &amp;msg)</argsstring>
        <name>SecureMsgDecrypt</name>
        <param>
          <type>bool</type>
          <declname>fTestOnly</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="class_secure_message" kindref="compound">SecureMessage</ref> &amp;</type>
          <declname>smsg</declname>
        </param>
        <param>
          <type><ref refid="class_message_data" kindref="compound">MessageData</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.cpp" line="3948" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3948" bodyend="3951"/>
        <references refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2015<sp/>The<sp/>ShadowCoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment">Notes:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>Running<sp/>with<sp/>-debug<sp/>could<sp/>leave<sp/>to<sp/>and<sp/>from<sp/>address<sp/>hashes<sp/>and<sp/>public<sp/>keys<sp/>in<sp/>the<sp/>log.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>parameters:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-nosmsg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>secure<sp/>messaging<sp/>(fNoSmsg)</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-debugsmsg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Show<sp/>extra<sp/>debug<sp/>messages<sp/>(fDebugSmsg)</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-smsgscanchain<sp/><sp/><sp/><sp/><sp/><sp/>Scan<sp/>the<sp/>block<sp/>chain<sp/>for<sp/>public<sp/>key<sp/>addresses<sp/>on<sp/>startup</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>Wallet<sp/>Locked</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>copy<sp/>of<sp/>each<sp/>incoming<sp/>message<sp/>is<sp/>stored<sp/>in<sp/>bucket<sp/>files<sp/>ending<sp/>in<sp/>_wl.dat</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl<sp/>(wallet<sp/>locked)<sp/>bucket<sp/>files<sp/>are<sp/>deleted<sp/>if<sp/>they<sp/>expire,<sp/>like<sp/>normal<sp/>buckets</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>the<sp/>wallet<sp/>is<sp/>unlocked<sp/>all<sp/>the<sp/>messages<sp/>in<sp/>wl<sp/>files<sp/>are<sp/>scanned.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>Address<sp/>Whitelist</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Owned<sp/>Addresses<sp/>are<sp/>stored<sp/>in<sp/>smsgAddresses<sp/>vector</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Saved<sp/>to<sp/>smsg.ini</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modify<sp/>options<sp/>using<sp/>the<sp/>smsglocalkeys<sp/>rpc<sp/>command<sp/>or<sp/>edit<sp/>the<sp/>smsg.ini<sp/>file<sp/>(with<sp/>client<sp/>closed)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>TODO:</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>buckets<sp/>older<sp/>than<sp/>current,<sp/>only<sp/>need<sp/>to<sp/>store<sp/>no.<sp/>messages<sp/>and<sp/>hash<sp/>in<sp/>memory</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="smessage_8h" kindref="compound">smessage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ecdh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/sha.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/aes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/hmac.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/predicate.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base58_8h" kindref="compound">base58.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db_8h" kindref="compound">db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>pwalletMain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb_8h" kindref="compound">txdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sync_8h" kindref="compound">sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ecwrapper_8h" kindref="compound">ecwrapper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb-leveldb_8h" kindref="compound">txdb-leveldb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lz4_8c" kindref="compound">lz4/lz4.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xxhash_8h" kindref="compound">xxhash/xxhash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xxhash_8c" kindref="compound">xxhash/xxhash.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" refkind="member"><highlight class="normal">boost::thread_group<sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="smessage_8h_1a93126f5e674af8370c3f10f3f8de8a37" refkind="member"><highlight class="normal">boost::signals2::signal&lt;void<sp/>(SecMsgStored&amp;<sp/>inboxHdr)&gt;<sp/><sp/><ref refid="smessage_8cpp_1a93126f5e674af8370c3f10f3f8de8a37" kindref="member">NotifySecMsgInboxChanged</ref>;</highlight></codeline>
<codeline lineno="71" refid="smessage_8h_1aa848b072a4193ed7af7f01276f819170" refkind="member"><highlight class="normal">boost::signals2::signal&lt;void<sp/>(SecMsgStored&amp;<sp/>outboxHdr)&gt;<sp/><ref refid="smessage_8cpp_1aa848b072a4193ed7af7f01276f819170" kindref="member">NotifySecMsgOutboxChanged</ref>;</highlight></codeline>
<codeline lineno="72" refid="smessage_8h_1ac81e578e38c2f309e808d36f4c36dc62" refkind="member"><highlight class="normal">boost::signals2::signal&lt;void<sp/>()&gt;<sp/><ref refid="smessage_8cpp_1ac81e578e38c2f309e808d36f4c36dc62" kindref="member">NotifySecMsgWalletUnlocked</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="smessage_8h_1a6a38441245ee84417e8fb4a77860dc09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="smessage_8h_1aff7c48d987b8a7eb24801d262a30fb6e" refkind="member"><highlight class="normal">std::map&lt;int64_t,<sp/>SecMsgBucket&gt;<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>;</highlight></codeline>
<codeline lineno="77" refid="smessage_8h_1a5a56ac0f79a9871c59a6482b1323acf5" refkind="member"><highlight class="normal">std::vector&lt;SecMsgAddress&gt;<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>;</highlight></codeline>
<codeline lineno="78" refid="smessage_8h_1ac6ee7d290a6b6af015c10b95d61c704d" refkind="member"><highlight class="normal"><ref refid="class_sec_msg_options" kindref="compound">SecMsgOptions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1ac6ee7d290a6b6af015c10b95d61c704d" kindref="member">smsgOptions</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="smessage_8h_1a06b6584a0cc47952cc6b071c17c7cbd7" refkind="member"><highlight class="normal"><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="smessage_8cpp_1a06b6584a0cc47952cc6b071c17c7cbd7" kindref="member">cs_smsg</ref>;</highlight></codeline>
<codeline lineno="82" refid="smessage_8h_1ac42d4f2a114c9e994ebb1379df8ac6d2" refkind="member"><highlight class="normal"><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="smessage_8cpp_1ac42d4f2a114c9e994ebb1379df8ac6d2" kindref="member">cs_smsgDB</ref>;</highlight></codeline>
<codeline lineno="83" refid="smessage_8cpp_1aeea900cb7ff619635360a3d14af80abd" refkind="member"><highlight class="normal"><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="smessage_8cpp_1aeea900cb7ff619635360a3d14af80abd" kindref="member">cs_smsgThreads</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_d_b" kindref="compound">leveldb::DB</ref><sp/>*<ref refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" kindref="member">smsgDB</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>boost::filesystem;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SecMsgCrypter::SetKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchNewKey,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chNewIV)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchNewKey.size()<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(chKey))</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SetKey</ref>(&amp;vchNewKey[0],<sp/>chNewIV);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_sec_msg_crypter_1a5ed79b6b7217c58cbea219a93c32c4de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SecMsgCrypter::SetKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chNewKey,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chNewIV)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>for<sp/>EVP_aes_256_cbc()<sp/>key<sp/>must<sp/>be<sp/>256<sp/>bit,<sp/>iv<sp/>must<sp/>be<sp/>128<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[0],<sp/>chNewKey,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(chKey));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(chIV,<sp/>chNewIV,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(chIV));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>fKeySet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_sec_msg_crypter_1abcd38cca1e7e04486ea959d71465da09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1abcd38cca1e7e04486ea959d71465da09" kindref="member">SecMsgCrypter::Encrypt</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chPlaintext,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPlain,<sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;vchCiphertext)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fKeySet)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>max<sp/>ciphertext<sp/>len<sp/>for<sp/>a<sp/>n<sp/>bytes<sp/>of<sp/>plaintext<sp/>is<sp/>n<sp/>+<sp/>AES_BLOCK_SIZE<sp/>-<sp/>1<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLen<sp/>=<sp/>nPlain;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCLen<sp/>=<sp/>nLen<sp/>+<sp/>AES_BLOCK_SIZE,<sp/>nFLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>vchCiphertext<sp/>=<sp/>std::vector&lt;uint8_t&gt;<sp/>(nCLen);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>EVP_CIPHER_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOk<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>EVP_CIPHER_CTX_init(&amp;ctx);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOk)<sp/>fOk<sp/>=<sp/>EVP_EncryptInit_ex(&amp;ctx,<sp/>EVP_aes_256_cbc(),<sp/>NULL,<sp/>&amp;chKey[0],<sp/>&amp;chIV[0]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOk)<sp/>fOk<sp/>=<sp/>EVP_EncryptUpdate(&amp;ctx,<sp/>&amp;vchCiphertext[0],<sp/>&amp;nCLen,<sp/>chPlaintext,<sp/>nLen);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOk)<sp/>fOk<sp/>=<sp/>EVP_EncryptFinal_ex(&amp;ctx,<sp/>(&amp;vchCiphertext[0])+nCLen,<sp/>&amp;nFLen);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>EVP_CIPHER_CTX_cleanup(&amp;ctx);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fOk)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>vchCiphertext.resize(nCLen<sp/>+<sp/>nFLen);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_sec_msg_crypter_1a7ede11e62c67b4c1b205f2ddc9402ddb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1a7ede11e62c67b4c1b205f2ddc9402ddb" kindref="member">SecMsgCrypter::Decrypt</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chCiphertext,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nCipher,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchPlaintext)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fKeySet)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plaintext<sp/>will<sp/>always<sp/>be<sp/>equal<sp/>to<sp/>or<sp/>lesser<sp/>than<sp/>length<sp/>of<sp/>ciphertext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPLen<sp/>=<sp/>nCipher,<sp/>nFLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>vchPlaintext.resize(nCipher);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>EVP_CIPHER_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOk<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>EVP_CIPHER_CTX_init(&amp;ctx);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOk)<sp/>fOk<sp/>=<sp/>EVP_DecryptInit_ex(&amp;ctx,<sp/>EVP_aes_256_cbc(),<sp/>NULL,<sp/>&amp;chKey[0],<sp/>&amp;chIV[0]);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOk)<sp/>fOk<sp/>=<sp/>EVP_DecryptUpdate(&amp;ctx,<sp/>&amp;vchPlaintext[0],<sp/>&amp;nPLen,<sp/>&amp;chCiphertext[0],<sp/>nCipher);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOk)<sp/>fOk<sp/>=<sp/>EVP_DecryptFinal_ex(&amp;ctx,<sp/>(&amp;vchPlaintext[0])+nPLen,<sp/>&amp;nFLen);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>EVP_CIPHER_CTX_cleanup(&amp;ctx);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fOk)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>vchPlaintext.resize(nPLen<sp/>+<sp/>nFLen);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_sec_msg_bucket_1ae6e05a91141c7cacf593b90e8c082113" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_bucket_1ae6e05a91141c7cacf593b90e8c082113" kindref="member">SecMsgBucket::hashBucket</ref>()</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgBucket::hashBucket()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a77b045448af083e17a200f042c6d9331" kindref="member">timeChanged</ref><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>=<sp/><ref refid="xxhash_8c_1a14dea44906862dbf59aad697342aad6d" kindref="member">XXH32_init</ref>(1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><ref refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" kindref="member">setTokens</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" kindref="member">setTokens</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xxhash_8c_1a7cc3b7efa347c6a8a632b92e9d796826" kindref="member">XXH32_update</ref>(state,<sp/>it-&gt;sample,<sp/>8);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" kindref="member">hash</ref><sp/>=<sp/><ref refid="xxhash_8c_1a0976366f488672f0fe1e4ee81b63345f" kindref="member">XXH32_digest</ref>(state);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Hashed<sp/>%u<sp/>messages,<sp/>hash<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" kindref="member">setTokens</ref>.size(),<sp/><ref refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">SecMsgDB::Open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszMode)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smsgDB)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref><sp/>=<sp/><ref refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" kindref="member">smsgDB</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCreate<sp/>=<sp/>strchr(pszMode,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>fullpath<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgDB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fCreate</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!fs::exists(fullpath)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!fs::is_directory(fullpath)))</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB::open()<sp/>-<sp/>DB<sp/>does<sp/>not<sp/>exist.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">leveldb::Options</ref><sp/>options;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/>fCreate;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">leveldb::DB::Open</ref>(options,<sp/>fullpath.string(),<sp/>&amp;<ref refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" kindref="member">smsgDB</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB::open()<sp/>-<sp/>Error<sp/>opening<sp/>db:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref><sp/>=<sp/><ref refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" kindref="member">smsgDB</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_sec_msg_batch_scanner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_batch_scanner" kindref="compound">SecMsgBatchScanner</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_write_batch_1_1_handler" kindref="compound">leveldb::WriteBatch::Handler</ref></highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227" refid="class_sec_msg_batch_scanner_1a15f820824b8c5f64a3fba97b9133a50e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_sec_msg_batch_scanner_1a15f820824b8c5f64a3fba97b9133a50e" kindref="member">needle</ref>;</highlight></codeline>
<codeline lineno="228" refid="class_sec_msg_batch_scanner_1a184ca3c1ae1f48ab994852af4b6b741e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="class_sec_msg_batch_scanner_1a184ca3c1ae1f48ab994852af4b6b741e" kindref="member">deleted</ref>;</highlight></codeline>
<codeline lineno="229" refid="class_sec_msg_batch_scanner_1a1f9a62489af577112cbe0db50e155e58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string*<sp/><ref refid="class_sec_msg_batch_scanner_1a1f9a62489af577112cbe0db50e155e58" kindref="member">foundValue</ref>;</highlight></codeline>
<codeline lineno="230" refid="class_sec_msg_batch_scanner_1a1842d0e149b314a7beb82cc4840f5565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_batch_scanner_1a1842d0e149b314a7beb82cc4840f5565" kindref="member">foundEntry</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_sec_msg_batch_scanner_1a34442f9306b1d848def23e4a08a29c0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_batch_scanner_1a34442f9306b1d848def23e4a08a29c0b" kindref="member">SecMsgBatchScanner</ref>()<sp/>:<sp/>foundEntry(false)<sp/>{}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="class_sec_msg_batch_scanner_1ad43a3dd99b44578696b0582c4e08f158" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_batch_scanner_1ad43a3dd99b44578696b0582c4e08f158" kindref="member">Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">leveldb::Slice</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">leveldb::Slice</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>()<sp/>==<sp/><ref refid="class_sec_msg_batch_scanner_1a15f820824b8c5f64a3fba97b9133a50e" kindref="member">needle</ref>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundEntry<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*deleted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*foundValue<sp/>=<sp/>value.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="class_sec_msg_batch_scanner_1a353fc7e6d79d762092646f00c7dc0f60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_batch_scanner_1a353fc7e6d79d762092646f00c7dc0f60" kindref="member">Delete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">leveldb::Slice</ref>&amp;<sp/>key)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>()<sp/>==<sp/><ref refid="class_sec_msg_batch_scanner_1a15f820824b8c5f64a3fba97b9133a50e" kindref="member">needle</ref>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundEntry<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*deleted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>performing<sp/>a<sp/>read,<sp/>if<sp/>we<sp/>have<sp/>an<sp/>active<sp/>batch<sp/>we<sp/>need<sp/>to<sp/>check<sp/>it<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>before<sp/>reading<sp/>from<sp/>the<sp/>database,<sp/>as<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>code<sp/>assumes<sp/>that<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>database<sp/>transaction<sp/>begins<sp/>reads<sp/>are<sp/>consistent<sp/>with<sp/>it.<sp/>It<sp/>would<sp/>be<sp/>good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>change<sp/>that<sp/>assumption<sp/>in<sp/>future<sp/>and<sp/>avoid<sp/>the<sp/>performance<sp/>hit,<sp/>though<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>practice<sp/>it<sp/>does<sp/>not<sp/>appear<sp/>to<sp/>be<sp/>large.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" kindref="member">SecMsgDB::ScanBatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>key,<sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>deleted)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="260"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>*deleted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_batch_scanner" kindref="compound">SecMsgBatchScanner</ref><sp/>scanner;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner.<ref refid="class_sec_msg_batch_scanner_1a15f820824b8c5f64a3fba97b9133a50e" kindref="member">needle</ref><sp/>=<sp/>key.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner.<ref refid="class_sec_msg_batch_scanner_1a184ca3c1ae1f48ab994852af4b6b741e" kindref="member">deleted</ref><sp/>=<sp/>deleted;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner.<ref refid="class_sec_msg_batch_scanner_1a1f9a62489af577112cbe0db50e155e58" kindref="member">foundValue</ref><sp/>=<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>-&gt;<ref refid="classleveldb_1_1_write_batch_1ac6cb5a360bb095f4e9a6e817c4322a9d" kindref="member">Iterate</ref>(&amp;scanner);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB<sp/>ScanBatch<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanner.<ref refid="class_sec_msg_batch_scanner_1a1842d0e149b314a7beb82cc4840f5565" kindref="member">foundEntry</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" kindref="member">SecMsgDB::TxnBegin</ref>()</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">leveldb::WriteBatch</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" kindref="member">SecMsgDB::TxnCommit</ref>()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">leveldb::WriteOptions</ref><sp/>writeOptions;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>writeOptions.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>status<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" kindref="member">Write</ref>(writeOptions,<sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB<sp/>batch<sp/>commit<sp/>failure:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>status.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="class_sec_msg_d_b_1a49e50670db162f8c9e192b7b00f0a813" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a49e50670db162f8c9e192b7b00f0a813" kindref="member">SecMsgDB::TxnAbort</ref>()</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" kindref="member">SecMsgDB::ReadPK</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>addr,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey.<ref refid="class_c_data_stream_1a5542e71bd7af2ab7cd7be0f381d39cb5" kindref="member">reserve</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr)<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/>addr;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strValue;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readFromDb<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>check<sp/>activeBatch<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deleted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readFromDb<sp/>=<sp/><ref refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" kindref="member">ScanBatch</ref>(ssKey,<sp/>&amp;strValue,<sp/>&amp;deleted)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deleted)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readFromDb)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" kindref="member">Get</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">leveldb::ReadOptions</ref>(),<sp/>ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>&amp;strValue);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ad5462f26196fc04d72221d2fdf1872ca" kindref="member">IsNotFound</ref>())</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;LevelDB<sp/>read<sp/>failure:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssValue(strValue.data(),<sp/>strValue.data()<sp/>+<sp/>strValue.size(),<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssValue<sp/>&gt;&gt;<sp/>pubkey;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB::ReadPK()<sp/>unserialize<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">};</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="class_sec_msg_d_b_1a77131fcd232e503a57ab8569d3ab9fd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a77131fcd232e503a57ab8569d3ab9fd8" kindref="member">SecMsgDB::WritePK</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>addr,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey.<ref refid="class_c_data_stream_1a5542e71bd7af2ab7cd7be0f381d39cb5" kindref="member">reserve</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr)<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/>addr;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssValue(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>ssValue.<ref refid="class_c_data_stream_1a5542e71bd7af2ab7cd7be0f381d39cb5" kindref="member">reserve</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pubkey));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>ssValue<sp/>&lt;&lt;<sp/>pubkey;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>-&gt;<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>ssValue.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">leveldb::WriteOptions</ref><sp/>writeOptions;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>writeOptions.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" kindref="member">Put</ref>(writeOptions,<sp/>ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>ssValue.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>());</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB<sp/>write<sp/>failure:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="class_sec_msg_d_b_1ad039b1d29fc0e82695d3bd30087765b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1ad039b1d29fc0e82695d3bd30087765b9" kindref="member">SecMsgDB::ExistsPK</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>addr)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey.<ref refid="class_c_data_stream_1a5542e71bd7af2ab7cd7be0f381d39cb5" kindref="member">reserve</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr)+2);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey<sp/>&lt;&lt;<sp/>addr;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unused;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deleted;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" kindref="member">ScanBatch</ref>(ssKey,<sp/>&amp;unused,<sp/>&amp;deleted)<sp/>&amp;&amp;<sp/>!deleted)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" kindref="member">Get</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">leveldb::ReadOptions</ref>(),<sp/>ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>&amp;unused);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.<ref refid="classleveldb_1_1_status_1ad5462f26196fc04d72221d2fdf1872ca" kindref="member">IsNotFound</ref>()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="class_sec_msg_d_b_1ac16426690cd634af83b90aa39a7a5d51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1ac16426690cd634af83b90aa39a7a5d51" kindref="member">SecMsgDB::NextSmesg</ref>(<ref refid="classleveldb_1_1_iterator" kindref="compound">leveldb::Iterator</ref>*<sp/>it,<sp/>std::string&amp;<sp/>prefix,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey,<sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref>&amp;<sp/>smsgStored)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/></highlight><highlight class="comment">//<sp/>first<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(prefix);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(it-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>()</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>()<sp/>==<sp/>18</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>memcmp(it-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>prefix.data(),<sp/>2)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(chKey,<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>18);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssValue(it-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()<sp/>+<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>(),<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssValue<sp/>&gt;&gt;<sp/>smsgStored;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB::NextSmesg()<sp/>unserialize<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="class_sec_msg_d_b_1a6aa8320d9850912374a74823024df701" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a6aa8320d9850912374a74823024df701" kindref="member">SecMsgDB::NextSmesgKey</ref>(<ref refid="classleveldb_1_1_iterator" kindref="compound">leveldb::Iterator</ref>*<sp/>it,<sp/>std::string&amp;<sp/>prefix,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/></highlight><highlight class="comment">//<sp/>first<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(prefix);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(it-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>()</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>()<sp/>==<sp/>18</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>memcmp(it-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>prefix.data(),<sp/>2)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(chKey,<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>18);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_sec_msg_d_b_1a35c86d596ed6c60f4d62cc3e551356d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a35c86d596ed6c60f4d62cc3e551356d2" kindref="member">SecMsgDB::ReadSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey,<sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref>&amp;<sp/>smsgStored)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey.<ref refid="class_c_data_stream_1abcab3fa1be7676ffdb34908ec7c84b78" kindref="member">write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)chKey,<sp/>18);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strValue;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readFromDb<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>check<sp/>activeBatch<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deleted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readFromDb<sp/>=<sp/><ref refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" kindref="member">ScanBatch</ref>(ssKey,<sp/>&amp;strValue,<sp/>&amp;deleted)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deleted)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readFromDb)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" kindref="member">Get</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">leveldb::ReadOptions</ref>(),<sp/>ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>&amp;strValue);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ad5462f26196fc04d72221d2fdf1872ca" kindref="member">IsNotFound</ref>())</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;LevelDB<sp/>read<sp/>failure:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssValue(strValue.data(),<sp/>strValue.data()<sp/>+<sp/>strValue.size(),<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssValue<sp/>&gt;&gt;<sp/>smsgStored;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB::ReadSmesg()<sp/>unserialize<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">};</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" kindref="member">SecMsgDB::WriteSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey,<sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref>&amp;<sp/>smsgStored)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey.<ref refid="class_c_data_stream_1abcab3fa1be7676ffdb34908ec7c84b78" kindref="member">write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)chKey,<sp/>18);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssValue(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ssValue<sp/>&lt;&lt;<sp/>smsgStored;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>-&gt;<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>ssValue.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>());</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">leveldb::WriteOptions</ref><sp/>writeOptions;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>writeOptions.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" kindref="member">Put</ref>(writeOptions,<sp/>ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>ssValue.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>());</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB<sp/>write<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">};</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_sec_msg_d_b_1ad9869377019ded94b70a3c4a9ba2afb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1ad9869377019ded94b70a3c4a9ba2afb0" kindref="member">SecMsgDB::ExistsSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey.<ref refid="class_c_data_stream_1abcab3fa1be7676ffdb34908ec7c84b78" kindref="member">write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)chKey,<sp/>18);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unused;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deleted;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" kindref="member">ScanBatch</ref>(ssKey,<sp/>&amp;unused,<sp/>&amp;deleted)<sp/>&amp;&amp;<sp/>!deleted)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" kindref="member">Get</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">leveldb::ReadOptions</ref>(),<sp/>ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>(),<sp/>&amp;unused);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.<ref refid="classleveldb_1_1_status_1ad5462f26196fc04d72221d2fdf1872ca" kindref="member">IsNotFound</ref>()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="class_sec_msg_d_b_1a7d00fef57cf02d33e0b076ca114f7af5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a7d00fef57cf02d33e0b076ca114f7af5" kindref="member">SecMsgDB::EraseSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey)</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>ssKey.<ref refid="class_c_data_stream_1abcab3fa1be7676ffdb34908ec7c84b78" kindref="member">write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)chKey,<sp/>18);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>-&gt;<ref refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" kindref="member">Delete</ref>(ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>());</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">leveldb::WriteOptions</ref><sp/>writeOptions;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>writeOptions.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">leveldb::Status</ref><sp/>s<sp/>=<sp/><ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" kindref="member">Delete</ref>(writeOptions,<sp/>ssKey.<ref refid="class_c_data_stream_1aa3a9ecf166f36f4ea531d2b23628d2c9" kindref="member">str</ref>());</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>()<sp/>||<sp/>s.<ref refid="classleveldb_1_1_status_1ad5462f26196fc04d72221d2fdf1872ca" kindref="member">IsNotFound</ref>())</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgDB<sp/>erase<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">};</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579" refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" kindref="member">ThreadSecureMsg</ref>()</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>bucket<sp/>management<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nLoop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int64_t,<sp/>NodeId&gt;<sp/>&gt;<sp/>vTimedOutLocks;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLoop++;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref><sp/>&amp;&amp;<sp/>nLoop<sp/>%<sp/><ref refid="smessage_8h_1a8efaec21328f5c6b873f6d822b84c6c0" kindref="member">SMSG_THREAD_LOG_GAP</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>log<sp/>every<sp/>SMSG_THREAD_LOG_GAP<sp/>instance,<sp/>is<sp/>useful<sp/>source<sp/>of<sp/>timestamps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgThread<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>now);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTimedOutLocks.resize(0);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>cutoffTime<sp/>=<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;int64_t,<sp/>SecMsgBucket&gt;::iterator<sp/>it(<ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.begin());<sp/>it<sp/>!=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(fDebugSmsg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>LogPrintf(&quot;Checking<sp/>bucket<sp/>%d&quot;,<sp/>size<sp/>%u<sp/>\n&quot;,<sp/>it-&gt;first,<sp/>it-&gt;second.setTokens.size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;first<sp/>&lt;<sp/>cutoffTime)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>bucket<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>it-&gt;first);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>boost::lexical_cast&lt;std::string&gt;(it-&gt;first);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>fullPath<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal"><sp/>/<sp/>(fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_01.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fs::exists(fullPath))</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>fs::remove(fullPath);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>bucket<sp/>file<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Path<sp/>%s<sp/>does<sp/>not<sp/>exist<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>fullPath.string().c_str());</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>look<sp/>for<sp/>a<sp/>wl<sp/>file,<sp/>it<sp/>stores<sp/>incoming<sp/>messages<sp/>when<sp/>wallet<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullPath<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal"><sp/>/<sp/>(fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_01_wl.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fs::exists(fullPath))</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>fs::remove(fullPath);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>wallet<sp/>locked<sp/>file<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.erase(it);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.nLockCount<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>--<sp/>tick<sp/>down<sp/>nLockCount,<sp/>so<sp/>will<sp/>eventually<sp/>expire<sp/>if<sp/>peer<sp/>never<sp/>sends<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second.nLockCount--;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.nLockCount<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>timed<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTimedOutLocks.push_back(std::make_pair(it-&gt;first,<sp/>it-&gt;second.nLockPeerId));<sp/></highlight><highlight class="comment">//<sp/>cs_vNodes<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second.nLockPeerId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(it-&gt;second.nLockCount<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>!<sp/>if<sp/>(it-&gt;first<sp/>&lt;<sp/>cutoffTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;std::pair&lt;int64_t,<sp/>NodeId&gt;<sp/>&gt;::iterator<sp/>it(vTimedOutLocks.begin());<sp/>it<sp/>!=<sp/>vTimedOutLocks.end();<sp/>it++)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8h_1a954d746a58632565552615fd0a4ee660" kindref="member">NodeId</ref><sp/>nPeerId<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>ignoreUntil<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>+<sp/><ref refid="smessage_8h_1a10bd0be4c103ccf8f76c710ae2a15b83" kindref="member">SMSG_TIME_IGNORE</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Lock<sp/>on<sp/>bucket<sp/>%d<sp/>for<sp/>peer<sp/>%d<sp/>timed<sp/>out.\n&quot;</highlight><highlight class="normal">,<sp/>it-&gt;first,<sp/>nPeerId);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>look<sp/>through<sp/>the<sp/>nodes<sp/>for<sp/>the<sp/>peer<sp/>that<sp/>locked<sp/>this<sp/>bucket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pnode-&gt;<ref refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" kindref="member">id</ref><sp/>!=<sp/>nPeerId)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(pnode-&gt;<ref refid="class_c_node_1a79edcac83fc5067567c7b41c26fcc56f" kindref="member">cs_vSend</ref>,<sp/>pnode-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a574e453a229ed2cbed30ca56727fa564" kindref="member">ignoreUntil</ref><sp/>=<sp/>ignoreUntil;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>alert<sp/>peer<sp/>that<sp/>they<sp/>are<sp/>being<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchData.resize(8);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchData[0],<sp/>&amp;ignoreUntil,<sp/>8);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgIgnore&quot;</highlight><highlight class="normal">,<sp/>vchData);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>node<sp/>will<sp/>ignore<sp/>peer<sp/>%d<sp/>until<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>nPeerId,<sp/>ignoreUntil);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_vNodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(<ref refid="smessage_8h_1a4a4a481ee91964e90efbc0e5a742407e" kindref="member">SMSG_THREAD_DELAY</ref><sp/>*<sp/>1000);<sp/></highlight><highlight class="comment">//<sp/><sp/>//<sp/>check<sp/>every<sp/>SMSG_THREAD_DELAY<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="685"><highlight class="normal">};</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" kindref="member">ThreadSecureMsgPow</ref>()</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>proof<sp/>of<sp/>work<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchKey;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref><sp/>smsgStored;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sPrefix(</highlight><highlight class="stringliteral">&quot;qm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>chKey[18];</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>sleep<sp/>at<sp/>end,<sp/>then<sp/>fSecMsgEnabled<sp/>is<sp/>tested<sp/>on<sp/>wake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>dbOutbox;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">leveldb::Iterator</ref>*<sp/>it;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dbOutbox.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;cr+&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>fifo<sp/>(smallest<sp/>key<sp/>first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>dbOutbox.<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>-&gt;<ref refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">leveldb::ReadOptions</ref>());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>break<sp/>up<sp/>lock,<sp/>SecureMsgSetHash<sp/>will<sp/>take<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dbOutbox.<ref refid="class_sec_msg_d_b_1ac16426690cd634af83b90aa39a7a5d51" kindref="member">NextSmesg</ref>(it,<sp/>sPrefix,<sp/>chKey,<sp/>smsgStored))</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>pHeader<sp/>=<sp/>&amp;smsgStored.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[0];</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>pPayload<sp/>=<sp/>&amp;smsgStored.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>];</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*<sp/>psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>pHeader;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>do<sp/>proof<sp/>of<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/><ref refid="smessage_8cpp_1ac434a0295e161eb2ebdad951f4049dc6" kindref="member">SecureMsgSetHash</ref>(pHeader,<sp/>pPayload,<sp/>psmsg-&gt;<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>leave<sp/>message<sp/>in<sp/>db,<sp/>if<sp/>terminated<sp/>due<sp/>to<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>message<sp/>is<sp/>removed<sp/>here,<sp/>no<sp/>matter<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbOutbox.<ref refid="class_sec_msg_d_b_1a7d00fef57cf02d33e0b076ca114f7af5" kindref="member">EraseSmesg</ref>(chKey);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgPow:<sp/>Could<sp/>not<sp/>get<sp/>proof<sp/>of<sp/>work<sp/>hash,<sp/>message<sp/>removed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>add<sp/>to<sp/>message<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" kindref="member">SecureMsgStore</ref>(pHeader,<sp/>pPayload,<sp/>psmsg-&gt;<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecMsgPow:<sp/>Could<sp/>not<sp/>place<sp/>message<sp/>in<sp/>buckets,<sp/>message<sp/>removed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>test<sp/>if<sp/>message<sp/>was<sp/>sent<sp/>to<sp/>self</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" kindref="member">SecureMsgScanMessage</ref>(pHeader,<sp/>pPayload,<sp/>psmsg-&gt;<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>recipient<sp/>is<sp/>not<sp/>this<sp/>node<sp/>(or<sp/>failed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>shutdown<sp/>thread<sp/>waits<sp/>5<sp/>seconds,<sp/>this<sp/>should<sp/>be<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(2000);<sp/></highlight><highlight class="comment">//<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="766"><highlight class="normal">};</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" kindref="member">SecureMsgBuildBucketSet</ref>()</highlight></codeline>
<codeline lineno="769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Build<sp/>the<sp/>bucket<sp/>set<sp/>by<sp/>scanning<sp/>the<sp/>files<sp/>in<sp/>the<sp/>smsgStore<sp/>dir.</highlight></codeline>
<codeline lineno="772"><highlight class="comment"></highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgBuckets<sp/>should<sp/>be<sp/>empty</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgBuildBucketSet()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/>now<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nFiles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nMessages<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>pathSmsgDir<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::directory_iterator<sp/>itend;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::exists(pathSmsgDir)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!fs::is_directory(pathSmsgDir))</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>store<sp/>directory<sp/>does<sp/>not<sp/>exist.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fs::directory_iterator<sp/>itd(pathSmsgDir)<sp/>;<sp/>itd<sp/>!=<sp/>itend<sp/>;<sp/>++itd)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::is_regular_file(itd-&gt;status()))</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fileType<sp/>=<sp/>(*itd).path().extension().string();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileType.compare(</highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>(*itd).path().filename().string();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Processing<sp/>file:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFiles++;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>files<sp/>must<sp/>be<sp/>split<sp/>if<sp/>&gt;<sp/>2GB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time_noFile.dat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sep<sp/>=<sp/>fileName.find_first_of(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sep<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>stime<sp/>=<sp/>fileName.substr(0,<sp/>sep);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>fileTime<sp/>=<sp/>boost::lexical_cast&lt;<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>&gt;(stime);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileTime<sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Dropping<sp/>file<sp/>%s,<sp/>expired.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::remove((*itd).path());</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>bucket<sp/>file<sp/>%s,<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::algorithm::ends_with(fileName,<sp/></highlight><highlight class="stringliteral">&quot;_wl.dat&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>wallet<sp/>locked<sp/>file:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nTokenSetSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>smsg;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;&amp;<sp/>tokenSet<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[fileTime].setTokens;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen((*itd).path().string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs<sp/>=<sp/>ftell(fp);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref><sp/>token;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token.<ref refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" kindref="member">offset</ref><sp/>=<sp/>ofs;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>header<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;End<sp/>of<sp/>file.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref><sp/>=<sp/>smsg.<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref><sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(token.<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/>8,<sp/>fp)<sp/>!=<sp/>8)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>data<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(fp,<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>-8,<sp/>SEEK_CUR)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fseek,<sp/>strerror:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenSet.insert(token);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[fileTime].hashBucket();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTokenSetSize<sp/>=<sp/>tokenSet.size();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>LOCK(cs_smsg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMessages<sp/>+=<sp/>nTokenSetSize;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Bucket<sp/>%d<sp/>contains<sp/>%u<sp/>messages.\n&quot;</highlight><highlight class="normal">,<sp/>fileTime,<sp/>nTokenSetSize);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Processed<sp/>%u<sp/>files,<sp/>loaded<sp/>%u<sp/>buckets<sp/>containing<sp/>%u<sp/>messages.\n&quot;</highlight><highlight class="normal">,<sp/>nFiles,<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.size(),<sp/>nMessages);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="909"><highlight class="normal">};</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911" refid="smessage_8h_1ab47945fac81152e28647920d324ec630" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1ab47945fac81152e28647920d324ec630" kindref="member">SecureMsgAddWalletAddresses</ref>()</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgAddWalletAddresses()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sAnonPrefix(</highlight><highlight class="stringliteral">&quot;ao<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nAdded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>,<sp/>std::string)&amp;<sp/>entry,<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" kindref="member">mapAddressBook</ref>)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(*<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>entry.first))</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>skip<sp/>addresses<sp/>for<sp/>anon<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry.second.compare(0,<sp/>sAnonPrefix.length(),<sp/>sAnonPrefix)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>skip<sp/>addresses<sp/>for<sp/>stealth<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddress(entry.first);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddress.<ref refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>address;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strPublicKey;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address<sp/>=<sp/>coinAddress.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fExists<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;SecMsgAddress&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>!=<sp/>it-&gt;sAddress)</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fExists)</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recvEnabled<sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recvAnon<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.push_back(<ref refid="class_sec_msg_address" kindref="compound">SecMsgAddress</ref>(address,<sp/>recvEnabled,<sp/>recvAnon));</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAdded++;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>%u<sp/>addresses<sp/>to<sp/>whitelist.\n&quot;</highlight><highlight class="normal">,<sp/>nAdded);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="961"><highlight class="normal">};</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" kindref="member">SecureMsgReadIni</ref>()</highlight></codeline>
<codeline lineno="965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgReadIni()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>fullpath<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsg.ini&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen(fullpath.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cLine[512];</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pName,<sp/>*pValue;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cAddress[64];</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addrRecv,<sp/>addrRecvAnon;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(cLine,<sp/>512,<sp/>fp))</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cLine[strcspn(cLine,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cLine[strcspn(cLine,<sp/></highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cLine[511]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>check<sp/>that<sp/>line<sp/>contains<sp/>a<sp/>name<sp/>value<sp/>pair<sp/>and<sp/>is<sp/>not<sp/>a<sp/>comment,<sp/>or<sp/>section<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cLine[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"><sp/>||<sp/>cLine[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>||<sp/>strcspn(cLine,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pName<sp/>=<sp/>strtok(cLine,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!(pValue<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(pName,<sp/></highlight><highlight class="stringliteral">&quot;newAddressRecv&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgOptions.<ref refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" kindref="member">fNewAddressRecv</ref><sp/>=<sp/>(strcmp(pValue,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(pName,<sp/></highlight><highlight class="stringliteral">&quot;newAddressAnon&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgOptions.<ref refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" kindref="member">fNewAddressAnon</ref><sp/>=<sp/>(strcmp(pValue,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(pName,<sp/></highlight><highlight class="stringliteral">&quot;scanIncoming&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgOptions.<ref refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" kindref="member">fScanIncoming</ref><sp/>=<sp/>(strcmp(pValue,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(pName,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>sscanf(pValue,<sp/></highlight><highlight class="stringliteral">&quot;%64[^|]|%d|%d&quot;</highlight><highlight class="normal">,<sp/>cAddress,<sp/>&amp;addrRecv,<sp/>&amp;addrRecvAnon);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.push_back(<ref refid="class_sec_msg_address" kindref="compound">SecMsgAddress</ref>(std::string(cAddress),<sp/>addrRecv,<sp/>addrRecvAnon));</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>parse<sp/>key<sp/>line<sp/>%s,<sp/>rv<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>pValue,<sp/>rv);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>setting<sp/>name:<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">,<sp/>pName);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>%u<sp/>addresses.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.size());</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" kindref="member">SecureMsgWriteIni</ref>()</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgWriteIni()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>fullpath<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsg.ini~&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen(fullpath.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(</highlight><highlight class="stringliteral">&quot;[Options]\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>10,<sp/>fp)<sp/>!=<sp/>10)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fwrite<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;newAddressRecv=%s\n&quot;</highlight><highlight class="normal">,<sp/>smsgOptions.<ref refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" kindref="member">fNewAddressRecv</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;newAddressAnon=%s\n&quot;</highlight><highlight class="normal">,<sp/>smsgOptions.<ref refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" kindref="member">fNewAddressAnon</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;scanIncoming=%s\n&quot;</highlight><highlight class="normal">,<sp/>smsgOptions.<ref refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" kindref="member">fScanIncoming</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fprintf<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(</highlight><highlight class="stringliteral">&quot;\n[Keys]\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>8,<sp/>fp)<sp/>!=<sp/>8)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fwrite<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;SecMsgAddress&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;key=%s|%d|%d\n&quot;</highlight><highlight class="normal">,<sp/>it-&gt;sAddress.c_str(),<sp/>it-&gt;fReceiveEnabled,<sp/>it-&gt;fReceiveAnon)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fprintf<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>finalpath<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsg.ini&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::rename(fullpath,<sp/>finalpath);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>renaming<sp/>file<sp/>%s,<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fullpath.string().c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a4c2723040974201407c876e9365ed74c" kindref="member">SecureMsgStart</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDontStart,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fScanChain)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fDontStart)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Secure<sp/>messaging<sp/>not<sp/>started.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Secure<sp/>messaging<sp/>starting.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" kindref="member">SecureMsgReadIni</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>smsg.ini\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>address<sp/>keys<sp/>loaded.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1ab47945fac81152e28647920d324ec630" kindref="member">SecureMsgAddWalletAddresses</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>addresses<sp/>from<sp/>wallet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fScanChain)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" kindref="member">SecureMsgScanBlockChain</ref>();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" kindref="member">SecureMsgBuildBucketSet</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsg<sp/>could<sp/>not<sp/>load<sp/>bucket<sp/>sets,<sp/>secure<sp/>messaging<sp/>disabled.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.create_thread(boost::bind(&amp;<ref refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" kindref="member">TraceThread</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)()&gt;,<sp/></highlight><highlight class="stringliteral">&quot;smsg&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" kindref="member">ThreadSecureMsg</ref>));</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.create_thread(boost::bind(&amp;<ref refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" kindref="member">TraceThread</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)()&gt;,<sp/></highlight><highlight class="stringliteral">&quot;smsg-pow&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" kindref="member">ThreadSecureMsgPow</ref>));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a49c8b6520e51ba498f92accf33eb6c17" kindref="member">SecureMsgShutdown</ref>()</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stopping<sp/>secure<sp/>messaging.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" kindref="member">SecureMsgWriteIni</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>save<sp/>smsg.ini\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.interrupt_all();</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.join_all();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smsgDB)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" kindref="member">smsgDB</ref>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgDB<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170" refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a7e096c63f30bea527e14fef0e7cca460" kindref="member">SecureMsgEnable</ref>()</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>start<sp/>secure<sp/>messaging<sp/>at<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgEnable:<sp/>secure<sp/>messaging<sp/>is<sp/>already<sp/>enabled.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.clear();<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>empty<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" kindref="member">SecureMsgReadIni</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>smsg.ini\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>address<sp/>keys<sp/>loaded.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1ab47945fac81152e28647920d324ec630" kindref="member">SecureMsgAddWalletAddresses</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>addresses<sp/>from<sp/>wallet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.clear();<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>empty<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" kindref="member">SecureMsgBuildBucketSet</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgEnable:<sp/>could<sp/>not<sp/>load<sp/>bucket<sp/>sets,<sp/>secure<sp/>messaging<sp/>disabled.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>start<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.create_thread(boost::bind(&amp;<ref refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" kindref="member">TraceThread</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)()&gt;,<sp/></highlight><highlight class="stringliteral">&quot;smsg&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" kindref="member">ThreadSecureMsg</ref>));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.create_thread(boost::bind(&amp;<ref refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" kindref="member">TraceThread</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)()&gt;,<sp/></highlight><highlight class="stringliteral">&quot;smsg-pow&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" kindref="member">ThreadSecureMsgPow</ref>));</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(!NewThread(ThreadSecureMsg,<sp/>NULL)</highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!NewThread(ThreadSecureMsgPow,<sp/>NULL))</highlight></codeline>
<codeline lineno="1212"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;SecureMsgEnable<sp/>could<sp/>not<sp/>start<sp/>threads,<sp/>secure<sp/>messaging<sp/>disabled.\n&quot;);</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fSecMsgEnabled<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>ping<sp/>each<sp/>peer,<sp/>don&apos;t<sp/>know<sp/>which<sp/>have<sp/>messaging<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgPing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgPong&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Send<sp/>pong<sp/>as<sp/>have<sp/>missed<sp/>initial<sp/>ping<sp/>sent<sp/>by<sp/>peer<sp/>when<sp/>it<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_vNodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Secure<sp/>messaging<sp/>enabled.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231" refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a37253b307b8569fe0d8c3548c15e8e20" kindref="member">SecureMsgDisable</ref>()</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>stop<sp/>secure<sp/>messaging<sp/>at<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgDisable:<sp/>secure<sp/>messaging<sp/>is<sp/>already<sp/>disabled.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.interrupt_all();</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" kindref="member">threadGroupSmsg</ref>.join_all();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>clear<sp/>smsgBuckets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int64_t,<sp/>SecMsgBucket&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.begin();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second.setTokens.clear();</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.clear();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.clear();</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>tell<sp/>each<sp/>smsg<sp/>enabled<sp/>peer<sp/>that<sp/>this<sp/>node<sp/>is<sp/>disabling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pnode-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" kindref="member">fEnabled</ref>)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(pnode-&gt;<ref refid="class_c_node_1a79edcac83fc5067567c7b41c26fcc56f" kindref="member">cs_vSend</ref>,<sp/>pnode-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgDisabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" kindref="member">fEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_vNodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" kindref="member">SecureMsgWriteIni</ref>()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>save<sp/>smsg.ini\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>allow<sp/>time<sp/>for<sp/>threads<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(3000);<sp/></highlight><highlight class="comment">//<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>be<sp/>certain<sp/>that<sp/>threads<sp/>have<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smsgDB)</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" kindref="member">smsgDB</ref>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgDB<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Secure<sp/>messaging<sp/>disabled.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292" refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a10fcf201b1c7066a376692b50988cdbf" kindref="member">SecureMsgReceiveData</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::string<sp/>strCommand,<sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>vRecv)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Called<sp/>from<sp/>ProcessMessage</highlight></codeline>
<codeline lineno="1296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Runs<sp/>in<sp/>ThreadMessageHandler2</highlight></codeline>
<codeline lineno="1297"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgReceiveData()<sp/>%s<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>pfrom-&gt;<ref refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" kindref="member">addrName</ref>.c_str(),<sp/>strCommand.c_str());</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgInv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>enough<sp/>data<sp/>received<sp/>to<sp/>be<sp/>a<sp/>valid<sp/>smsgInv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now<sp/>&lt;<sp/>pfrom-&gt;smsgData.ignoreUntil)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Node<sp/>is<sp/>ignoring<sp/>peer<sp/>%d<sp/>until<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>pfrom-&gt;<ref refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" kindref="member">id</ref>,<sp/>pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a574e453a229ed2cbed30ca56727fa564" kindref="member">ignoreUntil</ref>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBuckets<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.size();</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nLocked<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no.<sp/>of<sp/>locked<sp/>buckets<sp/>on<sp/>this<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nInvBuckets;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no.<sp/>of<sp/>bucket<sp/>headers<sp/>sent<sp/>by<sp/>peer<sp/>in<sp/>smsgInv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;nInvBuckets,<sp/>&amp;vchData[0],<sp/>4);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Remote<sp/>node<sp/>sent<sp/>%d<sp/>bucket<sp/>headers,<sp/>this<sp/>has<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>nInvBuckets,<sp/>nBuckets);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>no<sp/>of<sp/>buckets:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nInvBuckets<sp/>&gt;<sp/>(<ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref><sp/>/<sp/><ref refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" kindref="member">SMSG_BUCKET_LEN</ref>)<sp/>+<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>some<sp/>leeway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Peer<sp/>sent<sp/>more<sp/>bucket<sp/>headers<sp/>than<sp/>possible<sp/>%u,<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>nInvBuckets,<sp/>(<ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref><sp/>/<sp/><ref refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" kindref="member">SMSG_BUCKET_LEN</ref>));</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>4<sp/>+<sp/>nInvBuckets*16)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Remote<sp/>node<sp/>did<sp/>not<sp/>send<sp/>enough<sp/>data.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchDataOut;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchDataOut.reserve(4<sp/>+<sp/>8<sp/>*<sp/>nInvBuckets);<sp/></highlight><highlight class="comment">//<sp/>reserve<sp/>max<sp/>possible<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchDataOut.resize(4);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nShowBuckets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*p<sp/>=<sp/>&amp;vchData[4];</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nInvBuckets;<sp/>++i)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>time;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>ncontent,<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;time,<sp/>p,<sp/>8);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;ncontent,<sp/>p+8,<sp/>4);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;hash,<sp/>p+12,<sp/>4);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>time<sp/>valid:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>interested<sp/>in<sp/>peer<sp/>bucket<sp/>%d,<sp/>has<sp/>expired.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref><sp/>-<sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref>)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&gt;<sp/>now<sp/>+<sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref>)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>interested<sp/>in<sp/>peer<sp/>bucket<sp/>%d,<sp/>in<sp/>the<sp/>future.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncontent<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Peer<sp/>sent<sp/>empty<sp/>bucket,<sp/>ignore<sp/>%d<sp/>%u<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>time,<sp/>ncontent,<sp/>hash);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;peer<sp/>bucket<sp/>%d<sp/>%u<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>time,<sp/>ncontent,<sp/>hash);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;this<sp/>bucket<sp/>%d<sp/>%u<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>time,<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].setTokens.size(),<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].hash);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockCount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Bucket<sp/>is<sp/>locked<sp/>%u,<sp/>waiting<sp/>for<sp/>peer<sp/>%u<sp/>to<sp/>send<sp/>data.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockCount,<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockPeerId);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLocked++;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>if<sp/>this<sp/>node<sp/>has<sp/>more<sp/>than<sp/>the<sp/>peer<sp/>node,<sp/>peer<sp/>node<sp/>will<sp/>pull<sp/>from<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>then<sp/>peer<sp/>node<sp/>has<sp/>more<sp/>this<sp/>node<sp/>will<sp/>pull<sp/>fom<sp/>peer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].setTokens.size()<sp/>&lt;<sp/>ncontent</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].setTokens.size()<sp/>==<sp/>ncontent</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].hash<sp/>!=<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>same<sp/>amount<sp/>in<sp/>buckets<sp/>check<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Requesting<sp/>contents<sp/>of<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>sz<sp/>=<sp/>vchDataOut.size();</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchDataOut.resize(sz<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchDataOut[sz],<sp/>&amp;time,<sp/>8);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nShowBuckets++;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>LOCK(cs_smsg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>should<sp/>include<sp/>hash?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchDataOut[0],<sp/>&amp;nShowBuckets,<sp/>4);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchDataOut.size()<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgShow&quot;</highlight><highlight class="normal">,<sp/>vchDataOut);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLocked<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>report<sp/>buckets<sp/>as<sp/>matched<sp/>if<sp/>any<sp/>are<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>peer<sp/>has<sp/>no<sp/>buckets<sp/>we<sp/>want,<sp/>don&apos;t<sp/>send<sp/>them<sp/>again<sp/>until<sp/>something<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>peer<sp/>will<sp/>still<sp/>request<sp/>buckets<sp/>from<sp/>this<sp/>node<sp/>if<sp/>needed<sp/>(&lt;<sp/>ncontent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchDataOut.resize(8);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchDataOut[0],<sp/>&amp;now,<sp/>8);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgMatch&quot;</highlight><highlight class="normal">,<sp/>vchDataOut);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Sending<sp/>smsgMatch,<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>now);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgShow&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBuckets;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;nBuckets,<sp/>&amp;vchData[0],<sp/>4);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>4<sp/>+<sp/>nBuckets<sp/>*<sp/>8)</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;smsgShow:<sp/>peer<sp/>wants<sp/>to<sp/>see<sp/>content<sp/>of<sp/>%u<sp/>buckets.\n&quot;</highlight><highlight class="normal">,<sp/>nBuckets);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int64_t,<sp/>SecMsgBucket&gt;::iterator<sp/>itb;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchDataOut;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>time;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>pIn<sp/>=<sp/>&amp;vchData[4];</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nBuckets;<sp/>++i,<sp/>pIn<sp/>+=<sp/>8)</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;time,<sp/>pIn,<sp/>8);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.find(time);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itb<sp/>==<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.end())</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>have<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;&amp;<sp/>tokenSet<sp/>=<sp/>(*itb).second.setTokens;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>vchDataOut.resize(8<sp/>+<sp/>16<sp/>*<sp/>tokenSet.size());<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;vchDataOut.resize<sp/>%u<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>8<sp/>+<sp/>16<sp/>*<sp/>tokenSet.size(),<sp/>e.what());</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchDataOut[0],<sp/>&amp;time,<sp/>8);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>p<sp/>=<sp/>&amp;vchDataOut[8];</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>tokenSet.begin();<sp/>it<sp/>!=<sp/>tokenSet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p,<sp/>&amp;it-&gt;timestamp,<sp/>8);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p+8,<sp/>&amp;it-&gt;sample,<sp/>8);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgHave&quot;</highlight><highlight class="normal">,<sp/>vchDataOut);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgHave&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>peer<sp/>has<sp/>these<sp/>messages<sp/>in<sp/>bucket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(vchData.size()<sp/>-<sp/>8)<sp/>/<sp/>16;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>time;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;time,<sp/>&amp;vchData[0],<sp/>8);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>time<sp/>valid:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>interested<sp/>in<sp/>peer<sp/>bucket<sp/>%d,<sp/>has<sp/>expired.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&gt;<sp/>now<sp/>+<sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref>)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>interested<sp/>in<sp/>peer<sp/>bucket<sp/>%d,<sp/>in<sp/>the<sp/>future.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchDataOut;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockCount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Bucket<sp/>%d<sp/>lock<sp/>count<sp/>%u,<sp/>waiting<sp/>for<sp/>message<sp/>data<sp/>from<sp/>peer<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>time,<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockCount,<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockPeerId);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Sifting<sp/>through<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchDataOut.resize(8);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchDataOut[0],<sp/>&amp;vchData[0],<sp/>8);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;&amp;<sp/>tokenSet<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].setTokens;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref><sp/>token;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>p<sp/>=<sp/>&amp;vchData[8];</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>,<sp/>p,<sp/>8);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;token.<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/>p+8,<sp/>8);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>tokenSet.find(token);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>tokenSet.end())</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nd<sp/>=<sp/>vchDataOut.size();</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchDataOut.resize(nd<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;vchDataOut.resize<sp/>%d<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>nd<sp/>+<sp/>16,<sp/>e.what());</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchDataOut[nd],<sp/>p,<sp/>16);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchDataOut.size()<sp/>&gt;<sp/>8)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Asking<sp/>peer<sp/>for<sp/>%u<sp/>messages.\n&quot;</highlight><highlight class="normal">,<sp/>(vchDataOut.size()<sp/>-<sp/>8)<sp/>/<sp/>16);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Locking<sp/>bucket<sp/>%u<sp/>for<sp/>peer<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>time,<sp/>pfrom-&gt;<ref refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockCount<sp/><sp/><sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>lock<sp/>this<sp/>bucket<sp/>for<sp/>at<sp/>most<sp/>3<sp/>*<sp/>SMSG_THREAD_DELAY<sp/>seconds,<sp/>unset<sp/>when<sp/>peer<sp/>sends<sp/>smsgMsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[time].nLockPeerId<sp/><sp/>=<sp/>pfrom-&gt;<ref refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgWant&quot;</highlight><highlight class="normal">,<sp/>vchDataOut);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgWant&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchOne;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchBunch;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchBunch.<ref refid="class_c_data_stream_1aa91abddde56127bd3d6ac2a0fb005874" kindref="member">resize</ref>(4+8);<sp/></highlight><highlight class="comment">//<sp/>nmessages<sp/>+<sp/>bucketTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(vchData.size()<sp/>-<sp/>8)<sp/>/<sp/>16;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>time;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBunch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;time,<sp/>&amp;vchData[0],<sp/>8);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int64_t,<sp/>SecMsgBucket&gt;::iterator<sp/>itb;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.find(time);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itb<sp/>==<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.end())</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>have<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;&amp;<sp/>tokenSet<sp/>=<sp/>itb-&gt;second.setTokens;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref><sp/>token;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>p<sp/>=<sp/>&amp;vchData[8];</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>,<sp/>p,<sp/>8);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;token.<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/>p+8,<sp/>8);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>tokenSet.find(token);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>tokenSet.end())</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>have<sp/>wanted<sp/>message<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;Have<sp/>message<sp/>at<sp/>%d.\n&quot;,<sp/>it-&gt;offset);<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token.<ref refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" kindref="member">offset</ref><sp/>=<sp/>it-&gt;offset;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;winb<sp/>before<sp/>SecureMsgRetrieve<sp/>%d.\n&quot;,<sp/>token.timestamp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>place<sp/>in<sp/>vchOne<sp/>so<sp/>if<sp/>SecureMsgRetrieve<sp/>fails<sp/>it<sp/>won&apos;t<sp/>corrupt<sp/>vchBunch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a9a34bfa72cc027350d71f9daaefb8fef" kindref="member">SecureMsgRetrieve</ref>(token,<sp/>vchOne)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBunch++;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchBunch.insert(vchBunch.end(),<sp/>vchOne.begin(),<sp/>vchOne.end());<sp/></highlight><highlight class="comment">//<sp/>append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgRetrieve<sp/>failed<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBunch<sp/>&gt;=<sp/>500</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>vchBunch.size()<sp/>&gt;=<sp/>96000)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Break<sp/>bunch<sp/>%u,<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>nBunch,<sp/>vchBunch.size());</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>end<sp/>here,<sp/>peer<sp/>will<sp/>send<sp/>more<sp/>want<sp/>messages<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>LOCK(cs_smsg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBunch<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Sending<sp/>block<sp/>of<sp/>%u<sp/>messages<sp/>for<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>nBunch,<sp/>time);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchBunch[0],<sp/>&amp;nBunch,<sp/>4);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchBunch[4],<sp/>&amp;time,<sp/>8);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgMsg&quot;</highlight><highlight class="normal">,<sp/>vchBunch);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgMsg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;smsgMsg<sp/>vchData.size()<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>vchData.size());</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a76ffa50f445c2a6089504aead1239e9f" kindref="member">SecureMsgReceive</ref>(pfrom,<sp/>vchData);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgMatch&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;smsgMatch,<sp/>not<sp/>enough<sp/>data<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>vchData.size());</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>time;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;time,<sp/>&amp;vchData[0],<sp/>8);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&gt;<sp/>now<sp/>+<sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref>)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>Peer<sp/>buckets<sp/>matched<sp/>in<sp/>the<sp/>future:<sp/>%d.\nEither<sp/>this<sp/>node<sp/>or<sp/>the<sp/>peer<sp/>node<sp/>has<sp/>the<sp/>incorrect<sp/>time<sp/>set.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Peer<sp/>match<sp/>time<sp/>set<sp/>to<sp/>now.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ac714be60c0566e644df2e0eb006a7817" kindref="member">lastMatched</ref><sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Peer<sp/>buckets<sp/>matched<sp/>at<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgPing&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>smsgPing<sp/>is<sp/>the<sp/>initial<sp/>message,<sp/>send<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgPong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgPong&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Peer<sp/>replied,<sp/>secure<sp/>messaging<sp/>enabled.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" kindref="member">fEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgDisabled&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>peer<sp/>has<sp/>disabled<sp/>secure<sp/>messaging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" kindref="member">fEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Peer<sp/>%d<sp/>has<sp/>disabled<sp/>secure<sp/>messaging.\n&quot;</highlight><highlight class="normal">,<sp/>pfrom-&gt;<ref refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smsgIgnore&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>peer<sp/>is<sp/>reporting<sp/>that<sp/>it<sp/>will<sp/>ignore<sp/>this<sp/>node<sp/>until<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Ignore<sp/>peer<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;smsgIgnore,<sp/>not<sp/>enough<sp/>data<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>vchData.size());</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>time;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;time,<sp/>&amp;vchData[0],<sp/>8);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a574e453a229ed2cbed30ca56727fa564" kindref="member">ignoreUntil</ref><sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Peer<sp/>%d<sp/>is<sp/>ignoring<sp/>this<sp/>node<sp/>until<sp/>%d,<sp/>ignore<sp/>peer<sp/>too.\n&quot;</highlight><highlight class="normal">,<sp/>pfrom-&gt;<ref refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" kindref="member">id</ref>,<sp/>time);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unknown<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783" refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1abb934a23a076a4af443e2fb0610d7833" kindref="member">SecureMsgSendData</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pto,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSendTrickle)</highlight></codeline>
<codeline lineno="1784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Called<sp/>from<sp/>ProcessMessage</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Runs<sp/>in<sp/>ThreadMessageHandler2</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" kindref="member">cs_smsg_net</ref>);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;SecureMsgSendData()<sp/>%s.\n&quot;,<sp/>pto-&gt;addrName.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a3a2e08f929788ebfb517218788e29836" kindref="member">lastSeen</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>first<sp/>contact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSendData()<sp/>new<sp/>node<sp/>%s,<sp/>peer<sp/>id<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>pto-&gt;<ref refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" kindref="member">addrName</ref>.c_str(),<sp/>pto-&gt;<ref refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Send<sp/>smsgPing<sp/>once,<sp/>do<sp/>nothing<sp/>until<sp/>receive<sp/>1st<sp/>smsgPong<sp/>(then<sp/>set<sp/>fEnabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pto-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgPing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a3a2e08f929788ebfb517218788e29836" kindref="member">lastSeen</ref><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" kindref="member">fEnabled</ref></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>now<sp/>-<sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a3a2e08f929788ebfb517218788e29836" kindref="member">lastSeen</ref><sp/>&lt;<sp/><ref refid="smessage_8h_1a58ba0f46d3e1d728616c6259c3069db9" kindref="member">SMSG_SEND_DELAY</ref></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>now<sp/>&lt;<sp/>pto-&gt;smsgData.ignoreUntil)</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>When<sp/>nWakeCounter<sp/>==<sp/>0,<sp/>resend<sp/>bucket<sp/>inventory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a72aad5e6551e9c79fac326a2a2806844" kindref="member">nWakeCounter</ref><sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ac714be60c0566e644df2e0eb006a7817" kindref="member">lastMatched</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a72aad5e6551e9c79fac326a2a2806844" kindref="member">nWakeCounter</ref><sp/>=<sp/>10<sp/>+<sp/><ref refid="util_8cpp_1a0e44e088732172da6662db2d5e37d4b2" kindref="member">GetRandInt</ref>(300);<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>a<sp/>random<sp/>time<sp/>between<sp/>[10,<sp/>300]<sp/>*<sp/>SMSG_SEND_DELAY<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSendData():<sp/>nWakeCounter<sp/>expired,<sp/>sending<sp/>bucket<sp/>inventory<sp/>to<sp/>%s.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Now<sp/>%d<sp/>next<sp/>wake<sp/>counter<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pto-&gt;<ref refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" kindref="member">addrName</ref>.c_str(),<sp/>now,<sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a72aad5e6551e9c79fac326a2a2806844" kindref="member">nWakeCounter</ref>);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a72aad5e6551e9c79fac326a2a2806844" kindref="member">nWakeCounter</ref>--;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int64_t,<sp/>SecMsgBucket&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBuckets<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.size();</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBuckets<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>send<sp/>keep<sp/>alive<sp/>pkts,<sp/>coin<sp/>messages<sp/>already<sp/>do<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>reserve?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchData.reserve(4<sp/>+<sp/>nBuckets*16);<sp/></highlight><highlight class="comment">//<sp/>timestamp<sp/>+<sp/>size<sp/>+<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBucketsShown<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchData.resize(4);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>p<sp/>=<sp/>&amp;vchData[4];</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket" kindref="compound">SecMsgBucket</ref><sp/>&amp;bkt<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nMessages<sp/>=<sp/>bkt.<ref refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" kindref="member">setTokens</ref>.size();</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bkt.<ref refid="class_sec_msg_bucket_1a77b045448af083e17a200f042c6d9331" kindref="member">timeChanged</ref><sp/>&lt;<sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1ac714be60c0566e644df2e0eb006a7817" kindref="member">lastMatched</ref><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>peer<sp/>has<sp/>this<sp/>bucket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>nMessages<sp/>&lt;<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>bucket<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>bkt.<ref refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>vchData.resize(vchData.size()<sp/>+<sp/>16);<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;vchData.resize<sp/>%u<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>vchData.size()<sp/>+<sp/>16,<sp/>e.what());</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p,<sp/>&amp;it-&gt;first,<sp/>8);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p+8,<sp/>&amp;nMessages,<sp/>4);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p+12,<sp/>&amp;hash,<sp/>4);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBucketsShown++;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(fDebug)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>LogPrintf(&quot;Sending<sp/>bucket<sp/>%d,<sp/>size<sp/>%d<sp/>\n&quot;,<sp/>it-&gt;first,<sp/>it-&gt;second.size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchData[0],<sp/>&amp;nBucketsShown,<sp/>4);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Sending<sp/>%d<sp/>bucket<sp/>headers.\n&quot;</highlight><highlight class="normal">,<sp/>nBucketsShown);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pto-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;smsgInv&quot;</highlight><highlight class="normal">,<sp/>vchData);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>pto-&gt;<ref refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" kindref="member">smsgData</ref>.<ref refid="class_sec_msg_node_1a3a2e08f929788ebfb517218788e29836" kindref="member">lastSeen</ref><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" kindref="member">SecureMsgInsertAddress</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>hashKey,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubKey,<sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref>&amp;<sp/>addrpkdb)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>insert<sp/>key<sp/>hash<sp/>and<sp/>public<sp/>key<sp/>to<sp/>addressdb</highlight></codeline>
<codeline lineno="1888"><highlight class="comment"></highlight></codeline>
<codeline lineno="1889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>have<sp/>LOCK(cs_smsg)<sp/>where<sp/>db<sp/>is<sp/>opened</highlight></codeline>
<codeline lineno="1890"><highlight class="comment"></highlight></codeline>
<codeline lineno="1891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="1892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>success</highlight></codeline>
<codeline lineno="1893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>error</highlight></codeline>
<codeline lineno="1894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>address<sp/>is<sp/>already<sp/>in<sp/>db</highlight></codeline>
<codeline lineno="1895"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addrpkdb.<ref refid="class_sec_msg_d_b_1ad039b1d29fc0e82695d3bd30087765b9" kindref="member">ExistsPK</ref>(hashKey))</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;DB<sp/>already<sp/>contains<sp/>public<sp/>key<sp/>for<sp/>address.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkCheck;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrpkdb.<ref refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" kindref="member">ReadPK</ref>(hashKey,<sp/>cpkCheck))</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;addrpkdb.Read<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpkCheck<sp/>!=<sp/>pubKey)</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DB<sp/>already<sp/>contains<sp/>existing<sp/>public<sp/>key<sp/>that<sp/>does<sp/>not<sp/>match<sp/>.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrpkdb.<ref refid="class_sec_msg_d_b_1a77131fcd232e503a57ab8569d3ab9fd8" kindref="member">WritePK</ref>(hashKey,<sp/>pubKey))</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Write<sp/>pair<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922" refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" kindref="member">SecureMsgInsertAddress</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>hashKey,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubKey)</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>addrpkdb;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrpkdb.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;cr+&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/><ref refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" kindref="member">SecureMsgInsertAddress</ref>(hashKey,<sp/>pubKey,<sp/>addrpkdb);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ScanBlock(<ref refid="class_c_block" kindref="compound">CBlock</ref>&amp;<sp/><ref refid="structblock__" kindref="compound">block</ref>,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref>&amp;<sp/>addrpkdb,</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>&amp;<sp/>nTransactions,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>&amp;<sp/>nElements,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>&amp;<sp/>nPubkeys,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>&amp;<sp/>nDuplicates)</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="script_8h_1a893ae190c4461e89b01441657f8975ed" kindref="member">valtype</ref><sp/>vch;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bd" kindref="member">opcodetype</ref><sp/>opcode;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>only<sp/>scan<sp/>inputs<sp/>of<sp/>standard<sp/>txns<sp/>and<sp/>coinstakes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/>block.<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>)</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sReason;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>harvest<sp/>public<sp/>keys<sp/>from<sp/>coinstake<sp/>txns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx.<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>())</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>txout<sp/>=<sp/>tx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1];</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CScript::const_iterator<sp/>pc<sp/>=<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.begin();</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pc<sp/>&lt;<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.end())</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(pc,<sp/>opcode,<sp/>vch))</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vch.size()<sp/>==<sp/>33)<sp/></highlight><highlight class="comment">//<sp/>pubkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKey(vch);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pubKey.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>()</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!pubKey.<ref refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" kindref="member">IsCompressed</ref>())</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Public<sp/>key<sp/>is<sp/>invalid<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(pubKey).c_str());</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>addrKey<sp/>=<sp/>pubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" kindref="member">SecureMsgInsertAddress</ref>(addrKey,<sp/>pubKey,<sp/>addrpkdb))</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>nPubkeys++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>nDuplicates++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplicate<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements++;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1acd163a09d0e4384ebe85dead57730dd7" kindref="member">IsStandardTx</ref>(tx,<sp/>sReason))</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>*script<sp/>=<sp/>&amp;tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[i].scriptSig;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CScript::const_iterator<sp/>pc<sp/>=<sp/>script-&gt;begin();</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CScript::const_iterator<sp/>pend<sp/>=<sp/>script-&gt;end();</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>prevoutHash;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pc<sp/>&lt;<sp/>pend)</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!script-&gt;<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(pc,<sp/>opcode,<sp/>vch))</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>opcode<sp/>is<sp/>the<sp/>length<sp/>of<sp/>the<sp/>following<sp/>data,<sp/>compressed<sp/>public<sp/>key<sp/>is<sp/>always<sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/>33)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKey(vch);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pubKey.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>()</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!pubKey.<ref refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" kindref="member">IsCompressed</ref>())</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Public<sp/>key<sp/>is<sp/>invalid<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(pubKey).c_str());</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>addrKey<sp/>=<sp/>pubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" kindref="member">SecureMsgInsertAddress</ref>(addrKey,<sp/>pubKey,<sp/>addrpkdb))</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>nPubkeys++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>nDuplicates++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplicate<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;opcode<sp/>%d,<sp/>%s,<sp/>value<sp/>%s.\n&quot;,<sp/>opcode,<sp/>GetOpName(opcode),<sp/>ValueString(vch).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements++;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactions++;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTransactions<sp/>%<sp/>10000<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>for<sp/>ScanChainForPublicKeys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Scanning<sp/>transaction<sp/>no.<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>nTransactions);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037" refid="smessage_8h_1a9bd026d2eb7c6dee89c539e99ecac49f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a9bd026d2eb7c6dee89c539e99ecac49f" kindref="member">SecureMsgScanBlock</ref>(<ref refid="class_c_block" kindref="compound">CBlock</ref>&amp;<sp/>block)</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>scan<sp/>block<sp/>for<sp/>public<sp/>key<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!smsgOptions.<ref refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" kindref="member">fScanIncoming</ref>)</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgScanBlock().\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nTransactions<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nElements<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPubkeys<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nDuplicates<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>addrpkdb;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrpkdb.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;cw&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!addrpkdb.<ref refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" kindref="member">TxnBegin</ref>())</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScanBlock(block,<sp/>txdb,<sp/>addrpkdb,</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactions,<sp/>nElements,<sp/>nPubkeys,<sp/>nDuplicates);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addrpkdb.<ref refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" kindref="member">TxnCommit</ref>();</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsgDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>%u<sp/>transactions,<sp/>%u<sp/>elements,<sp/>%u<sp/>new<sp/>public<sp/>keys,<sp/>%u<sp/>duplicates.\n&quot;</highlight><highlight class="normal">,<sp/>nTransactions,<sp/>nElements,<sp/>nPubkeys,<sp/>nDuplicates);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073" refid="smessage_8h_1a440b38f2f513f80283993a2d81e908b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a440b38f2f513f80283993a2d81e908b5" kindref="member">ScanChainForPublicKeys</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexStart)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Scanning<sp/>block<sp/>chain<sp/>for<sp/>public<sp/>keys.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;From<sp/>height<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>pindexStart-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>public<sp/>keys<sp/>are<sp/>in<sp/>txin.scriptSig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>matching<sp/>addresses<sp/>are<sp/>in<sp/>scriptPubKey<sp/>of<sp/>txin&apos;s<sp/>referenced<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBlocks<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nTransactions<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nInputs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPubkeys<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nDuplicates<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>addrpkdb;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrpkdb.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;cw&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!addrpkdb.<ref refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" kindref="member">TxnBegin</ref>())</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex<sp/>=<sp/>pindexStart;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pindex)</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlocks++;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(pindex,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScanBlock(block,<sp/>txdb,<sp/>addrpkdb,</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactions,<sp/>nInputs,<sp/>nPubkeys,<sp/>nDuplicates);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" kindref="member">pnext</ref>;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addrpkdb.<ref refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" kindref="member">TxnCommit</ref>();</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsgDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Scanned<sp/>%u<sp/>blocks,<sp/>%u<sp/>transactions,<sp/>%u<sp/>inputs\n&quot;</highlight><highlight class="normal">,<sp/>nBlocks,<sp/>nTransactions,<sp/>nInputs);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>%u<sp/>public<sp/>keys,<sp/>%u<sp/>duplicates.\n&quot;</highlight><highlight class="normal">,<sp/>nPubkeys,<sp/>nDuplicates);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Took<sp/>%d<sp/>ms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123" refid="smessage_8h_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" kindref="member">SecureMsgScanBlockChain</ref>()</highlight></codeline>
<codeline lineno="2124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>lockMain);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lockMain)</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*pindexScan<sp/>=<sp/><ref refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" kindref="member">pindexGenesisBlock</ref>;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindexScan<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pindexGenesisBlock<sp/>not<sp/>set.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>--<sp/>in<sp/>try<sp/>to<sp/>catch<sp/>errors<sp/>opening<sp/>db,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a440b38f2f513f80283993a2d81e908b5" kindref="member">ScanChainForPublicKeys</ref>(pindexScan))</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ScanChainForPublicKeys()<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ScanChainForPublicKeys()<sp/>Could<sp/>not<sp/>lock<sp/>main.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153" refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1ae6a19a8d011fefc72c9cab3d0df014bd" kindref="member">SecureMsgScanBuckets</ref>()</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgScanBuckets()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/>mStart<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/>now<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nFiles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nMessages<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nFoundMessages<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>pathSmsgDir<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::directory_iterator<sp/>itend;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::exists(pathSmsgDir)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!fs::is_directory(pathSmsgDir))</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>store<sp/>directory<sp/>does<sp/>not<sp/>exist.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>smsg;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fs::directory_iterator<sp/>itd(pathSmsgDir)<sp/>;<sp/>itd<sp/>!=<sp/>itend<sp/>;<sp/>++itd)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::is_regular_file(itd-&gt;status()))</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fileType<sp/>=<sp/>(*itd).path().extension().string();</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileType.compare(</highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>(*itd).path().filename().string();</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Processing<sp/>file:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFiles++;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>files<sp/>must<sp/>be<sp/>split<sp/>if<sp/>&gt;<sp/>2GB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time_noFile.dat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sep<sp/>=<sp/>fileName.find_first_of(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sep<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>stime<sp/>=<sp/>fileName.substr(0,<sp/>sep);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>fileTime<sp/>=<sp/>boost::lexical_cast&lt;<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>&gt;(stime);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileTime<sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Dropping<sp/>file<sp/>%s,<sp/>expired.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::remove((*itd).path());</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>bucket<sp/>file<sp/>%s,<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::algorithm::ends_with(fileName,<sp/></highlight><highlight class="stringliteral">&quot;_wl.dat&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>wallet<sp/>locked<sp/>file:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen((*itd).path().string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>)</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>header<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;End<sp/>of<sp/>file.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>vchData.resize(smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>);<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgWalletUnlocked():<sp/>Could<sp/>not<sp/>resize<sp/>vchData,<sp/>%u,<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>e.what());</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;vchData[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>fp)<sp/>!=<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>)</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>data<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>don&apos;t<sp/>report<sp/>to<sp/>gui,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" kindref="member">SecureMsgScanMessage</ref>(&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/>&amp;vchData[0],<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFoundMessages++;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SecureMsgScanMessage<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMessages<sp/>++;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>remove<sp/>wl<sp/>file<sp/>when<sp/>scanned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::remove((*itd).path());</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>wl<sp/>file<sp/>%s<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Processed<sp/>%u<sp/>files,<sp/>scanned<sp/>%u<sp/>messages,<sp/>received<sp/>%u<sp/>messages.\n&quot;</highlight><highlight class="normal">,<sp/>nFiles,<sp/>nMessages,<sp/>nFoundMessages);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Took<sp/>%d<sp/>ms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>mStart);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301" refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1adf0fa2a06615363dc3ea6360be0939ec" kindref="member">SecureMsgWalletUnlocked</ref>()</highlight></codeline>
<codeline lineno="2302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"><sp/><sp/><sp/><sp/>When<sp/>the<sp/>wallet<sp/>is<sp/>unlocked,<sp/>scan<sp/>messages<sp/>received<sp/>while<sp/>wallet<sp/>was<sp/>locked.</highlight></codeline>
<codeline lineno="2305"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgWalletUnlocked()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Wallet<sp/>is<sp/>locked.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/>now<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nFiles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nMessages<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nFoundMessages<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>pathSmsgDir<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::directory_iterator<sp/>itend;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::exists(pathSmsgDir)</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!fs::is_directory(pathSmsgDir))</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>store<sp/>directory<sp/>does<sp/>not<sp/>exist.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>smsg;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fs::directory_iterator<sp/>itd(pathSmsgDir)<sp/>;<sp/>itd<sp/>!=<sp/>itend<sp/>;<sp/>++itd)</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::is_regular_file(itd-&gt;status()))</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>(*itd).path().filename().string();</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!boost::algorithm::ends_with(fileName,<sp/></highlight><highlight class="stringliteral">&quot;_wl.dat&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Processing<sp/>file:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFiles++;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>files<sp/>must<sp/>be<sp/>split<sp/>if<sp/>&gt;<sp/>2GB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time_noFile_wl.dat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sep<sp/>=<sp/>fileName.find_first_of(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sep<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>stime<sp/>=<sp/>fileName.substr(0,<sp/>sep);</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>fileTime<sp/>=<sp/>boost::lexical_cast&lt;<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>&gt;(stime);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileTime<sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Dropping<sp/>wallet<sp/>locked<sp/>file<sp/>%s,<sp/>expired.\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::remove((*itd).path());</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>wl<sp/>file<sp/>%s<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen((*itd).path().string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>header<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;End<sp/>of<sp/>file.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>vchData.resize(smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>);<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgWalletUnlocked():<sp/>Could<sp/>not<sp/>resize<sp/>vchData,<sp/>%u,<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>e.what());</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;vchData[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>fp)<sp/>!=<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>)</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>data<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>don&apos;t<sp/>report<sp/>to<sp/>gui,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" kindref="member">SecureMsgScanMessage</ref>(&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/>&amp;vchData[0],<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFoundMessages++;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SecureMsgScanMessage<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMessages<sp/>++;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>remove<sp/>wl<sp/>file<sp/>when<sp/>scanned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::remove((*itd).path());</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>wl<sp/>file<sp/>%s<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Processed<sp/>%u<sp/>files,<sp/>scanned<sp/>%u<sp/>messages,<sp/>received<sp/>%u<sp/>messages.\n&quot;</highlight><highlight class="normal">,<sp/>nFiles,<sp/>nMessages,<sp/>nFoundMessages);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>notify<sp/>gui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1ac81e578e38c2f309e808d36f4c36dc62" kindref="member">NotifySecMsgWalletUnlocked</ref>();</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight></codeline>
<codeline lineno="2446" refid="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a2a1e22a7c3bbeb96983dc3f28407657e" kindref="member">SecureMsgWalletKeyChanged</ref>(std::string<sp/>sAddress,<sp/>std::string<sp/>sLabel,<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969" kindref="member">ChangeType</ref><sp/>mode)</highlight></codeline>
<codeline lineno="2447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgWalletKeyChanged()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>default<sp/>recv<sp/>and<sp/>recvAnon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mode)</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" kindref="member">CT_NEW</ref>:</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.push_back(<ref refid="class_sec_msg_address" kindref="compound">SecMsgAddress</ref>(sAddress,<sp/>smsgOptions.<ref refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" kindref="member">fNewAddressRecv</ref>,<sp/>smsgOptions.<ref refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" kindref="member">fNewAddressAnon</ref>));</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a6aa8d1cd0da86fe8886e3a5c47f194ef" kindref="member">CT_DELETED</ref>:</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;SecMsgAddress&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sAddress<sp/>!=<sp/>it-&gt;sAddress)</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.erase(it);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482" refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" kindref="member">SecureMsgScanMessage</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reportToGui)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2485"><highlight class="comment"><sp/><sp/><sp/><sp/>Check<sp/>if<sp/>message<sp/>belongs<sp/>to<sp/>this<sp/>node.</highlight></codeline>
<codeline lineno="2486"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>so<sp/>add<sp/>to<sp/>inbox<sp/>db.</highlight></codeline>
<codeline lineno="2487"><highlight class="comment"></highlight></codeline>
<codeline lineno="2488"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>!reportToGui<sp/>don&apos;t<sp/>fire<sp/>NotifySecMsgInboxChanged</highlight></codeline>
<codeline lineno="2489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>loads<sp/>messages<sp/>received<sp/>when<sp/>wallet<sp/>locked<sp/>in<sp/>bulk.</highlight></codeline>
<codeline lineno="2490"><highlight class="comment"></highlight></codeline>
<codeline lineno="2491"><highlight class="comment"><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="2492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>success,</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>error</highlight></codeline>
<codeline lineno="2494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>no<sp/>match</highlight></codeline>
<codeline lineno="2495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>wallet<sp/>is<sp/>locked<sp/>-<sp/>message<sp/>stored<sp/>for<sp/>scanning<sp/>later.</highlight></codeline>
<codeline lineno="2496"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgScanMessage()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ScanMessage:<sp/>Wallet<sp/>is<sp/>locked,<sp/>storing<sp/>message<sp/>to<sp/>scan<sp/>later.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/><ref refid="smessage_8cpp_1abdde7d50a54a2f54a3aea64c47af535a" kindref="member">SecureMsgStoreUnscanned</ref>(pHeader,<sp/>pPayload,<sp/>nPayload))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>addressTo;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_message_data" kindref="compound">MessageData</ref><sp/>msg;<sp/></highlight><highlight class="comment">//<sp/>placeholder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOwnMessage<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;SecMsgAddress&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it-&gt;fReceiveEnabled)</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddress(it-&gt;sAddress);</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addressTo<sp/>=<sp/>coinAddress.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it-&gt;fReceiveAnon)</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>have<sp/>to<sp/>do<sp/>full<sp/>decrypt<sp/>to<sp/>see<sp/>address<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" kindref="member">SecureMsgDecrypt</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>addressTo,<sp/>pHeader,<sp/>pPayload,<sp/>nPayload,<sp/>msg)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Decrypted<sp/>message<sp/>with<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>addressTo.c_str());</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.<ref refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" kindref="member">sFromAddress</ref>.compare(</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fOwnMessage<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" kindref="member">SecureMsgDecrypt</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>addressTo,<sp/>pHeader,<sp/>pPayload,<sp/>nPayload,<sp/>msg)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Decrypted<sp/>message<sp/>with<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>addressTo.c_str());</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fOwnMessage<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOwnMessage)</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>save<sp/>to<sp/>inbox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*<sp/>psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>pHeader;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sPrefix(</highlight><highlight class="stringliteral">&quot;im&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>chKey[18];</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[0],<sp/><sp/>sPrefix.data(),<sp/><sp/><sp/><sp/>2);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[2],<sp/><sp/>&amp;psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[10],<sp/>pPayload,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref><sp/>smsgInbox;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgInbox.<ref refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" kindref="member">timeReceived</ref><sp/><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgInbox.<ref refid="class_sec_msg_stored_1a63b5b4cfb96450a5c170981e108315fe" kindref="member">status</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="smessage_8h_1a67801d51a4169b62fe9f323c04ad928a" kindref="member">SMSG_MASK_UNREAD</ref>)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgInbox.<ref refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" kindref="member">sAddrTo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>addressTo;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>data<sp/>may<sp/>not<sp/>be<sp/>contiguous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgInbox.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>.resize(<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/>+<sp/>nPayload);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgScanMessage():<sp/>Could<sp/>not<sp/>resize<sp/>vchData,<sp/>%u,<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/>+<sp/>nPayload,<sp/>e.what());</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;smsgInbox.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[0],<sp/>pHeader,<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;smsgInbox.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>],<sp/>pPayload,<sp/>nPayload);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>dbInbox;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbInbox.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;cw&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbInbox.<ref refid="class_sec_msg_d_b_1ad9869377019ded94b70a3c4a9ba2afb0" kindref="member">ExistsSmesg</ref>(chKey))</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>already<sp/>exists<sp/>in<sp/>inbox<sp/>db.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbInbox.<ref refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" kindref="member">WriteSmesg</ref>(chKey,<sp/>smsgInbox);</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reportToGui)</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a93126f5e674af8370c3f10f3f8de8a37" kindref="member">NotifySecMsgInboxChanged</ref>(smsgInbox);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsg<sp/>saved<sp/>to<sp/>inbox,<sp/>received<sp/>with<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>addressTo.c_str());</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsgDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601" refid="smessage_8h_1a430258e823bdead36f823a51fd6a4510" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" kindref="member">SecureMsgGetLocalKey</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>ckid,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>cpkOut)</highlight></codeline>
<codeline lineno="2602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgGetLocalKey()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1abd897aff07ec5679235b14cb4485dc37" kindref="member">GetPubKey</ref>(ckid,<sp/>cpkOut))</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkOut.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>()</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!cpkOut.<ref refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" kindref="member">IsCompressed</ref>())</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Public<sp/>key<sp/>is<sp/>invalid<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(cpkOut).c_str());</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619" refid="smessage_8h_1a6dadcd107f4196325fd1b0841dbffd2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a6dadcd107f4196325fd1b0841dbffd2a" kindref="member">SecureMsgGetLocalPublicKey</ref>(std::string&amp;<sp/>strAddress,<sp/>std::string&amp;<sp/>strPublicKey)</highlight></codeline>
<codeline lineno="2620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>returns</highlight></codeline>
<codeline lineno="2622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>success,</highlight></codeline>
<codeline lineno="2623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>error</highlight></codeline>
<codeline lineno="2624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>invalid<sp/>address</highlight></codeline>
<codeline lineno="2625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>address<sp/>does<sp/>not<sp/>refer<sp/>to<sp/>a<sp/>key</highlight></codeline>
<codeline lineno="2626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>address<sp/>not<sp/>in<sp/>wallet</highlight></codeline>
<codeline lineno="2627"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(fDebugSmsg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>LogPrintf(&quot;SecureMsgGetLocalPublicKey().\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!address.<ref refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" kindref="member">SetString</ref>(strAddress))</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>coin<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>keyID;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!address.<ref refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" kindref="member">GetKeyID</ref>(keyID))</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKey;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/><ref refid="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" kindref="member">SecureMsgGetLocalKey</ref>(keyID,<sp/>pubKey))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/>strPublicKey<sp/>=<sp/><ref refid="base58_8cpp_1a8d6f0e9d5df175b4966dcede31dc90ad" kindref="member">EncodeBase58</ref>(pubKey.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/>pubKey.<ref refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649" refid="smessage_8h_1a1341706507a851babcff6ce436b8ce2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a1341706507a851babcff6ce436b8ce2d" kindref="member">SecureMsgGetStoredKey</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>ckid,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>cpkOut)</highlight></codeline>
<codeline lineno="2650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>returns</highlight></codeline>
<codeline lineno="2652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>success,</highlight></codeline>
<codeline lineno="2653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>error</highlight></codeline>
<codeline lineno="2654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>public<sp/>key<sp/>not<sp/>in<sp/>database</highlight></codeline>
<codeline lineno="2655"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgGetStoredKey().\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>addrpkdb;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrpkdb.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrpkdb.<ref refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" kindref="member">ReadPK</ref>(ckid,<sp/>cpkOut))</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;addrpkdb.Read<sp/>failed:<sp/>%s.\n&quot;,<sp/>coinAddress.ToString().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsgDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676" refid="smessage_8h_1a7d84ccbc16eb3d679638ba37b822a5e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a7d84ccbc16eb3d679638ba37b822a5e2" kindref="member">SecureMsgAddAddress</ref>(std::string&amp;<sp/>address,<sp/>std::string&amp;<sp/>publicKey)</highlight></codeline>
<codeline lineno="2677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add<sp/>address<sp/>and<sp/>matching<sp/>public<sp/>key<sp/>to<sp/>the<sp/>database</highlight></codeline>
<codeline lineno="2680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address<sp/>and<sp/>publicKey<sp/>are<sp/>in<sp/>base58</highlight></codeline>
<codeline lineno="2681"><highlight class="comment"></highlight></codeline>
<codeline lineno="2682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="2683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>success</highlight></codeline>
<codeline lineno="2684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>error</highlight></codeline>
<codeline lineno="2685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>publicKey<sp/>is<sp/>invalid</highlight></codeline>
<codeline lineno="2686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>publicKey<sp/>!=<sp/>address</highlight></codeline>
<codeline lineno="2687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>address<sp/>is<sp/>already<sp/>in<sp/>db</highlight></codeline>
<codeline lineno="2688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/>address<sp/>is<sp/>invalid</highlight></codeline>
<codeline lineno="2689"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddress(address);</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddress.<ref refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>-<sp/>Address<sp/>is<sp/>not<sp/>valid:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>address.c_str());</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>hashKey;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddress.<ref refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" kindref="member">GetKeyID</ref>(hashKey))</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>-<sp/>coinAddress.GetKeyID<sp/>failed:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>coinAddress.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchTest;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base58_8cpp_1a0f74d1d6e7e982cad4b0e538acea4538" kindref="member">DecodeBase58</ref>(publicKey,<sp/>vchTest);</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKey(vchTest);</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>check<sp/>that<sp/>public<sp/>key<sp/>matches<sp/>address<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKeyT(pubKey);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pubKeyT.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>-<sp/>Invalid<sp/>PubKey.\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>keyIDT<sp/>=<sp/>pubKeyT.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>addressT(keyIDT);</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addressT.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().compare(address)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>-<sp/>Public<sp/>key<sp/>does<sp/>not<sp/>hash<sp/>to<sp/>address,<sp/>addressT<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>addressT.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" kindref="member">SecureMsgInsertAddress</ref>(hashKey,<sp/>pubKey);</highlight></codeline>
<codeline lineno="2729"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731" refid="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a9a34bfa72cc027350d71f9daaefb8fef" kindref="member">SecureMsgRetrieve</ref>(<ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref><sp/>&amp;token,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchData)</highlight></codeline>
<codeline lineno="2732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgRetrieve()<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>has<sp/>cs_smsg<sp/>lock<sp/>from<sp/>SecureMsgReceiveData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>pathSmsgDir<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;token.offset<sp/>%d.\n&quot;,<sp/>token.offset);<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>bucket<sp/>=<sp/>token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref><sp/>-<sp/>(token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref><sp/>%<sp/><ref refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" kindref="member">SMSG_BUCKET_LEN</ref>);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>boost::lexical_cast&lt;std::string&gt;(bucket)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_01.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>fullpath<sp/>=<sp/>pathSmsgDir<sp/>/<sp/>fileName;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;bucket<sp/>%d.\n&quot;,<sp/>bucket);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;bucket<sp/>d<sp/>%d.\n&quot;,<sp/>bucket);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;fileName<sp/>%s.\n&quot;,<sp/>fileName.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen(fullpath.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file:<sp/>%s\nPath<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno),<sp/>fullpath.string().c_str());</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(fp,<sp/>token.<ref refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" kindref="member">offset</ref>,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fseek,<sp/>strerror:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>smsg;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>)</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>header<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchData.resize(SMSG_HDR_LEN<sp/>+<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgRetrieve():<sp/>Could<sp/>not<sp/>resize<sp/>vchData,<sp/>%u,<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>SMSG_HDR_LEN<sp/>+<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>e.what());</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;vchData[0],<sp/>&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/>SMSG_HDR_LEN);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;vchData[SMSG_HDR_LEN],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>fp)<sp/>!=<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>)</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fread<sp/>data<sp/>failed:<sp/>%s.<sp/>Wanted<sp/>%u<sp/>bytes.\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno),<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>);</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight></codeline>
<codeline lineno="2796" refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a76ffa50f445c2a6089504aead1239e9f" kindref="member">SecureMsgReceive</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchData)</highlight></codeline>
<codeline lineno="2797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgReceive().\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>&lt;<sp/>12)<sp/></highlight><highlight class="comment">//<sp/>nBunch4<sp/>+<sp/>timestamp8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>not<sp/>enough<sp/>data.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBunch;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>bktTime;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;nBunch,<sp/>&amp;vchData[0],<sp/>4);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;bktTime,<sp/>&amp;vchData[4],<sp/>8);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>check<sp/>bktTime<sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>bucket<sp/>may<sp/>not<sp/>exist<sp/>yet<sp/>-<sp/>will<sp/>be<sp/>created<sp/>when<sp/>messages<sp/>are<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bktTime<sp/>&gt;<sp/>now<sp/>+<sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref>)</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;bktTime<sp/>&gt;<sp/>now.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>misbehave?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bktTime<sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;bktTime<sp/>&lt;<sp/>now<sp/>-<sp/>SMSG_RETENTION.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>misbehave?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int64_t,<sp/>SecMsgBucket&gt;::iterator<sp/>itb;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBunch<sp/>==<sp/>0<sp/>||<sp/>nBunch<sp/>&gt;<sp/>500)</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Invalid<sp/>no.<sp/>messages<sp/>received<sp/>in<sp/>bunch<sp/>%u,<sp/>for<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>nBunch,<sp/>bktTime);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>release<sp/>lock<sp/>on<sp/>bucket<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.find(bktTime);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itb<sp/>!=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.end())</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb-&gt;second.nLockCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>n<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nBunch;<sp/>++i)</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>-<sp/>n<sp/>&lt;<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>)</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>not<sp/>enough<sp/>data<sp/>sent,<sp/>n<sp/>=<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>*psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>&amp;vchData[n];</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/><ref refid="smessage_8cpp_1ae4abbffb060bb486b9e15053f83cbcbf" kindref="member">SecureMsgValidate</ref>(&amp;vchData[n],<sp/>&amp;vchData[n<sp/>+<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>],<sp/>psmsg-&gt;<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>dropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>==<sp/>2)<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>proof<sp/>of<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(10);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" kindref="member">Misbehaving</ref>(1);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>store<sp/>message,<sp/>but<sp/>don&apos;t<sp/>hash<sp/>bucket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" kindref="member">SecureMsgStore</ref>(&amp;vchData[n],<sp/>&amp;vchData[n<sp/>+<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>],<sp/>psmsg-&gt;<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>dropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>continue?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" kindref="member">SecureMsgScanMessage</ref>(&amp;vchData[n],<sp/>&amp;vchData[n<sp/>+<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>],<sp/>psmsg-&gt;<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>recipient<sp/>is<sp/>not<sp/>this<sp/>node<sp/>(or<sp/>failed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/>+<sp/>psmsg-&gt;<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>if<sp/>messages<sp/>have<sp/>been<sp/>added,<sp/>bucket<sp/>must<sp/>exist<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.find(bktTime);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itb<sp/>==<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>.end())</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>have<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>bktTime);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb-&gt;second.nLockCount<sp/><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>node<sp/>has<sp/>received<sp/>data<sp/>from<sp/>peer,<sp/>release<sp/>lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb-&gt;second.nLockPeerId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itb-&gt;second.hashBucket();</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911" refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1abdde7d50a54a2f54a3aea64c47af535a" kindref="member">SecureMsgStoreUnscanned</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload)</highlight></codeline>
<codeline lineno="2912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2914"><highlight class="comment"><sp/><sp/><sp/><sp/>When<sp/>the<sp/>wallet<sp/>is<sp/>locked<sp/>a<sp/>copy<sp/>of<sp/>each<sp/>received<sp/>message<sp/>is<sp/>stored<sp/>to<sp/>be<sp/>scanned<sp/>later<sp/>if<sp/>wallet<sp/>is<sp/>unlocked</highlight></codeline>
<codeline lineno="2915"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgStoreUnscanned()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pHeader</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!pPayload)</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>null<sp/>pointer<sp/>to<sp/>header<sp/>or<sp/>payload.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*<sp/>psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>pHeader;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>pathSmsgDir;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathSmsgDir<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::create_directory(pathSmsgDir);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>to<sp/>create<sp/>directory<sp/>%s<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pathSmsgDir.string().c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>&gt;<sp/>now<sp/>+<sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref>)</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>&gt;<sp/>now.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>&lt;<sp/>SMSG_RETENTION.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>bucket<sp/>=<sp/>psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>-<sp/>(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>%<sp/><ref refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" kindref="member">SMSG_BUCKET_LEN</ref>);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>boost::lexical_cast&lt;std::string&gt;(bucket)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_01_wl.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>fullpath<sp/>=<sp/>pathSmsgDir<sp/>/<sp/>fileName;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen(fullpath.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(pHeader,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>fwrite(pPayload,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/>nPayload,<sp/>fp)<sp/>!=<sp/>nPayload)</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fwrite<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight></codeline>
<codeline lineno="2978" refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" kindref="member">SecureMsgStore</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdateBucket)</highlight></codeline>
<codeline lineno="2979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgStore()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_smsg);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pHeader</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!pPayload)</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>to<sp/>header<sp/>or<sp/>payload.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*<sp/>psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>pHeader;</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>pathSmsgDir;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathSmsgDir<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;smsgStore&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::create_directory(pathSmsgDir);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::filesystem_error&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>directory<sp/>%s<sp/>-<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>pathSmsgDir.string().c_str(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>now<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>&gt;<sp/>now<sp/>+<sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref>)</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>&gt;<sp/>now.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>&lt;<sp/>now<sp/>-<sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref>)</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>&lt;<sp/>SMSG_RETENTION.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>bucket<sp/>=<sp/>psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>-<sp/>(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>%<sp/><ref refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" kindref="member">SMSG_BUCKET_LEN</ref>);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref><sp/>token(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>,<sp/>pPayload,<sp/>nPayload,<sp/>0);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;&amp;<sp/>tokenSet<sp/>=<sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[bucket].setTokens;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>tokenSet.find(token);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>tokenSet.end())</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Already<sp/>have<sp/>message.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;nPayload:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>nPayload);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;bucket:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bucket);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;message<sp/>ts:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>token.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchShow;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchShow.resize(8);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchShow[0],<sp/>token.<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>sample<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="script_8h_1ab545c0a3638ba9151370e91fac78f48d" kindref="member">ValueString</ref>(vchShow).c_str());</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;\nmessages<sp/>in<sp/>bucket:\n&quot;);</highlight></codeline>
<codeline lineno="3040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(it<sp/>=<sp/>tokenSet.begin();<sp/>it<sp/>!=<sp/>tokenSet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="3041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;message<sp/>ts:<sp/>%d&quot;,<sp/>(*it).timestamp);</highlight></codeline>
<codeline lineno="3043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchShow.resize(8);</highlight></codeline>
<codeline lineno="3044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchShow[0],<sp/>(*it).sample,<sp/>8);</highlight></codeline>
<codeline lineno="3045"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;<sp/>sample<sp/>%s\n&quot;,<sp/>ValueString(vchShow).c_str());</highlight></codeline>
<codeline lineno="3046"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>boost::lexical_cast&lt;std::string&gt;(bucket)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_01.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>fullpath<sp/>=<sp/>pathSmsgDir<sp/>/<sp/>fileName;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fp<sp/>=<sp/>fopen(fullpath.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;fopen<sp/>failed:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>on<sp/>windows<sp/>ftell<sp/>will<sp/>always<sp/>return<sp/>0<sp/>after<sp/>fopen(ab),<sp/>call<sp/>fseek<sp/>to<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(fp,<sp/>0,<sp/>SEEK_END)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;fseek<sp/>failed:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>ofs<sp/>=<sp/>ftell(fp);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(pHeader,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>fwrite(pPayload,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>),<sp/>nPayload,<sp/>fp)<sp/>!=<sp/>nPayload)</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;fwrite<sp/>failed:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/>token.<ref refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" kindref="member">offset</ref><sp/>=<sp/>ofs;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;token.offset:<sp/>%d\n&quot;,<sp/>token.offset);<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenSet.insert(token);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fUpdateBucket)</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>[bucket].hashBucket();</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsg<sp/>added<sp/>to<sp/>bucket<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>bucket);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094" refid="smessage_8h_1ae5f8acf9cccf634cdb27b3f77b451f9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" kindref="member">SecureMsgStore</ref>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>&amp;<sp/>smsg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdateBucket)</highlight></codeline>
<codeline lineno="3095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" kindref="member">SecureMsgStore</ref>(&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/>smsg.<ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>,<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>fUpdateBucket);</highlight></codeline>
<codeline lineno="3097"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight></codeline>
<codeline lineno="3099" refid="smessage_8h_1ae4abbffb060bb486b9e15053f83cbcbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1ae4abbffb060bb486b9e15053f83cbcbf" kindref="member">SecureMsgValidate</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload)</highlight></codeline>
<codeline lineno="3100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3102"><highlight class="comment"><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="3103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>success</highlight></codeline>
<codeline lineno="3104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>error</highlight></codeline>
<codeline lineno="3105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>invalid<sp/>hash</highlight></codeline>
<codeline lineno="3106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>checksum<sp/>mismatch</highlight></codeline>
<codeline lineno="3107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>invalid<sp/>version</highlight></codeline>
<codeline lineno="3108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/>payload<sp/>is<sp/>too<sp/>large</highlight></codeline>
<codeline lineno="3109"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>*psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>pHeader;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psmsg-&gt;<ref refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" kindref="member">version</ref>[0]<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPayload<sp/>&gt;<sp/><ref refid="smessage_8h_1af7fb9dac77a91414591c4ef98f772120" kindref="member">SMSG_MAX_MSG_WORST</ref>)</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>civ[32];</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>sha256Hash[32];</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nonse;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;nonse,<sp/>&amp;psmsg-&gt;<ref refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" kindref="member">nonse</ref>[0],<sp/>4);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgValidate()<sp/>nonse<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>nonse);</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i+=4)</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(civ+i,<sp/>&amp;nonse,<sp/>4);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_init(&amp;ctx);</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBytes;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HMAC_Init_ex(&amp;ctx,<sp/>&amp;civ[0],<sp/>32,<sp/>EVP_sha256(),<sp/>NULL)</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)<sp/>pHeader+4,<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>-4)</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)<sp/>pPayload,<sp/>nPayload)</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>pPayload,<sp/>nPayload)</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Final(&amp;ctx,<sp/>sha256Hash,<sp/>&amp;nBytes)</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>nBytes<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;HMAC<sp/>error.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sha256Hash[31]<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>sha256Hash[30]<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(~(sha256Hash[29])<sp/>&amp;<sp/>((1&lt;&lt;0)<sp/>||<sp/>(1&lt;&lt;1)<sp/>||<sp/>(1&lt;&lt;2))<sp/>))</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Hash<sp/>Valid.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>smsg<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(psmsg-&gt;<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>,<sp/>sha256Hash,<sp/>4)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Checksum<sp/>mismatch.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>checksum<sp/>mismatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_cleanup(&amp;ctx);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3168" refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1ac434a0295e161eb2ebdad951f4049dc6" kindref="member">SecureMsgSetHash</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload)</highlight></codeline>
<codeline lineno="3169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>proof<sp/>of<sp/>work<sp/>and<sp/>checksum</highlight></codeline>
<codeline lineno="3171"><highlight class="comment"></highlight></codeline>
<codeline lineno="3172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>May<sp/>run<sp/>in<sp/>a<sp/>thread,<sp/>if<sp/>shutdown<sp/>detected,<sp/>return.</highlight></codeline>
<codeline lineno="3173"><highlight class="comment"></highlight></codeline>
<codeline lineno="3174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns:</highlight></codeline>
<codeline lineno="3175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>success</highlight></codeline>
<codeline lineno="3176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>error</highlight></codeline>
<codeline lineno="3177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>stopped<sp/>due<sp/>to<sp/>node<sp/>shutdown</highlight></codeline>
<codeline lineno="3178"><highlight class="comment"></highlight></codeline>
<codeline lineno="3179"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*<sp/>psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>pHeader;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>civ[32];</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>sha256Hash[32];</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_init(&amp;ctx);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nonse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CBigNum<sp/>bnTarget(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bnTarget<sp/>=<sp/>bnTarget.pow(256<sp/>-<sp/>40);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>break<sp/>for<sp/>HMAC_CTX_cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//psmsg-&gt;timestamp<sp/>=<sp/>GetTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//memcpy(&amp;psmsg-&gt;timestamp,<sp/>&amp;now,<sp/>8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;psmsg-&gt;<ref refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" kindref="member">nonse</ref>[0],<sp/>&amp;nonse,<sp/>4);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i+=4)</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(civ+i,<sp/>&amp;nonse,<sp/>4);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBytes;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HMAC_Init_ex(&amp;ctx,<sp/>&amp;civ[0],<sp/>32,<sp/>EVP_sha256(),<sp/>NULL)</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)<sp/>pHeader+4,<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>-4)</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)<sp/>pPayload,<sp/>nPayload)</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>pPayload,<sp/>nPayload)</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Final(&amp;ctx,<sp/>sha256Hash,<sp/>&amp;nBytes)</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//||<sp/>!HMAC_Final(&amp;ctx,<sp/>&amp;vchHash[0],<sp/>&amp;nBytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>nBytes<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(CBigNum(vchHash)<sp/>&lt;=<sp/>bnTarget)</highlight></codeline>
<codeline lineno="3221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="3223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fDebugSmsg)</highlight></codeline>
<codeline lineno="3224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;Match<sp/>%u\n&quot;,<sp/>nonse);</highlight></codeline>
<codeline lineno="3225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="3226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sha256Hash[31]<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>sha256Hash[30]<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(~(sha256Hash[29])<sp/>&amp;<sp/>((1&lt;&lt;0)<sp/>||<sp/>(1&lt;&lt;1)<sp/>||<sp/>(1&lt;&lt;2))<sp/>))</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&amp;&amp;<sp/>sha256Hash[29]<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(fDebugSmsg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>LogPrintf(&quot;Match<sp/>%u\n&quot;,<sp/>nonse);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(nonse<sp/>&gt;=<sp/>UINT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nonse<sp/>&gt;=<sp/>4294967295U)</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>match<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>nonse);</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonse++;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_cleanup(&amp;ctx);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>)</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSetHash()<sp/>stopped,<sp/>shutdown<sp/>detected.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSetHash()<sp/>failed,<sp/>took<sp/>%d<sp/>ms,<sp/>nonse<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart,<sp/>nonse);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(psmsg-&gt;<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>,<sp/>sha256Hash,<sp/>4);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//memcpy(psmsg-&gt;hash,<sp/>&amp;vchHash[0],<sp/>4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSetHash()<sp/>took<sp/>%d<sp/>ms,<sp/>nonse<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart,<sp/>nonse);</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276" refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a1a9885d0f94a7d5322eafb31bcf2f90a" kindref="member">SecureMsgEncrypt</ref>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>&amp;smsg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;addressFrom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;addressTo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message)</highlight></codeline>
<codeline lineno="3277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>secure<sp/>message</highlight></codeline>
<codeline lineno="3279"><highlight class="comment"></highlight></codeline>
<codeline lineno="3280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Using<sp/>similar<sp/>method<sp/>to<sp/>bitmessage.</highlight></codeline>
<codeline lineno="3281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>bitmessage<sp/>is<sp/>secure<sp/>this<sp/>should<sp/>be<sp/>too.</highlight></codeline>
<codeline lineno="3282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://bitmessage.org/wiki/Encryption</highlight></codeline>
<codeline lineno="3283"><highlight class="comment"></highlight></codeline>
<codeline lineno="3284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Some<sp/>differences:</highlight></codeline>
<codeline lineno="3285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmessage<sp/>seems<sp/>to<sp/>use<sp/>curve<sp/>sect283r1</highlight></codeline>
<codeline lineno="3286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*coin<sp/>addresses<sp/>use<sp/>secp256k1</highlight></codeline>
<codeline lineno="3287"><highlight class="comment"></highlight></codeline>
<codeline lineno="3288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="3289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>is<sp/>too<sp/>long.</highlight></codeline>
<codeline lineno="3290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/>addressFrom<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="3291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>addressTo<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="3292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Could<sp/>not<sp/>get<sp/>public<sp/>key<sp/>for<sp/>addressTo.</highlight></codeline>
<codeline lineno="3293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ECDH_compute_key<sp/>failed</highlight></codeline>
<codeline lineno="3294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Could<sp/>not<sp/>get<sp/>private<sp/>key<sp/>for<sp/>addressFrom.</highlight></codeline>
<codeline lineno="3295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Could<sp/>not<sp/>allocate<sp/>memory.</highlight></codeline>
<codeline lineno="3296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Could<sp/>not<sp/>compress<sp/>message<sp/>data.</highlight></codeline>
<codeline lineno="3297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/><sp/>Could<sp/>not<sp/>generate<sp/>MAC.</highlight></codeline>
<codeline lineno="3298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11<sp/><sp/><sp/><sp/><sp/><sp/>Encrypt<sp/>failed.</highlight></codeline>
<codeline lineno="3299"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgEncrypt(%s,<sp/>%s,<sp/>...)\n&quot;</highlight><highlight class="normal">,<sp/>addressFrom.c_str(),<sp/>addressTo.c_str());</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message.size()<sp/>&gt;<sp/><ref refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" kindref="member">SMSG_MAX_MSG_BYTES</ref>)</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(2,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Message<sp/>is<sp/>too<sp/>long,<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>message.size());</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/>smsg.<ref refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" kindref="member">version</ref>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>smsg.<ref refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" kindref="member">version</ref>[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/>smsg.<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSendAnonymous;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddrFrom;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckidFrom;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyFrom;</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addressFrom.compare(</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fSendAnonymous<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fSendAnonymous<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrFrom.<ref refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" kindref="member">SetString</ref>(addressFrom))</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(3,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>addressFrom<sp/>is<sp/>not<sp/>valid.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrFrom.<ref refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" kindref="member">GetKeyID</ref>(ckidFrom))</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(4,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>coinAddrFrom.GetKeyID<sp/>failed:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>coinAddrFrom.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddrDest;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckidDest;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrDest.<ref refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" kindref="member">SetString</ref>(addressTo))</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(4,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>addressTo<sp/>is<sp/>not<sp/>valid.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrDest.<ref refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" kindref="member">GetKeyID</ref>(ckidDest))</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(4,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>coinAddrDest.GetKeyID<sp/>failed:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>coinAddrDest.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>public<sp/>key<sp/>K<sp/>is<sp/>the<sp/>destination<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkDestK;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="smessage_8cpp_1a1341706507a851babcff6ce436b8ce2d" kindref="member">SecureMsgGetStoredKey</ref>(ckidDest,<sp/>cpkDestK)<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" kindref="member">SecureMsgGetLocalKey</ref>(ckidDest,<sp/>cpkDestK)<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>it&apos;s<sp/>a<sp/>local<sp/>key<sp/>(outbox?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(5,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>get<sp/>public<sp/>key<sp/>for<sp/>destination<sp/>address.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Generate<sp/>16<sp/>random<sp/>bytes<sp/>as<sp/>IV.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" kindref="member">RandAddSeedPerfmon</ref>();</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/>RAND_bytes(&amp;smsg.<ref refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" kindref="member">iv</ref>[0],<sp/>16);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Generate<sp/>a<sp/>new<sp/>random<sp/>EC<sp/>key<sp/>pair<sp/>with<sp/>private<sp/>key<sp/>called<sp/>r<sp/>and<sp/>public<sp/>key<sp/>called<sp/>R.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyR;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>keyR.<ref refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" kindref="member">MakeNewKey</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>make<sp/>compressed<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_e_c_key" kindref="compound">CECKey</ref><sp/>ecKeyR;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/>ecKeyR.<ref refid="class_c_e_c_key_1a4f5a374f5aaa622749b7772392c2ef30" kindref="member">SetSecretBytes</ref>(keyR.<ref refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Do<sp/>an<sp/>EC<sp/>point<sp/>multiply<sp/>with<sp/>public<sp/>key<sp/>K<sp/>and<sp/>private<sp/>key<sp/>r.<sp/>This<sp/>gives<sp/>you<sp/>public<sp/>key<sp/>P.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_e_c_key" kindref="compound">CECKey</ref><sp/>ecKeyK;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ecKeyK.<ref refid="class_c_e_c_key_1a07055de929aa6e4f4b692fb2bd272fdd" kindref="member">SetPubKey</ref>(cpkDestK.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/>cpkDestK.<ref refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" kindref="member">size</ref>()))</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>address<sp/>to<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(4,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>set<sp/>pubkey<sp/>for<sp/>K:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(cpkDestK).c_str());</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchP;</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>vchP.resize(32);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_KEY<sp/>*pkeyr<sp/>=<sp/>ecKeyR.<ref refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" kindref="member">GetECKey</ref>();</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_KEY<sp/>*pkeyK<sp/>=<sp/>ecKeyK.<ref refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" kindref="member">GetECKey</ref>();</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>seems<sp/>to<sp/>be<sp/>32,<sp/>worth<sp/>checking?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>field_size<sp/>=<sp/>EC_GROUP_get_degree(EC_KEY_get0_group(pkeyr));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>secret_len<sp/>=<sp/>(field_size+7)/8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;secret_len<sp/>%d.\n&quot;,<sp/>secret_len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>ECDH_compute_key<sp/>returns<sp/>the<sp/>same<sp/>P<sp/>if<sp/>fed<sp/>compressed<sp/>or<sp/>uncompressed<sp/>public<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/>ECDH_set_method(pkeyr,<sp/>ECDH_OpenSSL());</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenP<sp/>=<sp/>ECDH_compute_key(&amp;vchP[0],<sp/>32,<sp/>EC_KEY_get0_public_key(pkeyK),<sp/>pkeyr,<sp/>NULL);</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lenP<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(6,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ECDH_compute_key<sp/>failed,<sp/>lenP:<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>lenP);</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkR<sp/>=<sp/>keyR.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkR.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>()</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!cpkR.<ref refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" kindref="member">IsCompressed</ref>())</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>get<sp/>public<sp/>key<sp/>for<sp/>key<sp/>R.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(smsg.<ref refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" kindref="member">cpkR</ref>,<sp/>cpkR.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/>33);</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Use<sp/>public<sp/>key<sp/>P<sp/>and<sp/>calculate<sp/>the<sp/>SHA512<sp/>hash<sp/>H.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>The<sp/>first<sp/>32<sp/>bytes<sp/>of<sp/>H<sp/>are<sp/>called<sp/>key_e<sp/>and<sp/>the<sp/>last<sp/>32<sp/>bytes<sp/>are<sp/>called<sp/>key_m.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchHashed;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/>vchHashed.resize(64);<sp/></highlight><highlight class="comment">//<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA512(&amp;vchP[0],<sp/>vchP.size(),<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)&amp;vchHashed[0]);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>key_e(&amp;vchHashed[0],<sp/>&amp;vchHashed[0]+32);</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>key_m(&amp;vchHashed[32],<sp/>&amp;vchHashed[32]+32);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchPayload;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchCompressed;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pMsgData;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>lenMsgData;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>lenMsg<sp/>=<sp/>message.size();</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lenMsg<sp/>&gt;<sp/>128)</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>only<sp/>compress<sp/>if<sp/>over<sp/>128<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worstCase<sp/>=<sp/><ref refid="lz4_8c_1a2b09f5ca41ce609bb136d3637beffe04" kindref="member">LZ4_compressBound</ref>(message.size());</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>vchCompressed.resize(worstCase);<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(8,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>vchCompressed.resize<sp/>%u<sp/>threw:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>worstCase,<sp/>e.what());</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenComp<sp/>=<sp/><ref refid="lz4_8c_1a806e7d86885991c722172bcf57abb71b" kindref="member">LZ4_compress</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)message.c_str(),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;vchCompressed[0],<sp/>lenMsg);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lenComp<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(9,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>compress<sp/>message<sp/>data.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMsgData<sp/>=<sp/>&amp;vchCompressed[0];</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lenMsgData<sp/>=<sp/>lenComp;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>no<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMsgData<sp/>=<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)message.c_str();</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lenMsgData<sp/>=<sp/>lenMsg;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSendAnonymous)</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>vchPayload.resize(9<sp/>+<sp/>lenMsgData);<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(8,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>vchPayload.resize<sp/>%u<sp/>threw:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>9<sp/>+<sp/>lenMsgData,<sp/>e.what());</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchPayload[9],<sp/>pMsgData,<sp/>lenMsgData);</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchPayload[0]<sp/>=<sp/>250;<sp/></highlight><highlight class="comment">//<sp/>id<sp/>as<sp/>anonymous<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>next<sp/>4<sp/>bytes<sp/>are<sp/>unused<sp/>-<sp/>there<sp/>to<sp/>ensure<sp/>encrypted<sp/>payload<sp/>always<sp/>&gt;<sp/>8<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchPayload[5],<sp/>&amp;lenMsg,<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>uncompressed<sp/>plain<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>vchPayload.resize(<ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref><sp/>+<sp/>lenMsgData);<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(8,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>vchPayload.resize<sp/>%u<sp/>threw:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/><ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref><sp/>+<sp/>lenMsgData,<sp/>e.what());</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchPayload[<ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref>],<sp/>pMsgData,<sp/>lenMsgData);</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>compact<sp/>signature<sp/>proves<sp/>ownership<sp/>of<sp/>from<sp/>address<sp/>and<sp/>allows<sp/>the<sp/>public<sp/>key<sp/>to<sp/>be<sp/>recovered,<sp/>recipient<sp/>can<sp/>always<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" kindref="member">GetKey</ref>(ckidFrom,<sp/>keyFrom))</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(7,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>get<sp/>private<sp/>key<sp/>for<sp/>addressFrom.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>sign<sp/>the<sp/>plaintext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchSignature;</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchSignature.resize(65);</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyFrom.<ref refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" kindref="member">SignCompact</ref>(<ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(message.begin(),<sp/>message.end()),<sp/>vchSignature);</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Save<sp/>some<sp/>bytes<sp/>by<sp/>sending<sp/>address<sp/>raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchPayload[0]<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_c_dark_silk_address___b" kindref="compound">CDarkSilkAddress_B</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;coinAddrFrom))-&gt;getVersion();<sp/></highlight><highlight class="comment">//<sp/>vchPayload[0]<sp/>=<sp/>coinAddrDest.nVersion;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchPayload[1],<sp/>(static_cast&lt;CKeyID_B*&gt;(&amp;ckidFrom))-&gt;GetPPN(),<sp/>20);<sp/></highlight><highlight class="comment">//<sp/>memcpy(&amp;vchPayload[1],<sp/>ckidDest.pn,<sp/>20);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchPayload[1+20],<sp/>&amp;vchSignature[0],<sp/>vchSignature.size());</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchPayload[1+20+65],<sp/>&amp;lenMsg,<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>uncompressed<sp/>plain<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_crypter" kindref="compound">SecMsgCrypter</ref><sp/>crypter;</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/>crypter.<ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SetKey</ref>(key_e,<sp/>smsg.<ref refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" kindref="member">iv</ref>);</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchCiphertext;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_sec_msg_crypter_1abcd38cca1e7e04486ea959d71465da09" kindref="member">Encrypt</ref>(&amp;vchPayload[0],<sp/>vchPayload.size(),<sp/>vchCiphertext))</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(11,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>crypter.Encrypt<sp/>failed.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>smsg.<ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>[vchCiphertext.size()];<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(8,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>allocate<sp/>pPayload,<sp/>exception:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(smsg.<ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>,<sp/>&amp;vchCiphertext[0],<sp/>vchCiphertext.size());</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref><sp/>=<sp/>vchCiphertext.size();</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Calculate<sp/>a<sp/>32<sp/>byte<sp/>MAC<sp/>with<sp/>HMACSHA256,<sp/>using<sp/>key_m<sp/>as<sp/>salt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Message<sp/>authentication<sp/>code,<sp/>(hash<sp/>of<sp/>timestamp<sp/>+<sp/>destination<sp/>+<sp/>payload)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHmacOk<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBytes<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_init(&amp;ctx);</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HMAC_Init_ex(&amp;ctx,<sp/>&amp;key_m[0],<sp/>32,<sp/>EVP_sha256(),<sp/>NULL)</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)<sp/>&amp;smsg.<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(smsg.<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>))</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>&amp;vchCiphertext[0],<sp/>vchCiphertext.size())</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Final(&amp;ctx,<sp/>smsg.<ref refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" kindref="member">mac</ref>,<sp/>&amp;nBytes)</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>nBytes<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fHmacOk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_cleanup(&amp;ctx);</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fHmacOk)</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(10,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>generate<sp/>MAC.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"></highlight></codeline>
<codeline lineno="3533" refid="smessage_8h_1acbe2815144396344354ffa3022300278" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1acbe2815144396344354ffa3022300278" kindref="member">SecureMsgSend</ref>(std::string<sp/>&amp;addressFrom,<sp/>std::string<sp/>&amp;addressTo,<sp/>std::string<sp/>&amp;message,<sp/>std::string<sp/>&amp;sError)</highlight></codeline>
<codeline lineno="3534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encrypt<sp/>secure<sp/>message,<sp/>and<sp/>place<sp/>it<sp/>on<sp/>the<sp/>network</highlight></codeline>
<codeline lineno="3536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>message<sp/>to<sp/>sender&apos;s<sp/>first<sp/>address<sp/>and<sp/>place<sp/>in<sp/>send<sp/>queue<sp/>db</highlight></codeline>
<codeline lineno="3537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proof<sp/>of<sp/>work<sp/>thread<sp/>will<sp/>pick<sp/>up<sp/>messages<sp/>from<sp/><sp/>send<sp/>queue<sp/>db</highlight></codeline>
<codeline lineno="3538"><highlight class="comment"></highlight></codeline>
<codeline lineno="3539"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSend(%s,<sp/>%s,<sp/>...)\n&quot;</highlight><highlight class="normal">,<sp/>addressFrom.c_str(),<sp/>addressTo.c_str());</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wallet<sp/>is<sp/>locked,<sp/>wallet<sp/>must<sp/>be<sp/>unlocked<sp/>to<sp/>send<sp/>and<sp/>recieve<sp/>messages.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Wallet<sp/>is<sp/>locked,<sp/>wallet<sp/>must<sp/>be<sp/>unlocked<sp/>to<sp/>send<sp/>and<sp/>recieve<sp/>messages.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message.size()<sp/>&gt;<sp/><ref refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" kindref="member">SMSG_MAX_MSG_BYTES</ref>)</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>message.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" kindref="member">SMSG_MAX_MSG_BYTES</ref>;</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>is<sp/>too<sp/>long,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>oss.str();</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Message<sp/>is<sp/>too<sp/>long,<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>message.size());</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>smsg;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/><ref refid="smessage_8cpp_1a1a9885d0f94a7d5322eafb31bcf2f90a" kindref="member">SecureMsgEncrypt</ref>(smsg,<sp/>addressFrom,<sp/>addressTo,<sp/>message))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSend(),<sp/>encrypt<sp/>for<sp/>recipient<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(rv)</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>is<sp/>too<sp/>long.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>addressFrom.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>addressTo.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>public<sp/>key<sp/>for<sp/>addressTo.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ECDH_compute_key<sp/>failed.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>private<sp/>key<sp/>for<sp/>addressFrom.&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>memory.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>compress<sp/>message<sp/>data.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>generate<sp/>MAC.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:<sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Encrypt<sp/>failed.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unspecified<sp/>Error.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Place<sp/>message<sp/>in<sp/>send<sp/>queue,<sp/>proof<sp/>of<sp/>work<sp/>will<sp/>happen<sp/>in<sp/>a<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sPrefix(</highlight><highlight class="stringliteral">&quot;qm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>chKey[18];</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[0],<sp/><sp/>sPrefix.data(),<sp/><sp/>2);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[2],<sp/><sp/>&amp;smsg.<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[10],<sp/>&amp;smsg.<ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>,<sp/><sp/>8);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref><sp/>smsgSQ;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/>smsgSQ.<ref refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" kindref="member">timeReceived</ref><sp/><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/>smsgSQ.<ref refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" kindref="member">sAddrTo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>addressTo;</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>smsgSQ.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>.resize(<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/>+<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>);<sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;smsgSQ.vchMessage.resize<sp/>%u<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/>+<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>e.what());</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>memory.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;smsgSQ.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[0],<sp/>&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;smsgSQ.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>],<sp/>smsg.<ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>,<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>);</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>dbSendQueue;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbSendQueue.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;cw&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbSendQueue.<ref refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" kindref="member">WriteSmesg</ref>(chKey,<sp/>smsgSQ);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NotifySecMsgSendQueueChanged(smsgOutbox);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsgDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>only<sp/>update<sp/>outbox<sp/>when<sp/>proof<sp/>of<sp/>work<sp/>thread<sp/>is<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>for<sp/>outbox<sp/>create<sp/>a<sp/>copy<sp/>encrypted<sp/>for<sp/>owned<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>wallet<sp/>is<sp/>encrypted<sp/>private<sp/>key<sp/>needed<sp/>to<sp/>decrypt<sp/>will<sp/>be<sp/>unavailable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Encrypting<sp/>message<sp/>for<sp/>outbox.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>addressOutbox<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddrOutbox;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>,<sp/>std::string)&amp;<sp/>entry,<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" kindref="member">mapAddressBook</ref>)</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>get<sp/>first<sp/>owned<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(*<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>entry.first))</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>&amp;<sp/>address<sp/>=<sp/>entry.first;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addressOutbox<sp/>=<sp/>address.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrOutbox.<ref refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" kindref="member">SetString</ref>(addressOutbox))<sp/></highlight><highlight class="comment">//<sp/>test<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addressOutbox<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>SecureMsgSend()<sp/>could<sp/>not<sp/>find<sp/>an<sp/>address<sp/>to<sp/>encrypt<sp/>outbox<sp/>message<sp/>with.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Encrypting<sp/>a<sp/>copy<sp/>for<sp/>outbox,<sp/>using<sp/>address<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addressOutbox.c_str());</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>smsgForOutbox;</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/><ref refid="smessage_8cpp_1a1a9885d0f94a7d5322eafb31bcf2f90a" kindref="member">SecureMsgEncrypt</ref>(smsgForOutbox,<sp/>addressFrom,<sp/>addressOutbox,<sp/>message))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgSend(),<sp/>encrypt<sp/>for<sp/>outbox<sp/>failed,<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>rv);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>save<sp/>sent<sp/>message<sp/>to<sp/>db</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sPrefix(</highlight><highlight class="stringliteral">&quot;sm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>chKey[18];</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[0],<sp/><sp/>sPrefix.data(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2);</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[2],<sp/><sp/>&amp;smsgForOutbox.timestamp,<sp/>8);</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;chKey[10],<sp/>&amp;smsgForOutbox.pPayload,<sp/><sp/>8);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref><sp/>smsgOutbox;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgOutbox.<ref refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" kindref="member">timeReceived</ref><sp/><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgOutbox.<ref refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" kindref="member">sAddrTo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>addressTo;</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgOutbox.<ref refid="class_sec_msg_stored_1a9200ada27d6664d6c4c995fac0ed486d" kindref="member">sAddrOutbox</ref><sp/><sp/><sp/>=<sp/>addressOutbox;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smsgOutbox.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>.resize(<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/>+<sp/>smsgForOutbox.nPayload);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;smsgOutbox.vchMessage.resize<sp/>%u<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/>+<sp/>smsgForOutbox.nPayload,<sp/>e.what());</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>memory.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;smsgOutbox.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[0],<sp/>&amp;smsgForOutbox.hash[0],<sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>);</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;smsgOutbox.<ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>[<ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref>],<sp/>smsgForOutbox.pPayload,<sp/>smsgForOutbox.nPayload);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_smsgDB);</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref><sp/>dbSent;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbSent.<ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="stringliteral">&quot;cw&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbSent.<ref refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" kindref="member">WriteSmesg</ref>(chKey,<sp/>smsgOutbox);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1aa848b072a4193ed7af7f01276f819170" kindref="member">NotifySecMsgOutboxChanged</ref>(smsgOutbox);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>cs_smsgDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Secure<sp/>message<sp/>queued<sp/>for<sp/>sending<sp/>to<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>addressTo.c_str());</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight></codeline>
<codeline lineno="3702" refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" kindref="member">SecureMsgDecrypt</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fTestOnly,<sp/>std::string<sp/>&amp;address,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload,<sp/><ref refid="class_message_data" kindref="compound">MessageData</ref><sp/>&amp;msg)</highlight></codeline>
<codeline lineno="3703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrypt<sp/>secure<sp/>message</highlight></codeline>
<codeline lineno="3705"><highlight class="comment"></highlight></codeline>
<codeline lineno="3706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address<sp/>is<sp/>the<sp/>owned<sp/>address<sp/>to<sp/>decrypt<sp/>with.</highlight></codeline>
<codeline lineno="3707"><highlight class="comment"></highlight></codeline>
<codeline lineno="3708"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validate<sp/>first<sp/>in<sp/>SecureMsgValidate</highlight></codeline>
<codeline lineno="3709"><highlight class="comment"></highlight></codeline>
<codeline lineno="3710"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns</highlight></codeline>
<codeline lineno="3711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error</highlight></codeline>
<codeline lineno="3712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unknown<sp/>version<sp/>number</highlight></codeline>
<codeline lineno="3713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Decrypt<sp/>address<sp/>is<sp/>not<sp/>valid.</highlight></codeline>
<codeline lineno="3714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Could<sp/>not<sp/>allocate<sp/>memory</highlight></codeline>
<codeline lineno="3715"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>using<sp/>%s,<sp/>testonly<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>address.c_str(),<sp/>fTestOnly);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pHeader</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!pPayload)</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>null<sp/>pointer<sp/>to<sp/>header<sp/>or<sp/>payload.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*<sp/>psmsg<sp/>=<sp/>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>*)<sp/>pHeader;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psmsg-&gt;<ref refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" kindref="member">version</ref>[0]<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(2,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Unknown<sp/>version<sp/>number.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Fetch<sp/>private<sp/>key<sp/>k,<sp/>used<sp/>to<sp/>decrypt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddrDest;</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckidDest;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyDest;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrDest.<ref refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" kindref="member">SetString</ref>(address))</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(3,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Address<sp/>is<sp/>not<sp/>valid.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrDest.<ref refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" kindref="member">GetKeyID</ref>(ckidDest))</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(3,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>coinAddrDest.GetKeyID<sp/>failed:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>coinAddrDest.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" kindref="member">GetKey</ref>(ckidDest,<sp/>keyDest))</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(3,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>get<sp/>private<sp/>key<sp/>for<sp/>addressDest.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkR(psmsg-&gt;<ref refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" kindref="member">cpkR</ref>,<sp/>psmsg-&gt;<ref refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" kindref="member">cpkR</ref>+33);</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkR.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>get<sp/>pubkey<sp/>for<sp/>key<sp/>R.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_e_c_key" kindref="compound">CECKey</ref><sp/>ecKeyR;</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ecKeyR.<ref refid="class_c_e_c_key_1a07055de929aa6e4f4b692fb2bd272fdd" kindref="member">SetPubKey</ref>(cpkR.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/>cpkR.<ref refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" kindref="member">size</ref>()))</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>set<sp/>pubkey<sp/>for<sp/>key<sp/>R:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(cpkR).c_str());</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_e_c_key" kindref="compound">CECKey</ref><sp/>ecKeyDest;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/>ecKeyDest.<ref refid="class_c_e_c_key_1a4f5a374f5aaa622749b7772392c2ef30" kindref="member">SetSecretBytes</ref>(keyDest.<ref refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Do<sp/>an<sp/>EC<sp/>point<sp/>multiply<sp/>with<sp/>private<sp/>key<sp/>k<sp/>and<sp/>public<sp/>key<sp/>R.<sp/>This<sp/>gives<sp/>you<sp/>public<sp/>key<sp/>P.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchP;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/>vchP.resize(32);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_KEY*<sp/>pkeyk<sp/>=<sp/>ecKeyDest.<ref refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" kindref="member">GetECKey</ref>();</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_KEY*<sp/>pkeyR<sp/>=<sp/>ecKeyR.<ref refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" kindref="member">GetECKey</ref>();</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/>ECDH_set_method(pkeyk,<sp/>ECDH_OpenSSL());</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenPdec<sp/>=<sp/>ECDH_compute_key(&amp;vchP[0],<sp/>32,<sp/>EC_KEY_get0_public_key(pkeyR),<sp/>pkeyk,<sp/>NULL);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lenPdec<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ECDH_compute_key<sp/>failed,<sp/>lenPdec:<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>lenPdec);</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Use<sp/>public<sp/>key<sp/>P<sp/>to<sp/>calculate<sp/>the<sp/>SHA512<sp/>hash<sp/>H.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>The<sp/>first<sp/>32<sp/>bytes<sp/>of<sp/>H<sp/>are<sp/>called<sp/>key_e<sp/>and<sp/>the<sp/>last<sp/>32<sp/>bytes<sp/>are<sp/>called<sp/>key_m.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchHashedDec;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/>vchHashedDec.resize(64);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>512<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA512(&amp;vchP[0],<sp/>vchP.size(),<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)&amp;vchHashedDec[0]);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>key_e(&amp;vchHashedDec[0],<sp/>&amp;vchHashedDec[0]+32);</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>key_m(&amp;vchHashedDec[32],<sp/>&amp;vchHashedDec[32]+32);</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Message<sp/>authentication<sp/>code,<sp/>(hash<sp/>of<sp/>timestamp<sp/>+<sp/>destination<sp/>+<sp/>payload)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>MAC[32];</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHmacOk<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nBytes<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_init(&amp;ctx);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HMAC_Init_ex(&amp;ctx,<sp/>&amp;key_m[0],<sp/>32,<sp/>EVP_sha256(),<sp/>NULL)</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)<sp/>&amp;psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>))</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Update(&amp;ctx,<sp/>pPayload,<sp/>nPayload)</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!HMAC_Final(&amp;ctx,<sp/>MAC,<sp/>&amp;nBytes)</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>nBytes<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fHmacOk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/>HMAC_CTX_cleanup(&amp;ctx);</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fHmacOk)</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>generate<sp/>MAC.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(MAC,<sp/>psmsg-&gt;<ref refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" kindref="member">mac</ref>,<sp/>32)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;MAC<sp/>does<sp/>not<sp/>match.\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>expected<sp/>if<sp/>message<sp/>is<sp/>not<sp/>to<sp/>address<sp/>on<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fTestOnly)</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_crypter" kindref="compound">SecMsgCrypter</ref><sp/>crypter;</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/>crypter.<ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SetKey</ref>(key_e,<sp/>psmsg-&gt;<ref refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" kindref="member">iv</ref>);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchPayload;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_sec_msg_crypter_1a7ede11e62c67b4c1b205f2ddc9402ddb" kindref="member">Decrypt</ref>(pPayload,<sp/>nPayload,<sp/>vchPayload))</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Decrypt<sp/>failed.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="class_message_data_1ab5afd561eaa6bc5f64a6c63de9b09f9d" kindref="member">timestamp</ref><sp/>=<sp/>psmsg-&gt;<ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>lenData;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>lenPlain;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>pMsgData;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFromAnonymous;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)vchPayload[0]<sp/>==<sp/>250)</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fFromAnonymous<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lenData<sp/>=<sp/>vchPayload.size()<sp/>-<sp/>(9);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;lenPlain,<sp/>&amp;vchPayload[5],<sp/>4);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMsgData<sp/>=<sp/>&amp;vchPayload[9];</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fFromAnonymous<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lenData<sp/>=<sp/>vchPayload.size()<sp/>-<sp/>(<ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref>);</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;lenPlain,<sp/>&amp;vchPayload[1+20+65],<sp/>4);</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMsgData<sp/>=<sp/>&amp;vchPayload[<ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref>];</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" kindref="member">vchMessage</ref>.resize(lenPlain<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(8,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>msg.vchMessage.resize<sp/>%u<sp/>threw:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>lenPlain<sp/>+<sp/>1,<sp/>e.what());</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lenPlain<sp/>&gt;<sp/>128)</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>decompress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lz4_8c_1a76d66de24858903c049171e700c1371c" kindref="member">LZ4_decompress_safe</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>pMsgData,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>&amp;msg.<ref refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" kindref="member">vchMessage</ref>[0],<sp/>lenData,<sp/>lenPlain)<sp/>!=<sp/>(int)<sp/>lenPlain)</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Could<sp/>not<sp/>decompress<sp/>message<sp/>data.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>plaintext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;msg.<ref refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" kindref="member">vchMessage</ref>[0],<sp/>pMsgData,<sp/>lenPlain);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" kindref="member">vchMessage</ref>[lenPlain]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFromAnonymous)</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Anonymous<sp/>sender</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" kindref="member">sFromAddress</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchUint160;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchUint160.resize(20);</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchUint160[0],<sp/>&amp;vchPayload[1],<sp/>20);</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint160" kindref="compound">uint160</ref><sp/>ui160(vchUint160);</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckidFrom(ui160);</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddrFrom;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coinAddrFrom.<ref refid="class_c_dark_silk_address_1adafb09872a993f450999c4e4ea0e795b" kindref="member">Set</ref>(ckidFrom);</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coinAddrFrom.<ref refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>From<sp/>Address<sp/>is<sp/>invalid.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchSig;</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchSig.resize(65);</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchSig[0],<sp/>&amp;vchPayload[1+20],<sp/>65);</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkFromSig;</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpkFromSig.<ref refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" kindref="member">RecoverCompact</ref>(<ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(msg.<ref refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" kindref="member">vchMessage</ref>.begin(),<sp/>msg.<ref refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" kindref="member">vchMessage</ref>.end()-1),<sp/>vchSig);</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkFromSig.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Signature<sp/>validation<sp/>failed.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>get<sp/>address<sp/>for<sp/>the<sp/>compressed<sp/>public<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddrFromSig;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coinAddrFromSig.<ref refid="class_c_dark_silk_address_1adafb09872a993f450999c4e4ea0e795b" kindref="member">Set</ref>(cpkFromSig.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(coinAddrFrom<sp/>==<sp/>coinAddrFromSig))</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorN(1,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Signature<sp/>validation<sp/>failed.&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/><ref refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" kindref="member">SecureMsgInsertAddress</ref>(ckidFrom,<sp/>cpkFromSig);</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SecureMsgInsertAddress(),<sp/>exception:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(rv)</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Sender<sp/>public<sp/>key<sp/>added<sp/>to<sp/>db.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Sender<sp/>public<sp/>key<sp/>already<sp/>in<sp/>db.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>adding<sp/>sender<sp/>public<sp/>key<sp/>to<sp/>db.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" kindref="member">sFromAddress</ref><sp/>=<sp/>coinAddrFrom.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>)</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Decrypted<sp/>message<sp/>for<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>address.c_str());</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight></codeline>
<codeline lineno="3948" refid="smessage_8h_1a7710a63b846d5a4f35f233cfeae6027b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" kindref="member">SecureMsgDecrypt</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fTestOnly,<sp/>std::string<sp/>&amp;address,<sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>&amp;smsg,<sp/><ref refid="class_message_data" kindref="compound">MessageData</ref><sp/>&amp;msg)</highlight></codeline>
<codeline lineno="3949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" kindref="member">SecureMsgDecrypt</ref>(fTestOnly,<sp/>address,<sp/>&amp;smsg.<ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[0],<sp/>smsg.<ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>,<sp/>smsg.<ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>,<sp/>msg);</highlight></codeline>
<codeline lineno="3951"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/smessage.cpp"/>
  </compounddef>
</doxygen>
