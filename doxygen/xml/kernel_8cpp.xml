<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="kernel_8cpp" kind="file" language="C++">
    <compoundname>kernel.cpp</compoundname>
    <includes local="no">boost/assign/list_of.hpp</includes>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includes refid="txdb_8h" local="yes">txdb.h</includes>
    <includes refid="txdb-leveldb_8h" local="yes">txdb-leveldb.h</includes>
    <incdepgraph>
      <node id="35517">
        <label>list</label>
      </node>
      <node id="35486">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="35567">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35565" relation="include">
        </childnode>
      </node>
      <node id="35545">
        <label>netinet/in.h</label>
      </node>
      <node id="35469">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35484" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
      </node>
      <node id="35538">
        <label>arpa/inet.h</label>
      </node>
      <node id="35554">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="35476">
        <label>limits</label>
      </node>
      <node id="35504">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35484" relation="include">
        </childnode>
      </node>
      <node id="35505">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="35506" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35488" relation="include">
        </childnode>
      </node>
      <node id="35468">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="35469" relation="include">
        </childnode>
        <childnode refid="35492" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35495" relation="include">
        </childnode>
        <childnode refid="35496" relation="include">
        </childnode>
        <childnode refid="35532" relation="include">
        </childnode>
        <childnode refid="35530" relation="include">
        </childnode>
      </node>
      <node id="35496">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35497" relation="include">
        </childnode>
        <childnode refid="35498" relation="include">
        </childnode>
        <childnode refid="35499" relation="include">
        </childnode>
        <childnode refid="35508" relation="include">
        </childnode>
        <childnode refid="35510" relation="include">
        </childnode>
        <childnode refid="35529" relation="include">
        </childnode>
      </node>
      <node id="35528">
        <label>openssl/rand.h</label>
      </node>
      <node id="35493">
        <label>assert.h</label>
      </node>
      <node id="35481">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="35544">
        <label>net/if.h</label>
      </node>
      <node id="35569">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="35468" relation="include">
        </childnode>
        <childnode refid="35552" relation="include">
        </childnode>
        <childnode refid="35570" relation="include">
        </childnode>
        <childnode refid="35469" relation="include">
        </childnode>
        <childnode refid="35574" relation="include">
        </childnode>
      </node>
      <node id="35566">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="35506" relation="include">
        </childnode>
      </node>
      <node id="35556">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="35490">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="35491" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
      </node>
      <node id="35570">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="35571" relation="include">
        </childnode>
        <childnode refid="35569" relation="include">
        </childnode>
        <childnode refid="35493" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35497" relation="include">
        </childnode>
        <childnode refid="35573" relation="include">
        </childnode>
      </node>
      <node id="35487">
        <label>sys/mman.h</label>
      </node>
      <node id="35484">
        <label>stdlib.h</label>
      </node>
      <node id="35466">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="35467" relation="include">
        </childnode>
        <childnode refid="35510" relation="include">
        </childnode>
        <childnode refid="35550" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35497" relation="include">
        </childnode>
      </node>
      <node id="35497">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="35527">
        <label>openssl/crypto.h</label>
      </node>
      <node id="35541">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="35542" relation="include">
        </childnode>
        <childnode refid="35487" relation="include">
        </childnode>
        <childnode refid="35543" relation="include">
        </childnode>
        <childnode refid="35511" relation="include">
        </childnode>
        <childnode refid="35544" relation="include">
        </childnode>
        <childnode refid="35545" relation="include">
        </childnode>
        <childnode refid="35538" relation="include">
        </childnode>
        <childnode refid="35546" relation="include">
        </childnode>
        <childnode refid="35488" relation="include">
        </childnode>
        <childnode refid="35547" relation="include">
        </childnode>
        <childnode refid="35489" relation="include">
        </childnode>
        <childnode refid="35548" relation="include">
        </childnode>
      </node>
      <node id="35523">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="35501">
        <label>openssl/sha.h</label>
      </node>
      <node id="35548">
        <label>errno.h</label>
      </node>
      <node id="35475">
        <label>cassert</label>
      </node>
      <node id="35494">
        <label>stdexcept</label>
      </node>
      <node id="35510">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="35511" relation="include">
        </childnode>
        <childnode refid="35512" relation="include">
        </childnode>
        <childnode refid="35513" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35514" relation="include">
        </childnode>
        <childnode refid="35469" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35517" relation="include">
        </childnode>
        <childnode refid="35518" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35519" relation="include">
        </childnode>
        <childnode refid="35520" relation="include">
        </childnode>
        <childnode refid="35521" relation="include">
        </childnode>
        <childnode refid="35522" relation="include">
        </childnode>
        <childnode refid="35523" relation="include">
        </childnode>
        <childnode refid="35524" relation="include">
        </childnode>
        <childnode refid="35525" relation="include">
        </childnode>
        <childnode refid="35526" relation="include">
        </childnode>
        <childnode refid="35527" relation="include">
        </childnode>
        <childnode refid="35528" relation="include">
        </childnode>
        <childnode refid="35509" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
      </node>
      <node id="35549">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="35550" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35540" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
      </node>
      <node id="35522">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="35562">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35530" relation="include">
        </childnode>
        <childnode refid="35563" relation="include">
        </childnode>
        <childnode refid="35566" relation="include">
        </childnode>
      </node>
      <node id="35471">
        <label>string</label>
      </node>
      <node id="35533">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35484" relation="include">
        </childnode>
        <childnode refid="35510" relation="include">
        </childnode>
        <childnode refid="35534" relation="include">
        </childnode>
      </node>
      <node id="35473">
        <label>map</label>
      </node>
      <node id="35519">
        <label>boost/thread.hpp</label>
      </node>
      <node id="35551">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="35540" relation="include">
        </childnode>
        <childnode refid="35549" relation="include">
        </childnode>
        <childnode refid="35552" relation="include">
        </childnode>
        <childnode refid="35532" relation="include">
        </childnode>
        <childnode refid="35510" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35561">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35557" relation="include">
        </childnode>
        <childnode refid="35510" relation="include">
        </childnode>
        <childnode refid="35521" relation="include">
        </childnode>
        <childnode refid="35562" relation="include">
        </childnode>
        <childnode refid="35567" relation="include">
        </childnode>
      </node>
      <node id="35506">
        <label>stddef.h</label>
      </node>
      <node id="35498">
        <label>boost/variant.hpp</label>
      </node>
      <node id="35547">
        <label>netdb.h</label>
      </node>
      <node id="35542">
        <label>sys/fcntl.h</label>
      </node>
      <node id="35571">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="35572" relation="include">
        </childnode>
      </node>
      <node id="35565">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35564" relation="include">
        </childnode>
      </node>
      <node id="35574">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="35470">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35474" relation="include">
        </childnode>
        <childnode refid="35475" relation="include">
        </childnode>
        <childnode refid="35476" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35478" relation="include">
        </childnode>
        <childnode refid="35479" relation="include">
        </childnode>
        <childnode refid="35480" relation="include">
        </childnode>
        <childnode refid="35481" relation="include">
        </childnode>
        <childnode refid="35482" relation="include">
        </childnode>
        <childnode refid="35490" relation="include">
        </childnode>
      </node>
      <node id="35488">
        <label>limits.h</label>
      </node>
      <node id="35553">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="35539">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="35474" relation="include">
        </childnode>
        <childnode refid="35535" relation="include">
        </childnode>
      </node>
      <node id="35513">
        <label>sys/resource.h</label>
      </node>
      <node id="35524">
        <label>openssl/bio.h</label>
      </node>
      <node id="35537">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="35540">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35541" relation="include">
        </childnode>
      </node>
      <node id="35464">
        <label>boost/assign/list_of.hpp</label>
      </node>
      <node id="35500">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="35492" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35501" relation="include">
        </childnode>
        <childnode refid="35502" relation="include">
        </childnode>
        <childnode refid="35503" relation="include">
        </childnode>
        <childnode refid="35504" relation="include">
        </childnode>
        <childnode refid="35505" relation="include">
        </childnode>
        <childnode refid="35507" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35546">
        <label>ifaddrs.h</label>
      </node>
      <node id="35529">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="35510" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35484" relation="include">
        </childnode>
        <childnode refid="35530" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35531" relation="include">
        </childnode>
      </node>
      <node id="35511">
        <label>sys/types.h</label>
      </node>
      <node id="35465">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="35466" relation="include">
        </childnode>
      </node>
      <node id="35559">
        <label>ios</label>
      </node>
      <node id="35485">
        <label>string.h</label>
      </node>
      <node id="35491">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="35479">
        <label>cstdio</label>
      </node>
      <node id="35555">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="35526">
        <label>openssl/buffer.h</label>
      </node>
      <node id="35480">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="35568">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="35569" relation="include">
        </childnode>
        <childnode refid="35534" relation="include">
        </childnode>
        <childnode refid="35496" relation="include">
        </childnode>
        <childnode refid="35557" relation="include">
        </childnode>
        <childnode refid="35560" relation="include">
        </childnode>
        <childnode refid="35466" relation="include">
        </childnode>
        <childnode refid="35517" relation="include">
        </childnode>
        <childnode refid="35573" relation="include">
        </childnode>
      </node>
      <node id="35521">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="35573">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="35499">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="35500" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35492" relation="include">
        </childnode>
        <childnode refid="35494" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35463">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel.cpp"/>
        <childnode refid="35464" relation="include">
        </childnode>
        <childnode refid="35465" relation="include">
        </childnode>
        <childnode refid="35560" relation="include">
        </childnode>
        <childnode refid="35575" relation="include">
        </childnode>
      </node>
      <node id="35489">
        <label>unistd.h</label>
      </node>
      <node id="35472">
        <label>vector</label>
      </node>
      <node id="35508">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35492" relation="include">
        </childnode>
        <childnode refid="35509" relation="include">
        </childnode>
        <childnode refid="35494" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
      </node>
      <node id="35534">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="35535" relation="include">
        </childnode>
        <childnode refid="35536" relation="include">
        </childnode>
        <childnode refid="35497" relation="include">
        </childnode>
        <childnode refid="35537" relation="include">
        </childnode>
        <childnode refid="35528" relation="include">
        </childnode>
        <childnode refid="35538" relation="include">
        </childnode>
        <childnode refid="35539" relation="include">
        </childnode>
        <childnode refid="35540" relation="include">
        </childnode>
        <childnode refid="35549" relation="include">
        </childnode>
        <childnode refid="35551" relation="include">
        </childnode>
        <childnode refid="35500" relation="include">
        </childnode>
        <childnode refid="35557" relation="include">
        </childnode>
      </node>
      <node id="35502">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="35520">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="35518">
        <label>utility</label>
      </node>
      <node id="35572">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="35468" relation="include">
        </childnode>
        <childnode refid="35560" relation="include">
        </childnode>
      </node>
      <node id="35516">
        <label>sstream</label>
      </node>
      <node id="35575">
        <label>txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="35568" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
        <childnode refid="35562" relation="include">
        </childnode>
        <childnode refid="35567" relation="include">
        </childnode>
        <childnode refid="35557" relation="include">
        </childnode>
      </node>
      <node id="35525">
        <label>openssl/evp.h</label>
      </node>
      <node id="35514">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="35475" relation="include">
        </childnode>
        <childnode refid="35515" relation="include">
        </childnode>
        <childnode refid="35516" relation="include">
        </childnode>
        <childnode refid="35494" relation="include">
        </childnode>
      </node>
      <node id="35477">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="35557">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="35482" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35558" relation="include">
        </childnode>
        <childnode refid="35493" relation="include">
        </childnode>
        <childnode refid="35559" relation="include">
        </childnode>
        <childnode refid="35476" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35474" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35485" relation="include">
        </childnode>
        <childnode refid="35518" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35507">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35506" relation="include">
        </childnode>
        <childnode refid="35488" relation="include">
        </childnode>
      </node>
      <node id="35512">
        <label>sys/time.h</label>
      </node>
      <node id="35515">
        <label>iostream</label>
      </node>
      <node id="35535">
        <label>deque</label>
      </node>
      <node id="35492">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="35493" relation="include">
        </childnode>
        <childnode refid="35478" relation="include">
        </childnode>
        <childnode refid="35494" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35543">
        <label>sys/socket.h</label>
      </node>
      <node id="35564">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="35493" relation="include">
        </childnode>
        <childnode refid="35506" relation="include">
        </childnode>
        <childnode refid="35485" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
      </node>
      <node id="35536">
        <label>boost/array.hpp</label>
      </node>
      <node id="35509">
        <label>openssl/bn.h</label>
      </node>
      <node id="35560">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="35561" relation="include">
        </childnode>
        <childnode refid="35568" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35518" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35532">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="35477" relation="include">
        </childnode>
      </node>
      <node id="35482">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="35483" relation="include">
        </childnode>
        <childnode refid="35485" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35486" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35487" relation="include">
        </childnode>
        <childnode refid="35488" relation="include">
        </childnode>
        <childnode refid="35489" relation="include">
        </childnode>
      </node>
      <node id="35550">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="35508" relation="include">
        </childnode>
        <childnode refid="35492" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35474">
        <label>set</label>
      </node>
      <node id="35558">
        <label>algorithm</label>
      </node>
      <node id="35503">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35484" relation="include">
        </childnode>
      </node>
      <node id="35495">
        <label>util.h</label>
      </node>
      <node id="35530">
        <label>stdio.h</label>
      </node>
      <node id="35483">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="35484" relation="include">
        </childnode>
      </node>
      <node id="35478">
        <label>cstring</label>
      </node>
      <node id="35552">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="35553" relation="include">
        </childnode>
        <childnode refid="35554" relation="include">
        </childnode>
        <childnode refid="35555" relation="include">
        </childnode>
        <childnode refid="35486" relation="include">
        </childnode>
        <childnode refid="35556" relation="include">
        </childnode>
      </node>
      <node id="35531">
        <label>inttypes.h</label>
      </node>
      <node id="35563">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="35564" relation="include">
        </childnode>
        <childnode refid="35565" relation="include">
        </childnode>
      </node>
      <node id="35467">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="35468" relation="include">
        </childnode>
        <childnode refid="35507" relation="include">
        </childnode>
        <childnode refid="35533" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="kernel_8cpp_1a65c0eeb113370d36da64a679e184bc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetWeight</definition>
        <argsstring>(int64_t nIntervalBeginning, int64_t nIntervalEnd)</argsstring>
        <name>GetWeight</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nIntervalBeginning</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nIntervalEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="15" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="15" bodyend="22"/>
        <references refid="main_8cpp_1a621f4f63be83358641eb78f48d2f49c2" compoundref="main_8cpp" startline="63">nStakeMinAge</references>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1aabf3162e76735a40c2d7e4bf4e4e44e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GetLastStakeModifier</definition>
        <argsstring>(const CBlockIndex *pindex, uint64_t &amp;nStakeModifier, int64_t &amp;nModifierTime)</argsstring>
        <name>GetLastStakeModifier</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindex</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> &amp;</type>
          <declname>nStakeModifier</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>nModifierTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="25" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1afff4514ff841e65f8bc33abc89de41c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>static int64_t GetStakeModifierSelectionIntervalSection</definition>
        <argsstring>(int nSection)</argsstring>
        <name>GetStakeModifierSelectionIntervalSection</name>
        <param>
          <type>int</type>
          <declname>nSection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="39" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1a1f49867e01150199d8d8c5c665685c1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>static int64_t GetStakeModifierSelectionInterval</definition>
        <argsstring>()</argsstring>
        <name>GetStakeModifierSelectionInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="46" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1a4c20a6b7d68e6737a8a5328c76abc415" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SelectBlockFromCandidates</definition>
        <argsstring>(vector&lt; pair&lt; int64_t, uint256 &gt; &gt; &amp;vSortedByTimestamp, map&lt; uint256, const CBlockIndex * &gt; &amp;mapSelectedBlocks, int64_t nSelectionIntervalStop, uint64_t nStakeModifierPrev, const CBlockIndex **pindexSelected)</argsstring>
        <name>SelectBlockFromCandidates</name>
        <param>
          <type>vector&lt; pair&lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>, <ref refid="classuint256" kindref="compound">uint256</ref> &gt; &gt; &amp;</type>
          <declname>vSortedByTimestamp</declname>
        </param>
        <param>
          <type>map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> * &gt; &amp;</type>
          <declname>mapSelectedBlocks</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nSelectionIntervalStop</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nStakeModifierPrev</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> **</type>
          <declname>pindexSelected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="57" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="57" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1aa58b095aa0abb6f956cc68169124099a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ComputeNextStakeModifier</definition>
        <argsstring>(const CBlockIndex *pindexPrev, uint64_t &amp;nStakeModifier, bool &amp;fGeneratedStakeModifier)</argsstring>
        <name>ComputeNextStakeModifier</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> &amp;</type>
          <declname>nStakeModifier</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>fGeneratedStakeModifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="111" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="111" bodyend="189"/>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" compoundref="main_8cpp" startline="64">nModifierInterval</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
        <references refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" compoundref="chain_8h" startline="233" endline="236">CBlockIndex::GetBlockHash</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1a54bbd7ae647d4097ac7915f1cefed2c7" compoundref="chain_8h" startline="291" endline="294">CBlockIndex::GetStakeEntropyBit</references>
        <references refid="util_8cpp_1a343d2a13efe00125f78d25dafb0a8d98" compoundref="util_8cpp" startline="252" endline="278">LogAcceptCategory</references>
        <references refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" compoundref="chain_8h" startline="281" endline="284">CBlockIndex::IsProofOfStake</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <referencedby refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" compoundref="main_8cpp" startline="4244" endline="4311">CBlock::AddToBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1ae7cea47493b7e179fe492df175c9cfdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 ComputeStakeModifierV2</definition>
        <argsstring>(const CBlockIndex *pindexPrev, const uint256 &amp;kernel)</argsstring>
        <name>ComputeStakeModifierV2</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="196" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="196" bodyend="204"/>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" compoundref="chain_8h" startline="130">CBlockIndex::bnStakeModifierV2</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <referencedby refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" compoundref="main_8cpp" startline="4244" endline="4311">CBlock::AddToBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckStakeKernelHash</definition>
        <argsstring>(CBlockIndex *pindexPrev, unsigned int nBits, unsigned int nTimeBlockFrom, const CTransaction &amp;txPrev, const COutPoint &amp;prevout, unsigned int nTimeTx, uint256 &amp;hashProofOfStake, uint256 &amp;targetProofOfStake, bool fPrintProofOfStake)</argsstring>
        <name>CheckStakeKernelHash</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nTimeBlockFrom</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txPrev</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_out_point" kindref="compound">COutPoint</ref> &amp;</type>
          <declname>prevout</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nTimeTx</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashProofOfStake</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>targetProofOfStake</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fPrintProofOfStake</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="227" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="227" bodyend="283"/>
        <references refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" compoundref="transaction_8h" startline="260">CTransaction::nTime</references>
        <references refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" compoundref="bignum_8h" startline="321" endline="331">CBigNum::SetCompact</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" compoundref="transaction_8h" startline="31">COutPoint::n</references>
        <references refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" compoundref="bignum_8h" startline="278" endline="291">CBigNum::getuint256</references>
        <references refid="class_c_block_index_1a2aa226c04d79a4d932ed6eb0abd02cbe" compoundref="chain_8h" startline="129">CBlockIndex::nStakeModifier</references>
        <references refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" compoundref="chain_8h" startline="130">CBlockIndex::bnStakeModifierV2</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" compoundref="chain_8h" startline="141">CBlockIndex::nTime</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" compoundref="kernel_8cpp" startline="328" endline="353">CheckKernel</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1a01e09fbdb926d4581ea48c4cf2f337a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckProofOfStake</definition>
        <argsstring>(CBlockIndex *pindexPrev, const CTransaction &amp;tx, unsigned int nBits, uint256 &amp;hashProofOfStake, uint256 &amp;targetProofOfStake)</argsstring>
        <name>CheckProofOfStake</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashProofOfStake</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>targetProofOfStake</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="286" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="286" bodyend="320"/>
        <references refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" compoundref="transaction_8h" startline="319" endline="323">CTransaction::IsCoinStake</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" compoundref="main_8cpp" startline="3649" endline="3674">CTransactionPoS::ReadFromDisk</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" compoundref="transaction_8h" startline="267" endline="267">CTransaction::DoS</references>
        <references refid="script_8cpp_1a3bebacccf5ed6d80e80889b65830f893" compoundref="script_8cpp" startline="2958" endline="2970">VerifySignature</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaac14772d5583e6e6a1146e4ec51ae3fb0" compoundref="script_8h" startline="101">SCRIPT_VERIFY_NONE</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" compoundref="main_8h" startline="446">CTxIndex::pos</references>
        <references refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" compoundref="main_8h" startline="228">CDiskTxPos::nFile</references>
        <references refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" compoundref="main_8h" startline="229">CDiskTxPos::nBlockPos</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="main_8cpp_1a22e712bbf635a69ba8dd7ae004d2697b" compoundref="main_8cpp" startline="1766" endline="1777">IsConfirmedInNPrevBlocks</references>
        <references refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" compoundref="main_8cpp" startline="65">nStakeMinConfirmations</references>
        <references refid="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" compoundref="transaction_8h" startline="260">CTransaction::nTime</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1a03754eb0da5023cee284ac6aa68cb4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckCoinStakeTimestamp</definition>
        <argsstring>(int nHeight, int64_t nTimeBlock, int64_t nTimeTx)</argsstring>
        <name>CheckCoinStakeTimestamp</name>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTimeBlock</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTimeTx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="323" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="323" bodyend="326"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8cpp_1afda24c84e30a494d6b63c3a9651579ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckKernel</definition>
        <argsstring>(CBlockIndex *pindexPrev, unsigned int nBits, int64_t nTime, const COutPoint &amp;prevout, int64_t *pBlockTime)</argsstring>
        <name>CheckKernel</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_out_point" kindref="compound">COutPoint</ref> &amp;</type>
          <declname>prevout</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> *</type>
          <declname>pBlockTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.cpp" line="328" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="328" bodyend="353"/>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" compoundref="main_8cpp" startline="3649" endline="3674">CTransactionPoS::ReadFromDisk</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" compoundref="main_8h" startline="446">CTxIndex::pos</references>
        <references refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" compoundref="main_8h" startline="228">CDiskTxPos::nFile</references>
        <references refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" compoundref="main_8h" startline="229">CDiskTxPos::nBlockPos</references>
        <references refid="main_8cpp_1a22e712bbf635a69ba8dd7ae004d2697b" compoundref="main_8cpp" startline="1766" endline="1777">IsConfirmedInNPrevBlocks</references>
        <references refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" compoundref="main_8cpp" startline="65">nStakeMinConfirmations</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</references>
        <referencedby refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" compoundref="rpcmining_8cpp" startline="150" endline="234">checkkernel</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012-2016<sp/>The<sp/>PPCoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/list_of.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel_8h" kindref="compound">kernel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb_8h" kindref="compound">txdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb-leveldb_8h" kindref="compound">txdb-leveldb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>time<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="kernel_8h_1a65c0eeb113370d36da64a679e184bc16" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="kernel_8cpp_1a65c0eeb113370d36da64a679e184bc16" kindref="member">GetWeight</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIntervalBeginning,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIntervalEnd)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kernel<sp/>hash<sp/>weight<sp/>starts<sp/>from<sp/>0<sp/>at<sp/>the<sp/>min<sp/>age</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>change<sp/>increases<sp/>active<sp/>coins<sp/>participating<sp/>the<sp/>hash<sp/>and<sp/>helps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>secure<sp/>the<sp/>network<sp/>when<sp/>proof-of-stake<sp/>difficulty<sp/>is<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nIntervalEnd<sp/>-<sp/>nIntervalBeginning<sp/>-<sp/><ref refid="main_8cpp_1a621f4f63be83358641eb78f48d2f49c2" kindref="member">nStakeMinAge</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>last<sp/>stake<sp/>modifier<sp/>and<sp/>its<sp/>generation<sp/>time<sp/>from<sp/>a<sp/>given<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetLastStakeModifier(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>&amp;<sp/>nStakeModifier,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>&amp;<sp/>nModifierTime)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pindex)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;GetLastStakeModifier:<sp/>null<sp/>pindex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pindex<sp/>&amp;&amp;<sp/>pindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref><sp/>&amp;&amp;<sp/>!pindex-&gt;<ref refid="class_c_block_index_1a9133ab4850ecece72a92b7203ead5954" kindref="member">GeneratedStakeModifier</ref>())</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!pindex-&gt;<ref refid="class_c_block_index_1a9133ab4850ecece72a92b7203ead5954" kindref="member">GeneratedStakeModifier</ref>())</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;GetLastStakeModifier:<sp/>no<sp/>generation<sp/>at<sp/>genesis<sp/>block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>nStakeModifier<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a2aa226c04d79a4d932ed6eb0abd02cbe" kindref="member">nStakeModifier</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>nModifierTime<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>selection<sp/>interval<sp/>section<sp/>(in<sp/>seconds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>GetStakeModifierSelectionIntervalSection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSection)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(nSection<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>nSection<sp/>&lt;<sp/>64);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref><sp/>*<sp/>63<sp/>/<sp/>(63<sp/>+<sp/>((63<sp/>-<sp/>nSection)<sp/>*<sp/>(MODIFIER_INTERVAL_RATIO<sp/>-<sp/>1))));</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>stake<sp/>modifier<sp/>selection<sp/>interval<sp/>(in<sp/>seconds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>GetStakeModifierSelectionInterval()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSelectionInterval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSection=0;<sp/>nSection&lt;64;<sp/>nSection++)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSelectionInterval<sp/>+=<sp/>GetStakeModifierSelectionIntervalSection(nSection);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSelectionInterval;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>select<sp/>a<sp/>block<sp/>from<sp/>the<sp/>candidate<sp/>blocks<sp/>in<sp/>vSortedByTimestamp,<sp/>excluding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>already<sp/>selected<sp/>blocks<sp/>in<sp/>vSelectedBlocks,<sp/>and<sp/>with<sp/>timestamp<sp/>up<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nSelectionIntervalStop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SelectBlockFromCandidates(vector&lt;pair&lt;int64_t,<sp/>uint256&gt;<sp/>&gt;&amp;<sp/>vSortedByTimestamp,<sp/>map&lt;uint256,<sp/>const<sp/>CBlockIndex*&gt;&amp;<sp/>mapSelectedBlocks,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSelectionIntervalStop,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nStakeModifierPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>**<sp/>pindexSelected)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSelected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashBest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>*pindexSelected<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*)<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>)&amp;<sp/>item,<sp/>vSortedByTimestamp)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.count(item.second))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;SelectBlockFromCandidates:<sp/>failed<sp/>to<sp/>find<sp/>block<sp/>index<sp/>for<sp/>candidate<sp/>block<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>item.second.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex<sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>[item.second];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSelected<sp/>&amp;&amp;<sp/>pindex-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>()<sp/>&gt;<sp/>nSelectionIntervalStop)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapSelectedBlocks.count(pindex-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>selection<sp/>hash<sp/>by<sp/>hashing<sp/>its<sp/>proof-hash<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>proof-of-stake<sp/>modifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>pindex-&gt;<ref refid="class_c_block_index_1a553e6fc301e8130118d7ec68dce91ee9" kindref="member">hashProof</ref><sp/>&lt;&lt;<sp/>nStakeModifierPrev;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashSelection<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(ss.begin(),<sp/>ss.end());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>selection<sp/>hash<sp/>is<sp/>divided<sp/>by<sp/>2**32<sp/>so<sp/>that<sp/>proof-of-stake<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>always<sp/>favored<sp/>over<sp/>proof-of-work<sp/>block.<sp/>this<sp/>is<sp/>to<sp/>preserve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>energy<sp/>efficiency<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindex-&gt;<ref refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" kindref="member">IsProofOfStake</ref>())</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashSelection<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSelected<sp/>&amp;&amp;<sp/>hashSelection<sp/>&lt;<sp/>hashBest)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashBest<sp/>=<sp/>hashSelection;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pindexSelected<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*)<sp/>pindex;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fSelected)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fSelected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashBest<sp/>=<sp/>hashSelection;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pindexSelected<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*)<sp/>pindex;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stakemodifier&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SelectBlockFromCandidates:<sp/>selection<sp/>hash=%s\n&quot;</highlight><highlight class="normal">,<sp/>hashBest.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fSelected;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stake<sp/>Modifier<sp/>(hash<sp/>modifier<sp/>of<sp/>proof-of-stake):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>purpose<sp/>of<sp/>stake<sp/>modifier<sp/>is<sp/>to<sp/>prevent<sp/>a<sp/>txout<sp/>(coin)<sp/>owner<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computing<sp/>future<sp/>proof-of-stake<sp/>generated<sp/>by<sp/>this<sp/>txout<sp/>at<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>transaction<sp/>confirmation.<sp/>To<sp/>meet<sp/>kernel<sp/>protocol,<sp/>the<sp/>txout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>hash<sp/>with<sp/>a<sp/>future<sp/>stake<sp/>modifier<sp/>to<sp/>generate<sp/>the<sp/>proof.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stake<sp/>modifier<sp/>consists<sp/>of<sp/>bits<sp/>each<sp/>of<sp/>which<sp/>is<sp/>contributed<sp/>from<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>selected<sp/>block<sp/>of<sp/>a<sp/>given<sp/>block<sp/>group<sp/>in<sp/>the<sp/>past.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>selection<sp/>of<sp/>a<sp/>block<sp/>is<sp/>based<sp/>on<sp/>a<sp/>hash<sp/>of<sp/>the<sp/>block&apos;s<sp/>proof-hash<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>previous<sp/>stake<sp/>modifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stake<sp/>modifier<sp/>is<sp/>recomputed<sp/>at<sp/>a<sp/>fixed<sp/>time<sp/>interval<sp/>instead<sp/>of<sp/>every<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>block.<sp/>This<sp/>is<sp/>to<sp/>make<sp/>it<sp/>difficult<sp/>for<sp/>an<sp/>attacker<sp/>to<sp/>gain<sp/>control<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>additional<sp/>bits<sp/>in<sp/>the<sp/>stake<sp/>modifier,<sp/>even<sp/>after<sp/>generating<sp/>a<sp/>chain<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8cpp_1aa58b095aa0abb6f956cc68169124099a" kindref="member">ComputeNextStakeModifier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>&amp;<sp/>nStakeModifier,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>fGeneratedStakeModifier)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>nStakeModifier<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>fGeneratedStakeModifier<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pindexPrev)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fGeneratedStakeModifier<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>genesis<sp/>block&apos;s<sp/>modifier<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>find<sp/>current<sp/>stake<sp/>modifier<sp/>and<sp/>its<sp/>generation<sp/>block<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>not<sp/>old<sp/>enough,<sp/>return<sp/>the<sp/>same<sp/>stake<sp/>modifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nModifierTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!GetLastStakeModifier(pindexPrev,<sp/>nStakeModifier,<sp/>nModifierTime))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;ComputeNextStakeModifier:<sp/>unable<sp/>to<sp/>get<sp/>last<sp/>modifier&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stakemodifier&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ComputeNextStakeModifier:<sp/>prev<sp/>modifier=0x%016x<sp/>time=%s\n&quot;</highlight><highlight class="normal">,<sp/>nStakeModifier,<sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(nModifierTime));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nModifierTime<sp/>/<sp/><ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref><sp/>&gt;=<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>()<sp/>/<sp/><ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>candidate<sp/>blocks<sp/>by<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;pair&lt;int64_t,<sp/>uint256&gt;<sp/>&gt;<sp/>vSortedByTimestamp;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>vSortedByTimestamp.reserve(64<sp/>*<sp/><ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref><sp/>/<sp/>POS_TARGET_SPACING);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSelectionInterval<sp/>=<sp/>GetStakeModifierSelectionInterval();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSelectionIntervalStart<sp/>=<sp/>(pindexPrev-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>()<sp/>/<sp/><ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref>)<sp/>*<sp/><ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref><sp/>-<sp/>nSelectionInterval;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex<sp/>=<sp/>pindexPrev;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pindex<sp/>&amp;&amp;<sp/>pindex-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>()<sp/>&gt;=<sp/>nSelectionIntervalStart)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSortedByTimestamp.push_back(make_pair(pindex-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>(),<sp/>pindex-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>()));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeightFirstCandidate<sp/>=<sp/>pindex<sp/>?<sp/>(pindex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>+<sp/>1)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>reverse(vSortedByTimestamp.begin(),<sp/>vSortedByTimestamp.end());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vSortedByTimestamp.begin(),<sp/>vSortedByTimestamp.end());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>64<sp/>blocks<sp/>from<sp/>candidate<sp/>blocks<sp/>to<sp/>generate<sp/>stake<sp/>modifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nStakeModifierNew<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSelectionIntervalStop<sp/>=<sp/>nSelectionIntervalStart;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>const<sp/>CBlockIndex*&gt;<sp/>mapSelectedBlocks;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRound=0;<sp/>nRound&lt;min(64,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)vSortedByTimestamp.size());<sp/>nRound++)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>an<sp/>interval<sp/>section<sp/>to<sp/>the<sp/>current<sp/>selection<sp/>round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSelectionIntervalStop<sp/>+=<sp/>GetStakeModifierSelectionIntervalSection(nRound);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>a<sp/>block<sp/>from<sp/>the<sp/>candidates<sp/>of<sp/>current<sp/>round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SelectBlockFromCandidates(vSortedByTimestamp,<sp/>mapSelectedBlocks,<sp/>nSelectionIntervalStop,<sp/>nStakeModifier,<sp/>&amp;pindex))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;ComputeNextStakeModifier:<sp/>unable<sp/>to<sp/>select<sp/>block<sp/>at<sp/>round<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>nRound);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>entropy<sp/>bit<sp/>of<sp/>the<sp/>selected<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStakeModifierNew<sp/>|=<sp/>(((<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)pindex-&gt;<ref refid="class_c_block_index_1a54bbd7ae647d4097ac7915f1cefed2c7" kindref="member">GetStakeEntropyBit</ref>())<sp/>&lt;&lt;<sp/>nRound);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>selected<sp/>block<sp/>from<sp/>candidates<sp/>to<sp/>selected<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapSelectedBlocks.insert(make_pair(pindex-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>(),<sp/>pindex));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stakemodifier&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ComputeNextStakeModifier:<sp/>selected<sp/>round<sp/>%d<sp/>stop=%s<sp/>height=%d<sp/>bit=%d\n&quot;</highlight><highlight class="normal">,<sp/>nRound,<sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(nSelectionIntervalStop),<sp/>pindex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>,<sp/>pindex-&gt;<ref refid="class_c_block_index_1a54bbd7ae647d4097ac7915f1cefed2c7" kindref="member">GetStakeEntropyBit</ref>());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>selection<sp/>map<sp/>for<sp/>visualization<sp/>of<sp/>the<sp/>selected<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a343d2a13efe00125f78d25dafb0a8d98" kindref="member">LogAcceptCategory</ref>(</highlight><highlight class="stringliteral">&quot;stakemodifier&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strSelectionMap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;-&apos;<sp/>indicates<sp/>proof-of-work<sp/>blocks<sp/>not<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strSelectionMap.insert(0,<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>-<sp/>nHeightFirstCandidate<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindexPrev;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pindex<sp/>&amp;&amp;<sp/>pindex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>&gt;=<sp/>nHeightFirstCandidate)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;=&apos;<sp/>indicates<sp/>proof-of-stake<sp/>blocks<sp/>not<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindex-&gt;<ref refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" kindref="member">IsProofOfStake</ref>())</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strSelectionMap.replace(pindex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>-<sp/>nHeightFirstCandidate,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="classuint256" kindref="compound">uint256</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*)&amp;<sp/>item,<sp/>mapSelectedBlocks)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;S&apos;<sp/>indicates<sp/>selected<sp/>proof-of-stake<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;W&apos;<sp/>indicates<sp/>selected<sp/>proof-of-work<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strSelectionMap.replace(item.second-&gt;nHeight<sp/>-<sp/>nHeightFirstCandidate,<sp/>1,<sp/>item.second-&gt;IsProofOfStake()?<sp/></highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ComputeNextStakeModifier:<sp/>selection<sp/>height<sp/>[%d,<sp/>%d]<sp/>map<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>nHeightFirstCandidate,<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>,<sp/>strSelectionMap);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stakemodifier&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ComputeNextStakeModifier:<sp/>new<sp/>modifier=0x%016x<sp/>time=%s\n&quot;</highlight><highlight class="normal">,<sp/>nStakeModifierNew,<sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(pindexPrev-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>()));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>nStakeModifier<sp/>=<sp/>nStakeModifierNew;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>fGeneratedStakeModifier<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stake<sp/>Modifier<sp/>(hash<sp/>modifier<sp/>of<sp/>proof-of-stake):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>purpose<sp/>of<sp/>stake<sp/>modifier<sp/>is<sp/>to<sp/>prevent<sp/>a<sp/>txout<sp/>(coin)<sp/>owner<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computing<sp/>future<sp/>proof-of-stake<sp/>generated<sp/>by<sp/>this<sp/>txout<sp/>at<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>transaction<sp/>confirmation.<sp/>To<sp/>meet<sp/>kernel<sp/>protocol,<sp/>the<sp/>txout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>hash<sp/>with<sp/>a<sp/>future<sp/>stake<sp/>modifier<sp/>to<sp/>generate<sp/>the<sp/>proof.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="kernel_8h_1ae7cea47493b7e179fe492df175c9cfdc" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="kernel_8cpp_1ae7cea47493b7e179fe492df175c9cfdc" kindref="member">ComputeStakeModifierV2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pindexPrev)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>genesis<sp/>block&apos;s<sp/>modifier<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>kernel<sp/>&lt;&lt;<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" kindref="member">bnStakeModifierV2</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(ss.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ss.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DarkSilk<sp/>kernel<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coinstake<sp/>must<sp/>meet<sp/>hash<sp/>target<sp/>according<sp/>to<sp/>the<sp/>protocol:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kernel<sp/>(input<sp/>0)<sp/>must<sp/>meet<sp/>the<sp/>formula</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>hash(nStakeModifier<sp/>+<sp/>txPrev.block.nTime<sp/>+<sp/>txPrev.nTime<sp/>+<sp/>txPrev.vout.hash<sp/>+<sp/>txPrev.vout.n<sp/>+<sp/>nTime)<sp/>&lt;<sp/>bnTarget<sp/>*<sp/>nWeight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>ensures<sp/>that<sp/>the<sp/>chance<sp/>of<sp/>getting<sp/>a<sp/>coinstake<sp/>is<sp/>proportional<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>amount<sp/>of<sp/>coins<sp/>one<sp/>owns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>reason<sp/>this<sp/>hash<sp/>is<sp/>chosen<sp/>is<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>nStakeModifier:<sp/>scrambles<sp/>computation<sp/>to<sp/>make<sp/>it<sp/>very<sp/>difficult<sp/>to<sp/>precompute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>future<sp/>proof-of-stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>txPrev.block.nTime:<sp/>prevent<sp/>nodes<sp/>from<sp/>guessing<sp/>a<sp/>good<sp/>timestamp<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate<sp/>transaction<sp/>for<sp/>future<sp/>advantage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>txPrev.nTime:<sp/>slightly<sp/>scrambles<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>txPrev.vout.hash:<sp/>hash<sp/>of<sp/>txPrev,<sp/>to<sp/>reduce<sp/>the<sp/>chance<sp/>of<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generating<sp/>coinstake<sp/>at<sp/>the<sp/>same<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>txPrev.vout.n:<sp/>output<sp/>number<sp/>of<sp/>txPrev,<sp/>to<sp/>reduce<sp/>the<sp/>chance<sp/>of<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generating<sp/>coinstake<sp/>at<sp/>the<sp/>same<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>nTime:<sp/>current<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>block/tx<sp/>hash<sp/>should<sp/>not<sp/>be<sp/>used<sp/>here<sp/>as<sp/>they<sp/>can<sp/>be<sp/>generated<sp/>in<sp/>vast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>quantities<sp/>so<sp/>as<sp/>to<sp/>generate<sp/>blocks<sp/>faster,<sp/>degrading<sp/>the<sp/>system<sp/>back<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/>proof-of-work<sp/>situation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" kindref="member">CheckStakeKernelHash</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeBlockFrom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>prevout,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeTx,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashProofOfStake,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>targetProofOfStake,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fPrintProofOfStake)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTimeTx<sp/>&lt;<sp/>txPrev.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>)<sp/><sp/></highlight><highlight class="comment">//<sp/>Transaction<sp/>timestamp<sp/>violation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CheckStakeKernelHash()<sp/>:<sp/>nTime<sp/>violation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref><sp/>bnTarget;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>bnTarget.<ref refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" kindref="member">SetCompact</ref>(nBits);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Weighted<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nValueIn<sp/>=<sp/>txPrev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[prevout.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref><sp/>bnWeight<sp/>=<sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref>(nValueIn);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>bnTarget<sp/>*=<sp/>bnWeight;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>targetProofOfStake<sp/>=<sp/>bnTarget.<ref refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" kindref="member">getuint256</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nStakeModifier<sp/>=<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1a2aa226c04d79a4d932ed6eb0abd02cbe" kindref="member">nStakeModifier</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>bnStakeModifierV2<sp/>=<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" kindref="member">bnStakeModifierV2</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStakeModifierHeight<sp/>=<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStakeModifierTime<sp/>=<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" kindref="member">nTime</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>bnStakeModifierV2;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>txPrev.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref><sp/>&lt;&lt;<sp/>prevout.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref><sp/>&lt;&lt;<sp/>prevout.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&lt;&lt;<sp/>nTimeTx;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>hashProofOfStake<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(ss.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ss.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fPrintProofOfStake)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CheckStakeKernelHash()<sp/>:<sp/>using<sp/>modifier<sp/>0x%016x<sp/>at<sp/>height=%d<sp/>timestamp=%s<sp/>for<sp/>block<sp/>from<sp/>timestamp=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStakeModifier,<sp/>nStakeModifierHeight,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(nStakeModifierTime),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(nTimeBlockFrom));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CheckStakeKernelHash()<sp/>:<sp/>check<sp/>modifier=0x%016x<sp/>nTimeBlockFrom=%u<sp/>nTimeTxPrev=%u<sp/>nPrevout=%u<sp/>nTimeTx=%u<sp/>hashProof=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStakeModifier,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeBlockFrom,<sp/>txPrev.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>,<sp/>prevout.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>,<sp/>nTimeTx,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashProofOfStake.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>proof-of-stake<sp/>hash<sp/>meets<sp/>target<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_big_num" kindref="compound">CBigNum</ref>(hashProofOfStake)<sp/>&gt;<sp/>bnTarget)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref><sp/>&amp;&amp;<sp/>!fPrintProofOfStake)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CheckStakeKernelHash()<sp/>:<sp/>using<sp/>modifier<sp/>0x%016x<sp/>at<sp/>height=%d<sp/>timestamp=%s<sp/>for<sp/>block<sp/>from<sp/>timestamp=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStakeModifier,<sp/>nStakeModifierHeight,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(nStakeModifierTime),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(nTimeBlockFrom));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CheckStakeKernelHash()<sp/>:<sp/>pass<sp/>modifier=0x%016x<sp/>nTimeBlockFrom=%u<sp/>nTimeTxPrev=%u<sp/>nPrevout=%u<sp/>nTimeTx=%u<sp/>hashProof=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStakeModifier,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeBlockFrom,<sp/>txPrev.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>,<sp/>prevout.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>,<sp/>nTimeTx,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashProofOfStake.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>kernel<sp/>hash<sp/>target<sp/>and<sp/>coinstake<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8cpp_1a01e09fbdb926d4581ea48c4cf2f337a1" kindref="member">CheckProofOfStake</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashProofOfStake,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>targetProofOfStake)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tx.<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>())</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfStake()<sp/>:<sp/>called<sp/>on<sp/>non-coinstake<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kernel<sp/>(input<sp/>0)<sp/>must<sp/>match<sp/>the<sp/>stake<sp/>hash<sp/>target<sp/>per<sp/>coin<sp/>age<sp/>(nBits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin<sp/>=<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[0];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>try<sp/>finding<sp/>the<sp/>previous<sp/>transaction<sp/>in<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>txPrev;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref><sp/>txindex;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_po_s" kindref="compound">CTransactionPoS</ref><sp/>txPoS;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txPoS.<ref refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" kindref="member">ReadFromDisk</ref>(txPrev,<sp/>txdb,<sp/>txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>,<sp/>txindex))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx.<ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(1,<sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfStake()<sp/>:<sp/>INFO:<sp/>read<sp/>txPrev<sp/>failed&quot;</highlight><highlight class="normal">));<sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>transaction<sp/>not<sp/>in<sp/>main<sp/>chain,<sp/>may<sp/>occur<sp/>during<sp/>initial<sp/>download</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a3bebacccf5ed6d80e80889b65830f893" kindref="member">VerifySignature</ref>(txPrev,<sp/>tx,<sp/>0,<sp/><ref refid="script_8h_1a80155586fa275b28773c9b203f52cabaac14772d5583e6e6a1146e4ec51ae3fb0" kindref="member">SCRIPT_VERIFY_NONE</ref>,<sp/>0))</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx.<ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfStake()<sp/>:<sp/>VerifySignature<sp/>failed<sp/>on<sp/>coinstake<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>()));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>block<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!block.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(txindex.<ref refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" kindref="member">pos</ref>.<ref refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" kindref="member">nFile</ref>,<sp/>txindex.<ref refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" kindref="member">pos</ref>.<ref refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" kindref="member">nBlockPos</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>?<sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfStake()<sp/>:<sp/>read<sp/>block<sp/>failed&quot;</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>unable<sp/>to<sp/>read<sp/>block<sp/>of<sp/>previous<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a22e712bbf635a69ba8dd7ae004d2697b" kindref="member">IsConfirmedInNPrevBlocks</ref>(txindex,<sp/>pindexPrev,<sp/><ref refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" kindref="member">nStakeMinConfirmations</ref><sp/>-<sp/>1,<sp/>nDepth))</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx.<ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfStake()<sp/>:<sp/>tried<sp/>to<sp/>stake<sp/>at<sp/>depth<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>nDepth<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" kindref="member">CheckStakeKernelHash</ref>(pindexPrev,<sp/>nBits,<sp/>block.<ref refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" kindref="member">GetBlockTime</ref>(),<sp/>txPrev,<sp/>txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>,<sp/>tx.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>,<sp/>hashProofOfStake,<sp/>targetProofOfStake,<sp/><ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>))</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx.<ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(1,<sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfStake()<sp/>:<sp/>INFO:<sp/>check<sp/>kernel<sp/>failed<sp/>on<sp/>coinstake<sp/>%s,<sp/>hashProof=%s&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>hashProofOfStake.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>()));<sp/></highlight><highlight class="comment">//<sp/>may<sp/>occur<sp/>during<sp/>initial<sp/>download<sp/>or<sp/>if<sp/>behind<sp/>on<sp/>block<sp/>chain<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>coinstake<sp/>timestamp<sp/>meets<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="kernel_8h_1a03754eb0da5023cee284ac6aa68cb4e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8cpp_1a03754eb0da5023cee284ac6aa68cb4e0" kindref="member">CheckCoinStakeTimestamp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeBlock,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeTx)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nTimeBlock<sp/>==<sp/>nTimeTx)<sp/>&amp;&amp;<sp/>((nTimeTx<sp/>&amp;<sp/>STAKE_TIMESTAMP_MASK)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8cpp_1afda24c84e30a494d6b63c3a9651579ae" kindref="member">CheckKernel</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>prevout,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>*<sp/>pBlockTime)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashProofOfStake,<sp/>targetProofOfStake;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>txPrev;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref><sp/>txindex;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_po_s" kindref="compound">CTransactionPoS</ref><sp/>txPoS;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txPoS.<ref refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" kindref="member">ReadFromDisk</ref>(txPrev,<sp/>txdb,<sp/>prevout,<sp/>txindex))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>block<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!block.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(txindex.<ref refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" kindref="member">pos</ref>.<ref refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" kindref="member">nFile</ref>,<sp/>txindex.<ref refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" kindref="member">pos</ref>.<ref refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" kindref="member">nBlockPos</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a22e712bbf635a69ba8dd7ae004d2697b" kindref="member">IsConfirmedInNPrevBlocks</ref>(txindex,<sp/>pindexPrev,<sp/><ref refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" kindref="member">nStakeMinConfirmations</ref><sp/>-<sp/>1,<sp/>nDepth))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBlockTime)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pBlockTime<sp/>=<sp/>block.<ref refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" kindref="member">GetBlockTime</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" kindref="member">CheckStakeKernelHash</ref>(pindexPrev,<sp/>nBits,<sp/>block.<ref refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" kindref="member">GetBlockTime</ref>(),<sp/>txPrev,<sp/>prevout,<sp/>nTime,<sp/>hashProofOfStake,<sp/>targetProofOfStake);</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/kernel.cpp"/>
  </compounddef>
</doxygen>
