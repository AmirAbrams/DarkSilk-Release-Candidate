<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_table_cache" kind="class" language="C++" prot="public">
    <compoundname>leveldb::TableCache</compoundname>
    <includes refid="table__cache_8h" local="no">table_cache.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_table_cache_1af5d435597adb6dccac9bd05958f24afb" prot="private" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *const</type>
        <definition>Env* const leveldb::TableCache::env_</definition>
        <argsstring></argsstring>
        <name>env_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_table_cache_1adce6e6a7cfbf8822e5035ca44306c77b" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string leveldb::TableCache::dbname_</definition>
        <argsstring></argsstring>
        <name>dbname_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="52" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_table_cache_1ad24157b076d23fc18fe90d530241fd23" prot="private" static="no" mutable="no">
        <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
        <definition>const Options* leveldb::TableCache::options_</definition>
        <argsstring></argsstring>
        <name>options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="53" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_table_cache_1a27afd704a6aa631d57c684e0b8c548c6" prot="private" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_cache" kindref="compound">Cache</ref> *</type>
        <definition>Cache* leveldb::TableCache::cache_</definition>
        <argsstring></argsstring>
        <name>cache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="54" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_table_cache_1acca8df0a6305b166a7c88f27d1b3e377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TableCache::TableCache</definition>
        <argsstring>(const std::string &amp;dbname, const Options *options, int entries)</argsstring>
        <name>TableCache</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>int</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="23" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_cache_1a5690fd10ea7cc7f0d44c8e768bea872c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TableCache::~TableCache</definition>
        <argsstring>()</argsstring>
        <name>~TableCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="24" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator * leveldb::TableCache::NewIterator</definition>
        <argsstring>(const ReadOptions &amp;options, uint64_t file_number, uint64_t file_size, Table **tableptr=NULL)</argsstring>
        <name>NewIterator</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_number</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_size</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_table" kindref="compound">Table</ref> **</type>
          <declname>tableptr</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="82" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_cache_1af43ba38b52742e9f5589321747535444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::TableCache::Get</definition>
        <argsstring>(const ReadOptions &amp;options, uint64_t file_number, uint64_t file_size, const Slice &amp;k, void *arg, void(*handle_result)(void *, const Slice &amp;, const Slice &amp;))</argsstring>
        <name>Get</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_number</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_size</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>void(*)(void *, const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;, const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;)</type>
          <declname>handle_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="40" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="105" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_cache_1a57b81c58ff0533514b3a5d1652f044bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::TableCache::Evict</definition>
        <argsstring>(uint64_t file_number)</argsstring>
        <name>Evict</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="121" bodyend="125"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classleveldb_1_1_table_cache_1a7bdef9bd0719fb33021e5a638b979309" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::TableCache::FindTable</definition>
        <argsstring>(uint64_t file_number, uint64_t file_size, Cache::Handle **)</argsstring>
        <name>FindTable</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_number</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_size</declname>
        </param>
        <param>
          <type><ref refid="structleveldb_1_1_cache_1_1_handle" kindref="compound">Cache::Handle</ref> **</type>
          <defname>handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="56" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="45" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.h" bodystart="21" bodyend="57"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_table_cache_1a27afd704a6aa631d57c684e0b8c548c6" prot="private" virt="non-virtual"><scope>leveldb::TableCache</scope><name>cache_</name></member>
      <member refid="classleveldb_1_1_table_cache_1adce6e6a7cfbf8822e5035ca44306c77b" prot="private" virt="non-virtual"><scope>leveldb::TableCache</scope><name>dbname_</name></member>
      <member refid="classleveldb_1_1_table_cache_1af5d435597adb6dccac9bd05958f24afb" prot="private" virt="non-virtual"><scope>leveldb::TableCache</scope><name>env_</name></member>
      <member refid="classleveldb_1_1_table_cache_1a57b81c58ff0533514b3a5d1652f044bc" prot="public" virt="non-virtual"><scope>leveldb::TableCache</scope><name>Evict</name></member>
      <member refid="classleveldb_1_1_table_cache_1a7bdef9bd0719fb33021e5a638b979309" prot="private" virt="non-virtual"><scope>leveldb::TableCache</scope><name>FindTable</name></member>
      <member refid="classleveldb_1_1_table_cache_1af43ba38b52742e9f5589321747535444" prot="public" virt="non-virtual"><scope>leveldb::TableCache</scope><name>Get</name></member>
      <member refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" prot="public" virt="non-virtual"><scope>leveldb::TableCache</scope><name>NewIterator</name></member>
      <member refid="classleveldb_1_1_table_cache_1ad24157b076d23fc18fe90d530241fd23" prot="private" virt="non-virtual"><scope>leveldb::TableCache</scope><name>options_</name></member>
      <member refid="classleveldb_1_1_table_cache_1acca8df0a6305b166a7c88f27d1b3e377" prot="public" virt="non-virtual"><scope>leveldb::TableCache</scope><name>TableCache</name></member>
      <member refid="classleveldb_1_1_table_cache_1a5690fd10ea7cc7f0d44c8e768bea872c" prot="public" virt="non-virtual"><scope>leveldb::TableCache</scope><name>~TableCache</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
