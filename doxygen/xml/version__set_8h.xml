<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="version__set_8h" kind="file" language="C++">
    <compoundname>version_set.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes refid="dbformat_8h" local="yes">db/dbformat.h</includes>
    <includes refid="version__edit_8h" local="yes">db/version_edit.h</includes>
    <includes refid="port_8h" local="yes">port/port.h</includes>
    <includes refid="thread__annotations_8h" local="yes">port/thread_annotations.h</includes>
    <includedby refid="corruption__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</includedby>
    <includedby refid="db__bench_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_bench.cc</includedby>
    <includedby refid="db__impl_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_impl.cc</includedby>
    <includedby refid="db__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_test.cc</includedby>
    <includedby refid="version__edit_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_edit.cc</includedby>
    <includedby refid="version__set_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_set.cc</includedby>
    <includedby refid="version__set__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_set_test.cc</includedby>
    <incdepgraph>
      <node id="7724">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="7708" relation="include">
        </childnode>
        <childnode refid="7712" relation="include">
        </childnode>
        <childnode refid="7710" relation="include">
        </childnode>
        <childnode refid="7723" relation="include">
        </childnode>
      </node>
      <node id="7715">
        <label>assert.h</label>
      </node>
      <node id="7719">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="7716" relation="include">
        </childnode>
      </node>
      <node id="7725">
        <label>db/version_edit.h</label>
        <link refid="version__edit_8h"/>
        <childnode refid="7705" relation="include">
        </childnode>
        <childnode refid="7726" relation="include">
        </childnode>
        <childnode refid="7706" relation="include">
        </childnode>
        <childnode refid="7707" relation="include">
        </childnode>
      </node>
      <node id="7707">
        <label>db/dbformat.h</label>
        <link refid="dbformat_8h"/>
        <childnode refid="7708" relation="include">
        </childnode>
        <childnode refid="7709" relation="include">
        </childnode>
        <childnode refid="7711" relation="include">
        </childnode>
        <childnode refid="7720" relation="include">
        </childnode>
        <childnode refid="7714" relation="include">
        </childnode>
        <childnode refid="7721" relation="include">
        </childnode>
        <childnode refid="7722" relation="include">
        </childnode>
        <childnode refid="7724" relation="include">
        </childnode>
      </node>
      <node id="7711">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="7712" relation="include">
        </childnode>
        <childnode refid="7708" relation="include">
        </childnode>
        <childnode refid="7713" relation="include">
        </childnode>
        <childnode refid="7719" relation="include">
        </childnode>
      </node>
      <node id="7710">
        <label>string</label>
      </node>
      <node id="7704">
        <label>map</label>
      </node>
      <node id="7716">
        <label>stddef.h</label>
      </node>
      <node id="7718">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="7710" relation="include">
        </childnode>
        <childnode refid="7714" relation="include">
        </childnode>
      </node>
      <node id="7703">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.h</label>
        <link refid="version_set.h"/>
        <childnode refid="7704" relation="include">
        </childnode>
        <childnode refid="7705" relation="include">
        </childnode>
        <childnode refid="7706" relation="include">
        </childnode>
        <childnode refid="7707" relation="include">
        </childnode>
        <childnode refid="7725" relation="include">
        </childnode>
        <childnode refid="7723" relation="include">
        </childnode>
        <childnode refid="7727" relation="include">
        </childnode>
      </node>
      <node id="7722">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="7712" relation="include">
        </childnode>
        <childnode refid="7717" relation="include">
        </childnode>
        <childnode refid="7710" relation="include">
        </childnode>
        <childnode refid="7714" relation="include">
        </childnode>
        <childnode refid="7723" relation="include">
        </childnode>
      </node>
      <node id="7717">
        <label>string.h</label>
      </node>
      <node id="7706">
        <label>vector</label>
      </node>
      <node id="7726">
        <label>utility</label>
      </node>
      <node id="7723">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="7717" relation="include">
        </childnode>
      </node>
      <node id="7712">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="7721">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="7712" relation="include">
        </childnode>
        <childnode refid="7719" relation="include">
        </childnode>
        <childnode refid="7718" relation="include">
        </childnode>
      </node>
      <node id="7714">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="7715" relation="include">
        </childnode>
        <childnode refid="7716" relation="include">
        </childnode>
        <childnode refid="7717" relation="include">
        </childnode>
        <childnode refid="7710" relation="include">
        </childnode>
      </node>
      <node id="7705">
        <label>set</label>
      </node>
      <node id="7727">
        <label>port/thread_annotations.h</label>
        <link refid="thread__annotations_8h"/>
      </node>
      <node id="7708">
        <label>stdio.h</label>
      </node>
      <node id="7720">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="7710" relation="include">
        </childnode>
      </node>
      <node id="7709">
        <label>leveldb/comparator.h</label>
        <link refid="comparator_8h"/>
        <childnode refid="7710" relation="include">
        </childnode>
      </node>
      <node id="7713">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="7714" relation="include">
        </childnode>
        <childnode refid="7718" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7731">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.cc</label>
        <link refid="db__impl_8cc"/>
      </node>
      <node id="7733">
        <label>/home/dev/ds-160209/src/leveldb/db/version_edit.cc</label>
        <link refid="version__edit_8cc"/>
      </node>
      <node id="7734">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.cc</label>
        <link refid="version__set_8cc"/>
      </node>
      <node id="7730">
        <label>/home/dev/ds-160209/src/leveldb/db/db_bench.cc</label>
        <link refid="db__bench_8cc"/>
      </node>
      <node id="7728">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.h</label>
        <link refid="version_set.h"/>
        <childnode refid="7729" relation="include">
        </childnode>
        <childnode refid="7730" relation="include">
        </childnode>
        <childnode refid="7731" relation="include">
        </childnode>
        <childnode refid="7732" relation="include">
        </childnode>
        <childnode refid="7733" relation="include">
        </childnode>
        <childnode refid="7734" relation="include">
        </childnode>
        <childnode refid="7735" relation="include">
        </childnode>
      </node>
      <node id="7732">
        <label>/home/dev/ds-160209/src/leveldb/db/db_test.cc</label>
        <link refid="db__test_8cc"/>
      </node>
      <node id="7729">
        <label>/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</label>
        <link refid="corruption__test_8cc"/>
      </node>
      <node id="7735">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set_test.cc</label>
        <link refid="version__set__test_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classleveldb_1_1_version" prot="public">leveldb::Version</innerclass>
    <innerclass refid="structleveldb_1_1_version_1_1_get_stats" prot="public">leveldb::Version::GetStats</innerclass>
    <innerclass refid="classleveldb_1_1_version_set" prot="public">leveldb::VersionSet</innerclass>
    <innerclass refid="structleveldb_1_1_version_set_1_1_level_summary_storage" prot="public">leveldb::VersionSet::LevelSummaryStorage</innerclass>
    <innerclass refid="classleveldb_1_1_compaction" prot="public">leveldb::Compaction</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1log">leveldb::log</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>representation<sp/>of<sp/>a<sp/>DBImpl<sp/>consists<sp/>of<sp/>a<sp/>set<sp/>of<sp/>Versions.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>newest<sp/>version<sp/>is<sp/>called<sp/>&quot;current&quot;.<sp/><sp/>Older<sp/>versions<sp/>may<sp/>be<sp/>kept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>around<sp/>to<sp/>provide<sp/>a<sp/>consistent<sp/>view<sp/>to<sp/>live<sp/>iterators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>Version<sp/>keeps<sp/>track<sp/>of<sp/>a<sp/>set<sp/>of<sp/>Table<sp/>files<sp/>per<sp/>level.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>entire<sp/>set<sp/>of<sp/>versions<sp/>is<sp/>maintained<sp/>in<sp/>a<sp/>VersionSet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version,VersionSet<sp/>are<sp/>thread-compatible,<sp/>but<sp/>require<sp/>external</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>synchronization<sp/>on<sp/>all<sp/>accesses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STORAGE_LEVELDB_DB_VERSION_SET_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORAGE_LEVELDB_DB_VERSION_SET_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dbformat_8h" kindref="compound">db/dbformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version__edit_8h" kindref="compound">db/version_edit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="port_8h" kindref="compound">port/port.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thread__annotations_8h" kindref="compound">port/thread_annotations.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">log<sp/>{<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Writer;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Compaction;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Iterator;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemTable;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TableBuilder;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TableCache;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Version;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VersionSet;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WritableFile;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>smallest<sp/>index<sp/>i<sp/>such<sp/>that<sp/>files[i]-&gt;largest<sp/>&gt;=<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>files.size()<sp/>if<sp/>there<sp/>is<sp/>no<sp/>such<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>&quot;files&quot;<sp/>contains<sp/>a<sp/>sorted<sp/>list<sp/>of<sp/>non-overlapping<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" kindref="member">FindFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InternalKeyComparator&amp;<sp/>icmp,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>key);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>some<sp/>file<sp/>in<sp/>&quot;files&quot;<sp/>overlaps<sp/>the<sp/>user<sp/>key<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[*smallest,*largest].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>smallest==NULL<sp/>represents<sp/>a<sp/>key<sp/>smaller<sp/>than<sp/>all<sp/>keys<sp/>in<sp/>the<sp/>DB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>largest==NULL<sp/>represents<sp/>a<sp/>key<sp/>largest<sp/>than<sp/>all<sp/>keys<sp/>in<sp/>the<sp/>DB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>If<sp/>disjoint_sorted_files,<sp/>files[]<sp/>contains<sp/>disjoint<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>sorted<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a1a6a370f17b20667b885b5b91159c5a9" kindref="member">SomeFileOverlapsRange</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InternalKeyComparator&amp;<sp/>icmp,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disjoint_sorted_files,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>files,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice*<sp/>smallest_user_key,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice*<sp/>largest_user_key);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classleveldb_1_1_version" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>to<sp/>*iters<sp/>a<sp/>sequence<sp/>of<sp/>iterators<sp/>that<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>yield<sp/>the<sp/>contents<sp/>of<sp/>this<sp/>Version<sp/>when<sp/>merged<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>This<sp/>version<sp/>has<sp/>been<sp/>saved<sp/>(see<sp/>VersionSet::SaveTo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a035a0fa5bfe7ab84a711b1138b0b9a3d" kindref="member">AddIterators</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;,<sp/>std::vector&lt;Iterator*&gt;*<sp/>iters);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lookup<sp/>the<sp/>value<sp/>for<sp/>key.<sp/><sp/>If<sp/>found,<sp/>store<sp/>it<sp/>in<sp/>*val<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>OK.<sp/><sp/>Else<sp/>return<sp/>a<sp/>non-OK<sp/>status.<sp/><sp/>Fills<sp/>*stats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>lock<sp/>is<sp/>not<sp/>held</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structleveldb_1_1_version_1_1_get_stats" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_version_1_1_get_stats" kindref="compound">GetStats</ref><sp/>{</highlight></codeline>
<codeline lineno="70" refid="structleveldb_1_1_version_1_1_get_stats_1a8c677e9a2d5bc48a5bcc40e07dd2cca7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/><ref refid="structleveldb_1_1_version_1_1_get_stats_1a8c677e9a2d5bc48a5bcc40e07dd2cca7" kindref="member">seek_file</ref>;</highlight></codeline>
<codeline lineno="71" refid="structleveldb_1_1_version_1_1_get_stats_1a6cd952d5850faf00c7d45f79973a76d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_version_1_1_get_stats_1a6cd952d5850faf00c7d45f79973a76d4" kindref="member">seek_file_level</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_lookup_key" kindref="compound">LookupKey</ref>&amp;<sp/>key,<sp/>std::string*<sp/>val,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_version_1_1_get_stats" kindref="compound">GetStats</ref>*<sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>&quot;stats&quot;<sp/>into<sp/>the<sp/>current<sp/>state.<sp/><sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compaction<sp/>may<sp/>need<sp/>to<sp/>be<sp/>triggered,<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>lock<sp/>is<sp/>held</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a7e5b8451deb7c4b9006fd9d5ccfc2cef" kindref="member">UpdateStats</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_version_1_1_get_stats" kindref="compound">GetStats</ref>&amp;<sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>a<sp/>sample<sp/>of<sp/>bytes<sp/>read<sp/>at<sp/>the<sp/>specified<sp/>internal<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Samples<sp/>are<sp/>taken<sp/>approximately<sp/>once<sp/>every<sp/>config::kReadBytesPeriod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bytes.<sp/><sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>new<sp/>compaction<sp/>may<sp/>need<sp/>to<sp/>be<sp/>triggered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>lock<sp/>is<sp/>held</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a8b9e51b3d0503fe5868f656356557ded" kindref="member">RecordReadSample</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>key);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>count<sp/>management<sp/>(so<sp/>Versions<sp/>do<sp/>not<sp/>disappear<sp/>out<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>under<sp/>live<sp/>iterators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1afd86dffba7ce5229778bddd546517392" kindref="member">GetOverlappingInputs</ref>(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>begin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>before<sp/>all<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>end,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>after<sp/>all<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FileMetaData*&gt;*<sp/>inputs);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>some<sp/>file<sp/>in<sp/>the<sp/>specified<sp/>level<sp/>overlaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>part<sp/>of<sp/>[*smallest_user_key,*largest_user_key].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>smallest_user_key==NULL<sp/>represents<sp/>a<sp/>key<sp/>smaller<sp/>than<sp/>all<sp/>keys<sp/>in<sp/>the<sp/>DB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>largest_user_key==NULL<sp/>represents<sp/>a<sp/>key<sp/>largest<sp/>than<sp/>all<sp/>keys<sp/>in<sp/>the<sp/>DB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a7945e88b8a4f2f7b6f3201cb3d791f1e" kindref="member">OverlapInLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>smallest_user_key,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>largest_user_key);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>level<sp/>at<sp/>which<sp/>we<sp/>should<sp/>place<sp/>a<sp/>new<sp/>memtable<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>that<sp/>covers<sp/>the<sp/>range<sp/>[smallest_user_key,largest_user_key].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1ac3b623319110ed2a9491723dd4675431" kindref="member">PickLevelForMemTableOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>smallest_user_key,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>largest_user_key);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classleveldb_1_1_version_1a0995beaa980f4d338cd9aa75c1e9795c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_1a0995beaa980f4d338cd9aa75c1e9795c" kindref="member">NumFiles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>files_[level].size();<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>human<sp/>readable<sp/>string<sp/>that<sp/>describes<sp/>this<sp/>version&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_version_1a83d35444c8e7c617a3a70e4c9050ce08" kindref="member">DebugString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117" refid="classleveldb_1_1_version_1a9372e882b35d27c78356228e4b758917" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>;</highlight></codeline>
<codeline lineno="118" refid="classleveldb_1_1_version_1a1827cd1b4d6e9e3c378ce37ca3cce635" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version_1_1_level_file_num_iterator" kindref="compound">LevelFileNumIterator</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>NewConcatenatingIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>func(arg,<sp/>level,<sp/>f)<sp/>for<sp/>every<sp/>file<sp/>that<sp/>overlaps<sp/>user_key<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>from<sp/>newest<sp/>to<sp/>oldest.<sp/><sp/>If<sp/>an<sp/>invocation<sp/>of<sp/>func<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>false,<sp/>makes<sp/>no<sp/>more<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>user<sp/>portion<sp/>of<sp/>internal_key<sp/>==<sp/>user_key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEachOverlapping(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="version__set_8cc_1afced2118ae0bf03db7c7e75a21cfd004" kindref="member">user_key</ref>,<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>internal_key,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(*<ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>*<sp/>vset_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VersionSet<sp/>to<sp/>which<sp/>this<sp/>Version<sp/>belongs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>next_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>version<sp/>in<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>prev_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previous<sp/>version<sp/>in<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memenv_8cc_1af5ddacec8db71e6c2253bcb2050a8d2e" kindref="member">refs_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>live<sp/>refs<sp/>to<sp/>this<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>files<sp/>per<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>files_[config::kNumLevels];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>file<sp/>to<sp/>compact<sp/>based<sp/>on<sp/>seek<sp/>stats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/>file_to_compact_;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_to_compact_level_;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Level<sp/>that<sp/>should<sp/>be<sp/>compacted<sp/>next<sp/>and<sp/>its<sp/>compaction<sp/>score.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Score<sp/>&lt;<sp/>1<sp/>means<sp/>compaction<sp/>is<sp/>not<sp/>strictly<sp/>needed.<sp/><sp/>These<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>initialized<sp/>by<sp/>Finalize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>compaction_score_;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compaction_level_;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>(<ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>*<sp/>vset)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>vset_(vset),<sp/>next_(this),<sp/>prev_(this),<sp/>refs_(0),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_to_compact_(NULL),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_to_compact_level_(-1),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compaction_score_(-1),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compaction_level_(-1)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>~<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>&amp;);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>&amp;);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classleveldb_1_1_version_set" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set_1a9e57cec002caced94f5355bb705bd52d" kindref="member">VersionSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dbname,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>*<sp/>options,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_table_cache" kindref="compound">TableCache</ref>*<sp/>table_cache,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>*);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set_1a53a424c5bb7699808193f150e3432e92" kindref="member">~VersionSet</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>*edit<sp/>to<sp/>the<sp/>current<sp/>version<sp/>to<sp/>form<sp/>a<sp/>new<sp/>descriptor<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>both<sp/>saved<sp/>to<sp/>persistent<sp/>state<sp/>and<sp/>installed<sp/>as<sp/>the<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>version.<sp/><sp/>Will<sp/>release<sp/>*mu<sp/>while<sp/>actually<sp/>writing<sp/>to<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>*mu<sp/>is<sp/>held<sp/>on<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>no<sp/>other<sp/>thread<sp/>concurrently<sp/>calls<sp/>LogAndApply()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">LogAndApply</ref>(<ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref>*<sp/>edit,<sp/><ref refid="classleveldb_1_1port_1_1_mutex" kindref="compound">port::Mutex</ref>*<sp/><ref refid="db__bench_8cc_1a1a5c2f3b52d2dec1d9896cec4b02d17e" kindref="member">mu</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="thread__annotations_8h_1a0e2e86b0f11d9778240b0a0b263047b1" kindref="member">EXCLUSIVE_LOCKS_REQUIRED</ref>(mu);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Recover<sp/>the<sp/>last<sp/>saved<sp/>descriptor<sp/>from<sp/>persistent<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" kindref="member">Recover</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>current<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/><ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_;<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>current<sp/>manifest<sp/>file<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classleveldb_1_1_version_set_1a1e0d9925a9d909345ede866b9c504750" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1a1e0d9925a9d909345ede866b9c504750" kindref="member">ManifestFileNumber</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>manifest_file_number_;<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>return<sp/>a<sp/>new<sp/>file<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classleveldb_1_1_version_set_1ac4086c848479e74c1d9eb95e250e7167" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1ac4086c848479e74c1d9eb95e250e7167" kindref="member">NewFileNumber</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_file_number_++;<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Arrange<sp/>to<sp/>reuse<sp/>&quot;file_number&quot;<sp/>unless<sp/>a<sp/>newer<sp/>file<sp/>number<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>been<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>&quot;file_number&quot;<sp/>was<sp/>returned<sp/>by<sp/>a<sp/>call<sp/>to<sp/>NewFileNumber().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classleveldb_1_1_version_set_1a8131cebf5be3283e2ce1029e8be0d14e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a8131cebf5be3283e2ce1029e8be0d14e" kindref="member">ReuseFileNumber</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>file_number)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_file_number_<sp/>==<sp/>file_number<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_file_number_<sp/>=<sp/>file_number;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>Table<sp/>files<sp/>at<sp/>the<sp/>specified<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" kindref="member">NumLevelFiles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>combined<sp/>file<sp/>size<sp/>of<sp/>all<sp/>files<sp/>at<sp/>the<sp/>specified<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1adfe3e1061becd9e2756b2dd4447b52e0" kindref="member">NumLevelBytes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>last<sp/>sequence<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" kindref="member">LastSequence</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last_sequence_;<sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>last<sp/>sequence<sp/>number<sp/>to<sp/>s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classleveldb_1_1_version_set_1a2234860e72a1ac7361d7bee107da6a07" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a2234860e72a1ac7361d7bee107da6a07" kindref="member">SetLastSequence</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(s<sp/>&gt;=<sp/>last_sequence_);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>last_sequence_<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>specified<sp/>file<sp/>number<sp/>as<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a8a009a58938b12c7a69bda2b4da115a0" kindref="member">MarkFileNumberUsed</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>current<sp/>log<sp/>file<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classleveldb_1_1_version_set_1a0ff6a25abcf0b0c7d94bd425b6fb0ef2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1a0ff6a25abcf0b0c7d94bd425b6fb0ef2" kindref="member">LogNumber</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log_number_;<sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>log<sp/>file<sp/>number<sp/>for<sp/>the<sp/>log<sp/>file<sp/>that<sp/>is<sp/>currently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>compacted,<sp/>or<sp/>zero<sp/>if<sp/>there<sp/>is<sp/>no<sp/>such<sp/>log<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classleveldb_1_1_version_set_1a0c2a382650ba2b987d8059faacbd0c39" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1a0c2a382650ba2b987d8059faacbd0c39" kindref="member">PrevLogNumber</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prev_log_number_;<sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pick<sp/>level<sp/>and<sp/>inputs<sp/>for<sp/>a<sp/>new<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>NULL<sp/>if<sp/>there<sp/>is<sp/>no<sp/>compaction<sp/>to<sp/>be<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>heap-allocated<sp/>object<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>describes<sp/>the<sp/>compaction.<sp/><sp/>Caller<sp/>should<sp/>delete<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/><ref refid="classleveldb_1_1_version_set_1a1cdc6a05e0a7df9f29b5bccd485a0219" kindref="member">PickCompaction</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>compaction<sp/>object<sp/>for<sp/>compacting<sp/>the<sp/>range<sp/>[begin,end]<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>specified<sp/>level.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>in<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>level<sp/>that<sp/>overlaps<sp/>the<sp/>specified<sp/>range.<sp/><sp/>Caller<sp/>should<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/><ref refid="classleveldb_1_1_version_set_1a3a03f9a6c86e861be314cf8e01f33142" kindref="member">CompactRange</ref>(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>begin,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>end);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>maximum<sp/>overlapping<sp/>data<sp/>(in<sp/>bytes)<sp/>at<sp/>next<sp/>level<sp/>for<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>at<sp/>a<sp/>level<sp/>&gt;=<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1a32dc1a7e1eaeeeac89286be3483ad612" kindref="member">MaxNextLevelOverlappingBytes</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>iterator<sp/>that<sp/>reads<sp/>over<sp/>the<sp/>compaction<sp/>inputs<sp/>for<sp/>&quot;*c&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>caller<sp/>should<sp/>delete<sp/>the<sp/>iterator<sp/>when<sp/>no<sp/>longer<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_version_set_1a181194e96a88e69a60c1fda9cf3c4651" kindref="member">MakeInputIterator</ref>(<ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/>c);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>some<sp/>level<sp/>needs<sp/>a<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classleveldb_1_1_version_set_1aa2976498024282e1449dcba88c6df162" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1aa2976498024282e1449dcba88c6df162" kindref="member">NeedsCompaction</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v<sp/>=<sp/>current_;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v-&gt;compaction_score_<sp/>&gt;=<sp/>1)<sp/>||<sp/>(v-&gt;file_to_compact_<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>files<sp/>listed<sp/>in<sp/>any<sp/>live<sp/>version<sp/>to<sp/>*live.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>also<sp/>mutate<sp/>some<sp/>internal<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set_1a3b3c810f0fea88db81b94e604b3dd78f" kindref="member">AddLiveFiles</ref>(std::set&lt;uint64_t&gt;*<sp/>live);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>approximate<sp/>offset<sp/>in<sp/>the<sp/>database<sp/>of<sp/>the<sp/>data<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;key&quot;<sp/>as<sp/>of<sp/>version<sp/>&quot;v&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_version_set_1ada7f3ed63b1c48adb6e5b38348b300e1" kindref="member">ApproximateOffsetOf</ref>(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>&amp;<sp/>key);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>human-readable<sp/>short<sp/>(single-line)<sp/>summary<sp/>of<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>files<sp/>per<sp/>level.<sp/><sp/>Uses<sp/>*scratch<sp/>as<sp/>backing<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="structleveldb_1_1_version_set_1_1_level_summary_storage" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_version_set_1_1_level_summary_storage" kindref="compound">LevelSummaryStorage</ref><sp/>{</highlight></codeline>
<codeline lineno="267" refid="structleveldb_1_1_version_set_1_1_level_summary_storage_1a90b283461affa0f25f41bc21a9c81bbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_version_set_1_1_level_summary_storage_1a90b283461affa0f25f41bc21a9c81bbc" kindref="member">buffer</ref>[100];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classleveldb_1_1_version_set_1abc156e2c0a7f2d0ef4a14b6f27a382a3" kindref="member">LevelSummary</ref>(<ref refid="structleveldb_1_1_version_set_1_1_level_summary_storage" kindref="compound">LevelSummaryStorage</ref>*<sp/>scratch)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272" refid="classleveldb_1_1_version_set_1a9372e882b35d27c78356228e4b758917" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version_set_1_1_builder" kindref="compound">Builder</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>;</highlight></codeline>
<codeline lineno="275" refid="classleveldb_1_1_version_set_1ace162f32d4abb584945d3a55a389b0a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Finalize(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>inputs,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>smallest,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>largest);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetRange2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>inputs1,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileMetaData*&gt;&amp;<sp/>inputs2,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>smallest,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>*<sp/>largest);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetupOtherInputs(<ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/>c);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>current<sp/>contents<sp/>to<sp/>*log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>WriteSnapshot(<ref refid="classleveldb_1_1log_1_1_writer" kindref="compound">log::Writer</ref>*<sp/>log);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendVersion(<ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="repair_8cc_1a2661128a4b7cbc28cec2dfc2fa13816f" kindref="member">dbname_</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="repair_8cc_1a277741aecbdc3655b3bde5df34d80513" kindref="member">options_</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_table_cache" kindref="compound">TableCache</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="repair_8cc_1a3a1b17e04f2f36697594146dfd0cdab1" kindref="member">table_cache_</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref><sp/><ref refid="repair_8cc_1a49fb5b3528eb4f2b72f03af0ddc271dc" kindref="member">icmp_</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="repair_8cc_1ac836213121a88334277d0736717f3c51" kindref="member">next_file_number_</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>manifest_file_number_;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>last_sequence_;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>log_number_;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>prev_log_number_;<sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>or<sp/>backing<sp/>store<sp/>for<sp/>memtable<sp/>being<sp/>compacted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Opened<sp/>lazily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/>descriptor_file_;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1log_1_1_writer" kindref="compound">log::Writer</ref>*<sp/>descriptor_log_;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref><sp/>dummy_versions_;<sp/><sp/></highlight><highlight class="comment">//<sp/>Head<sp/>of<sp/>circular<sp/>doubly-linked<sp/>list<sp/>of<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/><ref refid="merger_8cc_1a29ad3b792b4f045e9e25d657bd605060" kindref="member">current_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>dummy_versions_.prev_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Per-level<sp/>key<sp/>at<sp/>which<sp/>the<sp/>next<sp/>compaction<sp/>at<sp/>that<sp/>level<sp/>should<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>an<sp/>empty<sp/>string,<sp/>or<sp/>a<sp/>valid<sp/>InternalKey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>std::string<sp/>compact_pointer_[config::kNumLevels];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set_1a9e57cec002caced94f5355bb705bd52d" kindref="member">VersionSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>&amp;);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>&amp;);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>Compaction<sp/>encapsulates<sp/>information<sp/>about<sp/>a<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classleveldb_1_1_compaction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_compaction_1ad29d60feea9dd53f54a2bd9301dbd9c4" kindref="member">~Compaction</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>level<sp/>that<sp/>is<sp/>being<sp/>compacted.<sp/><sp/>Inputs<sp/>from<sp/>&quot;level&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>&quot;level+1&quot;<sp/>will<sp/>be<sp/>merged<sp/>to<sp/>produce<sp/>a<sp/>set<sp/>of<sp/>&quot;level+1&quot;<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classleveldb_1_1_compaction_1aaf72769cc8dabece3e513399425f91fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1aaf72769cc8dabece3e513399425f91fa" kindref="member">level</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>level_;<sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>object<sp/>that<sp/>holds<sp/>the<sp/>edits<sp/>to<sp/>the<sp/>descriptor<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>this<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classleveldb_1_1_compaction_1a122e4f7b4fdb6c0d1862624742b34b3d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref>*<sp/><ref refid="classleveldb_1_1_compaction_1a122e4f7b4fdb6c0d1862624742b34b3d" kindref="member">edit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;edit_;<sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;which&quot;<sp/>must<sp/>be<sp/>either<sp/>0<sp/>or<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classleveldb_1_1_compaction_1a75bcfebad0f838380ef7f63dc083e992" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1a75bcfebad0f838380ef7f63dc083e992" kindref="member">num_input_files</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputs_[which].size();<sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>ith<sp/>input<sp/>file<sp/>at<sp/>&quot;level()+which&quot;<sp/>(&quot;which&quot;<sp/>must<sp/>be<sp/>0<sp/>or<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classleveldb_1_1_compaction_1a989d147c33f2993d4503c56ea0ee3a78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref>*<sp/><ref refid="classleveldb_1_1_compaction_1a989d147c33f2993d4503c56ea0ee3a78" kindref="member">input</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputs_[which][i];<sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>size<sp/>of<sp/>files<sp/>to<sp/>build<sp/>during<sp/>this<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classleveldb_1_1_compaction_1a02ecf935a684691ef864a8997bfab793" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_compaction_1a02ecf935a684691ef864a8997bfab793" kindref="member">MaxOutputFileSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_output_file_size_;<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>a<sp/>trivial<sp/>compaction<sp/>that<sp/>can<sp/>be<sp/>implemented<sp/>by<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>moving<sp/>a<sp/>single<sp/>input<sp/>file<sp/>to<sp/>the<sp/>next<sp/>level<sp/>(no<sp/>merging<sp/>or<sp/>splitting)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1a9d88e4a33ba63749cb0f0f04fbc74968" kindref="member">IsTrivialMove</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>inputs<sp/>to<sp/>this<sp/>compaction<sp/>as<sp/>delete<sp/>operations<sp/>to<sp/>*edit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1abb1acdc9b882a7497603b13386e7e1a7" kindref="member">AddInputDeletions</ref>(<ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref>*<sp/><ref refid="classleveldb_1_1_compaction_1a122e4f7b4fdb6c0d1862624742b34b3d" kindref="member">edit</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>information<sp/>we<sp/>have<sp/>available<sp/>guarantees<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>compaction<sp/>is<sp/>producing<sp/>data<sp/>in<sp/>&quot;level+1&quot;<sp/>for<sp/>which<sp/>no<sp/>data<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>levels<sp/>greater<sp/>than<sp/>&quot;level+1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1ae982beb6ee52d92de76a363ef0eefc29" kindref="member">IsBaseLevelForKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>user_key);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>we<sp/>should<sp/>stop<sp/>building<sp/>the<sp/>current<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>processing<sp/>&quot;internal_key&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1a07624423bb512fedb358a008a38fa0b9" kindref="member">ShouldStopBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>internal_key);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>the<sp/>input<sp/>version<sp/>for<sp/>the<sp/>compaction,<sp/>once<sp/>the<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1a87ec90747d22dce0d103149db1ecf709" kindref="member">ReleaseInputs</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364" refid="classleveldb_1_1_compaction_1ace162f32d4abb584945d3a55a389b0a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>;</highlight></codeline>
<codeline lineno="365" refid="classleveldb_1_1_compaction_1a1827cd1b4d6e9e3c378ce37ca3cce635" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_compaction_1aaf72769cc8dabece3e513399425f91fa" kindref="member">level</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level_;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>max_output_file_size_;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>input_version_;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref><sp/><ref refid="repair_8cc_1a9876937f85aa6cf9b58d8ae0c99714f7" kindref="member">edit_</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>compaction<sp/>reads<sp/>inputs<sp/>from<sp/>&quot;level_&quot;<sp/>and<sp/>&quot;level_+1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>inputs_[2];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>two<sp/>sets<sp/>of<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>used<sp/>to<sp/>check<sp/>for<sp/>number<sp/>of<sp/>of<sp/>overlapping<sp/>grandparent<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(parent<sp/>==<sp/>level_<sp/>+<sp/>1,<sp/>grandparent<sp/>==<sp/>level_<sp/>+<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>std::vector&lt;FileMetaData*&gt;<sp/>grandparents_;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grandparent_index_;<sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>in<sp/>grandparent_starts_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>seen_key_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>output<sp/>key<sp/>has<sp/>been<sp/>seen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>overlapped_bytes_;<sp/><sp/></highlight><highlight class="comment">//<sp/>Bytes<sp/>of<sp/>overlap<sp/>between<sp/>current<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>grandparent<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>for<sp/>implementing<sp/>IsBaseLevelForKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>level_ptrs_<sp/>holds<sp/>indices<sp/>into<sp/>input_version_-&gt;levels_:<sp/>our<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>that<sp/>we<sp/>are<sp/>positioned<sp/>at<sp/>one<sp/>of<sp/>the<sp/>file<sp/>ranges<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>higher<sp/>level<sp/>than<sp/>the<sp/>ones<sp/>involved<sp/>in<sp/>this<sp/>compaction<sp/>(i.e.<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>L<sp/>&gt;=<sp/>level_<sp/>+<sp/>2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>level_ptrs_[config::kNumLevels];</highlight></codeline>
<codeline lineno="392"><highlight class="normal">};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>STORAGE_LEVELDB_DB_VERSION_SET_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/db/version_set.h"/>
  </compounddef>
</doxygen>
