<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="namespacejson__spirit_1_1internal__" kind="namespace" language="C++">
    <compoundname>json_spirit::internal_</compoundname>
    <innerclass refid="structjson__spirit_1_1internal___1_1_type__to__type" prot="public">json_spirit::internal_::Type_to_type</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1a4051677c7ad7b34f786fda82e59aae26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; int &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; int &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="478" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="478" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1a85446237bd702aa56a84ea12262b024c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; int64_t &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="484" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="484" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1a696065019a46e1743de74d73cca8134e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; uint64_t &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="490" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="490" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1a09fae346c76d073ff452de5c27ffbd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; double &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; double &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="496" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="496" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1a266bd313e6ca19ab3f4026916bf2f54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type><ref refid="classjson__spirit_1_1_value__impl_1a7af638128a4e0dd86ab33c989c3e5ebf" kindref="member">Value::String_type</ref></type>
        <definition>Value::String_type json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; typename Value::String_type &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; typename <ref refid="classjson__spirit_1_1_value__impl_1a7af638128a4e0dd86ab33c989c3e5ebf" kindref="member">Value::String_type</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="502" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="502" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1af01c9b21156bea2ebe378ce029acc07b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type><ref refid="classjson__spirit_1_1_value__impl_1a8cbad4704c204a3421817f08a0b44dd6" kindref="member">Value::Array</ref></type>
        <definition>Value::Array json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; typename Value::Array &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; typename <ref refid="classjson__spirit_1_1_value__impl_1a8cbad4704c204a3421817f08a0b44dd6" kindref="member">Value::Array</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="508" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="508" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1a8f06706f86ff0034661effdba9d42236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type><ref refid="classjson__spirit_1_1_value__impl_1ac4467b91c71f897bab0c6d74864ae991" kindref="member">Value::Object</ref></type>
        <definition>Value::Object json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; typename Value::Object &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; typename <ref refid="classjson__spirit_1_1_value__impl_1ac4467b91c71f897bab0c6d74864ae991" kindref="member">Value::Object</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="514" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="514" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="namespacejson__spirit_1_1internal___1ad4f5f6b3c99b890cc7215d61e268eece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool json_spirit::internal_::get_value</definition>
        <argsstring>(const Value &amp;value, Type_to_type&lt; bool &gt;)</argsstring>
        <name>get_value</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structjson__spirit_1_1internal___1_1_type__to__type" kindref="compound">Type_to_type</ref>&lt; bool &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="520" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_value.h" bodystart="520" bodyend="523"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/json/json_spirit_value.h" line="471" column="1"/>
  </compounddef>
</doxygen>
