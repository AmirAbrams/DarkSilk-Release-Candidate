<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="xxhash_8h" kind="file" language="C++">
    <compoundname>xxhash.h</compoundname>
    <includedby refid="smessage_8cpp" local="yes">/home/dev/ds-160209/src/smessage.cpp</includedby>
    <includedby refid="xxhash_8c" local="yes">/home/dev/ds-160209/src/xxhash/xxhash.c</includedby>
    <invincdepgraph>
      <node id="29461">
        <label>/home/dev/ds-160209/src/xxhash/xxhash.c</label>
        <link refid="xxhash_8c"/>
        <childnode refid="29460" relation="include">
        </childnode>
      </node>
      <node id="29459">
        <label>/home/dev/ds-160209/src/xxhash/xxhash.h</label>
        <link refid="xxhash.h"/>
        <childnode refid="29460" relation="include">
        </childnode>
        <childnode refid="29461" relation="include">
        </childnode>
      </node>
      <node id="29460">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_x_x_h32__state_space__t" prot="public">XXH32_stateSpace_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="xxhash_8h_1a7193b472201c133d4edb218227b27f2b" prot="public" static="no">
        <name>XXH32_SIZEOFSTATE</name>
        <initializer>48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="127" column="15" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xxhash_8h_1afc34198799ed4a6c2b16d8a51833bb79" prot="public" static="no">
        <name>XXH32_feed</name>
        <initializer><ref refid="xxhash_8h_1a4428914ff78e245781ef2f523ff86638" kindref="member">XXH32_update</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="156" column="9" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xxhash_8h_1a89181d9554faa4e2765f26b80eb91f87" prot="public" static="no">
        <name>XXH32_result</name>
        <initializer><ref refid="xxhash_8h_1a98fc461fc698a511b24c1c6afe835e0c" kindref="member">XXH32_digest</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="157" column="9" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xxhash_8h_1a951c9c6764bbf44f588b606c46ee2988" prot="public" static="no">
        <name>XXH32_getIntermediateResult</name>
        <initializer><ref refid="xxhash_8h_1afba1e5525dd99f3d8693959240f22c11" kindref="member">XXH32_intermediateDigest</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="158" column="9" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534" prot="public" static="no">
        <name>XXH_errorcode</name>
        <enumvalue id="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534abd20b092d624344e301b0cadd29d5bd6" prot="public">
          <name>XXH_OK</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534a462a18276729783125c7116cf102667f" prot="public">
          <name>XXH_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="70" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.h" bodystart="70" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xxhash_8h_1a527858ec33a0c2effc026ddd8667eaef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int XXH32</definition>
        <argsstring>(const void *input, int len, unsigned int seed)</argsstring>
        <name>XXH32</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="78" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.c" bodystart="266" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="xxhash_8h_1a366fceb2db2000c44211dc704493fbe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* XXH32_init</definition>
        <argsstring>(unsigned int seed)</argsstring>
        <name>XXH32_init</name>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.c" bodystart="332" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="xxhash_8h_1a4428914ff78e245781ef2f523ff86638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534" kindref="member">XXH_errorcode</ref></type>
        <definition>XXH_errorcode XXH32_update</definition>
        <argsstring>(void *state, const void *input, int len)</argsstring>
        <name>XXH32_update</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="98" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.c" bodystart="404" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="xxhash_8h_1a98fc461fc698a511b24c1c6afe835e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int XXH32_digest</definition>
        <argsstring>(void *state)</argsstring>
        <name>XXH32_digest</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="99" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.c" bodystart="469" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="xxhash_8h_1ac87e4599905f4e2d6d28e1499b67dfe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XXH32_sizeofState</definition>
        <argsstring>(void)</argsstring>
        <name>XXH32_sizeofState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="124" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.c" bodystart="311" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="xxhash_8h_1a9760c389eaa825239fdcb08ab09a4b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534" kindref="member">XXH_errorcode</ref></type>
        <definition>XXH_errorcode XXH32_resetState</definition>
        <argsstring>(void *state, unsigned int seed)</argsstring>
        <name>XXH32_resetState</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="125" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.c" bodystart="318" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="xxhash_8h_1afba1e5525dd99f3d8693959240f22c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int XXH32_intermediateDigest</definition>
        <argsstring>(void *state)</argsstring>
        <name>XXH32_intermediateDigest</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/xxhash/xxhash.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/xxhash/xxhash.c" bodystart="458" bodyend="466"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>xxHash<sp/>-<sp/>Fast<sp/>Hash<sp/>algorithm</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Header<sp/>File</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2012-2016,<sp/>Yann<sp/>Collet.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>BSD<sp/>2-Clause<sp/>License<sp/>(http://www.opensource.org/licenses/bsd-license.php)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>met:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>You<sp/>can<sp/>contact<sp/>the<sp/>author<sp/>at<sp/>:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>-<sp/>xxHash<sp/>source<sp/>repository<sp/>:<sp/>http://code.google.com/p/xxhash/</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Notice<sp/>extracted<sp/>from<sp/>xxHash<sp/>homepage<sp/>:</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">xxHash<sp/>is<sp/>an<sp/>extremely<sp/>fast<sp/>Hash<sp/>algorithm,<sp/>running<sp/>at<sp/>RAM<sp/>speed<sp/>limits.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">It<sp/>also<sp/>successfully<sp/>passes<sp/>all<sp/>tests<sp/>from<sp/>the<sp/>SMHasher<sp/>suite.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">Comparison<sp/>(single<sp/>thread,<sp/>Windows<sp/>Seven<sp/>32<sp/>bits,<sp/>using<sp/>SMHasher<sp/>on<sp/>a<sp/>Core<sp/>2<sp/>Duo<sp/>@3GHz)</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment">Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Speed<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q.Score<sp/><sp/><sp/>Author</highlight></codeline>
<codeline lineno="42"><highlight class="comment">xxHash<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5.4<sp/>GB/s<sp/><sp/><sp/><sp/><sp/>10</highlight></codeline>
<codeline lineno="43"><highlight class="comment">CrapWow<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.2<sp/>GB/s<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Andrew</highlight></codeline>
<codeline lineno="44"><highlight class="comment">MumurHash<sp/>3a<sp/><sp/><sp/><sp/>2.7<sp/>GB/s<sp/><sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Austin<sp/>Appleby</highlight></codeline>
<codeline lineno="45"><highlight class="comment">SpookyHash<sp/><sp/><sp/><sp/><sp/><sp/>2.0<sp/>GB/s<sp/><sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bob<sp/>Jenkins</highlight></codeline>
<codeline lineno="46"><highlight class="comment">SBox<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.4<sp/>GB/s<sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bret<sp/>Mulvey</highlight></codeline>
<codeline lineno="47"><highlight class="comment">Lookup3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.2<sp/>GB/s<sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bob<sp/>Jenkins</highlight></codeline>
<codeline lineno="48"><highlight class="comment">SuperFastHash<sp/><sp/><sp/>1.2<sp/>GB/s<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Paul<sp/>Hsieh</highlight></codeline>
<codeline lineno="49"><highlight class="comment">CityHash64<sp/><sp/><sp/><sp/><sp/><sp/>1.05<sp/>GB/s<sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pike<sp/>&amp;<sp/>Alakuijala</highlight></codeline>
<codeline lineno="50"><highlight class="comment">FNV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.55<sp/>GB/s<sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fowler,<sp/>Noll,<sp/>Vo</highlight></codeline>
<codeline lineno="51"><highlight class="comment">CRC32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.43<sp/>GB/s<sp/><sp/><sp/><sp/><sp/>9</highlight></codeline>
<codeline lineno="52"><highlight class="comment">MD5-32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.33<sp/>GB/s<sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ronald<sp/>L.<sp/>Rivest</highlight></codeline>
<codeline lineno="53"><highlight class="comment">SHA1-32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.28<sp/>GB/s<sp/><sp/><sp/><sp/>10</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">Q.Score<sp/>is<sp/>a<sp/>measure<sp/>of<sp/>quality<sp/>of<sp/>the<sp/>hash<sp/>function.<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment">It<sp/>depends<sp/>on<sp/>successfully<sp/>passing<sp/>SMHasher<sp/>test<sp/>set.<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment">10<sp/>is<sp/>a<sp/>perfect<sp/>score.</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534abd20b092d624344e301b0cadd29d5bd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534abd20b092d624344e301b0cadd29d5bd6" kindref="member">XXH_OK</ref>=0,<sp/><ref refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534a462a18276729783125c7116cf102667f" kindref="member">XXH_ERROR</ref><sp/>}<sp/><ref refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534" kindref="member">XXH_errorcode</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>Hash<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xxhash_8h_1a527858ec33a0c2effc026ddd8667eaef" kindref="member">XXH32</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_x_x_h__state32__t_1aa198d97d2ccb2e940e58c5676dd07b9f" kindref="member">seed</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="81"><highlight class="comment">XXH32()<sp/>:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>Calculate<sp/>the<sp/>32-bits<sp/>hash<sp/>of<sp/>sequence<sp/>of<sp/>length<sp/>&quot;len&quot;<sp/>stored<sp/>at<sp/>memory<sp/>address<sp/>&quot;input&quot;.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>memory<sp/>between<sp/>input<sp/>&amp;<sp/>input+len<sp/>must<sp/>be<sp/>valid<sp/>(allocated<sp/>and<sp/>read-accessible).</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;seed&quot;<sp/>can<sp/>be<sp/>used<sp/>to<sp/>alter<sp/>the<sp/>result<sp/>predictably.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>successfully<sp/>passes<sp/>all<sp/>SMHasher<sp/>tests.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>Speed<sp/>on<sp/>Core<sp/>2<sp/>Duo<sp/>@<sp/>3<sp/>GHz<sp/>(single<sp/>thread,<sp/>SMHasher<sp/>benchmark)<sp/>:<sp/>5.4<sp/>GB/s</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>&quot;len&quot;<sp/>is<sp/>type<sp/>&quot;int&quot;,<sp/>which<sp/>means<sp/>it<sp/>is<sp/>limited<sp/>to<sp/>2^31-1.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>your<sp/>data<sp/>is<sp/>larger,<sp/>use<sp/>the<sp/>advanced<sp/>functions<sp/>below.</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Advanced<sp/>Hash<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xxhash_8h_1a366fceb2db2000c44211dc704493fbe0" kindref="member">XXH32_init</ref><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_x_x_h__state32__t_1aa198d97d2ccb2e940e58c5676dd07b9f" kindref="member">seed</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534" kindref="member">XXH_errorcode</ref><sp/><ref refid="xxhash_8h_1a4428914ff78e245781ef2f523ff86638" kindref="member">XXH32_update</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="xxhash_8h_1a98fc461fc698a511b24c1c6afe835e0c" kindref="member">XXH32_digest</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment">These<sp/>functions<sp/>calculate<sp/>the<sp/>xxhash<sp/>of<sp/>an<sp/>input<sp/>provided<sp/>in<sp/>several<sp/>small<sp/>packets,</highlight></codeline>
<codeline lineno="103"><highlight class="comment">as<sp/>opposed<sp/>to<sp/>an<sp/>input<sp/>provided<sp/>as<sp/>a<sp/>single<sp/>block.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">It<sp/>must<sp/>be<sp/>started<sp/>with<sp/>:</highlight></codeline>
<codeline lineno="106"><highlight class="comment">void*<sp/>XXH32_init()</highlight></codeline>
<codeline lineno="107"><highlight class="comment">The<sp/>function<sp/>returns<sp/>a<sp/>pointer<sp/>which<sp/>holds<sp/>the<sp/>state<sp/>of<sp/>calculation.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">This<sp/>pointer<sp/>must<sp/>be<sp/>provided<sp/>as<sp/>&quot;void*<sp/>state&quot;<sp/>parameter<sp/>for<sp/>XXH32_update().</highlight></codeline>
<codeline lineno="110"><highlight class="comment">XXH32_update()<sp/>can<sp/>be<sp/>called<sp/>as<sp/>many<sp/>times<sp/>as<sp/>necessary.</highlight></codeline>
<codeline lineno="111"><highlight class="comment">The<sp/>user<sp/>must<sp/>provide<sp/>a<sp/>valid<sp/>(allocated)<sp/>input.</highlight></codeline>
<codeline lineno="112"><highlight class="comment">The<sp/>function<sp/>returns<sp/>an<sp/>error<sp/>code,<sp/>with<sp/>0<sp/>meaning<sp/>OK,<sp/>and<sp/>any<sp/>other<sp/>value<sp/>meaning<sp/>there<sp/>is<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="113"><highlight class="comment">Note<sp/>that<sp/>&quot;len&quot;<sp/>is<sp/>type<sp/>&quot;int&quot;,<sp/>which<sp/>means<sp/>it<sp/>is<sp/>limited<sp/>to<sp/>2^31-1.<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="comment">If<sp/>your<sp/>data<sp/>is<sp/>larger,<sp/>it<sp/>is<sp/>recommended<sp/>to<sp/>chunk<sp/>your<sp/>data<sp/>into<sp/>blocks<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="comment">of<sp/>size<sp/>for<sp/>example<sp/>2^30<sp/>(1GB)<sp/>to<sp/>avoid<sp/>any<sp/>&quot;int&quot;<sp/>overflow<sp/>issue.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">Finally,<sp/>you<sp/>can<sp/>end<sp/>the<sp/>calculation<sp/>anytime,<sp/>by<sp/>using<sp/>XXH32_digest().</highlight></codeline>
<codeline lineno="118"><highlight class="comment">This<sp/>function<sp/>returns<sp/>the<sp/>final<sp/>32-bits<sp/>hash.</highlight></codeline>
<codeline lineno="119"><highlight class="comment">You<sp/>must<sp/>provide<sp/>the<sp/>same<sp/>&quot;void*<sp/>state&quot;<sp/>parameter<sp/>created<sp/>by<sp/>XXH32_init().</highlight></codeline>
<codeline lineno="120"><highlight class="comment">Memory<sp/>will<sp/>be<sp/>freed<sp/>by<sp/>XXH32_digest().</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xxhash_8h_1ac87e4599905f4e2d6d28e1499b67dfe2" kindref="member">XXH32_sizeofState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="xxhash_8h_1a5020905455674b8c83c1dbc73f0d3534" kindref="member">XXH_errorcode</ref><sp/><ref refid="xxhash_8h_1a9760c389eaa825239fdcb08ab09a4b03" kindref="member">XXH32_resetState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_x_x_h__state32__t_1aa198d97d2ccb2e940e58c5676dd07b9f" kindref="member">seed</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="xxhash_8h_1a7193b472201c133d4edb218227b27f2b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XXH32_SIZEOFSTATE<sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="struct_x_x_h32__state_space__t_1a7e66f0e3bbe805d5694f615e6a3fd878" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ll[(<ref refid="xxhash_8h_1a7193b472201c133d4edb218227b27f2b" kindref="member">XXH32_SIZEOFSTATE</ref>+(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)-1))/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)];<sp/>}<sp/><ref refid="struct_x_x_h32__state_space__t" kindref="compound">XXH32_stateSpace_t</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="130"><highlight class="comment">These<sp/>functions<sp/>allow<sp/>user<sp/>application<sp/>to<sp/>make<sp/>its<sp/>own<sp/>allocation<sp/>for<sp/>state.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">XXH32_sizeofState()<sp/>is<sp/>used<sp/>to<sp/>know<sp/>how<sp/>much<sp/>space<sp/>must<sp/>be<sp/>allocated<sp/>for<sp/>the<sp/>xxHash<sp/>32-bits<sp/>state.</highlight></codeline>
<codeline lineno="133"><highlight class="comment">Note<sp/>that<sp/>the<sp/>state<sp/>must<sp/>be<sp/>aligned<sp/>to<sp/>access<sp/>&apos;long<sp/>long&apos;<sp/>fields.<sp/>Memory<sp/>must<sp/>be<sp/>allocated<sp/>and<sp/>referenced<sp/>by<sp/>a<sp/>pointer.</highlight></codeline>
<codeline lineno="134"><highlight class="comment">This<sp/>pointer<sp/>must<sp/>then<sp/>be<sp/>provided<sp/>as<sp/>&apos;state&apos;<sp/>into<sp/>XXH32_resetState(),<sp/>which<sp/>initializes<sp/>the<sp/>state.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment">For<sp/>static<sp/>allocation<sp/>purposes<sp/>(such<sp/>as<sp/>allocation<sp/>on<sp/>stack,<sp/>or<sp/>freestanding<sp/>systems<sp/>without<sp/>malloc()),</highlight></codeline>
<codeline lineno="137"><highlight class="comment">use<sp/>the<sp/>structure<sp/>XXH32_stateSpace_t,<sp/>which<sp/>will<sp/>ensure<sp/>that<sp/>memory<sp/>space<sp/>is<sp/>large<sp/>enough<sp/>and<sp/>correctly<sp/>aligned<sp/>to<sp/>access<sp/>&apos;long<sp/>long&apos;<sp/>fields.</highlight></codeline>
<codeline lineno="138"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xxhash_8h_1afba1e5525dd99f3d8693959240f22c11" kindref="member">XXH32_intermediateDigest</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="143"><highlight class="comment">This<sp/>function<sp/>does<sp/>the<sp/>same<sp/>as<sp/>XXH32_digest(),<sp/>generating<sp/>a<sp/>32-bit<sp/>hash,</highlight></codeline>
<codeline lineno="144"><highlight class="comment">but<sp/>preserve<sp/>memory<sp/>context.</highlight></codeline>
<codeline lineno="145"><highlight class="comment">This<sp/>way,<sp/>it<sp/>becomes<sp/>possible<sp/>to<sp/>generate<sp/>intermediate<sp/>hashes,<sp/>and<sp/>then<sp/>continue<sp/>feeding<sp/>data<sp/>with<sp/>XXH32_update().</highlight></codeline>
<codeline lineno="146"><highlight class="comment">To<sp/>free<sp/>memory<sp/>context,<sp/>use<sp/>XXH32_digest(),<sp/>or<sp/>free().</highlight></codeline>
<codeline lineno="147"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deprecated<sp/>function<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//****************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>translations<sp/>are<sp/>provided<sp/>to<sp/>ease<sp/>code<sp/>transition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>are<sp/>encouraged<sp/>to<sp/>no<sp/>longer<sp/>this<sp/>function<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="xxhash_8h_1afc34198799ed4a6c2b16d8a51833bb79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XXH32_feed<sp/><sp/><sp/>XXH32_update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="xxhash_8h_1a89181d9554faa4e2765f26b80eb91f87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XXH32_result<sp/>XXH32_digest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="xxhash_8h_1a951c9c6764bbf44f588b606c46ee2988" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XXH32_getIntermediateResult<sp/>XXH32_intermediateDigest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/xxhash/xxhash.h"/>
  </compounddef>
</doxygen>
