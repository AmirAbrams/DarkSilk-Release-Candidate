<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="activestormnode_8cpp" kind="file" language="C++">
    <compoundname>activestormnode.cpp</compoundname>
    <includes refid="addrman_8h" local="yes">addrman.h</includes>
    <includes refid="protocol_8h" local="yes">protocol.h</includes>
    <includes refid="activestormnode_8h" local="yes">activestormnode.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes refid="stormnodeconfig_8h" local="yes">stormnodeconfig.h</includes>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="spork_8h" local="yes">spork.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <incdepgraph>
      <node id="55">
        <label>list</label>
      </node>
      <node id="19">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="114">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>netinet/in.h</label>
      </node>
      <node id="54">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>arpa/inet.h</label>
      </node>
      <node id="44">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="129">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="74">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>openssl/rand.h</label>
      </node>
      <node id="79">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>assert.h</label>
      </node>
      <node id="14">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="29">
        <label>net/if.h</label>
      </node>
      <node id="128">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="113">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="123">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>sys/mman.h</label>
      </node>
      <node id="17">
        <label>stdlib.h</label>
      </node>
      <node id="117">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="65">
        <label>openssl/crypto.h</label>
      </node>
      <node id="121">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="71">
        <label>openssl/sha.h</label>
      </node>
      <node id="34">
        <label>errno.h</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="40">
        <label>stdexcept</label>
      </node>
      <node id="48">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="109">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="78">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="57">
        <label>boost/thread.hpp</label>
      </node>
      <node id="1">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>stddef.h</label>
      </node>
      <node id="88">
        <label>boost/variant.hpp</label>
      </node>
      <node id="33">
        <label>netdb.h</label>
      </node>
      <node id="26">
        <label>sys/fcntl.h</label>
      </node>
      <node id="105">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="5">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>limits.h</label>
      </node>
      <node id="43">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="100">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/resource.h</label>
      </node>
      <node id="62">
        <label>openssl/bio.h</label>
      </node>
      <node id="101">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="2">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ifaddrs.h</label>
      </node>
      <node id="89">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>sys/types.h</label>
      </node>
      <node id="83">
        <label>ios</label>
      </node>
      <node id="18">
        <label>string.h</label>
      </node>
      <node id="24">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="12">
        <label>cstdio</label>
      </node>
      <node id="45">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="64">
        <label>openssl/buffer.h</label>
      </node>
      <node id="13">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="102">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="126">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="69">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>unistd.h</label>
      </node>
      <node id="84">
        <label>db_cxx.h</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="37">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="58">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="56">
        <label>utility</label>
      </node>
      <node id="106">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sstream</label>
      </node>
      <node id="0">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="68">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>openssl/evp.h</label>
      </node>
      <node id="51">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="80">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/time.h</label>
      </node>
      <node id="52">
        <label>iostream</label>
      </node>
      <node id="125">
        <label>stormnodeconfig.h</label>
        <link refid="stormnodeconfig_8h"/>
      </node>
      <node id="98">
        <label>deque</label>
      </node>
      <node id="38">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/socket.h</label>
      </node>
      <node id="111">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>boost/array.hpp</label>
      </node>
      <node id="41">
        <label>openssl/bn.h</label>
      </node>
      <node id="107">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>set</label>
      </node>
      <node id="82">
        <label>algorithm</label>
      </node>
      <node id="67">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>util.h</label>
      </node>
      <node id="90">
        <label>stdio.h</label>
      </node>
      <node id="16">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="42">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>inttypes.h</label>
      </node>
      <node id="110">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Dash<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="addrman_8h" kindref="compound">addrman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protocol_8h" kindref="compound">protocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activestormnode_8h" kindref="compound">activestormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeconfig_8h" kindref="compound">stormnodeconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spork_8h" kindref="compound">spork.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bootup<sp/>the<sp/>Stormnode,<sp/>look<sp/>for<sp/>a<sp/>10,000<sp/>DRKSLK<sp/>input<sp/>and<sp/>register<sp/>on<sp/>the<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" kindref="member">CActiveStormnode::ManageStatus</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>Begin\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>correct<sp/>blocks<sp/>to<sp/>send<sp/>ping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_SYNC_IN_PROCESS;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">GetStatus</ref>());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>==<sp/>ACTIVE_STORMNODE_SYNC_IN_PROCESS)<sp/><ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_INITIAL;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>==<sp/>ACTIVE_STORMNODE_INITIAL)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*psn;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" kindref="member">pubKeyStormnode</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((psn-&gt;<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>()<sp/>||<sp/>psn-&gt;<ref refid="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" kindref="member">IsPreEnabled</ref>())<sp/>&amp;&amp;<sp/>psn-&gt;<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>==<sp/>PROTOCOL_VERSION)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" kindref="member">EnableHotColdStormNode</ref>(psn-&gt;<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>,<sp/>psn-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>!=<sp/>ACTIVE_STORMNODE_STARTED)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_NOT_CAPABLE;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>()){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wallet<sp/>is<sp/>locked.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>not<sp/>capable:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1afb8dee3ffdf2bc5e7499b10bb65efdaf" kindref="member">GetBalance</ref>()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hot<sp/>node,<sp/>waiting<sp/>for<sp/>remote<sp/>activation.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>not<sp/>capable:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" kindref="member">strStormNodeAddr</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="net_8cpp_1a51605827c953a7843f9b165eada26857" kindref="member">GetLocal</ref>(<ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>detect<sp/>external<sp/>address.<sp/>Please<sp/>use<sp/>the<sp/>stormnodeaddr<sp/>configuration<sp/>option.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>not<sp/>capable:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref><sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(<ref refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" kindref="member">strStormNodeAddr</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>Checking<sp/>inbound<sp/>connection<sp/>to<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().<ref refid="class_c_chain_params_1a90dc493ec0c0325c98c3ac06eb99862b" kindref="member">NetworkID</ref>()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" kindref="member">CChainParams::MAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>()<sp/>!=<sp/>31000)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>port:<sp/>%u<sp/>-<sp/>only<sp/>31000<sp/>is<sp/>supported<sp/>on<sp/>mainnet.&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>not<sp/>capable:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>()<sp/>==<sp/>31000)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>port:<sp/>%u<sp/>-<sp/>31000<sp/>is<sp/>only<sp/>supported<sp/>on<sp/>mainnet.&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>not<sp/>capable:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="net_8cpp_1ac6e0da5071d4eaa6960dbf889c765834" kindref="member">ConnectNode</ref>((<ref refid="class_c_address" kindref="compound">CAddress</ref>)<ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>connect<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>service.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>not<sp/>capable:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>coins<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKeyCollateralAddress;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyCollateralAddress;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetStormNodeVin(<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>,<sp/>pubKeyCollateralAddress,<sp/>keyCollateralAddress))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" kindref="member">GetInputAge</ref>(<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>)<sp/>&lt;<sp/>STORMNODE_MIN_CONFIRMATIONS){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_INPUT_TOO_NEW;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>-<sp/>%d<sp/>confirmations&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">GetStatus</ref>(),<sp/><ref refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" kindref="member">GetInputAge</ref>(<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" kindref="member">cs_wallet</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" kindref="member">LockCoin</ref>(<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>to<sp/>all<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/><ref refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" kindref="member">pubKeyStormnode</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyStormnode;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>,<sp/>errorMessage,<sp/>keyStormnode,<sp/>pubKeyStormnode))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>upon<sp/>calling<sp/>SetKey:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>errorMessage;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Register::ManageStatus()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!Register(<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>,<sp/>service,<sp/>keyCollateralAddress,<sp/>pubKeyCollateralAddress,<sp/>keyStormnode,<sp/>pubKeyStormnode,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>Register:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>errorMessage;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Register::ManageStatus()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>Is<sp/>capable<sp/>Stormnode!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_STARTED;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>suitable<sp/>coins!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//send<sp/>to<sp/>all<sp/>peers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!SendStormnodePing(errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::ManageStatus()<sp/>-<sp/>Error<sp/>on<sp/>Ping:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">CActiveStormnode::GetStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ACTIVE_STORMNODE_INITIAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Node<sp/>just<sp/>started,<sp/>not<sp/>yet<sp/>activated&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ACTIVE_STORMNODE_SYNC_IN_PROCESS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Sync<sp/>in<sp/>progress.<sp/>Must<sp/>wait<sp/>until<sp/>sync<sp/>is<sp/>complete<sp/>to<sp/>start<sp/>Stormnode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ACTIVE_STORMNODE_INPUT_TOO_NEW:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>input<sp/>must<sp/>have<sp/>at<sp/>least<sp/>%d<sp/>confirmations&quot;</highlight><highlight class="normal">,<sp/>STORMNODE_MIN_CONFIRMATIONS);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ACTIVE_STORMNODE_NOT_CAPABLE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>capable<sp/>stormnode:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ACTIVE_STORMNODE_STARTED:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Stormnode<sp/>successfully<sp/>started&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CActiveStormnode::SendStormnodePing(std::string&amp;<sp/>errorMessage)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>!=<sp/>ACTIVE_STORMNODE_STARTED)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stormnode<sp/>is<sp/>not<sp/>in<sp/>a<sp/>running<sp/>status&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/><ref refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" kindref="member">pubKeyStormnode</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyStormnode;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>,<sp/>errorMessage,<sp/>keyStormnode,<sp/>pubKeyStormnode))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>upon<sp/>calling<sp/>SetKey:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::SendStormnodePing()<sp/>-<sp/>Relay<sp/>Stormnode<sp/>Ping<sp/>vin<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref><sp/>snp(<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!snp.Sign(keyStormnode,<sp/>pubKeyStormnode))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>sign<sp/>Stormnode<sp/>Ping&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>lastPing<sp/>for<sp/>our<sp/>stormnode<sp/>in<sp/>Stormnode<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" kindref="member">IsPingedWithin</ref>(STORMNODE_PING_SECONDS,<sp/>snp.sigTime)){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>early<sp/>to<sp/>send<sp/>Stormnode<sp/>Ping&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/>snp;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.insert(make_pair(snp.GetHash(),<sp/>snp));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//snodeman.mapSeenStormnodeBroadcast.lastPing<sp/>is<sp/>probably<sp/>outdated,<sp/>so<sp/>we&apos;ll<sp/>update<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref><sp/>snb(*psn);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>snb.GetHash();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.count(hash))<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>[hash].lastPing<sp/>=<sp/>snp;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snp.Relay();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Seems<sp/>like<sp/>we<sp/>are<sp/>trying<sp/>to<sp/>send<sp/>a<sp/>ping<sp/>while<sp/>the<sp/>Stormnode<sp/>is<sp/>not<sp/>registered<sp/>in<sp/>the<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>Stormnode<sp/>List<sp/>doesn&apos;t<sp/>include<sp/>our<sp/>Stormnode,<sp/>shutting<sp/>down<sp/>Stormnode<sp/>pinging<sp/>service!<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_NOT_CAPABLE;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" kindref="member">notCapableReason</ref><sp/>=<sp/>errorMessage;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CActiveStormnode::Register(std::string<sp/>strService,<sp/>std::string<sp/>strKeyStormnode,<sp/>std::string<sp/>strTxHash,<sp/>std::string<sp/>strOutputIndex,<sp/>std::string&amp;<sp/>errorMessage)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/><ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKeyCollateralAddress;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyCollateralAddress;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/><ref refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" kindref="member">pubKeyStormnode</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyStormnode;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>correct<sp/>blocks<sp/>to<sp/>send<sp/>ping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">GetStatus</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(strKeyStormnode,<sp/>errorMessage,<sp/>keyStormnode,<sp/>pubKeyStormnode))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>keys<sp/>for<sp/>stormnode<sp/>%s<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strService,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!GetStormNodeVin(vin,<sp/>pubKeyCollateralAddress,<sp/>keyCollateralAddress,<sp/>strTxHash,<sp/>strOutputIndex))<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>vin<sp/>%s:%s<sp/>for<sp/>stormnode<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strTxHash,<sp/>strOutputIndex,<sp/>strService);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/><ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref><sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(strService);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().NetworkID()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" kindref="member">CChainParams::MAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(service.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>()<sp/>!=<sp/>31000)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>port<sp/>%u<sp/>for<sp/>stormnode<sp/>%s<sp/>-<sp/>only<sp/>31000<sp/>is<sp/>supported<sp/>on<sp/>mainnet.&quot;</highlight><highlight class="normal">,<sp/>service.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>(),<sp/>strService);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(service.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>()<sp/>==<sp/>31000)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>port<sp/>%u<sp/>for<sp/>stormnode<sp/>%s<sp/>-<sp/>31000<sp/>is<sp/>only<sp/>supported<sp/>on<sp/>mainnet.&quot;</highlight><highlight class="normal">,<sp/>service.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>(),<sp/>strService);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1ac575e3335fd15a19b567026491f8f01a" kindref="member">addrman</ref>.<ref refid="class_c_addr_man_1a03fcc7109b5f014760dc50a81f68c5ec" kindref="member">Add</ref>(<ref refid="class_c_address" kindref="compound">CAddress</ref>(service),<sp/><ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">),<sp/>2*60*60);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Register(vin,<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(strService,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>keyCollateralAddress,<sp/>pubKeyCollateralAddress,<sp/>keyStormnode,<sp/>pubKeyStormnode,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CActiveStormnode::Register(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin,<sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>service,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyCollateralAddress,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKeyCollateralAddress,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyStormnode,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKeyStormnode,<sp/>std::string<sp/>&amp;errorMessage)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref><sp/>snb;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref><sp/>snp(vin);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!snp.Sign(keyStormnode,<sp/>pubKeyStormnode)){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>sign<sp/>ping,<sp/>vin:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>vin.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.insert(make_pair(snp.GetHash(),<sp/>snp));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>Adding<sp/>to<sp/>Stormnode<sp/>list\n<sp/><sp/><sp/><sp/>service:<sp/>%s\n<sp/><sp/><sp/><sp/>vin:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>service.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>(),<sp/>vin.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>snb<sp/>=<sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref>(service,<sp/>vin,<sp/>pubKeyCollateralAddress,<sp/>pubKeyStormnode,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>snb.lastPing<sp/>=<sp/>snp;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!snb.Sign(keyCollateralAddress)){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>sign<sp/>broadcast,<sp/>vin:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>vin.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.insert(make_pair(snb.GetHash(),<sp/>snb));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ad9e9ad7392c3fa1ec0af4b178b3c62c0" kindref="member">AddedStormnodeList</ref>(snb.GetHash());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(vin);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>sn(snb);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" kindref="member">Add</ref>(sn);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" kindref="member">UpdateFromNewBroadcast</ref>(snb);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//send<sp/>to<sp/>all<sp/>peers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::Register()<sp/>-<sp/>RelayElectionEntry<sp/>vin<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>vin.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>snb.Relay();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_c_active_stormnode_1ab0e9106269959f9a396fbf914565e326" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CActiveStormnode::GetStormNodeVin(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>secretKey)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetStormNodeVin(vin,<sp/>pubkey,<sp/>secretKey,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CActiveStormnode::GetStormNodeVin(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>secretKey,<sp/>std::string<sp/>strTxHash,<sp/>std::string<sp/>strOutputIndex)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>possible<sp/>candidates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" kindref="member">cs_wallet</ref>,<sp/>fWallet);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fWallet)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>possibleCoins<sp/>=<sp/><ref refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" kindref="member">SelectCoinsStormnode</ref>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>*selectedOutput;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>vin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strTxHash.empty())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>find<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>txHash(strTxHash);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputIndex<sp/>=<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(strOutputIndex.c_str());</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>possibleCoins)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()<sp/>==<sp/>txHash<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref><sp/>==<sp/>outputIndex)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedOutput<sp/>=<sp/>&amp;out;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::GetStormNodeVin<sp/>-<sp/>Could<sp/>not<sp/>locate<sp/>valid<sp/>vin\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>output<sp/>specified,<sp/><sp/>Select<sp/>the<sp/>first<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(possibleCoins.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedOutput<sp/>=<sp/>&amp;possibleCoins[0];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::GetStormNodeVin<sp/>-<sp/>Could<sp/>not<sp/>locate<sp/>specified<sp/>vin<sp/>from<sp/>possible<sp/>list\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point<sp/>we<sp/>have<sp/>a<sp/>selected<sp/>output,<sp/>retrieve<sp/>the<sp/>associated<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetVinFromOutput(*selectedOutput,<sp/>vin,<sp/>pubkey,<sp/>secretKey);</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extract<sp/>Stormnode<sp/>vin<sp/>information<sp/>from<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CActiveStormnode::GetVinFromOutput(<ref refid="class_c_output" kindref="compound">COutput</ref><sp/>out,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>secretKey)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>pubScript;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>pubScript<sp/>=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].scriptPubKey;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>inputs<sp/>PubKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(pubScript,<sp/>address1);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address2(address1);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>keyID;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!address2.GetKeyID(keyID))<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::GetStormNodeVin<sp/>-<sp/>Address<sp/>does<sp/>not<sp/>refer<sp/>to<sp/>a<sp/>key\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" kindref="member">GetKey</ref>(keyID,<sp/>secretKey))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::GetStormNodeVin<sp/>-<sp/>Private<sp/>key<sp/>for<sp/>address<sp/>is<sp/>not<sp/>known\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>pubkey<sp/>=<sp/>secretKey.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>all<sp/>possible<sp/>outputs<sp/>for<sp/>running<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" refkind="member"><highlight class="normal">vector&lt;COutput&gt;<sp/><ref refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" kindref="member">CActiveStormnode::SelectCoinsStormnode</ref>()</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>filteredCoins;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutPoint&gt;<sp/>confLockedCoins;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>unlock<sp/>SN<sp/>coins<sp/>from<sp/>stormnode.conf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-snconflock&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>snTxHash;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry" kindref="compound">CStormnodeConfig::CStormnodeEntry</ref><sp/>sne,<sp/><ref refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" kindref="member">stormnodeConfig</ref>.<ref refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" kindref="member">getEntries</ref>())<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snTxHash.<ref refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" kindref="member">SetHex</ref>(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>outpoint<sp/>=<sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>(snTxHash,<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>().c_str()));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confLockedCoins.push_back(outpoint);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1abd60f5b890e2c62c05c6a2de6322197f" kindref="member">UnlockCoin</ref>(outpoint);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>all<sp/>possible<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1ad165e7a24c95ff9a5816933d7ca23c9b" kindref="member">AvailableCoins</ref>(vCoins);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>SN<sp/>coins<sp/>from<sp/>stormnode.conf<sp/>back<sp/>if<sp/>they<sp/>where<sp/>temporary<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!confLockedCoins.empty())<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>outpoint,<sp/>confLockedCoins)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" kindref="member">LockCoin</ref>(outpoint);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>10000*COIN)<sp/>{<sp/></highlight><highlight class="comment">//exactly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredCoins.push_back(out);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filteredCoins;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>starting<sp/>a<sp/>Stormnode,<sp/>this<sp/>can<sp/>enable<sp/>to<sp/>run<sp/>as<sp/>a<sp/>hot<sp/>wallet<sp/>with<sp/>no<sp/>funds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" kindref="member">CActiveStormnode::EnableHotColdStormNode</ref>(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>newVin,<sp/><ref refid="class_c_service" kindref="compound">CService</ref>&amp;<sp/>newService)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_STARTED;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>values<sp/>below<sp/>are<sp/>needed<sp/>for<sp/>signing<sp/>snping<sp/>messages<sp/>going<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>vin<sp/>=<sp/>newVin;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>service<sp/>=<sp/>newService;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CActiveStormnode::EnableHotColdStormNode()<sp/>-<sp/>Enabled!<sp/>You<sp/>may<sp/>shut<sp/>down<sp/>the<sp/>cold<sp/>daemon.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/activestormnode.cpp"/>
  </compounddef>
</doxygen>
