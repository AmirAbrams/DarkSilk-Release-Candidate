<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="uint160__tests_8cpp" kind="file" language="C++">
    <compoundname>uint160_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="uint256_8h" local="yes">uint256.h</includes>
    <incdepgraph>
      <node id="55897">
        <label>assert.h</label>
      </node>
      <node id="55895">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="55899">
        <label>stdexcept</label>
      </node>
      <node id="55901">
        <label>string</label>
      </node>
      <node id="55902">
        <label>vector</label>
      </node>
      <node id="55900">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="55894">
        <label>/home/dev/ds-160209/src/test/uint160_tests.cpp</label>
        <link refid="uint160_tests.cpp"/>
        <childnode refid="55895" relation="include">
        </childnode>
        <childnode refid="55896" relation="include">
        </childnode>
      </node>
      <node id="55896">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="55897" relation="include">
        </childnode>
        <childnode refid="55898" relation="include">
        </childnode>
        <childnode refid="55899" relation="include">
        </childnode>
        <childnode refid="55900" relation="include">
        </childnode>
        <childnode refid="55901" relation="include">
        </childnode>
        <childnode refid="55902" relation="include">
        </childnode>
      </node>
      <node id="55898">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="uint160__tests_8cpp_1ae137a4e8ae84f08374a76bcad888d8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(uint160_equality)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>uint160_equality</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/uint160_tests.cpp" line="7" column="1" bodyfile="/home/dev/ds-160209/src/test/uint160_tests.cpp" bodystart="7" bodyend="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uint256_8h" kindref="compound">uint256.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">BOOST_AUTO_TEST_SUITE(uint160_tests)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="uint160__tests_8cpp_1ae137a4e8ae84f08374a76bcad888d8e3" refkind="member"><highlight class="normal"><ref refid="uint160__tests_8cpp_1ae137a4e8ae84f08374a76bcad888d8e3" kindref="member">BOOST_AUTO_TEST_CASE</ref>(uint160_equality)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint160" kindref="compound">uint160</ref><sp/>num1<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint160" kindref="compound">uint160</ref><sp/>num2<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(num1+1<sp/>==<sp/>num2);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>num3<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(num1<sp/>==<sp/>num3);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(num1+num2<sp/>==<sp/>num3+num2);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/uint160_tests.cpp"/>
  </compounddef>
</doxygen>
