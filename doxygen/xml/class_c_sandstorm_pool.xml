<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_sandstorm_pool" kind="class" language="C++" prot="public">
    <compoundname>CSandstormPool</compoundname>
    <includes refid="sandstorm_8h" local="no">sandstorm.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2" prot="public" static="no">
        <name>messages</name>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a2cb39f1970ed231a8168e1a8fefd042d" prot="public">
          <name>ERR_ALREADY_HAVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a2727d0dcde9ffc488149dcc5f59dac58" prot="public">
          <name>ERR_DENOM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a55776fc0a12adc3b13f3aa6e9e1f81f2" prot="public">
          <name>ERR_ENTRIES_FULL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2ab65911a0da944db7532e36fca3ecbe82" prot="public">
          <name>ERR_EXISTING_TX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2ab4316c0b0f3099c03356e0f46628a508" prot="public">
          <name>ERR_FEES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aee7148a9f7f9cf79846a310a9c61a3e5" prot="public">
          <name>ERR_INVALID_COLLATERAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a8fd4c302d1eab85bf72d5941f3d84625" prot="public">
          <name>ERR_INVALID_INPUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2adb56e517793e4e747c9020e20fa52cc3" prot="public">
          <name>ERR_INVALID_SCRIPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a84514dca9d5612b95e77dd13a8ab261d" prot="public">
          <name>ERR_INVALID_TX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2ab52414cda269cecb60b8675531672e0a" prot="public">
          <name>ERR_MAXIMUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a9636ac06a1f35cd7dc3a72419ccb3148" prot="public">
          <name>ERR_SN_LIST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aa9023f2bf191cf83af1b61a6e1e9127b" prot="public">
          <name>ERR_MODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a7a4a71c2288249b03c3263f28b1b8cf7" prot="public">
          <name>ERR_NON_STANDARD_PUBKEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aa99b4fb7e5432ff1bc4ce0a24b875c14" prot="public">
          <name>ERR_NOT_A_SN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a55cd88ac2a93cc0b8c6d86acbddc2e1e" prot="public">
          <name>ERR_QUEUE_FULL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a11babaea0e9325656af3b9ccccede24c" prot="public">
          <name>ERR_RECENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aaff2cac0b4c13d56532bc203dbed0bed" prot="public">
          <name>ERR_SESSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2acf6706ed917de5f0e6768d495d5fe92b" prot="public">
          <name>ERR_MISSING_TX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a93b7b527d22d258eb4598ead7602bc53" prot="public">
          <name>ERR_VERSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a1b8e0cd184cc749ba27a373f50727e0a" prot="public">
          <name>MSG_NOERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a76b2dfe3a493d11580ecc21e6b919de1" prot="public">
          <name>MSG_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a4ac95fb563b32080da8ad1ba4f2a3662" prot="public">
          <name>MSG_ENTRIES_ADDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="284" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="284" bodyend="307"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a6f4f31ee21699b5d47f185f501892851" prot="private" static="no" mutable="yes">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection CSandstormPool::cs_sandstorm</definition>
        <argsstring></argsstring>
        <name>cs_sandstorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="255" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a64c915a8a09b97abf3d3e622d1b66ba8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref> &gt;</type>
        <definition>std::vector&lt;CSandStormEntry&gt; CSandstormPool::entries</definition>
        <argsstring></argsstring>
        <name>entries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="257" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a0023b2d919ba8f299bad5f1cf84269fe" prot="private" static="no" mutable="no">
        <type><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref></type>
        <definition>CMutableTransaction CSandstormPool::finalTransaction</definition>
        <argsstring></argsstring>
        <name>finalTransaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="258" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1ad436409790b57221f3bd5d7aaf436c9b" prot="private" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CSandstormPool::lastTimeChanged</definition>
        <argsstring></argsstring>
        <name>lastTimeChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="260" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1aee8acab52b2dba5ecf60e5716919bc15" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CSandstormPool::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="261" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a6680aec2198b2609fc84b88d55daf030" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CSandstormPool::entriesCount</definition>
        <argsstring></argsstring>
        <name>entriesCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="262" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a9077d221e19abd183ec497ca6ca6d302" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CSandstormPool::countEntriesAccepted</definition>
        <argsstring></argsstring>
        <name>countEntriesAccepted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="264" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a63399f0167836bcbbca34a117a04ad4a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &gt;</type>
        <definition>std::vector&lt;CTxIn&gt; CSandstormPool::lockedCoins</definition>
        <argsstring></argsstring>
        <name>lockedCoins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="266" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1ae75b3e298400ea8baeea9a07a6cfe725" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CSandstormPool::unitTest</definition>
        <argsstring></argsstring>
        <name>unitTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="267" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1ae900bfcbb75d30de2dfeed60575d8ff8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CSandstormPool::sessionID</definition>
        <argsstring></argsstring>
        <name>sessionID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="268" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a2a0769372e2fdfc7255e862a2f5a14b7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CSandstormPool::sessionUsers</definition>
        <argsstring></argsstring>
        <name>sessionUsers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="269" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1aa98f75224f6aebbb3910707e313e7bcf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CSandstormPool::sessionFoundStormnode</definition>
        <argsstring></argsstring>
        <name>sessionFoundStormnode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="270" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1ae9a4cc813123cc4798c7142b2adc8522" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &gt;</type>
        <definition>std::vector&lt;CTransaction&gt; CSandstormPool::vecSessionCollateral</definition>
        <argsstring></argsstring>
        <name>vecSessionCollateral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="271" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a1c513a6e4cb5ca279db17b9828e9f3a8" prot="private" static="no" mutable="no">
        <type><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref></type>
        <definition>CMutableTransaction CSandstormPool::txCollateral</definition>
        <argsstring></argsstring>
        <name>txCollateral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="273" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a576942146ec253c483da19cc33bf2f6c" prot="private" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CSandstormPool::lastNewBlock</definition>
        <argsstring></argsstring>
        <name>lastNewBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="274" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1ae7b0f0b9bb26e113c02388b6afe7a81b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &gt;</type>
        <definition>std::vector&lt;int64_t&gt; CSandstormPool::sandStormDenominationsSkipped</definition>
        <argsstring></argsstring>
        <name>sandStormDenominationsSkipped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="275" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_sandstorm_pool_1ade4dc2454943976a421411d287b395c6" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CSandstormPool::lastMessage</definition>
        <argsstring></argsstring>
        <name>lastMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="278" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="278" bodyend="-1"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1affec253e6cc6927c89002d1c7ccc4cf0" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CSandstormPool::lastEntryAccepted</definition>
        <argsstring></argsstring>
        <name>lastEntryAccepted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="279" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="279" bodyend="-1"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ad372fec8e07e4c39d74b1c7c6809dde5" compoundref="sandstorm_8h" startline="415" endline="418">GetLastEntryAccepted</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a8da1107d7613a095879e3c0a4165e6c1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CSandstormPool::cachedLastSuccess</definition>
        <argsstring></argsstring>
        <name>cachedLastSuccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="280" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="280" bodyend="-1"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a955b0b4d31bd4160866d3205c6c3f023" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CSandstormPool::minBlockSpacing</definition>
        <argsstring></argsstring>
        <name>minBlockSpacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="281" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="281" bodyend="-1"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1aa9137e1fe81c9f7a8edd55b2705a1938" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CSandstormPool::strAutoDenomResult</definition>
        <argsstring></argsstring>
        <name>strAutoDenomResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="283" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="283" bodyend="-1"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1afc6af6d3ef8fbe2c6238d3564145a015" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_script" kindref="compound">CScript</ref></type>
        <definition>CScript CSandstormPool::collateralPubKey</definition>
        <argsstring></argsstring>
        <name>collateralPubKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="310" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="310" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a61589289244edd2ca3bc539d725d885c" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> *</type>
        <definition>CStormnode* CSandstormPool::pSubmittedToStormnode</definition>
        <argsstring></argsstring>
        <name>pSubmittedToStormnode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="312" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="312" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" compoundref="stormnodeman_8cpp" startline="662" endline="672">CStormnodeMan::ProcessStormnodeConnections</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CSandstormPool::sessionDenom</definition>
        <argsstring></argsstring>
        <name>sessionDenom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="313" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="313" bodyend="-1"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_pool_1a927020441f683c7188a253e97f376106" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CSandstormPool::cachedNumBlocks</definition>
        <argsstring></argsstring>
        <name>cachedNumBlocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="314" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="314" bodyend="-1"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_sandstorm_pool_1ace91c9528325a3469294901ffa3c472f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CSandstormPool::CSandstormPool</definition>
        <argsstring>()</argsstring>
        <name>CSandstormPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="316" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="316" bodyend="329"/>
        <references refid="class_c_sandstorm_pool_1a9a220f583b730dcf9f651d340da4ee52" compoundref="sandstorm_8cpp" startline="385" endline="410">SetNull</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::ProcessMessageSandstorm</definition>
        <argsstring>(CNode *pfrom, std::string &amp;strCommand, CDataStream &amp;vRecv)</argsstring>
        <name>ProcessMessageSandstorm</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strCommand</declname>
        </param>
        <param>
          <type><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref> &amp;</type>
          <declname>vRecv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process a Sandstorm message using the Sandstorm protocol <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pfrom</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strCommand</parametername>
</parameternamelist>
<parameterdescription>
<para>lower case command string; valid values are: <table rows="9" cols="2"><row>
<entry thead="yes"><para>Command </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>ssa </para></entry><entry thead="no"><para>Sandstorm Acceptable </para></entry></row>
<row>
<entry thead="no"><para>ssc </para></entry><entry thead="no"><para>Sandstorm Complete </para></entry></row>
<row>
<entry thead="no"><para>ssf </para></entry><entry thead="no"><para>Sandstorm Final tx </para></entry></row>
<row>
<entry thead="no"><para>ssi </para></entry><entry thead="no"><para>Sandstorm vIn </para></entry></row>
<row>
<entry thead="no"><para>ssq </para></entry><entry thead="no"><para>Sandstorm Queue </para></entry></row>
<row>
<entry thead="no"><para>sss </para></entry><entry thead="no"><para>Sandstorm Signal Final Tx </para></entry></row>
<row>
<entry thead="no"><para>sssu </para></entry><entry thead="no"><para>Sandstorm status update </para></entry></row>
<row>
<entry thead="no"><para>sssub </para></entry><entry thead="no"><para>Sandstorm Subscribe To </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vRecv</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="346" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="38" bodyend="374"/>
        <references refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" compoundref="util_8cpp" startline="79">fLiteMode</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</references>
        <references refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" compoundref="net_8h" startline="248">CNode::nVersion</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" compoundref="sandstorm_8h" startline="33">STORMNODE_REJECTED</references>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" compoundref="stormnodeman_8cpp" startline="400" endline="412">CStormnodeMan::Find</references>
        <references refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" compoundref="activestormnode_8h" startline="42">CActiveStormnode::vin</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">CStormnode::nLastSsq</references>
        <references refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" compoundref="stormnodeman_8cpp" startline="364" endline="376">CStormnodeMan::CountEnabled</references>
        <references refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" compoundref="stormnodeman_8h" startline="74">CStormnodeMan::nSsqCount</references>
        <references refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" compoundref="net_8h" startline="245">CNode::addr</references>
        <references refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">CService::ToString</references>
        <references refid="sandstorm_8h_1a092f562edd615bfa50d999605a4989ab" compoundref="sandstorm_8h" startline="32">STORMNODE_ACCEPTED</references>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="class_c_net_addr_1aae906cecdba331389f249a64693895b6" compoundref="netbase_8cpp" startline="850" endline="853">CNetAddr::ToString</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" compoundref="sandstorm_8h" startline="23">POOL_STATUS_QUEUE</references>
        <references refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" compoundref="sandstorm_8cpp" startline="30">vecSandstormQueue</references>
        <references refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" compoundref="sandstorm_8h" startline="153">CSandstormQueue::vin</references>
        <references refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" compoundref="stormnodeman_8h" startline="138" endline="138">CStormnodeMan::size</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">CStormnode::allowFreeTx</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" compoundref="transaction_8h" startline="168">CTxOut::nValue</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" compoundref="script_8h" startline="870" endline="891">CScript::ToString</references>
        <references refid="class_c_script_1a2b3ee98f7a63916b67b91dfd2c4ee312" compoundref="script_8cpp" startline="3245" endline="3267">CScript::IsNormalPaymentScript</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" compoundref="transaction_8h" startline="31">COutPoint::n</references>
        <references refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" compoundref="transaction_8cpp" startline="12" endline="28">CTransaction::ToString</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="main_8cpp_1af0be4f98088716bf40c79db7734b1d01" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" compoundref="sandstorm_8h" startline="34">STORMNODE_RESET</references>
        <references refid="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" compoundref="sandstorm_8cpp" startline="495" endline="557">Check</references>
        <references refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" compoundref="sandstorm_8h" startline="402" endline="405">GetState</references>
        <references refid="class_c_sandstorm_pool_1adb2e1bef95a98b65a8467fa0c7e8be4a" compoundref="sandstorm_8h" startline="409" endline="412">GetEntriesCount</references>
        <references refid="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" compoundref="sandstorm_8cpp" startline="1319" endline="1341">CompletedTransaction</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1aaa874c4418a12df76eddfe8faff56b67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::InitCollateralAddress</definition>
        <argsstring>()</argsstring>
        <name>InitCollateralAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="348" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="348" bodyend="350"/>
        <references refid="class_c_sandstorm_pool_1ae46dad75c301205495960011d31242ba" compoundref="sandstorm_8cpp" startline="412" endline="421">SetCollateralAddress</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1afb0b7758e737f014c8a78557cea0e5ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::ClearSkippedDenominations</definition>
        <argsstring>()</argsstring>
        <name>ClearSkippedDenominations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="352" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="352" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a017ee0d3f2cfee928ac1467a664ef392" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::IsDenomSkipped</definition>
        <argsstring>(int64_t denom)</argsstring>
        <name>IsDenomSkipped</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>denom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="356" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="356" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a1b40173d3fdd69fd20da1d01117a0970" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::InitDenominations</definition>
        <argsstring>()</argsstring>
        <name>InitDenominations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="365" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="365" bodyend="384"/>
        <references refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" compoundref="util_8cpp" startline="91">sandStormDenominations</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a9be4f999ba6ac95ce4967c7b72c4c13f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::SetMinBlockSpacing</definition>
        <argsstring>(int minBlockSpacingIn)</argsstring>
        <name>SetMinBlockSpacing</name>
        <param>
          <type>int</type>
          <declname>minBlockSpacingIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="387" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="387" bodyend="389"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ae46dad75c301205495960011d31242ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::SetCollateralAddress</definition>
        <argsstring>(std::string strAddress)</argsstring>
        <name>SetCollateralAddress</name>
        <param>
          <type>std::string</type>
          <declname>strAddress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="391" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="412" bodyend="421"/>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" compoundref="script_8cpp" startline="3226" endline="3232">GetScriptForDestination</references>
        <references refid="class_c_dark_silk_address_1a907e63758c7914a246b5807f6babf97d" compoundref="base58_8cpp" startline="225" endline="236">CDarkSilkAddress::Get</references>
        <referencedby refid="class_c_sandstorm_pool_1aaa874c4418a12df76eddfe8faff56b67" compoundref="sandstorm_8h" startline="348" endline="350">InitCollateralAddress</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ab355cf2e1380a83aec75a7cf259c86ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="392" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="376" bodyend="383"/>
        <references refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" compoundref="sandstorm_8cpp" startline="32">vecStormnodesUsed</references>
        <referencedby refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" compoundref="rpcstormnode_8cpp" startline="20" endline="62">sandstorm</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a9a220f583b730dcf9f651d340da4ee52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::SetNull</definition>
        <argsstring>()</argsstring>
        <name>SetNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="393" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="385" bodyend="410"/>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1a2c403b5fdc8a3fe7d868cfb93fc19e34" compoundref="sandstorm_8h" startline="22">POOL_STATUS_IDLE</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <referencedby refid="class_c_sandstorm_pool_1ace91c9528325a3469294901ffa3c472f" compoundref="sandstorm_8h" startline="316" endline="329">CSandstormPool</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a0a6a14d206122f938220b23eab5e8a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::UnlockCoins</definition>
        <argsstring>()</argsstring>
        <name>UnlockCoins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="395" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="426" bodyend="436"/>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" compoundref="wallet_8h" startline="131">CWallet::cs_wallet</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="class_c_wallet_1abd60f5b890e2c62c05c6a2de6322197f" compoundref="wallet_8cpp" startline="4743" endline="4747">CWallet::UnlockCoin</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ac4eb73cecc3d383b8deae7f159711298" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::IsNull</definition>
        <argsstring>() const </argsstring>
        <name>IsNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="397" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="397" bodyend="400"/>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetState</definition>
        <argsstring>() const </argsstring>
        <name>GetState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="402" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="402" bodyend="405"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" compoundref="rpcstormnode_8cpp" startline="65" endline="78">getpoolinfo</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">ProcessMessageSandstorm</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" compoundref="sandstorm_8h" startline="427" endline="442">UpdateState</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1abf8b2c93df923f599639502bfaa165ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CSandstormPool::GetStatus</definition>
        <argsstring>()</argsstring>
        <name>GetStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="407" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="438" bodyend="490"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1a2c403b5fdc8a3fe7d868cfb93fc19e34" compoundref="sandstorm_8h" startline="22">POOL_STATUS_IDLE</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" compoundref="sandstorm_8h" startline="26">POOL_STATUS_SIGNING</references>
        <references refid="sandstorm_8h_1ae08f7334c97bdc015a738ea8b8605b66" compoundref="sandstorm_8h" startline="27">POOL_STATUS_TRANSMISSION</references>
        <references refid="sandstorm_8h_1aefa76c8279011a041fa348027e1d8150" compoundref="sandstorm_8h" startline="25">POOL_STATUS_FINALIZE_TRANSACTION</references>
        <references refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" compoundref="sandstorm_8h" startline="28">POOL_STATUS_ERROR</references>
        <references refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" compoundref="sandstorm_8h" startline="29">POOL_STATUS_SUCCESS</references>
        <references refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" compoundref="sandstorm_8h" startline="23">POOL_STATUS_QUEUE</references>
        <referencedby refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" compoundref="rpcstormnode_8cpp" startline="20" endline="62">sandstorm</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1adb2e1bef95a98b65a8467fa0c7e8be4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetEntriesCount</definition>
        <argsstring>() const </argsstring>
        <name>GetEntriesCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="409" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="409" bodyend="412"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" compoundref="rpcstormnode_8cpp" startline="65" endline="78">getpoolinfo</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" compoundref="sandstorm_8h" startline="427" endline="442">UpdateState</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ad372fec8e07e4c39d74b1c7c6809dde5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetLastEntryAccepted</definition>
        <argsstring>() const </argsstring>
        <name>GetLastEntryAccepted</name>
        <briefdescription>
<para>Get the time the last entry was accepted (time in UTC milliseconds) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="415" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="415" bodyend="418"/>
        <references refid="class_c_sandstorm_pool_1affec253e6cc6927c89002d1c7ccc4cf0" compoundref="sandstorm_8h" startline="279">lastEntryAccepted</references>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a724a0b6e9048760901010eb5da6328fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetCountEntriesAccepted</definition>
        <argsstring>() const </argsstring>
        <name>GetCountEntriesAccepted</name>
        <briefdescription>
<para>Get the count of the accepted entries. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="421" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="421" bodyend="424"/>
        <referencedby refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" compoundref="rpcstormnode_8cpp" startline="65" endline="78">getpoolinfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::UpdateState</definition>
        <argsstring>(unsigned int newState)</argsstring>
        <name>UpdateState</name>
        <param>
          <type>unsigned int</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="427" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="427" bodyend="442"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" compoundref="sandstorm_8h" startline="28">POOL_STATUS_ERROR</references>
        <references refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" compoundref="sandstorm_8h" startline="29">POOL_STATUS_SUCCESS</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="class_c_sandstorm_pool_1a1b21018ceeb726bdb554b56b8f7f03d1" compoundref="sandstorm_8cpp" startline="2181" endline="2186">RelayStatus</references>
        <references refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" compoundref="sandstorm_8h" startline="402" endline="405">GetState</references>
        <references refid="class_c_sandstorm_pool_1adb2e1bef95a98b65a8467fa0c7e8be4a" compoundref="sandstorm_8h" startline="409" endline="412">GetEntriesCount</references>
        <references refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" compoundref="sandstorm_8h" startline="34">STORMNODE_RESET</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a9f3cf01888cb9114e9dbd87d3fe05f10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetMaxPoolTransactions</definition>
        <argsstring>()</argsstring>
        <name>GetMaxPoolTransactions</name>
        <briefdescription>
<para>Get the maximum number of transactions for the pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="445" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="445" bodyend="448"/>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1ad5007b0f28cac385aa2a8eece0e750d2" compoundref="chainparams_8h" startline="72" endline="72">CChainParams::PoolMaxTransactions</references>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a21f1b559ed91c03e877782f29463b043" compoundref="sandstorm_8h" startline="451" endline="453">IsSessionReady</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a21f1b559ed91c03e877782f29463b043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::IsSessionReady</definition>
        <argsstring>()</argsstring>
        <name>IsSessionReady</name>
        <briefdescription>
<para>Do we have enough users to take entries? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="451" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="451" bodyend="453"/>
        <references refid="class_c_sandstorm_pool_1a9f3cf01888cb9114e9dbd87d3fe05f10" compoundref="sandstorm_8h" startline="445" endline="448">GetMaxPoolTransactions</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1aedb9e08d71363870b12ae5ffcf506b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::IsCompatibleWithEntries</definition>
        <argsstring>(std::vector&lt; CTxOut &gt; &amp;vout)</argsstring>
        <name>IsCompatibleWithEntries</name>
        <param>
          <type>std::vector&lt; <ref refid="class_c_tx_out" kindref="compound">CTxOut</ref> &gt; &amp;</type>
          <declname>vout</declname>
        </param>
        <briefdescription>
<para>Are these outputs compatible with other client in the pool? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="456" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1800" bodyend="1811"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" compoundref="sandstorm_8h" startline="92">CSandStormEntry::vout</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::IsCompatibleWithSession</definition>
        <argsstring>(CAmount nAmount, CTransaction txCollateral, int &amp;errorID)</argsstring>
        <name>IsCompatibleWithSession</name>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>nAmount</declname>
        </param>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref></type>
          <declname>txCollateral</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>errorID</declname>
        </param>
        <briefdescription>
<para>Is this amount compatible with other client in the pool? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="459" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1813" bodyend="1867"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" compoundref="sandstorm_8h" startline="155">CSandstormQueue::nDenom</references>
        <references refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" compoundref="sandstorm_8h" startline="153">CSandstormQueue::vin</references>
        <references refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" compoundref="activestormnode_8h" startline="42">CActiveStormnode::vin</references>
        <references refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" compoundref="sandstorm_8h" startline="154">CSandstormQueue::time</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" compoundref="sandstorm_8cpp" startline="2091" endline="2118">CSandstormQueue::Sign</references>
        <references refid="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" compoundref="sandstorm_8cpp" startline="2120" endline="2130">CSandstormQueue::Relay</references>
        <references refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" compoundref="sandstorm_8h" startline="23">POOL_STATUS_QUEUE</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::DoAutomaticDenominating</definition>
        <argsstring>(bool fDryRun=false)</argsstring>
        <name>DoAutomaticDenominating</name>
        <param>
          <type>bool</type>
          <declname>fDryRun</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Passively run Sandstorm in the background according to the configuration in settings (only for QT) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="462" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1353" bodyend="1625"/>
        <references refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" compoundref="util_8cpp" startline="89">fEnableSandstorm</references>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" compoundref="sandstorm_8h" startline="28">POOL_STATUS_ERROR</references>
        <references refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" compoundref="sandstorm_8h" startline="29">POOL_STATUS_SUCCESS</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" compoundref="util_8cpp" startline="92">fSandstormMultiSession</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" compoundref="stormnodeman_8h" startline="138" endline="138">CStormnodeMan::size</references>
        <references refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" compoundref="util_8cpp" startline="91">sandStormDenominations</references>
        <references refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" compoundref="wallet_8cpp" startline="2592" endline="2602">CWallet::HasCollateralInputs</references>
        <references refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" compoundref="util_8cpp" startline="83">nAnonymizeDarkSilkAmount</references>
        <references refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" compoundref="wallet_8cpp" startline="1368" endline="1402">CWallet::GetAnonymizedBalance</references>
        <references refid="class_c_wallet_1a842f8ca0ec3e6879c7f95f1420c7932f" compoundref="wallet_8cpp" startline="1334" endline="1366">CWallet::GetAnonymizableBalance</references>
        <references refid="class_c_wallet_1a260d40c79106bbaabbf3f4aaf328ffbc" compoundref="wallet_8cpp" startline="2488" endline="2530">CWallet::SelectCoinsDark</references>
        <references refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" compoundref="util_8cpp" startline="82">nSandstormRounds</references>
        <references refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" compoundref="wallet_8cpp" startline="1584" endline="1620">CWallet::GetDenominatedBalance</references>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="class_c_wallet_1a7fce7ef2029f265caf93d4db3bdb70c3" compoundref="wallet_8cpp" startline="2624" endline="2675">CWallet::CreateCollateralTransaction</references>
        <references refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" compoundref="stormnodeman_8cpp" startline="364" endline="376">CStormnodeMan::CountEnabled</references>
        <references refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" compoundref="sandstorm_8cpp" startline="32">vecStormnodesUsed</references>
        <references refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" compoundref="util_8cpp" startline="84">nLiquidityProvider</references>
        <references refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" compoundref="sandstorm_8cpp" startline="30">vecSandstormQueue</references>
        <references refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" compoundref="sandstorm_8h" startline="154">CSandstormQueue::time</references>
        <references refid="class_c_sandstorm_queue_1a0e1739e9a0c517f0de35807c92db1256" compoundref="sandstorm_8h" startline="179" endline="188">CSandstormQueue::GetAddress</references>
        <references refid="class_c_sandstorm_queue_1a2b509d89f0a6c0d858a5e28bab2e2017" compoundref="sandstorm_8h" startline="214" endline="217">CSandstormQueue::IsExpired</references>
        <references refid="class_c_sandstorm_queue_1acaa6374baeb707ed1726ec60c67c1624" compoundref="sandstorm_8h" startline="191" endline="200">CSandstormQueue::GetProtocolVersion</references>
        <references refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" compoundref="sandstorm_8h" startline="155">CSandstormQueue::nDenom</references>
        <references refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" compoundref="sandstorm_8h" startline="153">CSandstormQueue::vin</references>
        <references refid="class_c_wallet_1aa7606e8da251a609bf5d89a138f5d12e" compoundref="wallet_8cpp" startline="2402" endline="2486">CWallet::SelectCoinsByDenominations</references>
        <references refid="net_8cpp_1ac6e0da5071d4eaa6960dbf889c765834" compoundref="net_8cpp" startline="378" endline="443">ConnectNode</references>
        <references refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" compoundref="stormnodeman_8cpp" startline="400" endline="412">CStormnodeMan::Find</references>
        <references refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" compoundref="net_8h" startline="245">CNode::addr</references>
        <references refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">CService::ToString</references>
        <references refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" compoundref="stormnodeman_8cpp" startline="504" endline="534">CStormnodeMan::FindRandomNotInVec</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">CStormnode::nLastSsq</references>
        <references refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" compoundref="stormnodeman_8h" startline="74">CStormnodeMan::nSsqCount</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">CStormnode::vin</references>
        <references refid="class_c_wallet_1a8b3d2bb029430a437780037c5db7c0e0" compoundref="wallet_8cpp" startline="2712" endline="2726">CWallet::ConvertList</references>
        <referencedby refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" compoundref="rpcstormnode_8cpp" startline="20" endline="62">sandstorm</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a0348c28d46ac4180e2984336df1b4d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::PrepareSandstormDenominate</definition>
        <argsstring>()</argsstring>
        <name>PrepareSandstormDenominate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="463" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1628" bodyend="1648"/>
        <references refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" compoundref="util_8cpp" startline="82">nSandstormRounds</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::Check</definition>
        <argsstring>()</argsstring>
        <name>Check</name>
        <briefdescription>
<para>Check for process in Sandstorm. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="466" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="495" bodyend="557"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="sandstorm_8h_1aefa76c8279011a041fa348027e1d8150" compoundref="sandstorm_8h" startline="25">POOL_STATUS_FINALIZE_TRANSACTION</references>
        <references refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" compoundref="sandstorm_8h" startline="26">POOL_STATUS_SIGNING</references>
        <references refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" compoundref="transaction_8h" startline="357">CMutableTransaction::vout</references>
        <references refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" compoundref="transaction_8h" startline="356">CMutableTransaction::vin</references>
        <references refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" compoundref="transaction_8cpp" startline="130" endline="145">CMutableTransaction::ToString</references>
        <references refid="sandstorm_8h_1ae08f7334c97bdc015a738ea8b8605b66" compoundref="sandstorm_8h" startline="27">POOL_STATUS_TRANSMISSION</references>
        <references refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" compoundref="sandstorm_8h" startline="28">POOL_STATUS_ERROR</references>
        <references refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" compoundref="sandstorm_8h" startline="29">POOL_STATUS_SUCCESS</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" compoundref="sandstorm_8h" startline="34">STORMNODE_RESET</references>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">ProcessMessageSandstorm</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::CheckFinalTransaction</definition>
        <argsstring>()</argsstring>
        <name>CheckFinalTransaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="467" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="559" bodyend="632"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" compoundref="sync_8h" startline="160">LOCK2</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" compoundref="wallet_8h" startline="131">CWallet::cs_wallet</references>
        <references refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" compoundref="transaction_8cpp" startline="12" endline="28">CTransaction::ToString</references>
        <references refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" compoundref="main_8cpp" startline="1456" endline="1460">CMerkleTx::AcceptToMemoryPool</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" compoundref="sandstorm_8cpp" startline="2044" endline="2057">CSandStormSigner::SetKey</references>
        <references refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" compoundref="util_8cpp" startline="77">strStormNodePrivKey</references>
        <references refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" compoundref="sandstorm_8cpp" startline="2059" endline="2071">CSandStormSigner::SignMessage</references>
        <references refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</references>
        <references refid="sandstorm_8cpp_1ad2c083d07766489aaa2a282af5545eb5" compoundref="sandstorm_8cpp" startline="34">mapSandstormBroadcastTxes</references>
        <references refid="class_c_sandstorm_broadcast_tx_1ace6eee4d92b7fd4d98f8703d54d9b601" compoundref="sandstorm_8h" startline="229">CSandstormBroadcastTx::tx</references>
        <references refid="class_c_sandstorm_broadcast_tx_1a7aa70aaddcdcc0a56c84f2a6e43e96bd" compoundref="sandstorm_8h" startline="230">CSandstormBroadcastTx::vin</references>
        <references refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" compoundref="activestormnode_8h" startline="42">CActiveStormnode::vin</references>
        <references refid="class_c_sandstorm_broadcast_tx_1ad75aca79f3783c7f1e3f6a58f5ddc737" compoundref="sandstorm_8h" startline="231">CSandstormBroadcastTx::vchSig</references>
        <references refid="class_c_sandstorm_broadcast_tx_1af0add2ec08b732bff4cae62031a53061" compoundref="sandstorm_8h" startline="232">CSandstormBroadcastTx::sigTime</references>
        <references refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a44afcf030b5844ad73210599d00026fc" compoundref="protocol_8h" startline="158">MSG_SSTX</references>
        <references refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" compoundref="net_8cpp" startline="196" endline="202">RelayInv</references>
        <references refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" compoundref="sandstorm_8h" startline="34">STORMNODE_RESET</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a76f820f131dbb15d80f826f0c788249a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::ChargeFees</definition>
        <argsstring>()</argsstring>
        <name>ChargeFees</name>
        <briefdescription>
<para>Charge fees to bad actors (Charge clients a fee if they&apos;re abusive) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="469" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="646" bodyend="746"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="class_c_sand_storm_entry_1a184e3999700add47aa0fa6d7968d8264" compoundref="sandstorm_8h" startline="94">CSandStormEntry::collateral</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" compoundref="sandstorm_8h" startline="26">POOL_STATUS_SIGNING</references>
        <references refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" compoundref="sandstorm_8h" startline="91">CSandStormEntry::sev</references>
        <references refid="class_c_tx_s_s_in_1a0e09e06a90cee14abdbd390f3ecbfe08" compoundref="sandstorm_8h" startline="56">CTxSSIn::fHasSig</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" compoundref="main_8cpp" startline="1456" endline="1460">CMerkleTx::AcceptToMemoryPool</references>
        <references refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" compoundref="wallet_8cpp" startline="1225" endline="1242">CWalletTx::RelayWalletTransaction</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ac01544d518171779e6a609dae48d4f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::ChargeRandomFees</definition>
        <argsstring>()</argsstring>
        <name>ChargeRandomFees</name>
        <briefdescription>
<para>Rarely charge fees to pay miners. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="471" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="750" bodyend="782"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" compoundref="main_8cpp" startline="1456" endline="1460">CMerkleTx::AcceptToMemoryPool</references>
        <references refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" compoundref="wallet_8cpp" startline="1225" endline="1242">CWalletTx::RelayWalletTransaction</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::CheckTimeout</definition>
        <argsstring>()</argsstring>
        <name>CheckTimeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="472" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="787" bodyend="864"/>
        <references refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" compoundref="util_8cpp" startline="89">fEnableSandstorm</references>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1ae08f7334c97bdc015a738ea8b8605b66" compoundref="sandstorm_8h" startline="27">POOL_STATUS_TRANSMISSION</references>
        <references refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" compoundref="sandstorm_8h" startline="28">POOL_STATUS_ERROR</references>
        <references refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" compoundref="sandstorm_8h" startline="29">POOL_STATUS_SUCCESS</references>
        <references refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" compoundref="sandstorm_8cpp" startline="30">vecSandstormQueue</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" compoundref="sandstorm_8h" startline="23">POOL_STATUS_QUEUE</references>
        <references refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" compoundref="sandstorm_8h" startline="34">STORMNODE_RESET</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="sandstorm_8h_1ac049101269dbc10f69a6cbd59d50c18f" compoundref="sandstorm_8h" startline="36">SANDSTORM_QUEUE_TIMEOUT</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" compoundref="sandstorm_8h" startline="26">POOL_STATUS_SIGNING</references>
        <references refid="sandstorm_8h_1a55c615934e5fa33861673622cd2ae328" compoundref="sandstorm_8h" startline="37">SANDSTORM_SIGNING_TIMEOUT</references>
        <referencedby refid="class_c_sandstorm_pool_1a657fcb1ca83116777fdcfed8676107ea" compoundref="sandstorm_8cpp" startline="1307" endline="1316">NewBlock</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::CheckForCompleteQueue</definition>
        <argsstring>()</argsstring>
        <name>CheckForCompleteQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="473" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="869" bodyend="888"/>
        <references refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" compoundref="util_8cpp" startline="89">fEnableSandstorm</references>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" compoundref="sandstorm_8h" startline="23">POOL_STATUS_QUEUE</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" compoundref="sandstorm_8h" startline="155">CSandstormQueue::nDenom</references>
        <references refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" compoundref="sandstorm_8h" startline="153">CSandstormQueue::vin</references>
        <references refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" compoundref="activestormnode_8h" startline="42">CActiveStormnode::vin</references>
        <references refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" compoundref="sandstorm_8h" startline="154">CSandstormQueue::time</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_c_sandstorm_queue_1a3a372c1d7da3e28a15c8c9e459fed163" compoundref="sandstorm_8h" startline="156">CSandstormQueue::ready</references>
        <references refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" compoundref="sandstorm_8cpp" startline="2091" endline="2118">CSandstormQueue::Sign</references>
        <references refid="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" compoundref="sandstorm_8cpp" startline="2120" endline="2130">CSandstormQueue::Relay</references>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1aa3183dc7d64b9246cdd4b77423a71a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::SignatureValid</definition>
        <argsstring>(const CScript &amp;newSig, const CTxIn &amp;newVin)</argsstring>
        <name>SignatureValid</name>
        <param>
          <type>const <ref refid="class_c_script" kindref="compound">CScript</ref> &amp;</type>
          <declname>newSig</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>newVin</declname>
        </param>
        <briefdescription>
<para>Check to make sure a signature matches an input in the pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="475" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="891" bodyend="927"/>
        <references refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" compoundref="transaction_8h" startline="356">CMutableTransaction::vin</references>
        <references refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" compoundref="transaction_8h" startline="357">CMutableTransaction::vout</references>
        <references refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" compoundref="sandstorm_8h" startline="92">CSandStormEntry::vout</references>
        <references refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" compoundref="sandstorm_8h" startline="91">CSandStormEntry::sev</references>
        <references refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" compoundref="transaction_8h" startline="99">CTxIn::prevPubKey</references>
        <references refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" compoundref="script_8h" startline="870" endline="891">CScript::ToString</references>
        <references refid="script_8cpp_1a995f521b6ca4a8bfbd02d4cfe226feb6" compoundref="script_8cpp" startline="2822" endline="2856">VerifyScript</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaa10731903a63451e0742a816d90a64162" compoundref="script_8h" startline="104">SCRIPT_VERIFY_P2SH</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaa7cae377bd68b4e2da8f33283cec5dda8" compoundref="script_8h" startline="109">SCRIPT_VERIFY_STRICTENC</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1aabecb7ff2cd77451de653fa23e01ccbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::IsCollateralValid</definition>
        <argsstring>(const CTransaction &amp;txCollateral)</argsstring>
        <name>IsCollateralValid</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txCollateral</declname>
        </param>
        <briefdescription>
<para>If the collateral is valid given by a client. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="477" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="930" bodyend="983"/>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_transaction_1ab01e4e451d2f3f84b01380979c8fdacc" compoundref="transaction_8h" startline="263">CTransaction::nLockTime</references>
        <references refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" compoundref="transaction_8h" startline="168">CTxOut::nValue</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="class_c_script_1a2b3ee98f7a63916b67b91dfd2c4ee312" compoundref="script_8cpp" startline="3245" endline="3267">CScript::IsNormalPaymentScript</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" compoundref="transaction_8cpp" startline="12" endline="28">CTransaction::ToString</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" compoundref="transaction_8h" startline="31">COutPoint::n</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1afeafad15214cd8599db468c2d9fc750e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::AddEntry</definition>
        <argsstring>(const std::vector&lt; CTxIn &gt; &amp;newInput, const CAmount &amp;nAmount, const CTransaction &amp;txCollateral, const std::vector&lt; CTxOut &gt; &amp;newOutput, int &amp;errorID)</argsstring>
        <name>AddEntry</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &gt; &amp;</type>
          <declname>newInput</declname>
        </param>
        <param>
          <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nAmount</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txCollateral</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_c_tx_out" kindref="compound">CTxOut</ref> &gt; &amp;</type>
          <declname>newOutput</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>errorID</declname>
        </param>
        <briefdescription>
<para>Add a clients entry to the pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="479" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="988" bodyend="1036"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_out_point_1acd3225f1bb5550af0b900cd0dd7112d9" compoundref="transaction_8h" startline="44" endline="44">COutPoint::IsNull</references>
        <references refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</references>
        <references refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" compoundref="sandstorm_8h" startline="91">CSandStormEntry::sev</references>
        <references refid="class_c_sand_storm_entry_1aa1497e8d6693f47968af94ea946ea9e6" compoundref="sandstorm_8h" startline="106" endline="122">CSandStormEntry::Add</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a3a205b0af8f0b7d30c82c9b6f2f56573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::AddScriptSig</definition>
        <argsstring>(const CTxIn &amp;newVin)</argsstring>
        <name>AddScriptSig</name>
        <param>
          <type>const <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>newVin</declname>
        </param>
        <briefdescription>
<para>Add signature to a vin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="481" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1038" bodyend="1074"/>
        <references refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" compoundref="transaction_8h" startline="98">CTxIn::scriptSig</references>
        <references refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" compoundref="script_8h" startline="870" endline="891">CScript::ToString</references>
        <references refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" compoundref="sandstorm_8h" startline="91">CSandStormEntry::sev</references>
        <references refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_tx_in_1aa0dd08a6ecd0a595d9ef4dad020c1ea5" compoundref="transaction_8h" startline="100">CTxIn::nSequence</references>
        <references refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" compoundref="transaction_8h" startline="99">CTxIn::prevPubKey</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a4b6bc55b02bfbce6a467507541a137bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::SignaturesComplete</definition>
        <argsstring>()</argsstring>
        <name>SignaturesComplete</name>
        <briefdescription>
<para>Check that all inputs are signed. (Are all inputs signed?) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="483" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1077" bodyend="1084"/>
        <references refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" compoundref="sandstorm_8h" startline="91">CSandStormEntry::sev</references>
        <references refid="class_c_tx_s_s_in_1a0e09e06a90cee14abdbd390f3ecbfe08" compoundref="sandstorm_8h" startline="56">CTxSSIn::fHasSig</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::SendSandstormDenominate</definition>
        <argsstring>(std::vector&lt; CTxIn &gt; &amp;vin, std::vector&lt; CTxOut &gt; &amp;vout, CAmount amount)</argsstring>
        <name>SendSandstormDenominate</name>
        <param>
          <type>std::vector&lt; <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &gt; &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_c_tx_out" kindref="compound">CTxOut</ref> &gt; &amp;</type>
          <declname>vout</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>As a client, send a transaction to a Stormnode to start the denomination process. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="485" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1090" bodyend="1176"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="main_8cpp_1a7d4a97e049394047743b48c0cd0f0791" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</references>
        <references refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" compoundref="util_8cpp" startline="89">fEnableSandstorm</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" compoundref="transaction_8h" startline="168">CTxOut::nValue</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</references>
        <references refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" compoundref="transaction_8cpp" startline="12" endline="28">CTransaction::ToString</references>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="main_8cpp_1af0be4f98088716bf40c79db7734b1d01" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_sand_storm_entry_1aa1497e8d6693f47968af94ea946ea9e6" compoundref="sandstorm_8h" startline="106" endline="122">CSandStormEntry::Add</references>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1af272c7c4cb797a825b11d097da4cc59a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::StatusUpdate</definition>
        <argsstring>(int newState, int newEntriesCount, int newAccepted, int &amp;errorID, int newSessionID=0)</argsstring>
        <name>StatusUpdate</name>
        <param>
          <type>int</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newEntriesCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newAccepted</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>errorID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newSessionID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get Stormnode updates about the progress of Sandstorm. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="487" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1183" bodyend="1223"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" compoundref="sandstorm_8h" startline="28">POOL_STATUS_ERROR</references>
        <references refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" compoundref="sandstorm_8h" startline="29">POOL_STATUS_SUCCESS</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" compoundref="sandstorm_8h" startline="24">POOL_STATUS_ACCEPTING_ENTRIES</references>
        <references refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" compoundref="sandstorm_8h" startline="23">POOL_STATUS_QUEUE</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1adfe5727cd162dff15a016de05494ba44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::SignFinalTransaction</definition>
        <argsstring>(CTransaction &amp;finalTransactionNew, CNode *node)</argsstring>
        <name>SignFinalTransaction</name>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>finalTransactionNew</declname>
        </param>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>As a client, check and sign the final transaction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="490" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1230" bodyend="1305"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" compoundref="sandstorm_8h" startline="91">CSandStormEntry::sev</references>
        <references refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" compoundref="transaction_8h" startline="99">CTxIn::prevPubKey</references>
        <references refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" compoundref="sandstorm_8h" startline="92">CSandStormEntry::vout</references>
        <references refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" compoundref="transaction_8h" startline="168">CTxOut::nValue</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="script_8cpp_1adb49c071f85f19a8a8cb4e97d9fe8b93" compoundref="script_8cpp" startline="2153" endline="2186">SignSignature</references>
        <references refid="script_8h_1aaf105ae5beaca1dee30ae54530691fceac68c7df6528b3001624e56b2de3826de" compoundref="script_8h" startline="92">SIGHASH_ALL</references>
        <references refid="script_8h_1aaf105ae5beaca1dee30ae54530691fcea9412c721b741fe9be1e3247dc390a4d2" compoundref="script_8h" startline="95">SIGHASH_ANYONECANPAY</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a97b7eb9ae039822b13de52c0cfd6750c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::GetLastValidBlockHash</definition>
        <argsstring>(uint256 &amp;hash, int mod=1, int nBlockHeight=0)</argsstring>
        <name>GetLastValidBlockHash</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mod</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nBlockHeight</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get the last valid block hash for a given modulus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a657fcb1ca83116777fdcfed8676107ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::NewBlock</definition>
        <argsstring>()</argsstring>
        <name>NewBlock</name>
        <briefdescription>
<para>Process a new block. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="495" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1307" bodyend="1316"/>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" compoundref="sandstorm_8cpp" startline="787" endline="864">CheckTimeout</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::CompletedTransaction</definition>
        <argsstring>(bool error, int errorID)</argsstring>
        <name>CompletedTransaction</name>
        <param>
          <type>bool</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errorID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="496" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1319" bodyend="1341"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" compoundref="sandstorm_8h" startline="28">POOL_STATUS_ERROR</references>
        <references refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" compoundref="sandstorm_8h" startline="29">POOL_STATUS_SUCCESS</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">ProcessMessageSandstorm</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a80117149700bcbf278af2ad3f9c8f4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::ClearLastMessage</definition>
        <argsstring>()</argsstring>
        <name>ClearLastMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="497" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1343" bodyend="1346"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1af0d8155078c47c07ea80ce65f317940a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::MakeCollateralAmounts</definition>
        <argsstring>()</argsstring>
        <name>MakeCollateralAmounts</name>
        <briefdescription>
<para>Split up large inputs or make fee sized inputs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="500" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1651" bodyend="1704"/>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" compoundref="wallet_8cpp" startline="4666" endline="4685">CReserveKey::GetReservedKey</references>
        <references refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" compoundref="script_8cpp" startline="3226" endline="3232">GetScriptForDestination</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="class_c_wallet_1a98bcc563b7598ac652d39f091a38e418">CWallet::CreateTransaction</references>
        <references refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea94cc8a0e81d9490cdbdfc3d3f215e9e7" compoundref="wallet_8h" startline="62">ALL_COINS</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" compoundref="wallet_8cpp" startline="4695" endline="4701">CReserveKey::ReturnKey</references>
        <references refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" compoundref="wallet_8cpp" startline="4687" endline="4693">CReserveKey::KeepKey</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
        <references refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" compoundref="wallet_8cpp" startline="3959" endline="4014">CWallet::CommitTransaction</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormPool::CreateDenominated</definition>
        <argsstring>(CAmount nTotalValue)</argsstring>
        <name>CreateDenominated</name>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>nTotalValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="501" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1707" bodyend="1798"/>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" compoundref="wallet_8cpp" startline="4666" endline="4685">CReserveKey::GetReservedKey</references>
        <references refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" compoundref="script_8cpp" startline="3226" endline="3232">GetScriptForDestination</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" compoundref="wallet_8cpp" startline="2592" endline="2602">CWallet::HasCollateralInputs</references>
        <references refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" compoundref="util_8cpp" startline="91">sandStormDenominations</references>
        <references refid="class_c_wallet_1a6ab79abf1aba845254fe5969731ba2ad" compoundref="wallet_8cpp" startline="2561" endline="2590">CWallet::CountInputsWithAmount</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" compoundref="wallet_8cpp" startline="4687" endline="4693">CReserveKey::KeepKey</references>
        <references refid="class_c_wallet_1a98bcc563b7598ac652d39f091a38e418">CWallet::CreateTransaction</references>
        <references refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea94cc8a0e81d9490cdbdfc3d3f215e9e7" compoundref="wallet_8h" startline="62">ALL_COINS</references>
        <references refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" compoundref="wallet_8cpp" startline="4695" endline="4701">CReserveKey::ReturnKey</references>
        <references refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" compoundref="wallet_8cpp" startline="3959" endline="4014">CWallet::CommitTransaction</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetDenominations</definition>
        <argsstring>(const std::vector&lt; CTxOut &gt; &amp;vout, bool fSingleRandomDenom=false)</argsstring>
        <name>GetDenominations</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_c_tx_out" kindref="compound">CTxOut</ref> &gt; &amp;</type>
          <declname>vout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSingleRandomDenom</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the denominations for a list of outputs (returns a bitshifted integer) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="504" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1913" bodyend="1950"/>
        <references refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" compoundref="util_8cpp" startline="91">sandStormDenominations</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" compoundref="transaction_8h" startline="168">CTxOut::nValue</references>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a109d7f04c53b6c43d8fa855b0a9c2ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetDenominations</definition>
        <argsstring>(const std::vector&lt; CTxSSOut &gt; &amp;vout)</argsstring>
        <name>GetDenominations</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_c_tx_s_s_out" kindref="compound">CTxSSOut</ref> &gt; &amp;</type>
          <declname>vout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="505" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1903" bodyend="1910"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1af792e1a4f37918317d869b3b73467af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::GetDenominationsToString</definition>
        <argsstring>(int nDenom, std::string &amp;strDenom)</argsstring>
        <name>GetDenominationsToString</name>
        <param>
          <type>int</type>
          <declname>nDenom</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strDenom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="507" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1870" bodyend="1901"/>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1af7d1f51900ef204ed612fa27096181af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetDenominationsByAmount</definition>
        <argsstring>(CAmount nAmount, int nDenomTarget=0)</argsstring>
        <name>GetDenominationsByAmount</name>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>nAmount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDenomTarget</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get the denominations for a specific amount of dash. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="510" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1966" bodyend="1996"/>
        <references refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" compoundref="util_8cpp" startline="91">sandStormDenominations</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a1557c65382d02a17fed149290797d960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CSandstormPool::GetDenominationsByAmounts</definition>
        <argsstring>(std::vector&lt; CAmount &gt; &amp;vecAmount)</argsstring>
        <name>GetDenominationsByAmounts</name>
        <param>
          <type>std::vector&lt; <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &gt; &amp;</type>
          <declname>vecAmount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="511" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1953" bodyend="1964"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a1b34d9c712a8fc4c795d3294209597af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CSandstormPool::GetMessageByID</definition>
        <argsstring>(int messageID)</argsstring>
        <name>GetMessageByID</name>
        <param>
          <type>int</type>
          <declname>messageID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="513" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="1998" bodyend="2025"/>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1aa07e994eb333486b5aa63733ba3b5ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::RelayFinalTransaction</definition>
        <argsstring>(const int sessionID, const CTransaction &amp;txNew)</argsstring>
        <name>RelayFinalTransaction</name>
        <param>
          <type>const int</type>
          <declname>sessionID</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txNew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="519" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2152" bodyend="2159"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a1bcf989c2b8c5794a19e59ab5b1285bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::RelaySignaturesAnon</definition>
        <argsstring>(std::vector&lt; CTxIn &gt; &amp;vin)</argsstring>
        <name>RelaySignaturesAnon</name>
        <param>
          <type>std::vector&lt; <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &gt; &amp;</type>
          <declname>vin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a9750eb5b306cb18e1c3dfd3a583a3e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::RelayInAnon</definition>
        <argsstring>(std::vector&lt; CTxIn &gt; &amp;vin, std::vector&lt; CTxOut &gt; &amp;vout)</argsstring>
        <name>RelayInAnon</name>
        <param>
          <type>std::vector&lt; <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &gt; &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_c_tx_out" kindref="compound">CTxOut</ref> &gt; &amp;</type>
          <declname>vout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1ade2ee9d0faa6598f90f672302d17eba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::RelayIn</definition>
        <argsstring>(const std::vector&lt; CTxSSIn &gt; &amp;vin, const CAmount &amp;nAmount, const CTransaction &amp;txCollateral, const std::vector&lt; CTxSSOut &gt; &amp;vout)</argsstring>
        <name>RelayIn</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref> &gt; &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nAmount</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txCollateral</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_c_tx_s_s_out" kindref="compound">CTxSSOut</ref> &gt; &amp;</type>
          <declname>vout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="522" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2161" bodyend="2179"/>
        <references refid="net_8cpp_1a66a7371d8e724cac0b4495169cdf2859" compoundref="net_8cpp" startline="347" endline="356">FindNode</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" compoundref="net_8h" startline="245">CNode::addr</references>
        <references refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">CService::ToString</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a1b21018ceeb726bdb554b56b8f7f03d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::RelayStatus</definition>
        <argsstring>(const int sessionID, const int newState, const int newEntriesCount, const int newAccepted, const int errorID=MSG_NOERR)</argsstring>
        <name>RelayStatus</name>
        <param>
          <type>const int</type>
          <declname>sessionID</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>newEntriesCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>newAccepted</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>errorID</declname>
          <defval><ref refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a1b8e0cd184cc749ba27a373f50727e0a" kindref="member">MSG_NOERR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="523" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2181" bodyend="2186"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <referencedby refid="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" compoundref="sandstorm_8h" startline="427" endline="442">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_pool_1a6679f34e84daacfceddb01b74ebb2a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSandstormPool::RelayCompletedTransaction</definition>
        <argsstring>(const int sessionID, const bool error, const int errorID)</argsstring>
        <name>RelayCompletedTransaction</name>
        <param>
          <type>const int</type>
          <declname>sessionID</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>errorID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="524" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2188" bodyend="2193"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Used to keep track of current status of Sandstorm pool </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2679">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="2675">
        <label>CStormnodePing</label>
        <link refid="class_c_stormnode_ping"/>
        <childnode refid="2676" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="2678" relation="usage">
          <edgelabel>blockHash</edgelabel>
        </childnode>
      </node>
      <node id="2680">
        <label>CPubKey</label>
        <link refid="class_c_pub_key"/>
      </node>
      <node id="2671">
        <label>CSandstormPool</label>
        <link refid="class_c_sandstorm_pool"/>
        <childnode refid="2672" relation="usage">
          <edgelabel>collateralPubKey</edgelabel>
        </childnode>
        <childnode refid="2674" relation="usage">
          <edgelabel>pSubmittedToStormnode</edgelabel>
        </childnode>
      </node>
      <node id="2676">
        <label>CTxIn</label>
        <link refid="class_c_tx_in"/>
        <childnode refid="2672" relation="usage">
          <edgelabel>scriptSig</edgelabel>
          <edgelabel>prevPubKey</edgelabel>
        </childnode>
        <childnode refid="2677" relation="usage">
          <edgelabel>prevout</edgelabel>
        </childnode>
      </node>
      <node id="2678">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="2679" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2682">
        <label>CNetAddr</label>
        <link refid="class_c_net_addr"/>
      </node>
      <node id="2677">
        <label>COutPoint</label>
        <link refid="class_c_out_point"/>
        <childnode refid="2678" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="2674">
        <label>CStormnode</label>
        <link refid="class_c_stormnode"/>
        <childnode refid="2675" relation="usage">
          <edgelabel>lastPing</edgelabel>
        </childnode>
        <childnode refid="2676" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="2680" relation="usage">
          <edgelabel>pubkey</edgelabel>
          <edgelabel>pubkey2</edgelabel>
        </childnode>
        <childnode refid="2681" relation="usage">
          <edgelabel>addr</edgelabel>
        </childnode>
      </node>
      <node id="2672">
        <label>CScript</label>
        <link refid="class_c_script"/>
        <childnode refid="2673" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2673">
        <label>std::vector&lt; unsigned char &gt;</label>
      </node>
      <node id="2681">
        <label>CService</label>
        <link refid="class_c_service"/>
        <childnode refid="2682" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/sandstorm.h" line="253" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="252" bodyend="525"/>
    <listofallmembers>
      <member refid="class_c_sandstorm_pool_1afeafad15214cd8599db468c2d9fc750e" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>AddEntry</name></member>
      <member refid="class_c_sandstorm_pool_1a3a205b0af8f0b7d30c82c9b6f2f56573" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>AddScriptSig</name></member>
      <member refid="class_c_sandstorm_pool_1a8da1107d7613a095879e3c0a4165e6c1" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>cachedLastSuccess</name></member>
      <member refid="class_c_sandstorm_pool_1a927020441f683c7188a253e97f376106" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>cachedNumBlocks</name></member>
      <member refid="class_c_sandstorm_pool_1a76f820f131dbb15d80f826f0c788249a" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ChargeFees</name></member>
      <member refid="class_c_sandstorm_pool_1ac01544d518171779e6a609dae48d4f75" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ChargeRandomFees</name></member>
      <member refid="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>Check</name></member>
      <member refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>CheckFinalTransaction</name></member>
      <member refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>CheckForCompleteQueue</name></member>
      <member refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>CheckTimeout</name></member>
      <member refid="class_c_sandstorm_pool_1a80117149700bcbf278af2ad3f9c8f4f7" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ClearLastMessage</name></member>
      <member refid="class_c_sandstorm_pool_1afb0b7758e737f014c8a78557cea0e5ea" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ClearSkippedDenominations</name></member>
      <member refid="class_c_sandstorm_pool_1afc6af6d3ef8fbe2c6238d3564145a015" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>collateralPubKey</name></member>
      <member refid="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>CompletedTransaction</name></member>
      <member refid="class_c_sandstorm_pool_1a9077d221e19abd183ec497ca6ca6d302" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>countEntriesAccepted</name></member>
      <member refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>CreateDenominated</name></member>
      <member refid="class_c_sandstorm_pool_1a6f4f31ee21699b5d47f185f501892851" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>cs_sandstorm</name></member>
      <member refid="class_c_sandstorm_pool_1ace91c9528325a3469294901ffa3c472f" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>CSandstormPool</name></member>
      <member refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>DoAutomaticDenominating</name></member>
      <member refid="class_c_sandstorm_pool_1a64c915a8a09b97abf3d3e622d1b66ba8" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>entries</name></member>
      <member refid="class_c_sandstorm_pool_1a6680aec2198b2609fc84b88d55daf030" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>entriesCount</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a2cb39f1970ed231a8168e1a8fefd042d" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_ALREADY_HAVE</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a2727d0dcde9ffc488149dcc5f59dac58" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_DENOM</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a55776fc0a12adc3b13f3aa6e9e1f81f2" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_ENTRIES_FULL</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2ab65911a0da944db7532e36fca3ecbe82" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_EXISTING_TX</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2ab4316c0b0f3099c03356e0f46628a508" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_FEES</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aee7148a9f7f9cf79846a310a9c61a3e5" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_INVALID_COLLATERAL</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a8fd4c302d1eab85bf72d5941f3d84625" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_INVALID_INPUT</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2adb56e517793e4e747c9020e20fa52cc3" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_INVALID_SCRIPT</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a84514dca9d5612b95e77dd13a8ab261d" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_INVALID_TX</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2ab52414cda269cecb60b8675531672e0a" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_MAXIMUM</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2acf6706ed917de5f0e6768d495d5fe92b" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_MISSING_TX</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aa9023f2bf191cf83af1b61a6e1e9127b" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_MODE</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a7a4a71c2288249b03c3263f28b1b8cf7" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_NON_STANDARD_PUBKEY</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aa99b4fb7e5432ff1bc4ce0a24b875c14" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_NOT_A_SN</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a55cd88ac2a93cc0b8c6d86acbddc2e1e" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_QUEUE_FULL</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a11babaea0e9325656af3b9ccccede24c" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_RECENT</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2aaff2cac0b4c13d56532bc203dbed0bed" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_SESSION</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a9636ac06a1f35cd7dc3a72419ccb3148" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_SN_LIST</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a93b7b527d22d258eb4598ead7602bc53" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ERR_VERSION</name></member>
      <member refid="class_c_sandstorm_pool_1a0023b2d919ba8f299bad5f1cf84269fe" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>finalTransaction</name></member>
      <member refid="class_c_sandstorm_pool_1a724a0b6e9048760901010eb5da6328fd" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetCountEntriesAccepted</name></member>
      <member refid="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetDenominations</name></member>
      <member refid="class_c_sandstorm_pool_1a109d7f04c53b6c43d8fa855b0a9c2ec2" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetDenominations</name></member>
      <member refid="class_c_sandstorm_pool_1af7d1f51900ef204ed612fa27096181af" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetDenominationsByAmount</name></member>
      <member refid="class_c_sandstorm_pool_1a1557c65382d02a17fed149290797d960" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetDenominationsByAmounts</name></member>
      <member refid="class_c_sandstorm_pool_1af792e1a4f37918317d869b3b73467af7" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetDenominationsToString</name></member>
      <member refid="class_c_sandstorm_pool_1adb2e1bef95a98b65a8467fa0c7e8be4a" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetEntriesCount</name></member>
      <member refid="class_c_sandstorm_pool_1ad372fec8e07e4c39d74b1c7c6809dde5" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetLastEntryAccepted</name></member>
      <member refid="class_c_sandstorm_pool_1a97b7eb9ae039822b13de52c0cfd6750c" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetLastValidBlockHash</name></member>
      <member refid="class_c_sandstorm_pool_1a9f3cf01888cb9114e9dbd87d3fe05f10" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetMaxPoolTransactions</name></member>
      <member refid="class_c_sandstorm_pool_1a1b34d9c712a8fc4c795d3294209597af" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetMessageByID</name></member>
      <member refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetState</name></member>
      <member refid="class_c_sandstorm_pool_1abf8b2c93df923f599639502bfaa165ec" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>GetStatus</name></member>
      <member refid="class_c_sandstorm_pool_1aaa874c4418a12df76eddfe8faff56b67" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>InitCollateralAddress</name></member>
      <member refid="class_c_sandstorm_pool_1a1b40173d3fdd69fd20da1d01117a0970" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>InitDenominations</name></member>
      <member refid="class_c_sandstorm_pool_1aabecb7ff2cd77451de653fa23e01ccbe" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>IsCollateralValid</name></member>
      <member refid="class_c_sandstorm_pool_1aedb9e08d71363870b12ae5ffcf506b61" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>IsCompatibleWithEntries</name></member>
      <member refid="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>IsCompatibleWithSession</name></member>
      <member refid="class_c_sandstorm_pool_1a017ee0d3f2cfee928ac1467a664ef392" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>IsDenomSkipped</name></member>
      <member refid="class_c_sandstorm_pool_1ac4eb73cecc3d383b8deae7f159711298" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>IsNull</name></member>
      <member refid="class_c_sandstorm_pool_1a21f1b559ed91c03e877782f29463b043" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>IsSessionReady</name></member>
      <member refid="class_c_sandstorm_pool_1affec253e6cc6927c89002d1c7ccc4cf0" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>lastEntryAccepted</name></member>
      <member refid="class_c_sandstorm_pool_1ade4dc2454943976a421411d287b395c6" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>lastMessage</name></member>
      <member refid="class_c_sandstorm_pool_1a576942146ec253c483da19cc33bf2f6c" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>lastNewBlock</name></member>
      <member refid="class_c_sandstorm_pool_1ad436409790b57221f3bd5d7aaf436c9b" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>lastTimeChanged</name></member>
      <member refid="class_c_sandstorm_pool_1a63399f0167836bcbbca34a117a04ad4a" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>lockedCoins</name></member>
      <member refid="class_c_sandstorm_pool_1af0d8155078c47c07ea80ce65f317940a" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>MakeCollateralAmounts</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>messages</name></member>
      <member refid="class_c_sandstorm_pool_1a955b0b4d31bd4160866d3205c6c3f023" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>minBlockSpacing</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a4ac95fb563b32080da8ad1ba4f2a3662" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>MSG_ENTRIES_ADDED</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a1b8e0cd184cc749ba27a373f50727e0a" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>MSG_NOERR</name></member>
      <member refid="class_c_sandstorm_pool_1a539548228c53649bed42e158a86eded2a76b2dfe3a493d11580ecc21e6b919de1" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>MSG_SUCCESS</name></member>
      <member refid="class_c_sandstorm_pool_1a657fcb1ca83116777fdcfed8676107ea" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>NewBlock</name></member>
      <member refid="class_c_sandstorm_pool_1a0348c28d46ac4180e2984336df1b4d50" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>PrepareSandstormDenominate</name></member>
      <member refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>ProcessMessageSandstorm</name></member>
      <member refid="class_c_sandstorm_pool_1a61589289244edd2ca3bc539d725d885c" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>pSubmittedToStormnode</name></member>
      <member refid="class_c_sandstorm_pool_1a6679f34e84daacfceddb01b74ebb2a4e" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>RelayCompletedTransaction</name></member>
      <member refid="class_c_sandstorm_pool_1aa07e994eb333486b5aa63733ba3b5ac5" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>RelayFinalTransaction</name></member>
      <member refid="class_c_sandstorm_pool_1ade2ee9d0faa6598f90f672302d17eba8" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>RelayIn</name></member>
      <member refid="class_c_sandstorm_pool_1a9750eb5b306cb18e1c3dfd3a583a3e5e" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>RelayInAnon</name></member>
      <member refid="class_c_sandstorm_pool_1a1bcf989c2b8c5794a19e59ab5b1285bf" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>RelaySignaturesAnon</name></member>
      <member refid="class_c_sandstorm_pool_1a1b21018ceeb726bdb554b56b8f7f03d1" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>RelayStatus</name></member>
      <member refid="class_c_sandstorm_pool_1ab355cf2e1380a83aec75a7cf259c86ab" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>Reset</name></member>
      <member refid="class_c_sandstorm_pool_1ae7b0f0b9bb26e113c02388b6afe7a81b" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>sandStormDenominationsSkipped</name></member>
      <member refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>SendSandstormDenominate</name></member>
      <member refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>sessionDenom</name></member>
      <member refid="class_c_sandstorm_pool_1aa98f75224f6aebbb3910707e313e7bcf" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>sessionFoundStormnode</name></member>
      <member refid="class_c_sandstorm_pool_1ae900bfcbb75d30de2dfeed60575d8ff8" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>sessionID</name></member>
      <member refid="class_c_sandstorm_pool_1a2a0769372e2fdfc7255e862a2f5a14b7" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>sessionUsers</name></member>
      <member refid="class_c_sandstorm_pool_1ae46dad75c301205495960011d31242ba" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>SetCollateralAddress</name></member>
      <member refid="class_c_sandstorm_pool_1a9be4f999ba6ac95ce4967c7b72c4c13f" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>SetMinBlockSpacing</name></member>
      <member refid="class_c_sandstorm_pool_1a9a220f583b730dcf9f651d340da4ee52" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>SetNull</name></member>
      <member refid="class_c_sandstorm_pool_1a4b6bc55b02bfbce6a467507541a137bd" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>SignaturesComplete</name></member>
      <member refid="class_c_sandstorm_pool_1aa3183dc7d64b9246cdd4b77423a71a67" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>SignatureValid</name></member>
      <member refid="class_c_sandstorm_pool_1adfe5727cd162dff15a016de05494ba44" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>SignFinalTransaction</name></member>
      <member refid="class_c_sandstorm_pool_1aee8acab52b2dba5ecf60e5716919bc15" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>state</name></member>
      <member refid="class_c_sandstorm_pool_1af272c7c4cb797a825b11d097da4cc59a" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>StatusUpdate</name></member>
      <member refid="class_c_sandstorm_pool_1aa9137e1fe81c9f7a8edd55b2705a1938" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>strAutoDenomResult</name></member>
      <member refid="class_c_sandstorm_pool_1a1c513a6e4cb5ca279db17b9828e9f3a8" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>txCollateral</name></member>
      <member refid="class_c_sandstorm_pool_1ae75b3e298400ea8baeea9a07a6cfe725" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>unitTest</name></member>
      <member refid="class_c_sandstorm_pool_1a0a6a14d206122f938220b23eab5e8a70" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>UnlockCoins</name></member>
      <member refid="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" prot="public" virt="non-virtual"><scope>CSandstormPool</scope><name>UpdateState</name></member>
      <member refid="class_c_sandstorm_pool_1ae9a4cc813123cc4798c7142b2adc8522" prot="private" virt="non-virtual"><scope>CSandstormPool</scope><name>vecSessionCollateral</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
