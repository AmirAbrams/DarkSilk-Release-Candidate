<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_service" kind="class" language="C++" prot="public">
    <compoundname>CService</compoundname>
    <basecompoundref refid="class_c_net_addr" prot="public" virt="non-virtual">CNetAddr</basecompoundref>
    <derivedcompoundref refid="class_c_address" prot="public" virt="non-virtual">CAddress</derivedcompoundref>
    <includes refid="netbase_8h" local="no">netbase.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_service_1aef17734203dc2125cbdf4d23e50be410" prot="protected" static="no" mutable="no">
        <type>unsigned short</type>
        <definition>unsigned short CService::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="117" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="117" bodyend="-1"/>
        <referencedby refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" compoundref="netbase_8cpp" startline="1149" endline="1152">GetPort</referencedby>
        <referencedby refid="netbase_8cpp_1a7abc2516fa7e015cafcf9b98bc33e2ea" compoundref="netbase_8cpp" startline="1154" endline="1157">operator==</referencedby>
        <referencedby refid="netbase_8cpp_1a5834e0ab5104fffac621ea53fa2c3860" compoundref="netbase_8cpp" startline="1159" endline="1162">operator!=</referencedby>
        <referencedby refid="netbase_8cpp_1a26d0e22a8e7ae213b25467da3556c9e4" compoundref="netbase_8cpp" startline="1164" endline="1167">operator&lt;</referencedby>
        <referencedby refid="class_c_service_1a0673ebec7bdc8558ce3fe1d63ea4d2e1" compoundref="netbase_8h" startline="147" endline="160">SerializationOp</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_service_1a3347aa84bd8f98ae853307ad4e47a4f5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CService::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_service_1a3003da1c50f2135123ebb3109340b9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>()</argsstring>
        <name>CService</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="120" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1076" bodyend="1079"/>
        <referencedby refid="class_c_service_1a77782219f5d85f326b4c089cb2636e6f" compoundref="netbase_8cpp" startline="1103" endline="1115">SetSockAddr</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a43a0d18387ce3837d48020da47a1087c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const CNetAddr &amp;ip, unsigned short port)</argsstring>
        <name>CService</name>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="121" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1081" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a1fcc14e589f6d3e92b43707a5f71368f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const struct in_addr &amp;ipv4Addr, unsigned short port)</argsstring>
        <name>CService</name>
        <param>
          <type>const struct in_addr &amp;</type>
          <declname>ipv4Addr</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="122" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1085" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1aa54fd9204530445647cd3d45056881e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const struct sockaddr_in &amp;addr)</argsstring>
        <name>CService</name>
        <param>
          <type>const struct sockaddr_in &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="123" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1093" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a75b2a3cfa16642b0fcd74382203a9fdc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const char *pszIpPort, int portDefault, bool fAllowLookup=false)</argsstring>
        <name>CService</name>
        <param>
          <type>const char *</type>
          <declname>pszIpPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>portDefault</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fAllowLookup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="124" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1125" bodyend="1131"/>
        <references refid="class_c_service_1aee07d7f18e672f16d26359e3cab779ff" compoundref="netbase_8cpp" startline="1071" endline="1074">Init</references>
        <references refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" compoundref="netbase_8h" startline="46">CNetAddr::ip</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1ab8f5f4ae4e99a4edad8ba48642e36137" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const char *pszIpPort, bool fAllowLookup=false)</argsstring>
        <name>CService</name>
        <param>
          <type>const char *</type>
          <declname>pszIpPort</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fAllowLookup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="125" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1117" bodyend="1123"/>
        <references refid="class_c_service_1aee07d7f18e672f16d26359e3cab779ff" compoundref="netbase_8cpp" startline="1071" endline="1074">Init</references>
        <references refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" compoundref="netbase_8h" startline="46">CNetAddr::ip</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a677f74b3520148f3e47a19bb9986922b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const std::string &amp;strIpPort, int portDefault, bool fAllowLookup=false)</argsstring>
        <name>CService</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strIpPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>portDefault</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fAllowLookup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="126" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1141" bodyend="1147"/>
        <references refid="class_c_service_1aee07d7f18e672f16d26359e3cab779ff" compoundref="netbase_8cpp" startline="1071" endline="1074">Init</references>
        <references refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" compoundref="netbase_8h" startline="46">CNetAddr::ip</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a19a7a713dd9a30b2f78260e61d9a2604" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const std::string &amp;strIpPort, bool fAllowLookup=false)</argsstring>
        <name>CService</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strIpPort</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fAllowLookup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1133" bodyend="1139"/>
        <references refid="class_c_service_1aee07d7f18e672f16d26359e3cab779ff" compoundref="netbase_8cpp" startline="1071" endline="1074">Init</references>
        <references refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" compoundref="netbase_8h" startline="46">CNetAddr::ip</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1aee07d7f18e672f16d26359e3cab779ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CService::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="128" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1071" bodyend="1074"/>
        <referencedby refid="class_c_service_1ab8f5f4ae4e99a4edad8ba48642e36137" compoundref="netbase_8cpp" startline="1117" endline="1123">CService</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a3dedc3f12aa21bdbf1068b054d3e3d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CService::SetPort</definition>
        <argsstring>(unsigned short portIn)</argsstring>
        <name>SetPort</name>
        <param>
          <type>unsigned short</type>
          <declname>portIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="129" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1227" bodyend="1230"/>
        <referencedby refid="class_options_model_1a3102b457f4d46efac8ecb03b3d536b62" compoundref="optionsmodel_8cpp" startline="315" endline="526">OptionsModel::setData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a49df6ecaf59be814632c4d7755f26637" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned short</type>
        <definition>unsigned short CService::GetPort</definition>
        <argsstring>() const </argsstring>
        <name>GetPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="130" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1149" bodyend="1152"/>
        <references refid="class_c_service_1aef17734203dc2125cbdf4d23e50be410" compoundref="netbase_8h" startline="117">port</references>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">CActiveStormnode::Register</referencedby>
        <referencedby refid="net_8h_1a337d6af198a6b0d75f830e56da9b91e9" compoundref="net_8cpp" startline="247" endline="274">AddLocal</referencedby>
        <referencedby refid="net_8cpp_1a3b4720330e61127963a43df26b80f804" compoundref="net_8cpp" startline="1339" endline="1441">ThreadOpenConnections</referencedby>
        <referencedby refid="netbase_8h_1a82264c36c474ed2eee9093db72076910" compoundref="netbase_8cpp" startline="463" endline="500">ConnectSocket</referencedby>
        <referencedby refid="class_options_model_1a56d6c626e3315792c31f44754b2c8d73" compoundref="optionsmodel_8cpp" startline="206" endline="313">OptionsModel::data</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1ab0f791c174511056236119cc1580faeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CService::GetSockAddr</definition>
        <argsstring>(struct sockaddr *paddr, socklen_t *addrlen) const </argsstring>
        <name>GetSockAddr</name>
        <param>
          <type>struct sockaddr *</type>
          <declname>paddr</declname>
        </param>
        <param>
          <type>socklen_t *</type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="131" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1169" bodyend="1196"/>
        <references refid="class_c_net_addr_1a16ff4478f02f06f5a9a038a24d5da2f9" compoundref="netbase_8cpp" startline="636" endline="639">CNetAddr::IsIPv4</references>
        <references refid="class_c_net_addr_1aa2e2c78db01a6a27d6a2740f2ba43e90" compoundref="netbase_8cpp" startline="882" endline="888">CNetAddr::GetInAddr</references>
        <references refid="class_c_net_addr_1a0edb022cd6a186de8099799415409d57" compoundref="netbase_8cpp" startline="641" endline="648">CNetAddr::IsIPv6</references>
        <references refid="class_c_net_addr_1add7811be50f5fe60c4fa65b461dea98c" compoundref="netbase_8cpp" startline="890" endline="898">CNetAddr::GetIn6Addr</references>
        <referencedby refid="net_8cpp_1a0c8010ad96acff7cca6aca684ec42b71" compoundref="net_8cpp" startline="1702" endline="1805">BindListenPort</referencedby>
        <referencedby refid="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" compoundref="netbase_8cpp" startline="822" endline="848">CNetAddr::ToStringIP</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a77782219f5d85f326b4c089cb2636e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CService::SetSockAddr</definition>
        <argsstring>(const struct sockaddr *paddr)</argsstring>
        <name>SetSockAddr</name>
        <param>
          <type>const struct sockaddr *</type>
          <declname>paddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1103" bodyend="1115"/>
        <references refid="class_c_service_1a3003da1c50f2135123ebb3109340b9b2" compoundref="netbase_8cpp" startline="1076" endline="1079">CService</references>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a74d6e1526688229cb424584c29046e9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt; unsigned char &gt; CService::GetKey</definition>
        <argsstring>() const </argsstring>
        <name>GetKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="136" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1198" bodyend="1206"/>
        <references refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" compoundref="netbase_8h" startline="46">CNetAddr::ip</references>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a336f9848fe9364e260c76499be0351a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CService::ToString</definition>
        <argsstring>() const </argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1222" bodyend="1225"/>
        <references refid="class_c_service_1a39b82301356b0dfc2a92befc727b77be" compoundref="netbase_8cpp" startline="1213" endline="1220">ToStringIPPort</references>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_addr_man_1a33ec6a4584cf4b17af821e6e35216459" compoundref="addrman_8cpp" startline="262" endline="309">CAddrMan::Good_</referencedby>
        <referencedby refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" compoundref="instantx_8cpp" startline="38" endline="173">ProcessMessageInstantX</referencedby>
        <referencedby refid="instantx_8h_1a5d4434bfb70f64f95aa4de9286cbae94" compoundref="instantx_8cpp" startline="302" endline="394">ProcessConsensusVote</referencedby>
        <referencedby refid="net_8h_1a337d6af198a6b0d75f830e56da9b91e9" compoundref="net_8cpp" startline="247" endline="274">AddLocal</referencedby>
        <referencedby refid="net_8h_1a57ffc895ab641207e0eb30fd7e00a585" compoundref="net_8cpp" startline="378" endline="443">ConnectNode</referencedby>
        <referencedby refid="class_c_node_1a4dbfe4f6c1fd162aaa905e4bd201d536" compoundref="net_8cpp" startline="465" endline="475">CNode::PushVersion</referencedby>
        <referencedby refid="class_c_node_1aaa77188d9df85b80e3f8a30292acf6a9" compoundref="net_8cpp" startline="532" endline="568">CNode::copyStats</referencedby>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
        <referencedby refid="net_8cpp_1a0c8010ad96acff7cca6aca684ec42b71" compoundref="net_8cpp" startline="1702" endline="1805">BindListenPort</referencedby>
        <referencedby refid="class_stormnode_manager_1a8176df10b7594a5d37aeb8d41941a52b" compoundref="stormnodemanager_8cpp" startline="247" endline="269">StormnodeManager::on_UpdateButton_clicked</referencedby>
        <referencedby refid="rpcnet_8cpp_1a2a6994d3b180c8e9ce81e0da65a41bb3" compoundref="rpcnet_8cpp" startline="148" endline="238">getaddednodeinfo</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" compoundref="rpcstormnode_8cpp" startline="65" endline="78">getpoolinfo</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ade2ee9d0faa6598f90f672302d17eba8" compoundref="sandstorm_8cpp" startline="2161" endline="2179">CSandstormPool::RelayIn</referencedby>
        <referencedby refid="class_c_budget_manager_1a3fc235d528e37ec1c66789f3bfed1878" compoundref="stormnode-budget_8cpp" startline="904" endline="1072">CBudgetManager::ProcessMessage</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a8dc55316a297daad51a03d4cf7b37d06" compoundref="stormnode-payments_8cpp" startline="354" endline="430">CStormnodePayments::ProcessMessageStormnodePayments</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" compoundref="stormnodeman_8cpp" startline="211" endline="227">CStormnodeMan::Add</referencedby>
        <referencedby refid="class_c_stormnode_man_1a3f8f9f86f01df701533b544903b55113" compoundref="stormnodeman_8cpp" startline="378" endline="398">CStormnodeMan::SsegUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" compoundref="stormnodeman_8cpp" startline="662" endline="672">CStormnodeMan::ProcessStormnodeConnections</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a1e0f0b98239a9097044695a9e439bb46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CService::ToStringPort</definition>
        <argsstring>() const </argsstring>
        <name>ToStringPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="138" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1208" bodyend="1211"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <referencedby refid="class_c_service_1a39b82301356b0dfc2a92befc727b77be" compoundref="netbase_8cpp" startline="1213" endline="1220">ToStringIPPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a39b82301356b0dfc2a92befc727b77be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CService::ToStringIPPort</definition>
        <argsstring>() const </argsstring>
        <name>ToStringIPPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1213" bodyend="1220"/>
        <references refid="class_c_net_addr_1a16ff4478f02f06f5a9a038a24d5da2f9" compoundref="netbase_8cpp" startline="636" endline="639">CNetAddr::IsIPv4</references>
        <references refid="class_c_net_addr_1a3fba9e0b18f531c0ed15794a30e8165d" compoundref="netbase_8cpp" startline="706" endline="709">CNetAddr::IsTor</references>
        <references refid="class_c_net_addr_1a4502c75bf0bf1b5d07738587627288b4" compoundref="netbase_8cpp" startline="724" endline="727">CNetAddr::IsI2P</references>
        <references refid="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" compoundref="netbase_8cpp" startline="822" endline="848">CNetAddr::ToStringIP</references>
        <references refid="class_c_service_1a1e0f0b98239a9097044695a9e439bb46" compoundref="netbase_8cpp" startline="1208" endline="1211">ToStringPort</references>
        <referencedby refid="class_c_addr_man_1a03fcc7109b5f014760dc50a81f68c5ec" compoundref="addrman_8h" startline="414" endline="426">CAddrMan::Add</referencedby>
        <referencedby refid="class_c_node_1a51556705550511146245b9fb2fec09c1" compoundref="net_8h" startline="314" endline="369">CNode::CNode</referencedby>
        <referencedby refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">ToString</referencedby>
        <referencedby refid="class_options_model_1a3102b457f4d46efac8ecb03b3d536b62" compoundref="optionsmodel_8cpp" startline="315" endline="526">OptionsModel::setData</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a70335b93783d51e48d276a1e08bd721a" compoundref="rpcmisc_8cpp" startline="34" endline="81">getinfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a92fd246e176f01266cb36beae0c8f4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const struct in6_addr &amp;ipv6Addr, unsigned short port)</argsstring>
        <name>CService</name>
        <param>
          <type>const struct in6_addr &amp;</type>
          <declname>ipv6Addr</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1089" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1ac0eb3107507be78cc683e7a7fa8d56e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CService::CService</definition>
        <argsstring>(const struct sockaddr_in6 &amp;addr)</argsstring>
        <name>CService</name>
        <param>
          <type>const struct sockaddr_in6 &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1098" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="class_c_service_1a0673ebec7bdc8558ce3fe1d63ea4d2e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CService::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="147" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="147" bodyend="160"/>
        <references refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" compoundref="serialize_8h" startline="101">READWRITE</references>
        <references refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" compoundref="serialize_8h" startline="329">FLATDATA</references>
        <references refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" compoundref="netbase_8h" startline="46">CNetAddr::ip</references>
        <references refid="class_c_service_1aef17734203dc2125cbdf4d23e50be410" compoundref="netbase_8h" startline="117">port</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_service_1a7abc2516fa7e015cafcf9b98bc33e2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CService &amp;a, const CService &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="133" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1154" bodyend="1157"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_service_1a5834e0ab5104fffac621ea53fa2c3860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CService &amp;a, const CService &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="134" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1159" bodyend="1162"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_service_1a26d0e22a8e7ae213b25467da3556c9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const CService &amp;a, const CService &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="135" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1164" bodyend="1167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A combination of a network address (<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>) and a (TCP) port </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2732">
        <label>CAddress</label>
        <link refid="class_c_address"/>
        <childnode refid="2730" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2733">
        <label>CAddrInfo</label>
        <link refid="class_c_addr_info"/>
        <childnode refid="2732" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2731">
        <label>CNetAddr</label>
        <link refid="class_c_net_addr"/>
      </node>
      <node id="2730">
        <label>CService</label>
        <link refid="class_c_service"/>
        <childnode refid="2731" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2735">
        <label>CNetAddr</label>
        <link refid="class_c_net_addr"/>
      </node>
      <node id="2734">
        <label>CService</label>
        <link refid="class_c_service"/>
        <childnode refid="2735" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/netbase.h" line="115" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="114" bodyend="161"/>
    <listofallmembers>
      <member refid="class_c_service_1a3347aa84bd8f98ae853307ad4e47a4f5" prot="public" virt="non-virtual"><scope>CService</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_net_addr_1ad997a7ab057fbeab1dd6601135f8e02d" prot="public" virt="non-virtual"><scope>CService</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1a0af492cd8aca9bbaa3392cdbfbb55681" prot="public" virt="non-virtual"><scope>CService</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1a3549332f92d95ccadf262bdce9f4eacf" prot="public" virt="non-virtual"><scope>CService</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1ae237602be0e4bce6ff31061270371144" prot="public" virt="non-virtual"><scope>CService</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1a9eae4232457f7659a157467274d1b444" prot="public" virt="non-virtual"><scope>CService</scope><name>CNetAddr</name></member>
      <member refid="class_c_service_1a3003da1c50f2135123ebb3109340b9b2" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1a43a0d18387ce3837d48020da47a1087c" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1a1fcc14e589f6d3e92b43707a5f71368f" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1aa54fd9204530445647cd3d45056881e9" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1a75b2a3cfa16642b0fcd74382203a9fdc" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1ab8f5f4ae4e99a4edad8ba48642e36137" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1a677f74b3520148f3e47a19bb9986922b" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1a19a7a713dd9a30b2f78260e61d9a2604" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1a92fd246e176f01266cb36beae0c8f4fe" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_service_1ac0eb3107507be78cc683e7a7fa8d56e4" prot="public" virt="non-virtual"><scope>CService</scope><name>CService</name></member>
      <member refid="class_c_net_addr_1a0793d30a6baae6e3d4e06084ec33eddd" prot="public" virt="non-virtual"><scope>CService</scope><name>GetByte</name></member>
      <member refid="class_c_net_addr_1af196f306433562cb088dc83fd314a267" prot="public" virt="non-virtual"><scope>CService</scope><name>GetGroup</name></member>
      <member refid="class_c_net_addr_1a4c94fea8695ef97adf5b2a18e1074308" prot="public" virt="non-virtual"><scope>CService</scope><name>GetHash</name></member>
      <member refid="class_c_net_addr_1add7811be50f5fe60c4fa65b461dea98c" prot="public" virt="non-virtual"><scope>CService</scope><name>GetIn6Addr</name></member>
      <member refid="class_c_net_addr_1aa2e2c78db01a6a27d6a2740f2ba43e90" prot="public" virt="non-virtual"><scope>CService</scope><name>GetInAddr</name></member>
      <member refid="class_c_service_1a74d6e1526688229cb424584c29046e9e" prot="public" virt="non-virtual"><scope>CService</scope><name>GetKey</name></member>
      <member refid="class_c_net_addr_1a34a4760424f5c51998fc3baf82ccb5c8" prot="public" virt="non-virtual"><scope>CService</scope><name>GetNetwork</name></member>
      <member refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" prot="public" virt="non-virtual"><scope>CService</scope><name>GetPort</name></member>
      <member refid="class_c_net_addr_1a3007deff5e9872d620952362ae0ef144" prot="public" virt="non-virtual"><scope>CService</scope><name>GetReachabilityFrom</name></member>
      <member refid="class_c_service_1ab0f791c174511056236119cc1580faeb" prot="public" virt="non-virtual"><scope>CService</scope><name>GetSockAddr</name></member>
      <member refid="class_c_service_1aee07d7f18e672f16d26359e3cab779ff" prot="public" virt="non-virtual"><scope>CService</scope><name>Init</name></member>
      <member refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" prot="protected" virt="non-virtual"><scope>CService</scope><name>ip</name></member>
      <member refid="class_c_net_addr_1a4502c75bf0bf1b5d07738587627288b4" prot="public" virt="non-virtual"><scope>CService</scope><name>IsI2P</name></member>
      <member refid="class_c_net_addr_1a16ff4478f02f06f5a9a038a24d5da2f9" prot="public" virt="non-virtual"><scope>CService</scope><name>IsIPv4</name></member>
      <member refid="class_c_net_addr_1a0edb022cd6a186de8099799415409d57" prot="public" virt="non-virtual"><scope>CService</scope><name>IsIPv6</name></member>
      <member refid="class_c_net_addr_1a6cfa18f323424408cf7ace36c9a7c2e2" prot="public" virt="non-virtual"><scope>CService</scope><name>IsLocal</name></member>
      <member refid="class_c_net_addr_1ab6593d2d75ca7cc6f00c2831cc0a8b73" prot="public" virt="non-virtual"><scope>CService</scope><name>IsMulticast</name></member>
      <member refid="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC1918</name></member>
      <member refid="class_c_net_addr_1a639dff0ffea6ad930353784686def39b" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC3849</name></member>
      <member refid="class_c_net_addr_1a3d8e5495fd3a2f92bedf272452a2d4b0" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC3927</name></member>
      <member refid="class_c_net_addr_1a312065a9243977a602412665d6148f26" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC3964</name></member>
      <member refid="class_c_net_addr_1ac47bf0c27f8026497b1933393a6570ba" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC4193</name></member>
      <member refid="class_c_net_addr_1afc6e370bb97c97f83260bba898ec4731" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC4380</name></member>
      <member refid="class_c_net_addr_1ad69e51fffff5ee9fcabedda51f10a3ce" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC4843</name></member>
      <member refid="class_c_net_addr_1a5cba67eb628ea99ea68addfe14913fa3" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC4862</name></member>
      <member refid="class_c_net_addr_1a8057dbecf9f5b4d33a643990b6eec873" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC6052</name></member>
      <member refid="class_c_net_addr_1ab5d91a88d77777004c8ebd658c8caf54" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRFC6145</name></member>
      <member refid="class_c_net_addr_1a35131b2792434d1c9a860c583b610ab6" prot="public" virt="non-virtual"><scope>CService</scope><name>IsRoutable</name></member>
      <member refid="class_c_net_addr_1a3fba9e0b18f531c0ed15794a30e8165d" prot="public" virt="non-virtual"><scope>CService</scope><name>IsTor</name></member>
      <member refid="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" prot="public" virt="non-virtual"><scope>CService</scope><name>IsValid</name></member>
      <member refid="class_c_service_1a5834e0ab5104fffac621ea53fa2c3860" prot="public" virt="non-virtual"><scope>CService</scope><name>operator!=</name></member>
      <member refid="class_c_service_1a26d0e22a8e7ae213b25467da3556c9e4" prot="public" virt="non-virtual"><scope>CService</scope><name>operator&lt;</name></member>
      <member refid="class_c_service_1a7abc2516fa7e015cafcf9b98bc33e2ea" prot="public" virt="non-virtual"><scope>CService</scope><name>operator==</name></member>
      <member refid="class_c_service_1aef17734203dc2125cbdf4d23e50be410" prot="protected" virt="non-virtual"><scope>CService</scope><name>port</name></member>
      <member refid="class_c_service_1a0673ebec7bdc8558ce3fe1d63ea4d2e1" prot="public" virt="non-virtual"><scope>CService</scope><name>SerializationOp</name></member>
      <member refid="class_c_net_addr_1a1c6087345e5ca07a151451cd6deb974f" prot="public" virt="non-virtual"><scope>CService</scope><name>SetIP</name></member>
      <member refid="class_c_service_1a3dedc3f12aa21bdbf1068b054d3e3d39" prot="public" virt="non-virtual"><scope>CService</scope><name>SetPort</name></member>
      <member refid="class_c_service_1a77782219f5d85f326b4c089cb2636e6f" prot="public" virt="non-virtual"><scope>CService</scope><name>SetSockAddr</name></member>
      <member refid="class_c_net_addr_1aa3e44dfd064d9d8da1cb48cdcb7dd231" prot="public" virt="non-virtual"><scope>CService</scope><name>SetSpecial</name></member>
      <member refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" prot="public" virt="non-virtual"><scope>CService</scope><name>ToString</name></member>
      <member refid="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" prot="public" virt="non-virtual"><scope>CService</scope><name>ToStringIP</name></member>
      <member refid="class_c_service_1a39b82301356b0dfc2a92befc727b77be" prot="public" virt="non-virtual"><scope>CService</scope><name>ToStringIPPort</name></member>
      <member refid="class_c_service_1a1e0f0b98239a9097044695a9e439bb46" prot="public" virt="non-virtual"><scope>CService</scope><name>ToStringPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
