<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="sandstorm_8cpp" kind="file" language="C++">
    <compoundname>sandstorm.cpp</compoundname>
    <includes refid="sandstorm_8h" local="yes">sandstorm.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="stormnode-payments_8h" local="yes">stormnode-payments.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes refid="script_8h" local="yes">script.h</includes>
    <includes refid="instantx_8h" local="yes">instantx.h</includes>
    <includes refid="ui__interface_8h" local="yes">ui_interface.h</includes>
    <includes local="no">boost/algorithm/string/replace.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/filesystem/fstream.hpp</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">boost/assign/list_of.hpp</includes>
    <includes local="no">openssl/rand.h</includes>
    <incdepgraph>
      <node id="50716">
        <label>list</label>
      </node>
      <node id="50656">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="50765">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50763" relation="include">
        </childnode>
      </node>
      <node id="50745">
        <label>netinet/in.h</label>
      </node>
      <node id="50715">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50662" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
      </node>
      <node id="50738">
        <label>arpa/inet.h</label>
      </node>
      <node id="50654">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="50680">
        <label>limits</label>
      </node>
      <node id="50774">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="50689">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50662" relation="include">
        </childnode>
      </node>
      <node id="50731">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50671" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50732" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50733" relation="include">
        </childnode>
        <childnode refid="50727" relation="include">
        </childnode>
      </node>
      <node id="50690">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50667" relation="include">
        </childnode>
      </node>
      <node id="50703">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50705" relation="include">
        </childnode>
        <childnode refid="50669" relation="include">
        </childnode>
        <childnode refid="50706" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50726" relation="include">
        </childnode>
      </node>
      <node id="50725">
        <label>openssl/rand.h</label>
      </node>
      <node id="50694">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="50695" relation="include">
        </childnode>
        <childnode refid="50702" relation="include">
        </childnode>
        <childnode refid="50726" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50716" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50699" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50683">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="50672">
        <label>assert.h</label>
      </node>
      <node id="50744">
        <label>net/if.h</label>
      </node>
      <node id="50651">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50658" relation="include">
        </childnode>
        <childnode refid="50771" relation="include">
        </childnode>
      </node>
      <node id="50777">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="50775" relation="include">
        </childnode>
        <childnode refid="50753" relation="include">
        </childnode>
      </node>
      <node id="50754">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="50731" relation="include">
        </childnode>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50755" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50767" relation="include">
        </childnode>
      </node>
      <node id="50776">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="50764">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="50691" relation="include">
        </childnode>
      </node>
      <node id="50657">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="50772">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="50750" relation="include">
        </childnode>
        <childnode refid="50669" relation="include">
        </childnode>
        <childnode refid="50659" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50660" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50684">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="50685" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
      </node>
      <node id="50755">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="50756" relation="include">
        </childnode>
        <childnode refid="50754" relation="include">
        </childnode>
        <childnode refid="50672" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50766" relation="include">
        </childnode>
      </node>
      <node id="50666">
        <label>sys/mman.h</label>
      </node>
      <node id="50662">
        <label>stdlib.h</label>
      </node>
      <node id="50768">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="50730" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50750" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
      </node>
      <node id="50704">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="50724">
        <label>openssl/crypto.h</label>
      </node>
      <node id="50775">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="50659" relation="include">
        </childnode>
        <childnode refid="50753" relation="include">
        </childnode>
        <childnode refid="50773" relation="include">
        </childnode>
        <childnode refid="50776" relation="include">
        </childnode>
      </node>
      <node id="50780">
        <label>boost/filesystem/fstream.hpp</label>
      </node>
      <node id="50741">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="50742" relation="include">
        </childnode>
        <childnode refid="50666" relation="include">
        </childnode>
        <childnode refid="50743" relation="include">
        </childnode>
        <childnode refid="50709" relation="include">
        </childnode>
        <childnode refid="50744" relation="include">
        </childnode>
        <childnode refid="50745" relation="include">
        </childnode>
        <childnode refid="50738" relation="include">
        </childnode>
        <childnode refid="50746" relation="include">
        </childnode>
        <childnode refid="50667" relation="include">
        </childnode>
        <childnode refid="50747" relation="include">
        </childnode>
        <childnode refid="50668" relation="include">
        </childnode>
        <childnode refid="50748" relation="include">
        </childnode>
      </node>
      <node id="50720">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="50686">
        <label>openssl/sha.h</label>
      </node>
      <node id="50748">
        <label>errno.h</label>
      </node>
      <node id="50679">
        <label>cassert</label>
      </node>
      <node id="50674">
        <label>stdexcept</label>
      </node>
      <node id="50708">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="50709" relation="include">
        </childnode>
        <childnode refid="50710" relation="include">
        </childnode>
        <childnode refid="50711" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50712" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50716" relation="include">
        </childnode>
        <childnode refid="50699" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50717" relation="include">
        </childnode>
        <childnode refid="50718" relation="include">
        </childnode>
        <childnode refid="50700" relation="include">
        </childnode>
        <childnode refid="50719" relation="include">
        </childnode>
        <childnode refid="50720" relation="include">
        </childnode>
        <childnode refid="50721" relation="include">
        </childnode>
        <childnode refid="50722" relation="include">
        </childnode>
        <childnode refid="50723" relation="include">
        </childnode>
        <childnode refid="50724" relation="include">
        </childnode>
        <childnode refid="50725" relation="include">
        </childnode>
        <childnode refid="50707" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
      </node>
      <node id="50749">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="50750" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50740" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
      </node>
      <node id="50719">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="50760">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50727" relation="include">
        </childnode>
        <childnode refid="50761" relation="include">
        </childnode>
        <childnode refid="50764" relation="include">
        </childnode>
      </node>
      <node id="50664">
        <label>string</label>
      </node>
      <node id="50693">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="50694" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50662" relation="include">
        </childnode>
        <childnode refid="50730" relation="include">
        </childnode>
        <childnode refid="50731" relation="include">
        </childnode>
        <childnode refid="50752" relation="include">
        </childnode>
        <childnode refid="50753" relation="include">
        </childnode>
        <childnode refid="50659" relation="include">
        </childnode>
        <childnode refid="50702" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50769" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50726" relation="include">
        </childnode>
      </node>
      <node id="50734">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50662" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50735" relation="include">
        </childnode>
      </node>
      <node id="50665">
        <label>map</label>
      </node>
      <node id="50717">
        <label>boost/thread.hpp</label>
      </node>
      <node id="50751">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="50740" relation="include">
        </childnode>
        <childnode refid="50749" relation="include">
        </childnode>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50733" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50773">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50735" relation="include">
        </childnode>
        <childnode refid="50659" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50772" relation="include">
        </childnode>
        <childnode refid="50753" relation="include">
        </childnode>
        <childnode refid="50733" relation="include">
        </childnode>
      </node>
      <node id="50769">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50770" relation="include">
        </childnode>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
      </node>
      <node id="50759">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50696" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50700" relation="include">
        </childnode>
        <childnode refid="50760" relation="include">
        </childnode>
        <childnode refid="50765" relation="include">
        </childnode>
      </node>
      <node id="50691">
        <label>stddef.h</label>
      </node>
      <node id="50705">
        <label>boost/variant.hpp</label>
      </node>
      <node id="50778">
        <label>instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="50731" relation="include">
        </childnode>
      </node>
      <node id="50747">
        <label>netdb.h</label>
      </node>
      <node id="50742">
        <label>sys/fcntl.h</label>
      </node>
      <node id="50756">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="50757" relation="include">
        </childnode>
      </node>
      <node id="50763">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50762" relation="include">
        </childnode>
      </node>
      <node id="50767">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="50677">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50679" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50673" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50682" relation="include">
        </childnode>
        <childnode refid="50683" relation="include">
        </childnode>
        <childnode refid="50660" relation="include">
        </childnode>
        <childnode refid="50684" relation="include">
        </childnode>
      </node>
      <node id="50667">
        <label>limits.h</label>
      </node>
      <node id="50653">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="50739">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50736" relation="include">
        </childnode>
      </node>
      <node id="50711">
        <label>sys/resource.h</label>
      </node>
      <node id="50721">
        <label>openssl/bio.h</label>
      </node>
      <node id="50752">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="50660" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50702" relation="include">
        </childnode>
      </node>
      <node id="50729">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="50740">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50741" relation="include">
        </childnode>
      </node>
      <node id="50702">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="50659" relation="include">
        </childnode>
        <childnode refid="50669" relation="include">
        </childnode>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50705" relation="include">
        </childnode>
      </node>
      <node id="50781">
        <label>boost/assign/list_of.hpp</label>
      </node>
      <node id="50670">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="50671" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50686" relation="include">
        </childnode>
        <childnode refid="50687" relation="include">
        </childnode>
        <childnode refid="50688" relation="include">
        </childnode>
        <childnode refid="50689" relation="include">
        </childnode>
        <childnode refid="50690" relation="include">
        </childnode>
        <childnode refid="50692" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50746">
        <label>ifaddrs.h</label>
      </node>
      <node id="50726">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50662" relation="include">
        </childnode>
        <childnode refid="50727" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50728" relation="include">
        </childnode>
      </node>
      <node id="50709">
        <label>sys/types.h</label>
      </node>
      <node id="50698">
        <label>ios</label>
      </node>
      <node id="50663">
        <label>string.h</label>
      </node>
      <node id="50685">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="50681">
        <label>cstdio</label>
      </node>
      <node id="50655">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="50723">
        <label>openssl/buffer.h</label>
      </node>
      <node id="50682">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="50753">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="50754" relation="include">
        </childnode>
        <childnode refid="50735" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50696" relation="include">
        </childnode>
        <childnode refid="50758" relation="include">
        </childnode>
        <childnode refid="50768" relation="include">
        </childnode>
        <childnode refid="50716" relation="include">
        </childnode>
        <childnode refid="50766" relation="include">
        </childnode>
      </node>
      <node id="50700">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="50771">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50735" relation="include">
        </childnode>
        <childnode refid="50659" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50772" relation="include">
        </childnode>
        <childnode refid="50753" relation="include">
        </childnode>
        <childnode refid="50773" relation="include">
        </childnode>
      </node>
      <node id="50766">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="50669">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="50670" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50671" relation="include">
        </childnode>
        <childnode refid="50674" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50668">
        <label>unistd.h</label>
      </node>
      <node id="50701">
        <label>db_cxx.h</label>
      </node>
      <node id="50676">
        <label>vector</label>
      </node>
      <node id="50706">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50671" relation="include">
        </childnode>
        <childnode refid="50707" relation="include">
        </childnode>
        <childnode refid="50674" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
      </node>
      <node id="50735">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="50736" relation="include">
        </childnode>
        <childnode refid="50737" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50725" relation="include">
        </childnode>
        <childnode refid="50738" relation="include">
        </childnode>
        <childnode refid="50739" relation="include">
        </childnode>
        <childnode refid="50740" relation="include">
        </childnode>
        <childnode refid="50749" relation="include">
        </childnode>
        <childnode refid="50751" relation="include">
        </childnode>
        <childnode refid="50670" relation="include">
        </childnode>
        <childnode refid="50696" relation="include">
        </childnode>
      </node>
      <node id="50687">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="50718">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="50699">
        <label>utility</label>
      </node>
      <node id="50757">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="50731" relation="include">
        </childnode>
        <childnode refid="50758" relation="include">
        </childnode>
      </node>
      <node id="50714">
        <label>sstream</label>
      </node>
      <node id="50770">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="50659">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="50660" relation="include">
        </childnode>
        <childnode refid="50669" relation="include">
        </childnode>
        <childnode refid="50674" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50722">
        <label>openssl/evp.h</label>
      </node>
      <node id="50712">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="50679" relation="include">
        </childnode>
        <childnode refid="50713" relation="include">
        </childnode>
        <childnode refid="50714" relation="include">
        </childnode>
        <childnode refid="50674" relation="include">
        </childnode>
      </node>
      <node id="50675">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="50695">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50696" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50700" relation="include">
        </childnode>
        <childnode refid="50701" relation="include">
        </childnode>
      </node>
      <node id="50696">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="50660" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50697" relation="include">
        </childnode>
        <childnode refid="50672" relation="include">
        </childnode>
        <childnode refid="50698" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50663" relation="include">
        </childnode>
        <childnode refid="50699" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50692">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50667" relation="include">
        </childnode>
      </node>
      <node id="50710">
        <label>sys/time.h</label>
      </node>
      <node id="50713">
        <label>iostream</label>
      </node>
      <node id="50736">
        <label>deque</label>
      </node>
      <node id="50671">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="50672" relation="include">
        </childnode>
        <childnode refid="50673" relation="include">
        </childnode>
        <childnode refid="50674" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50743">
        <label>sys/socket.h</label>
      </node>
      <node id="50762">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="50672" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50663" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
      </node>
      <node id="50737">
        <label>boost/array.hpp</label>
      </node>
      <node id="50707">
        <label>openssl/bn.h</label>
      </node>
      <node id="50758">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="50759" relation="include">
        </childnode>
        <childnode refid="50753" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50699" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50733">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="50675" relation="include">
        </childnode>
      </node>
      <node id="50660">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="50661" relation="include">
        </childnode>
        <childnode refid="50663" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50656" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50666" relation="include">
        </childnode>
        <childnode refid="50667" relation="include">
        </childnode>
        <childnode refid="50668" relation="include">
        </childnode>
      </node>
      <node id="50750">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="50706" relation="include">
        </childnode>
        <childnode refid="50671" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50678">
        <label>set</label>
      </node>
      <node id="50697">
        <label>algorithm</label>
      </node>
      <node id="50779">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="50658">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50659" relation="include">
        </childnode>
        <childnode refid="50693" relation="include">
        </childnode>
      </node>
      <node id="50688">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50662" relation="include">
        </childnode>
      </node>
      <node id="50732">
        <label>util.h</label>
      </node>
      <node id="50727">
        <label>stdio.h</label>
      </node>
      <node id="50661">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="50662" relation="include">
        </childnode>
      </node>
      <node id="50650">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm.cpp"/>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50774" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
        <childnode refid="50775" relation="include">
        </childnode>
        <childnode refid="50777" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50778" relation="include">
        </childnode>
        <childnode refid="50769" relation="include">
        </childnode>
        <childnode refid="50779" relation="include">
        </childnode>
        <childnode refid="50718" relation="include">
        </childnode>
        <childnode refid="50780" relation="include">
        </childnode>
        <childnode refid="50776" relation="include">
        </childnode>
        <childnode refid="50697" relation="include">
        </childnode>
        <childnode refid="50781" relation="include">
        </childnode>
        <childnode refid="50725" relation="include">
        </childnode>
      </node>
      <node id="50673">
        <label>cstring</label>
      </node>
      <node id="50652">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="50653" relation="include">
        </childnode>
        <childnode refid="50654" relation="include">
        </childnode>
        <childnode refid="50655" relation="include">
        </childnode>
        <childnode refid="50656" relation="include">
        </childnode>
        <childnode refid="50657" relation="include">
        </childnode>
      </node>
      <node id="50728">
        <label>inttypes.h</label>
      </node>
      <node id="50761">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="50762" relation="include">
        </childnode>
        <childnode refid="50763" relation="include">
        </childnode>
      </node>
      <node id="50730">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="50731" relation="include">
        </childnode>
        <childnode refid="50692" relation="include">
        </childnode>
        <childnode refid="50734" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_sandstorm_pool" kindref="compound">CSandstormPool</ref></type>
        <definition>CSandstormPool sandStormPool</definition>
        <argsstring></argsstring>
        <name>sandStormPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.cpp" line="26" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" compoundref="rpcstormnode_8cpp" startline="20" endline="62">sandstorm</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" compoundref="rpcstormnode_8cpp" startline="65" endline="78">getpoolinfo</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" compoundref="stormnodeman_8cpp" startline="662" endline="672">CStormnodeMan::ProcessStormnodeConnections</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_sand_storm_signer" kindref="compound">CSandStormSigner</ref></type>
        <definition>CSandStormSigner sandStormSigner</definition>
        <argsstring></argsstring>
        <name>sandStormSigner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.cpp" line="28" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">CActiveStormnode::Register</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" compoundref="instantx_8cpp" startline="471" endline="491">CConsensusVote::SignatureValid</referencedby>
        <referencedby refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" compoundref="instantx_8cpp" startline="493" endline="520">CConsensusVote::Sign</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aaff1bdc7f9f32708efc9094bb6ab0e0d" compoundref="rpcstormnode-budget_8cpp" startline="569" endline="761">snfinalbudget</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1a7263335082b2638b8eafc59e21e79baa" compoundref="sandstorm-relay_8cpp" startline="40" endline="65">CSandStormRelay::Sign</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1add9d29eac76800e8d07ced2e0b3eec4b" compoundref="sandstorm-relay_8cpp" startline="67" endline="87">CSandStormRelay::VerifyMessage</referencedby>
        <referencedby refid="class_c_spork_manager_1a697d8c0ce5c422ea125eee96687aa7b3" compoundref="spork_8cpp" startline="175" endline="188">CSporkManager::CheckSignature</referencedby>
        <referencedby refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" compoundref="spork_8cpp" startline="190" endline="215">CSporkManager::Sign</referencedby>
        <referencedby refid="class_c_budget_vote_1a112c52bed648dd66fe2898e002fc3f09" compoundref="stormnode-budget_8cpp" startline="1601" endline="1621">CBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_budget_vote_1ab01d2ab30c3761318a7da919bff26697" compoundref="stormnode-budget_8cpp" startline="1623" endline="1644">CBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_finalized_budget_1a8d5710eaf0fe541dcdce1d5f2ebee51c" compoundref="stormnode-budget_8cpp" startline="1914" endline="1940">CFinalizedBudget::SubmitVote</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1ac417b917ae18df17838b49371435c64a" compoundref="stormnode-budget_8cpp" startline="2002" endline="2022">CFinalizedBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1aadcc860c6efe5122388a372641297014" compoundref="stormnode-budget_8cpp" startline="2024" endline="2046">CFinalizedBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a2ee621a52030230a8e3307886f5f45be" compoundref="stormnode-payments_8cpp" startline="432" endline="452">CStormnodePaymentWinner::Sign</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a7c86a0fbc7e6fb5f6e07a0248ed04a43" compoundref="stormnode-payments_8cpp" startline="770" endline="790">CStormnodePaymentWinner::SignatureValid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" compoundref="stormnode_8cpp" startline="557" endline="576">CStormnodePing::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c_sandstorm_queue" kindref="compound">CSandstormQueue</ref> &gt;</type>
        <definition>std::vector&lt;CSandstormQueue&gt; vecSandstormQueue</definition>
        <argsstring></argsstring>
        <name>vecSandstormQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.cpp" line="30" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" compoundref="sandstorm_8cpp" startline="787" endline="864">CSandstormPool::CheckTimeout</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &gt;</type>
        <definition>std::vector&lt;CTxIn&gt; vecStormnodesUsed</definition>
        <argsstring></argsstring>
        <name>vecStormnodesUsed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.cpp" line="32" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="class_c_sandstorm_pool_1ab355cf2e1380a83aec75a7cf259c86ab" compoundref="sandstorm_8cpp" startline="376" endline="383">CSandstormPool::Reset</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sandstorm_8cpp_1ad2c083d07766489aaa2a282af5545eb5" prot="public" static="no" mutable="no">
        <type>map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_sandstorm_broadcast_tx" kindref="compound">CSandstormBroadcastTx</ref> &gt;</type>
        <definition>map&lt;uint256, CSandstormBroadcastTx&gt; mapSandstormBroadcastTxes</definition>
        <argsstring></argsstring>
        <name>mapSandstormBroadcastTxes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.cpp" line="34" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_active_stormnode" kindref="compound">CActiveStormnode</ref></type>
        <definition>CActiveStormnode activeStormnode</definition>
        <argsstring></argsstring>
        <name>activeStormnode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.cpp" line="36" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="instantx_8h_1a0753801d6e6eb2cb230a85a6ba6fd371" compoundref="instantx_8cpp" startline="259" endline="299">DoConsensusVote</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aaff1bdc7f9f32708efc9094bb6ab0e0d" compoundref="rpcstormnode-budget_8cpp" startline="569" endline="761">snfinalbudget</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="class_c_finalized_budget_1a8d5710eaf0fe541dcdce1d5f2ebee51c" compoundref="stormnode-budget_8cpp" startline="1914" endline="1940">CFinalizedBudget::SubmitVote</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" compoundref="stormnode-sync_8cpp" startline="225" endline="405">CStormnodeSync::Process</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sandstorm_8cpp_1ac661e702905cd5093cb237555ba5c1c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ThreadCheckSandStormPool</definition>
        <argsstring>()</argsstring>
        <name>ThreadCheckSandStormPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.cpp" line="2196" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2196" bodyend="2239"/>
        <references refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" compoundref="util_8cpp" startline="79">fLiteMode</references>
        <references refid="util_8cpp_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" compoundref="util_8cpp" startline="1441" endline="1463">RenameThread</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" compoundref="stormnode-sync_8cpp" startline="225" endline="405">CStormnodeSync::Process</references>
        <references refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</references>
        <references refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" compoundref="stormnodeman_8cpp" startline="255" endline="350">CStormnodeMan::CheckAndRemove</references>
        <references refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" compoundref="stormnodeman_8cpp" startline="662" endline="672">CStormnodeMan::ProcessStormnodeConnections</references>
        <references refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" compoundref="stormnode-payments_8cpp" startline="18">stormnodePayments</references>
        <references refid="class_c_stormnode_payments_1a0113fb8a5dc2e0b0efd0b8180535f9d0" compoundref="stormnode-payments_8cpp" startline="610" endline="632">CStormnodePayments::CleanPaymentList</references>
        <references refid="instantx_8cpp_1afede7ddd9c324103f27d52a2a3b75b1c" compoundref="instantx_8cpp" startline="434" endline="463">CleanTransactionLocksList</references>
        <references refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" compoundref="sandstorm_8cpp" startline="787" endline="864">CSandstormPool::CheckTimeout</references>
        <references refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" compoundref="sandstorm_8cpp" startline="869" endline="888">CSandstormPool::CheckForCompleteQueue</references>
        <references refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" compoundref="sandstorm_8h" startline="402" endline="405">CSandstormPool::GetState</references>
        <references refid="sandstorm_8h_1a2c403b5fdc8a3fe7d868cfb93fc19e34" compoundref="sandstorm_8h" startline="22">POOL_STATUS_IDLE</references>
        <references refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Dash<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sandstorm_8h" kindref="compound">sandstorm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-payments_8h" kindref="compound">stormnode-payments.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="script_8h" kindref="compound">script.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="instantx_8h" kindref="compound">instantx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__interface_8h" kindref="compound">ui_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/replace.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem/fstream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/list_of.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rand.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>object<sp/>for<sp/>accessing<sp/>Sandstorm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="sandstorm_8h_1addaca1e09682bd47278ce6208b48fd75" refkind="member"><highlight class="normal"><ref refid="class_c_sandstorm_pool" kindref="compound">CSandstormPool</ref><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>object<sp/>for<sp/>signing<sp/>messages<sp/>from<sp/>Stormnodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="sandstorm_8h_1af6ac9f9a52a47b030c3d4a38d13af2b1" refkind="member"><highlight class="normal"><ref refid="class_c_sand_storm_signer" kindref="compound">CSandStormSigner</ref><sp/><ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>current<sp/>Sandstorms<sp/>in<sp/>progress<sp/>on<sp/>the<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="sandstorm_8h_1ae4370a1e41b31b2b6690d62314d0b971" refkind="member"><highlight class="normal">std::vector&lt;CSandstormQueue&gt;<sp/><ref refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" kindref="member">vecSandstormQueue</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keep<sp/>track<sp/>of<sp/>the<sp/>used<sp/>Stormnodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" refkind="member"><highlight class="normal">std::vector&lt;CTxIn&gt;<sp/><ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keep<sp/>track<sp/>of<sp/>the<sp/>scanning<sp/>errors<sp/>I&apos;ve<sp/>seen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="sandstorm_8h_1ad2c083d07766489aaa2a282af5545eb5" refkind="member"><highlight class="normal">map&lt;uint256,<sp/>CSandstormBroadcastTx&gt;<sp/><ref refid="sandstorm_8cpp_1ad2c083d07766489aaa2a282af5545eb5" kindref="member">mapSandstormBroadcastTxes</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keep<sp/>track<sp/>of<sp/>the<sp/>active<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="sandstorm_8h_1ac75d1761e37a1f1cbf71007bcbadf5b0" refkind="member"><highlight class="normal"><ref refid="class_c_active_stormnode" kindref="compound">CActiveStormnode</ref><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" kindref="member">CSandstormPool::ProcessMessageSandstorm</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::string&amp;<sp/>strCommand,<sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>vRecv)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//disable<sp/>all<sp/>Sandstorm/Stormnode<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ssa&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Sandstorm<sp/>Accept<sp/>Into<sp/>Pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorID;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_VERSION;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssa<sp/>--<sp/>incompatible<sp/>version!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_NOT_A_SN;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssa<sp/>--<sp/>not<sp/>a<sp/>Stormnode!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDenom;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>txCollateral;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>nDenom<sp/>&gt;&gt;<sp/>txCollateral;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(activeStormnode.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_SN_LIST;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sessionUsers<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>+<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(MIN_POOL_PEER_PROTO_VERSION)/5<sp/>&gt;<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref>){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssa<sp/>--<sp/>last<sp/>ssq<sp/>too<sp/>recent,<sp/>must<sp/>wait.<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_RECENT;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsCompatibleWithSession(nDenom,<sp/>txCollateral,<sp/>errorID))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssa<sp/>--<sp/>not<sp/>compatible<sp/>with<sp/>existing<sp/>transactions!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssa<sp/>--<sp/>is<sp/>compatible,<sp/>please<sp/>submit!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a092f562edd615bfa50d999605a4989ab" kindref="member">STORMNODE_ACCEPTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ssq&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Sandstorm<sp/>Queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(cs_sandstorm,<sp/>lockRecv);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lockRecv)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_sandstorm_queue" kindref="compound">CSandstormQueue</ref><sp/>ssq;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>ssq;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addr;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ssq.GetAddress(addr))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ssq.CheckSignature())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ssq.IsExpired())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(ssq.vin);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>queue<sp/>is<sp/>ready,<sp/>submit<sp/>if<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ssq.ready)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pSubmittedToStormnode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)pSubmittedToStormnode-&gt;addr<sp/>!=<sp/>(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)addr){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssq<sp/>-<sp/>message<sp/>doesn&apos;t<sp/>match<sp/>current<sp/>Stormnode<sp/>-<sp/>%s<sp/>!=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pSubmittedToStormnode-&gt;addr.ToString(),<sp/>addr.<ref refid="class_c_net_addr_1aae906cecdba331389f249a64693895b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref>){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>queue<sp/>is<sp/>ready<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.<ref refid="class_c_net_addr_1aae906cecdba331389f249a64693895b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrepareSandstormDenominate();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_sandstorm_queue" kindref="compound">CSandstormQueue</ref><sp/>q,<sp/><ref refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" kindref="member">vecSandstormQueue</ref>){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(q.<ref refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" kindref="member">vin</ref><sp/>==<sp/>ssq.vin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ssq<sp/>last<sp/>%d<sp/>last2<sp/>%d<sp/>count<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref>,<sp/>psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>+<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>()/5,<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//don&apos;t<sp/>allow<sp/>a<sp/>few<sp/>nodes<sp/>to<sp/>dominate<sp/>the<sp/>queuing<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>+<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(MIN_POOL_PEER_PROTO_VERSION)/5<sp/>&gt;<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref>){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ssq<sp/>--<sp/>Stormnode<sp/>sending<sp/>too<sp/>many<sp/>ssq<sp/>messages.<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>psn-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref>++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ssq<sp/>-<sp/>new<sp/>Sandstorm<sp/>queue<sp/>object<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" kindref="member">vecSandstormQueue</ref>.push_back(ssq);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.Relay();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.time<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ssi&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//SandStorm<sp/>vIn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorID;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>incompatible<sp/>version!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_VERSION;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>not<sp/>a<sp/>Stormnode!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_NOT_A_SN;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;<sp/>in;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nAmount;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>txCollateral;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CTxOut&gt;<sp/>out;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>in<sp/>&gt;&gt;<sp/>nAmount<sp/>&gt;&gt;<sp/>txCollateral<sp/>&gt;&gt;<sp/>out;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>we<sp/>have<sp/>enough<sp/>users<sp/>in<sp/>the<sp/>current<sp/>session?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsSessionReady()){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>session<sp/>not<sp/>complete!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_SESSION;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>we<sp/>have<sp/>the<sp/>same<sp/>denominations<sp/>as<sp/>the<sp/>current<sp/>session?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsCompatibleWithEntries(out))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>not<sp/>compatible<sp/>with<sp/>existing<sp/>transactions!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_EXISTING_TX;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>it<sp/>like<sp/>a<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>missingTx<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx;<sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Use<sp/>CMutableTransaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o,<sp/>out){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueOut<sp/>+=<sp/>o.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.push_back(o);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(o.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.size()<sp/>!=<sp/>25){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>-<sp/>non-standard<sp/>pubkey<sp/>detected!<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>o.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_NON_STANDARD_PUBKEY;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!o.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a2b3ee98f7a63916b67b91dfd2c4ee312" kindref="member">IsNormalPaymentScript</ref>()){</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>-<sp/>invalid<sp/>script!<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>o.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_INVALID_SCRIPT;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>i,<sp/>in){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.push_back(i);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>tx<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>i.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx2;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" kindref="member">GetTransaction</ref>(i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>,<sp/>tx2,<sp/>hash)){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tx2.vout.size()<sp/>&gt;<sp/>i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueIn<sp/>+=<sp/>tx2.vout[i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingTx<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValueIn<sp/>&gt;<sp/>SANDSTORM_POOL_MAX)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>more<sp/>than<sp/>Sandstorm<sp/>pool<sp/>max!<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_MAXIMUM;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!missingTx){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValueIn-nValueOut<sp/>&gt;<sp/>nValueIn*.01)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>fees<sp/>are<sp/>too<sp/>high!<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_FEES;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>missing<sp/>input<sp/>tx!<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_MISSING_TX;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="main_8cpp_1af0be4f98088716bf40c79db7734b1d01" kindref="member">AcceptableInputs</ref>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>,<sp/>state,<sp/>tx,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>transaction<sp/>not<sp/>valid!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_INVALID_TX;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(AddEntry(in,<sp/>nAmount,<sp/>txCollateral,<sp/>out,<sp/>errorID)){</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a092f562edd615bfa50d999605a4989ab" kindref="member">STORMNODE_ACCEPTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RelayStatus(sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" kindref="member">STORMNODE_RESET</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1a7a01dca27a2a785c3b7b29435e02cf1f" kindref="member">STORMNODE_REJECTED</ref>,<sp/>errorID);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Sandstorm<sp/>status<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pSubmittedToStormnode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)pSubmittedToStormnode-&gt;addr<sp/>!=<sp/>(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>){</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;sssu<sp/>-<sp/>message<sp/>doesn&apos;t<sp/>match<sp/>current<sp/>Stormnode<sp/>-<sp/>%s<sp/>!=<sp/>%s\n&quot;,<sp/>pSubmittedToStormnode-&gt;addr.ToString(),<sp/>pfrom-&gt;addr.ToString());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sessionIDMessage;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entriesCount;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accepted;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorID;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>sessionIDMessage<sp/>&gt;&gt;<sp/>state<sp/>&gt;&gt;<sp/>entriesCount<sp/>&gt;&gt;<sp/>accepted<sp/>&gt;&gt;<sp/>errorID;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sssu<sp/>-<sp/>state:<sp/>%i<sp/>entriesCount:<sp/>%i<sp/>accepted:<sp/>%i<sp/>error:<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>state,<sp/>entriesCount,<sp/>accepted,<sp/>GetMessageByID(errorID));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((accepted<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>accepted<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>sessionID<sp/>!=<sp/>sessionIDMessage){</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;sssu<sp/>-<sp/>message<sp/>doesn&apos;t<sp/>match<sp/>current<sp/>Sandstorm<sp/>session<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>sessionIDMessage);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StatusUpdate(state,<sp/>entriesCount,<sp/>accepted,<sp/>errorID,<sp/>sessionIDMessage);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sss&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Sandstorm<sp/>Sign<sp/>Final<sp/>Tx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;CTxIn&gt;<sp/>sigs;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>sigs;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>item,<sp/>sigs)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(AddScriptSig(item))<sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>sigs<sp/>count<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)sigs.size(),<sp/>count);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(success){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RelayStatus(sandStormPool.sessionID,<sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" kindref="member">GetState</ref>(),<sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1adb2e1bef95a98b65a8467fa0c7e8be4a" kindref="member">GetEntriesCount</ref>(),<sp/><ref refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" kindref="member">STORMNODE_RESET</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ssf&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Sandstorm<sp/>Final<sp/>tx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pSubmittedToStormnode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)pSubmittedToStormnode-&gt;addr<sp/>!=<sp/>(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;ssc<sp/>-<sp/>message<sp/>doesn&apos;t<sp/>match<sp/>current<sp/>Stormnode<sp/>-<sp/>%s<sp/>!=<sp/>%s\n&quot;,<sp/>pSubmittedToStormnode-&gt;addr.ToString(),<sp/>pfrom-&gt;addr.ToString());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sessionIDMessage;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>txNew;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>sessionIDMessage<sp/>&gt;&gt;<sp/>txNew;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sessionID<sp/>!=<sp/>sessionIDMessage){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ssf<sp/>-<sp/>message<sp/>doesn&apos;t<sp/>match<sp/>current<sp/>Sandstorm<sp/>session<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>sessionIDMessage);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>input<sp/>is<sp/>spent<sp/>already?<sp/>(and<sp/>probably<sp/>not<sp/>confirmed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SignFinalTransaction(txNew,<sp/>pfrom);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ssc&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Sandstorm<sp/>Complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pSubmittedToStormnode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)pSubmittedToStormnode-&gt;addr<sp/>!=<sp/>(<ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>)pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>){</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;ssc<sp/>-<sp/>message<sp/>doesn&apos;t<sp/>match<sp/>current<sp/>Stormnode<sp/>-<sp/>%s<sp/>!=<sp/>%s\n&quot;,<sp/>pSubmittedToStormnode-&gt;addr.ToString(),<sp/>pfrom-&gt;addr.ToString());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sessionIDMessage;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorID;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>sessionIDMessage<sp/>&gt;&gt;<sp/>error<sp/>&gt;&gt;<sp/>errorID;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sessionID<sp/>!=<sp/>sessionIDMessage){</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ssc<sp/>-<sp/>message<sp/>doesn&apos;t<sp/>match<sp/>current<sp/>Sandstorm<sp/>session<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sandStormPool.sessionID,<sp/>sessionIDMessage);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" kindref="member">CompletedTransaction</ref>(error,<sp/>errorID);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="class_c_sandstorm_pool_1ab355cf2e1380a83aec75a7cf259c86ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1ab355cf2e1380a83aec75a7cf259c86ab" kindref="member">CSandstormPool::Reset</ref>(){</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>cachedLastSuccess<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>lastNewBlock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>txCollateral<sp/>=<sp/><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref>();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.clear();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="class_c_sandstorm_pool_1a9a220f583b730dcf9f651d340da4ee52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a9a220f583b730dcf9f651d340da4ee52" kindref="member">CSandstormPool::SetNull</ref>(){</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SN<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionUsers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSessionCollateral.clear();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>entriesCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>lastEntryAccepted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>countEntriesAccepted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionFoundStormnode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>=<sp/><ref refid="sandstorm_8h_1a2c403b5fdc8a3fe7d868cfb93fc19e34" kindref="member">POOL_STATUS_IDLE</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionDenom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>entries.clear();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>finalTransaction.vin.clear();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>finalTransaction.vout.clear();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTimeChanged<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>seed<sp/>random<sp/>number<sp/>generator<sp/>(used<sp/>for<sp/>ordering<sp/>output<sp/>lists)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>RAND_bytes((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;seed,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(seed));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>std::srand(seed);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="class_c_sandstorm_pool_1ae46dad75c301205495960011d31242ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1ae46dad75c301205495960011d31242ba" kindref="member">CSandstormPool::SetCollateralAddress</ref>(std::string<sp/>strAddress){</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!address.<ref refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" kindref="member">SetString</ref>(strAddress))</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::SetCollateralAddress<sp/>-<sp/>Invalid<sp/>Sandstorm<sp/>collateral<sp/>address\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>collateralPubKey<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(address.<ref refid="class_c_dark_silk_address_1a907e63758c7914a246b5807f6babf97d" kindref="member">Get</ref>());</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unlock<sp/>coins<sp/>after<sp/>Sandstorm<sp/>fails<sp/>or<sp/>succeeds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="class_c_sandstorm_pool_1a0a6a14d206122f938220b23eab5e8a70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a0a6a14d206122f938220b23eab5e8a70" kindref="member">CSandstormPool::UnlockCoins</ref>(){</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" kindref="member">cs_wallet</ref>,<sp/>lockWallet);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lockWallet)<sp/>{<ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(50);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>v,<sp/>lockedCoins)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1abd60f5b890e2c62c05c6a2de6322197f" kindref="member">UnlockCoin</ref>(v.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>lockedCoins.clear();</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="class_c_sandstorm_pool_1abf8b2c93df923f599639502bfaa165ec" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_sandstorm_pool_1abf8b2c93df923f599639502bfaa165ec" kindref="member">CSandstormPool::GetStatus</ref>()</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>showingSandStormMessage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>showingSandStormMessage<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>-<sp/>cachedLastSuccess<sp/>&lt;<sp/>minBlockSpacing<sp/>||<sp/>!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strAutoDenomResult;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1a2c403b5fdc8a3fe7d868cfb93fc19e34" kindref="member">POOL_STATUS_IDLE</ref>:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>is<sp/>idle.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entriesCount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showingSandStormMessage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strAutoDenomResult;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastEntryAccepted<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>10<sp/>&gt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastEntryAccepted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showingSandStormMessage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>request<sp/>complete:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Your<sp/>transaction<sp/>was<sp/>accepted<sp/>into<sp/>the<sp/>pool!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/><sp/><sp/><sp/>showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>40)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Submitted<sp/>following<sp/>entries<sp/>to<sp/>stormnode:<sp/>%u<sp/>/<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>entriesCount,<sp/>GetMaxPoolTransactions());</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>50)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>60)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>70)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Submitted<sp/>to<sp/>stormnode,<sp/>waiting<sp/>for<sp/>more<sp/>entries<sp/>(<sp/>%u<sp/>/<sp/>%d<sp/>)<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>entriesCount,<sp/>GetMaxPoolTransactions(),<sp/>suffix);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" kindref="member">POOL_STATUS_SIGNING</ref>:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/><sp/><sp/><sp/>showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>40)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>enough<sp/>users,<sp/>signing<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>50)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>60)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>70)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>enough<sp/>users,<sp/>signing<sp/>(<sp/>waiting<sp/>%s<sp/>)&quot;</highlight><highlight class="normal">),<sp/>suffix);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1ae08f7334c97bdc015a738ea8b8605b66" kindref="member">POOL_STATUS_TRANSMISSION</ref>:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transmitting<sp/>final<sp/>transaction.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1aefa76c8279011a041fa348027e1d8150" kindref="member">POOL_STATUS_FINALIZE_TRANSACTION</ref>:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Finalizing<sp/>transaction.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref>:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>request<sp/>incomplete:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>lastMessage<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Will<sp/>retry...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" kindref="member">POOL_STATUS_SUCCESS</ref>:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>request<sp/>complete:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>lastMessage;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref>:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/><sp/><sp/><sp/>showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>30)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>50)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showingSandStormMessage<sp/>%<sp/>70<sp/>&lt;=<sp/>70)<sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Submitted<sp/>to<sp/>stormnode,<sp/>waiting<sp/>in<sp/>queue<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>suffix);;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>state:<sp/>id<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">),<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>Sandstorm<sp/>progress<sp/>and<sp/>send<sp/>client<sp/>updates<sp/>if<sp/>a<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" kindref="member">CSandstormPool::Check</ref>()</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>-<sp/>entries<sp/>count<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>entries.size());</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;CSandstormPool::Check()<sp/>%d<sp/>-<sp/>%d<sp/>-<sp/>%d\n&quot;,<sp/>state,<sp/>anonTx.CountEntries(),<sp/>GetTimeMillis()-lastTimeChanged);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>-<sp/>entries<sp/>count<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>entries.size());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>entries<sp/>is<sp/>full,<sp/>then<sp/>move<sp/>on<sp/>to<sp/>the<sp/>next<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref><sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)entries.size()<sp/>&gt;=<sp/>GetMaxPoolTransactions())</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>--<sp/>TRYING<sp/>TRANSACTION<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1aefa76c8279011a041fa348027e1d8150" kindref="member">POOL_STATUS_FINALIZE_TRANSACTION</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>finalized<sp/>transaction<sp/>for<sp/>distribution<sp/>to<sp/>the<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1aefa76c8279011a041fa348027e1d8150" kindref="member">POOL_STATUS_FINALIZE_TRANSACTION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>--<sp/>FINALIZE<sp/>TRANSACTIONS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" kindref="member">POOL_STATUS_SIGNING</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref><sp/>txNew;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>new<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>entries.size();<sp/>i++){</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>v,<sp/>entries[i].vout)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.push_back(v);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref>&amp;<sp/>s,<sp/>entries[i].sev)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.push_back(s);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BIP69<sp/>https://github.com/kristovatlas/bips/blob/master/bip-0069.mediawiki</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>(Amir):<sp/>Put<sp/>the<sp/>sort<sp/>lines<sp/>back.<sp/><sp/>get<sp/>strange<sp/>errors.<sp/>no<sp/>match<sp/>for<sp/>&apos;operator&lt;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sort(txNew.vin.begin(),<sp/>txNew.vin.end());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sort(txNew.vout.begin(),<sp/>txNew.vout.end());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>1:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>txNew.<ref refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalTransaction<sp/>=<sp/>txNew;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>request<sp/>signatures<sp/>from<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RelayFinalTransaction(sessionID,<sp/>finalTransaction);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>all<sp/>of<sp/>the<sp/>signatures,<sp/>try<sp/>to<sp/>compile<sp/>the<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref><sp/>&amp;&amp;<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" kindref="member">POOL_STATUS_SIGNING</ref><sp/>&amp;&amp;<sp/>SignaturesComplete())<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>--<sp/>SIGNING\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1ae08f7334c97bdc015a738ea8b8605b66" kindref="member">POOL_STATUS_TRANSMISSION</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckFinalTransaction();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>if<sp/>we&apos;re<sp/>here<sp/>for<sp/>10<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref><sp/>||<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" kindref="member">POOL_STATUS_SUCCESS</ref>)<sp/>&amp;&amp;<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()-lastTimeChanged<sp/>&gt;=<sp/>10000)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>--<sp/>timeout,<sp/>RESETTING\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>RelayStatus(sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" kindref="member">STORMNODE_RESET</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" kindref="member">CSandstormPool::CheckFinalTransaction</ref>()</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>check<sp/>and<sp/>relay<sp/>final<sp/>tx<sp/>only<sp/>on<sp/>stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>txNew<sp/>=<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>finalTransaction);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" kindref="member">cs_wallet</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>2:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>txNew.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>the<sp/>transaction<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txNew.<ref refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" kindref="member">AcceptToMemoryPool</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>-<sp/>CommitTransaction<sp/>:<sp/>Error:<sp/>Transaction<sp/>not<sp/>valid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>much<sp/>we<sp/>can<sp/>do<sp/>in<sp/>this<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RelayCompletedTransaction(sessionID,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>ERR_INVALID_TX);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>--<sp/>IS<sp/>STORM<sp/>--<sp/>TRANSMITTING<sp/>DARKSILK\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sign<sp/>a<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>sigTime<sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/>txNew.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(sigTime);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>vchSig;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key2;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey2;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sandStormSigner.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>,<sp/>strError,<sp/>key2,<sp/>pubkey2))</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>-<sp/>ERROR:<sp/>Invalid<sp/>Stormnodeprivkey:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sandStormSigner.<ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">SignMessage</ref>(strMessage,<sp/>strError,<sp/>vchSig,<sp/>key2))<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>-<sp/>Sign<sp/>message<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sandStormSigner.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(pubkey2,<sp/>vchSig,<sp/>strMessage,<sp/>strError))<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>-<sp/>Verify<sp/>message<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1ad2c083d07766489aaa2a282af5545eb5" kindref="member">mapSandstormBroadcastTxes</ref>.count(txNew.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>())){</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_sandstorm_broadcast_tx" kindref="compound">CSandstormBroadcastTx</ref><sp/>sstx;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sstx.<ref refid="class_c_sandstorm_broadcast_tx_1ace6eee4d92b7fd4d98f8703d54d9b601" kindref="member">tx</ref><sp/>=<sp/>txNew;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sstx.<ref refid="class_c_sandstorm_broadcast_tx_1a7aa70aaddcdcc0a56c84f2a6e43e96bd" kindref="member">vin</ref><sp/>=<sp/>activeStormnode.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sstx.<ref refid="class_c_sandstorm_broadcast_tx_1ad75aca79f3783c7f1e3f6a58f5ddc737" kindref="member">vchSig</ref><sp/>=<sp/>vchSig;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sstx.<ref refid="class_c_sandstorm_broadcast_tx_1af0add2ec08b732bff4cae62031a53061" kindref="member">sigTime</ref><sp/>=<sp/>sigTime;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1ad2c083d07766489aaa2a282af5545eb5" kindref="member">mapSandstormBroadcastTxes</ref>.insert(make_pair(txNew.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>sstx));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a44afcf030b5844ad73210599d00026fc" kindref="member">MSG_SSTX</ref>,<sp/>txNew.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" kindref="member">RelayInv</ref>(inv);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>clients<sp/>it<sp/>was<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RelayCompletedTransaction(sessionID,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>MSG_SUCCESS);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Randomly<sp/>charge<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChargeRandomFees();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Check()<sp/>--<sp/>COMPLETED<sp/>--<sp/>RESETTING\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RelayStatus(sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" kindref="member">STORMNODE_RESET</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Charge<sp/>clients<sp/>a<sp/>fee<sp/>if<sp/>they&apos;re<sp/>abusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Why<sp/>bother?<sp/>Sandstorm<sp/>uses<sp/>collateral<sp/>to<sp/>ensure<sp/>abuse<sp/>to<sp/>the<sp/>process<sp/>is<sp/>kept<sp/>to<sp/>a<sp/>minimum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>submission<sp/>and<sp/>signing<sp/>stages<sp/>in<sp/>Sandstorm<sp/>are<sp/>completely<sp/>separate.<sp/>In<sp/>the<sp/>cases<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>client<sp/>submits<sp/>a<sp/>transaction<sp/>then<sp/>refused<sp/>to<sp/>sign,<sp/>there<sp/>must<sp/>be<sp/>a<sp/>cost.<sp/>Otherwise<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>would<sp/>be<sp/>able<sp/>to<sp/>do<sp/>this<sp/>over<sp/>and<sp/>over<sp/>again<sp/>and<sp/>bring<sp/>the<sp/>mixing<sp/>to<sp/>a<sp/>hault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//<sp/>How<sp/>does<sp/>this<sp/>work?<sp/>Messages<sp/>to<sp/>Stormnodes<sp/>come<sp/>in<sp/>via<sp/>&quot;ssi&quot;,<sp/>these<sp/>require<sp/>a<sp/>valid<sp/>collateral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//<sp/>transaction<sp/>for<sp/>the<sp/>client<sp/>to<sp/>be<sp/>able<sp/>to<sp/>enter<sp/>the<sp/>pool.<sp/>This<sp/>transaction<sp/>is<sp/>kept<sp/>by<sp/>the<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>transaction<sp/>is<sp/>either<sp/>complete<sp/>or<sp/>fails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="class_c_sandstorm_pool_1a76f820f131dbb15d80f826f0c788249a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a76f820f131dbb15d80f826f0c788249a" kindref="member">CSandstormPool::ChargeFees</ref>(){</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>don&apos;t<sp/>need<sp/>to<sp/>charge<sp/>collateral<sp/>for<sp/>every<sp/>offence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offences<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()%100;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>&gt;<sp/>33)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>){</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txCollateral,<sp/>vecSessionCollateral)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref>&amp;<sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.<ref refid="class_c_sand_storm_entry_1a184e3999700add47aa0fa6d7968d8264" kindref="member">collateral</ref><sp/>==<sp/>txCollateral)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>queue<sp/>entry<sp/>didn&apos;t<sp/>send<sp/>us<sp/>the<sp/>promised<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found){</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeFees<sp/>--<sp/>found<sp/>uncooperative<sp/>node<sp/>(didn&apos;t<sp/>send<sp/>transaction).<sp/>Found<sp/>offence.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offences++;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" kindref="member">POOL_STATUS_SIGNING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>who<sp/>didn&apos;t<sp/>sign?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref><sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref><sp/>s,<sp/>v.<ref refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" kindref="member">sev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!s.<ref refid="class_c_tx_s_s_in_1a0e09e06a90cee14abdbd390f3ecbfe08" kindref="member">fHasSig</ref>){</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeFees<sp/>--<sp/>found<sp/>uncooperative<sp/>node<sp/>(didn&apos;t<sp/>sign).<sp/>Found<sp/>offence\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offences++;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()%100;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mostly<sp/>offending?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offences<sp/>&gt;=<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().PoolMaxTransactions()-1<sp/>&amp;&amp;<sp/>r<sp/>&gt;<sp/>33)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//everyone<sp/>is<sp/>an<sp/>offender?<sp/>That&apos;s<sp/>not<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offences<sp/>&gt;=<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().PoolMaxTransactions())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//charge<sp/>one<sp/>of<sp/>the<sp/>offenders<sp/>randomly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offences<sp/>&gt;<sp/>1)<sp/>target<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pick<sp/>random<sp/>client<sp/>to<sp/>charge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()%100;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>){</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txCollateral,<sp/>vecSessionCollateral)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref>&amp;<sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.<ref refid="class_c_sand_storm_entry_1a184e3999700add47aa0fa6d7968d8264" kindref="member">collateral</ref><sp/>==<sp/>txCollateral)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>queue<sp/>entry<sp/>didn&apos;t<sp/>send<sp/>us<sp/>the<sp/>promised<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found<sp/>&amp;&amp;<sp/>r<sp/>&gt;<sp/>target){</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeFees<sp/>--<sp/>found<sp/>uncooperative<sp/>node<sp/>(didn&apos;t<sp/>send<sp/>transaction).<sp/>charging<sp/>fees.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtxCollateral<sp/>=<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>txCollateral);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Broadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wtxCollateral.<ref refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" kindref="member">AcceptToMemoryPool</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>not<sp/>fail.<sp/>The<sp/>transaction<sp/>has<sp/>already<sp/>been<sp/>signed<sp/>and<sp/>recorded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeFees()<sp/>:<sp/>Error:<sp/>Transaction<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxCollateral.<ref refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" kindref="member">RelayWalletTransaction</ref>();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" kindref="member">POOL_STATUS_SIGNING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>who<sp/>didn&apos;t<sp/>sign?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref><sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref><sp/>s,<sp/>v.<ref refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" kindref="member">sev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!s.<ref refid="class_c_tx_s_s_in_1a0e09e06a90cee14abdbd390f3ecbfe08" kindref="member">fHasSig</ref><sp/>&amp;&amp;<sp/>r<sp/>&gt;<sp/>target){</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeFees<sp/>--<sp/>found<sp/>uncooperative<sp/>node<sp/>(didn&apos;t<sp/>sign).<sp/>charging<sp/>fees.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtxCollateral<sp/>=<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>v.<ref refid="class_c_sand_storm_entry_1a184e3999700add47aa0fa6d7968d8264" kindref="member">collateral</ref>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Broadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wtxCollateral.<ref refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" kindref="member">AcceptToMemoryPool</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>not<sp/>fail.<sp/>The<sp/>transaction<sp/>has<sp/>already<sp/>been<sp/>signed<sp/>and<sp/>recorded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeFees()<sp/>:<sp/>Error:<sp/>Transaction<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxCollateral.<ref refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" kindref="member">RelayWalletTransaction</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>charge<sp/>the<sp/>collateral<sp/>randomly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>Sandstorm<sp/>is<sp/>completely<sp/>free,<sp/>to<sp/>pay<sp/>miners<sp/>we<sp/>randomly<sp/>pay<sp/>the<sp/>collateral<sp/>of<sp/>users.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="class_c_sandstorm_pool_1ac01544d518171779e6a609dae48d4f75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1ac01544d518171779e6a609dae48d4f75" kindref="member">CSandstormPool::ChargeRandomFees</ref>(){</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txCollateral,<sp/>vecSessionCollateral)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()%100;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collateral<sp/>Fee<sp/>Charges:</highlight></codeline>
<codeline lineno="759"><highlight class="comment"></highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Being<sp/>that<sp/>Sandstorm<sp/>has<sp/>&quot;no<sp/>fees&quot;<sp/>we<sp/>need<sp/>to<sp/>have<sp/>some<sp/>kind<sp/>of<sp/>cost<sp/>associated</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>using<sp/>it<sp/>to<sp/>stop<sp/>abuse.<sp/>Otherwise<sp/>it<sp/>could<sp/>serve<sp/>as<sp/>an<sp/>attack<sp/>vector<sp/>and</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow<sp/>endless<sp/>transaction<sp/>that<sp/>would<sp/>bloat<sp/>Dash<sp/>and<sp/>make<sp/>it<sp/>unusable.<sp/>To</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>these<sp/>kinds<sp/>of<sp/>attacks<sp/>1<sp/>in<sp/>10<sp/>successful<sp/>transactions<sp/>are<sp/>charged.<sp/>This</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adds<sp/>up<sp/>to<sp/>a<sp/>cost<sp/>of<sp/>0.001DRK<sp/>per<sp/>transaction<sp/>on<sp/>average.</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>&lt;=<sp/>10)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeRandomFees<sp/>--<sp/>charging<sp/>random<sp/>fees.<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtxCollateral<sp/>=<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>txCollateral);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Broadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wtxCollateral.<ref refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" kindref="member">AcceptToMemoryPool</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>not<sp/>fail.<sp/>The<sp/>transaction<sp/>has<sp/>already<sp/>been<sp/>signed<sp/>and<sp/>recorded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::ChargeRandomFees()<sp/>:<sp/>Error:<sp/>Transaction<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxCollateral.<ref refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" kindref="member">RelayWalletTransaction</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>various<sp/>timeouts<sp/>(queue<sp/>objects,<sp/>Sandstorm,<sp/>etc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" kindref="member">CSandstormPool::CheckTimeout</ref>(){</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref><sp/>&amp;&amp;<sp/>!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>catching<sp/>hanging<sp/>sessions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1ae08f7334c97bdc015a738ea8b8605b66" kindref="member">POOL_STATUS_TRANSMISSION</ref>:</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::CheckTimeout()<sp/>--<sp/>Session<sp/>complete<sp/>--<sp/>Running<sp/>Check()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref>:</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::CheckTimeout()<sp/>--<sp/>Pool<sp/>error<sp/>--<sp/>Running<sp/>Check()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" kindref="member">POOL_STATUS_SUCCESS</ref>:</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::CheckTimeout()<sp/>--<sp/>Pool<sp/>success<sp/>--<sp/>Running<sp/>Check()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>Sandstorm<sp/>queue<sp/>objects<sp/>for<sp/>timeouts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;CSandstormQueue&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" kindref="member">vecSandstormQueue</ref>.begin();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" kindref="member">vecSandstormQueue</ref>.end()){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it).IsExpired()){</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::CheckTimeout()<sp/>:<sp/>Removing<sp/>expired<sp/>queue<sp/>entry<sp/>-<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" kindref="member">vecSandstormQueue</ref>.erase(it);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>++it;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c++;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addLagTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>addLagTime<sp/>=<sp/>10000;<sp/></highlight><highlight class="comment">//if<sp/>we&apos;re<sp/>the<sp/>client,<sp/>give<sp/>the<sp/>server<sp/>a<sp/>few<sp/>extra<sp/>seconds<sp/>before<sp/>resetting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref><sp/>||<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref>){</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>timeout<sp/>and<sp/>reset<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;CSandStormEntry&gt;::iterator<sp/>it2<sp/>=<sp/>entries.begin();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it2<sp/>!=<sp/>entries.end()){</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it2).IsExpired()){</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::CheckTimeout()<sp/>:<sp/>Removing<sp/>expired<sp/>entry<sp/>-<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it2<sp/>=<sp/>entries.erase(it2);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entries.size()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>){</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RelayStatus(sessionID,<sp/>GetState(),<sp/>GetEntriesCount(),<sp/><ref refid="sandstorm_8h_1aa449a255205ebdc6dba287bdecce6fcc" kindref="member">STORMNODE_RESET</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>++it2;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c++;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()-lastTimeChanged<sp/>&gt;=<sp/>(<ref refid="sandstorm_8h_1ac049101269dbc10f69a6cbd59d50c18f" kindref="member">SANDSTORM_QUEUE_TIMEOUT</ref>*1000)+addLagTime){</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()-lastTimeChanged<sp/>&gt;=<sp/>(<ref refid="sandstorm_8h_1ac049101269dbc10f69a6cbd59d50c18f" kindref="member">SANDSTORM_QUEUE_TIMEOUT</ref>*1000)+addLagTime){</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::CheckTimeout()<sp/>--<sp/>Session<sp/>timed<sp/>out<sp/>(%ds)<sp/>--<sp/>resetting\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="sandstorm_8h_1ac049101269dbc10f69a6cbd59d50c18f" kindref="member">SANDSTORM_QUEUE_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMessage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Session<sp/>timed<sp/>out.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1a5f897de8a1b1f90a18a9950229cb86ab" kindref="member">POOL_STATUS_SIGNING</ref><sp/>&amp;&amp;<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()-lastTimeChanged<sp/>&gt;=<sp/>(<ref refid="sandstorm_8h_1a55c615934e5fa33861673622cd2ae328" kindref="member">SANDSTORM_SIGNING_TIMEOUT</ref>*1000)+addLagTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::CheckTimeout()<sp/>--<sp/>Session<sp/>timed<sp/>out<sp/>(%ds)<sp/>--<sp/>restting\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="sandstorm_8h_1a55c615934e5fa33861673622cd2ae328" kindref="member">SANDSTORM_SIGNING_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChargeFees();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMessage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Signing<sp/>timed<sp/>out.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>complete<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869" refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" kindref="member">CSandstormPool::CheckForCompleteQueue</ref>(){</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref><sp/>&amp;&amp;<sp/>!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>we&apos;re<sp/>ready<sp/>for<sp/>submissions<sp/>from<sp/>clients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>receiving<sp/>multiple<sp/>ssa<sp/>messages,<sp/>the<sp/>queue<sp/>will<sp/>switch<sp/>to<sp/>&quot;accepting<sp/>entries&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>the<sp/>active<sp/>state<sp/>right<sp/>before<sp/>merging<sp/>the<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref><sp/>&amp;&amp;<sp/>sessionUsers<sp/>==<sp/>GetMaxPoolTransactions())<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_sandstorm_queue" kindref="compound">CSandstormQueue</ref><sp/>ssq;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" kindref="member">nDenom</ref><sp/>=<sp/>sessionDenom;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" kindref="member">vin</ref><sp/>=<sp/>activeStormnode.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" kindref="member">time</ref><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a3a372c1d7da3e28a15c8c9e459fed163" kindref="member">ready</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" kindref="member">Sign</ref>();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" kindref="member">Relay</ref>();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>signature<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="class_c_sandstorm_pool_1aa3183dc7d64b9246cdd4b77423a71a67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1aa3183dc7d64b9246cdd4b77423a71a67" kindref="member">CSandstormPool::SignatureValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>newSig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>newVin){</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref><sp/>txNew;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>txNew.<ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.clear();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>txNew.<ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.clear();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>sigPubKey<sp/>=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref>&amp;<sp/>e,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>out,<sp/>e.<ref refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" kindref="member">vout</ref>)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.push_back(out);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref>&amp;<sp/>s,<sp/>e.<ref refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" kindref="member">sev</ref>){</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.push_back(s);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s<sp/>==<sp/>newVin){</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigPubKey<sp/>=<sp/>s.<ref refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" kindref="member">prevPubKey</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found<sp/>&gt;=<sp/>0){<sp/></highlight><highlight class="comment">//might<sp/>have<sp/>to<sp/>do<sp/>this<sp/>one<sp/>input<sp/>at<sp/>a<sp/>time?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>found;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>[n].scriptSig<sp/>=<sp/>newSig;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::SignatureValid()<sp/>-<sp/>Sign<sp/>with<sp/>sig<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newSig.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>().substr(0,24));</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a995f521b6ca4a8bfbd02d4cfe226feb6" kindref="member">VerifyScript</ref>(txNew.<ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>[n].scriptSig,<sp/>sigPubKey,<sp/><ref refid="script_8h_1a80155586fa275b28773c9b203f52cabaa10731903a63451e0742a816d90a64162" kindref="member">SCRIPT_VERIFY_P2SH</ref><sp/>|<sp/><ref refid="script_8h_1a80155586fa275b28773c9b203f52cabaa7cae377bd68b4e2da8f33283cec5dda8" kindref="member">SCRIPT_VERIFY_STRICTENC</ref>,<sp/><ref refid="class_mutable_transaction_signature_checker" kindref="compound">MutableTransactionSignatureChecker</ref>(&amp;txNew,<sp/>n))){</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::SignatureValid()<sp/>-<sp/>Signing<sp/>-<sp/>Error<sp/>signing<sp/>input<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::SignatureValid()<sp/>-<sp/>Signing<sp/>-<sp/>Successfully<sp/>validated<sp/>input\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>collateral<sp/>provided<sp/>by<sp/>the<sp/>client<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="class_c_sandstorm_pool_1aabecb7ff2cd77451de653fa23e01ccbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1aabecb7ff2cd77451de653fa23e01ccbe" kindref="member">CSandstormPool::IsCollateralValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txCollateral){</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txCollateral.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txCollateral.<ref refid="class_c_transaction_1ab01e4e451d2f3f84b01380979c8fdacc" kindref="member">nLockTime</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>missingTx<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o,<sp/>txCollateral.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>){</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueOut<sp/>+=<sp/>o.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!o.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a2b3ee98f7a63916b67b91dfd2c4ee312" kindref="member">IsNormalPaymentScript</ref>()){</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::IsCollateralValid<sp/>-<sp/>Invalid<sp/>Script<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>txCollateral.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>i,<sp/>txCollateral.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>){</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx2;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" kindref="member">GetTransaction</ref>(i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>,<sp/>tx2,<sp/>hash)){</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tx2.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>&gt;<sp/>i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueIn<sp/>+=<sp/>tx2.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingTx<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(missingTx){</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::IsCollateralValid<sp/>-<sp/>Unknown<sp/>inputs<sp/>in<sp/>collateral<sp/>transaction<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>txCollateral.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//collateral<sp/>transactions<sp/>are<sp/>required<sp/>to<sp/>pay<sp/>out<sp/>SANDSTORM_COLLATERAL<sp/>as<sp/>a<sp/>fee<sp/>to<sp/>the<sp/>miners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueIn<sp/>-<sp/>nValueOut<sp/>&lt;<sp/>SANDSTORM_COLLATERAL)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::IsCollateralValid<sp/>-<sp/>did<sp/>not<sp/>include<sp/>enough<sp/>fees<sp/>in<sp/>transaction<sp/>%d\n%s&quot;</highlight><highlight class="normal">,<sp/>nValueOut-nValueIn,<sp/>txCollateral.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::IsCollateralValid<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>txCollateral.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir)<sp/>Put<sp/>this<sp/>back.<sp/><sp/>getting<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(!AcceptableInputs(mempool,<sp/>txCollateral,<sp/>true,<sp/>NULL)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(fDebug)<sp/>LogPrintf<sp/>(&quot;CSandstormPool::IsCollateralValid<sp/>-<sp/>didn&apos;t<sp/>pass<sp/>IsAcceptable\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>clients<sp/>transaction<sp/>to<sp/>the<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988" refid="class_c_sandstorm_pool_1afeafad15214cd8599db468c2d9fc750e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1afeafad15214cd8599db468c2d9fc750e" kindref="member">CSandstormPool::AddEntry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CTxIn&gt;&amp;<sp/>newInput,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nAmount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txCollateral,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CTxOut&gt;&amp;<sp/>newOutput,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>errorID){</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>in,<sp/>newInput)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1acd3225f1bb5550af0b900cd0dd7112d9" kindref="member">IsNull</ref>()<sp/>||<sp/>nAmount<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddEntry<sp/>-<sp/>input<sp/>not<sp/>valid!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_INVALID_INPUT;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionUsers--;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsCollateralValid(txCollateral)){</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddEntry<sp/>-<sp/>collateral<sp/>not<sp/>valid!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_INVALID_COLLATERAL;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionUsers--;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)entries.size()<sp/>&gt;=<sp/>GetMaxPoolTransactions()){</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddEntry<sp/>-<sp/>entries<sp/>is<sp/>full!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_ENTRIES_FULL;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionUsers--;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>in,<sp/>newInput)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;looking<sp/>for<sp/>vin<sp/>--<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>in.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref>&amp;<sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref>&amp;<sp/>s,<sp/>v.<ref refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" kindref="member">sev</ref>){</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>)s<sp/>==<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddEntry<sp/>-<sp/>found<sp/>in<sp/>vin\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_ALREADY_HAVE;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionUsers--;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref><sp/>v;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_c_sand_storm_entry_1aa1497e8d6693f47968af94ea946ea9e6" kindref="member">Add</ref>(newInput,<sp/>nAmount,<sp/>txCollateral,<sp/>newOutput);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>entries.push_back(v);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddEntry<sp/>--<sp/>adding<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newInput[0].ToString());</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>MSG_ENTRIES_ADDED;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="class_c_sandstorm_pool_1a3a205b0af8f0b7d30c82c9b6f2f56573" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a3a205b0af8f0b7d30c82c9b6f2f56573" kindref="member">CSandstormPool::AddScriptSig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>newVin){</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddScriptSig<sp/>--<sp/>new<sp/>sig<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newVin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>().substr(0,24));</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref>&amp;<sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref>&amp;<sp/>s,<sp/>v.<ref refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" kindref="member">sev</ref>){</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref><sp/>==<sp/>newVin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddScriptSig<sp/>-<sp/>already<sp/>exists\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!SignatureValid(newVin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>,<sp/>newVin)){</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddScriptSig<sp/>-<sp/>Invalid<sp/>Sig\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::AddScriptSig<sp/>--<sp/>sig<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newVin.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin,<sp/>finalTransaction.vin){</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newVin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref><sp/>==<sp/>vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref><sp/>&amp;&amp;<sp/>vin.<ref refid="class_c_tx_in_1aa0dd08a6ecd0a595d9ef4dad020c1ea5" kindref="member">nSequence</ref><sp/>==<sp/>newVin.<ref refid="class_c_tx_in_1aa0dd08a6ecd0a595d9ef4dad020c1ea5" kindref="member">nSequence</ref>){</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref><sp/>=<sp/>newVin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vin.<ref refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" kindref="member">prevPubKey</ref><sp/>=<sp/>newVin.<ref refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" kindref="member">prevPubKey</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandStormPool::AddScriptSig<sp/>--<sp/>adding<sp/>to<sp/>finalTransaction<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newVin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>().substr(0,24));</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>entries.size();<sp/>i++){</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entries[i].AddSig(newVin)){</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandStormPool::AddScriptSig<sp/>--<sp/>adding<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newVin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>().substr(0,24));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::AddScriptSig<sp/>--<sp/>Couldn&apos;t<sp/>set<sp/>sig!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>make<sp/>sure<sp/>everything<sp/>is<sp/>signed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077" refid="class_c_sandstorm_pool_1a4b6bc55b02bfbce6a467507541a137bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a4b6bc55b02bfbce6a467507541a137bd" kindref="member">CSandstormPool::SignaturesComplete</ref>(){</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref>&amp;<sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref>&amp;<sp/>s,<sp/>v.<ref refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" kindref="member">sev</ref>){</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!s.<ref refid="class_c_tx_s_s_in_1a0e09e06a90cee14abdbd390f3ecbfe08" kindref="member">fHasSig</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Execute<sp/>a<sp/>Sandstorm<sp/>denomination<sp/>via<sp/>a<sp/>Stormnode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>ran<sp/>from<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090" refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" kindref="member">CSandstormPool::SendSandstormDenominate</ref>(std::vector&lt;CTxIn&gt;&amp;<sp/>vin,<sp/>std::vector&lt;CTxOut&gt;&amp;<sp/>vout,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>amount){</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::SendSandstormDenominate()<sp/>-<sp/>Sandstorm<sp/>from<sp/>a<sp/>Stormnode<sp/>is<sp/>not<sp/>supported<sp/>currently.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Put<sp/>these<sp/>lines<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(txCollateral<sp/>==<sp/>CMutableTransaction()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>LogPrintf<sp/>(&quot;CSandstormPool:SendSandstormDenominate()<sp/>-<sp/>Sandstorm<sp/>collateral<sp/>not<sp/>set&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>funds<sp/>we&apos;re<sp/>going<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>in,<sp/>txCollateral.vin)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lockedCoins.push_back(in);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>in,<sp/>vin)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lockedCoins.push_back(in);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//BOOST_FOREACH(CTxOut<sp/>o,<sp/>vout)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>LogPrintf(&quot;<sp/>vout<sp/>-<sp/>%s\n&quot;,<sp/>o.ToString());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>already<sp/>be<sp/>connected<sp/>to<sp/>a<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sessionFoundStormnode){</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::SendSandstormDenominate()<sp/>-<sp/>No<sp/>Stormnode<sp/>has<sp/>been<sp/>selected<sp/>yet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1a7d4a97e049394047743b48c0cd0f0791" kindref="member">CheckDiskSpace</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::SendSandstormDenominate()<sp/>-<sp/>Not<sp/>enough<sp/>disk<sp/>space,<sp/>disabling<sp/>Sandstorm.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::SendSandstormDenominate()<sp/>-<sp/>Added<sp/>transaction<sp/>to<sp/>pool.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>ClearLastMessage();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>it<sp/>against<sp/>the<sp/>memory<sp/>pool<sp/>to<sp/>make<sp/>sure<sp/>it&apos;s<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx;<sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Use<sp/>CMutableTransaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>o,<sp/>vout){</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueOut<sp/>+=<sp/>o.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.push_back(o);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>i,<sp/>vin){</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.push_back(i);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>tx<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>i.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Submitting<sp/>tx<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>lockMain);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lockMain)<sp/>{<sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(50);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="main_8cpp_1af0be4f98088716bf40c79db7734b1d01" kindref="member">AcceptableInputs</ref>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>,<sp/>state,<sp/>tx,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ssi<sp/>--<sp/>transaction<sp/>not<sp/>valid!<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>our<sp/>entry<sp/>for<sp/>later<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref><sp/>e;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>e.<ref refid="class_c_sand_storm_entry_1aa1497e8d6693f47968af94ea946ea9e6" kindref="member">Add</ref>(vin,<sp/>amount,<sp/>txCollateral,<sp/>vout);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>entries.push_back(e);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>RelayIn(entries[0].sev,<sp/>entries[0].amount,<sp/>txCollateral,<sp/>entries[0].vout);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>Check();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Incoming<sp/>message<sp/>from<sp/>Stormnode<sp/>updating<sp/>the<sp/>progress<sp/>of<sp/>Sandstorm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>newAccepted:<sp/><sp/>-1<sp/>mean&apos;s<sp/>it&apos;n<sp/>not<sp/>a<sp/>&quot;transaction<sp/>accepted/not<sp/>accepted&quot;<sp/>message,<sp/>just<sp/>a<sp/>standard<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>means<sp/>transaction<sp/>was<sp/>not<sp/>accepted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>means<sp/>transaction<sp/>was<sp/>accepted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183" refid="class_c_sandstorm_pool_1af272c7c4cb797a825b11d097da4cc59a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1af272c7c4cb797a825b11d097da4cc59a" kindref="member">CSandstormPool::StatusUpdate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newState,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newEntriesCount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newAccepted,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>errorID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newSessionID){</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref><sp/>||<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" kindref="member">POOL_STATUS_SUCCESS</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateState(newState);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>entriesCount<sp/>=<sp/>newEntriesCount;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorID<sp/>!=<sp/>MSG_NOERR)<sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>GetMessageByID(errorID);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newAccepted<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastEntryAccepted<sp/>=<sp/>newAccepted;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countEntriesAccepted<sp/>+=<sp/>newAccepted;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newAccepted<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMessage<sp/>=<sp/>GetMessageByID(errorID);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newAccepted<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>newSessionID<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionID<sp/>=<sp/>newSessionID;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::StatusUpdate<sp/>-<sp/>set<sp/>sessionID<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sessionID);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionFoundStormnode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newState<sp/>==<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>){</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newAccepted<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::StatusUpdate<sp/>-<sp/>entry<sp/>accepted!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionFoundStormnode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wait<sp/>for<sp/>other<sp/>users.<sp/>Stormnode<sp/>will<sp/>report<sp/>when<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newAccepted<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sessionID<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!sessionFoundStormnode)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::StatusUpdate<sp/>-<sp/>entry<sp/>not<sp/>accepted<sp/>by<sp/>Stormnode<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoAutomaticDenominating();<sp/></highlight><highlight class="comment">//try<sp/>another<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sessionFoundStormnode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>we<sp/>receive<sp/>the<sp/>finalized<sp/>transaction<sp/>from<sp/>the<sp/>Stormnode,<sp/>we<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>it<sp/>to<sp/>make<sp/>sure<sp/>it&apos;s<sp/>what<sp/>we<sp/>want,<sp/>then<sp/>sign<sp/>it<sp/>if<sp/>we<sp/>agree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>refuse<sp/>to<sp/>sign,<sp/>it&apos;s<sp/>possible<sp/>we&apos;ll<sp/>be<sp/>charged<sp/>collateral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230" refid="class_c_sandstorm_pool_1adfe5727cd162dff15a016de05494ba44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1adfe5727cd162dff15a016de05494ba44" kindref="member">CSandstormPool::SignFinalTransaction</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>finalTransactionNew,<sp/><ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>node){</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>finalTransaction<sp/>=<sp/>finalTransactionNew;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::SignFinalTransaction<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>finalTransaction.ToString());</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;CTxIn&gt;<sp/>sigs;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>my<sp/>inputs/outputs<sp/>are<sp/>present,<sp/>otherwise<sp/>refuse<sp/>to<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref><sp/>e,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref><sp/>s,<sp/>e.<ref refid="class_c_sand_storm_entry_1abad515f03d3c6a1caea06ac0582d46f5" kindref="member">sev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sign<sp/>my<sp/>transaction<sp/>and<sp/>all<sp/>outputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mine<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>prevPubKey<sp/>=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>();</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>();</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>finalTransaction.vin.size();<sp/>i++){</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(finalTransaction.vin[i]<sp/>==<sp/>s){</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mine<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevPubKey<sp/>=<sp/>s.<ref refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" kindref="member">prevPubKey</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vin<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mine<sp/>&gt;=<sp/>0){<sp/></highlight><highlight class="comment">//might<sp/>have<sp/>to<sp/>do<sp/>this<sp/>one<sp/>input<sp/>at<sp/>a<sp/>time?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>foundOutputs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>finalTransaction.vout.size();<sp/>i++){</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>o,<sp/>e.<ref refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" kindref="member">vout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(finalTransaction.vout[i]<sp/>==<sp/>o){</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundOutputs++;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValue1<sp/>+=<sp/>finalTransaction.vout[i].nValue;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o,<sp/>e.<ref refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" kindref="member">vout</ref>)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValue2<sp/>+=<sp/>o.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetOuputs<sp/>=<sp/>e.<ref refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" kindref="member">vout</ref>.size();</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(foundOutputs<sp/>&lt;<sp/>targetOuputs<sp/>||<sp/>nValue1<sp/>!=<sp/>nValue2)<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case,<sp/>something<sp/>went<sp/>wrong<sp/>and<sp/>we&apos;ll<sp/>refuse<sp/>to<sp/>sign.<sp/>It&apos;s<sp/>possible<sp/>we&apos;ll<sp/>be<sp/>charged<sp/>collateral.<sp/>But<sp/>that&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>better<sp/>then<sp/>signing<sp/>if<sp/>the<sp/>transaction<sp/>doesn&apos;t<sp/>look<sp/>like<sp/>what<sp/>we<sp/>wanted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::Sign<sp/>-<sp/>My<sp/>entries<sp/>are<sp/>not<sp/>correct!<sp/>Refusing<sp/>to<sp/>sign.<sp/>%d<sp/>entries<sp/>%d<sp/>target.<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>foundOutputs,<sp/>targetOuputs);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key_store" kindref="compound">CKeyStore</ref>&amp;<sp/>keystore<sp/>=<sp/>*<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Sign<sp/>-<sp/>Signing<sp/>my<sp/>input<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>mine);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="script_8cpp_1adb49c071f85f19a8a8cb4e97d9fe8b93" kindref="member">SignSignature</ref>(keystore,<sp/>prevPubKey,<sp/>finalTransaction,<sp/>mine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="script_8h_1aaf105ae5beaca1dee30ae54530691fceac68c7df6528b3001624e56b2de3826de" kindref="member">SIGHASH_ALL</ref>|<ref refid="script_8h_1aaf105ae5beaca1dee30ae54530691fcea9412c721b741fe9be1e3247dc390a4d2" kindref="member">SIGHASH_ANYONECANPAY</ref>)))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>changes<sp/>scriptSig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Sign<sp/>-<sp/>Unable<sp/>to<sp/>sign<sp/>my<sp/>own<sp/>transaction!<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>sure<sp/>what<sp/>to<sp/>do<sp/>here,<sp/>it<sp/>will<sp/>timeout...?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigs.push_back(finalTransaction.vin[mine]);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>dss<sp/>%d<sp/>%d<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>mine,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)sigs.size(),<sp/>finalTransaction.vin[mine].scriptSig.ToString());</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::Sign<sp/>-<sp/>txNew:\n%s&quot;</highlight><highlight class="normal">,<sp/>finalTransaction.ToString());</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push<sp/>all<sp/>of<sp/>our<sp/>signatures<sp/>to<sp/>the<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sigs.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>node<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sss&quot;</highlight><highlight class="normal">,<sp/>sigs);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307" refid="class_c_sandstorm_pool_1a657fcb1ca83116777fdcfed8676107ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a657fcb1ca83116777fdcfed8676107ea" kindref="member">CSandstormPool::NewBlock</ref>()</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::NewBlock<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>we&apos;re<sp/>processing<sp/>lots<sp/>of<sp/>blocks,<sp/>we&apos;ll<sp/>just<sp/>leave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>-<sp/>lastNewBlock<sp/>&lt;<sp/>10)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>lastNewBlock<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" kindref="member">CheckTimeout</ref>();</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sandstorm<sp/>transaction<sp/>was<sp/>completed<sp/>(failed<sp/>or<sp/>successful)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319" refid="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" kindref="member">CSandstormPool::CompletedTransaction</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorID)</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error){</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CompletedTransaction<sp/>--<sp/>error<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref>);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check();</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CompletedTransaction<sp/>--<sp/>success<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" kindref="member">POOL_STATUS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>race<sp/>conditions,<sp/>we&apos;ll<sp/>only<sp/>let<sp/>SS<sp/>run<sp/>once<sp/>per<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cachedLastSuccess<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>lastMessage<sp/>=<sp/>GetMessageByID(errorID);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343" refid="class_c_sandstorm_pool_1a80117149700bcbf278af2ad3f9c8f4f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a80117149700bcbf278af2ad3f9c8f4f7" kindref="member">CSandstormPool::ClearLastMessage</ref>()</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>lastMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Passively<sp/>run<sp/>Sandstorm<sp/>in<sp/>the<sp/>background<sp/>to<sp/>anonymize<sp/>funds<sp/>based<sp/>on<sp/>the<sp/>given<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>NOT<sp/>run<sp/>by<sp/>default<sp/>for<sp/>daemons,<sp/>only<sp/>for<sp/>QT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353" refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" kindref="member">CSandstormPool::DoAutomaticDenominating</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDryRun)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref><sp/>||<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>==<sp/><ref refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" kindref="member">POOL_STATUS_SUCCESS</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetEntriesCount()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Mixing<sp/>in<sp/>progress...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(cs_sandstorm,<sp/>lockSS);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lockSS)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Lock<sp/>is<sp/>already<sp/>in<sp/>place.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>mix<sp/>while<sp/>sync<sp/>in<sp/>progress.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fDryRun<sp/>&amp;&amp;<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>()){</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Wallet<sp/>is<sp/>locked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" kindref="member">fSandstormMultiSession</ref><sp/>&amp;&amp;<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>-<sp/>cachedLastSuccess<sp/>&lt;<sp/>minBlockSpacing)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::DoAutomaticDenominating<sp/>-<sp/>Last<sp/>successful<sp/>Sandstorm<sp/>action<sp/>was<sp/>too<sp/>recent\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Last<sp/>successful<sp/>Sandstorm<sp/>action<sp/>was<sp/>too<sp/>recent.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::DoAutomaticDenominating<sp/>-<sp/>No<sp/>Stormnodes<sp/>detected\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>Stormnodes<sp/>detected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>**<sp/>find<sp/>the<sp/>coins<sp/>we&apos;ll<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueMin<sp/>=<sp/>CENT;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nOnlyDenominatedBalance;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nBalanceNeedsDenominated;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>not<sp/>be<sp/>less<sp/>than<sp/>fees<sp/>in<sp/>SANDSTORM_COLLATERAL<sp/>+<sp/>few<sp/>(lets<sp/>say<sp/>5)<sp/>smallest<sp/>denoms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nLowestDenom<sp/>=<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>[<ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>.size()<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>no<sp/>confirmed<sp/>SS<sp/>collateral<sp/>inputs<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" kindref="member">HasCollateralInputs</ref>())</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>have<sp/>some<sp/>additional<sp/>amount<sp/>for<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLowestDenom<sp/>+=<sp/>SANDSTORM_COLLATERAL*4;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nBalanceNeedsAnonymized<sp/>=<sp/><ref refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref>*COIN<sp/>-<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" kindref="member">GetAnonymizedBalance</ref>();</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>balanceNeedsAnonymized<sp/>is<sp/>more<sp/>than<sp/>pool<sp/>max,<sp/>take<sp/>the<sp/>pool<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBalanceNeedsAnonymized<sp/>&gt;<sp/>SANDSTORM_POOL_MAX)<sp/>nBalanceNeedsAnonymized<sp/>=<sp/>SANDSTORM_POOL_MAX;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>overshoot<sp/>target<sp/>DS<sp/>balance<sp/>up<sp/>to<sp/>nLowestDenom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>nBalanceNeedsAnonymized<sp/>+=<sp/>nLowestDenom;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nAnonymizableBalance<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a842f8ca0ec3e6879c7f95f1420c7932f" kindref="member">GetAnonymizableBalance</ref>();</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anonymizable<sp/>balance<sp/>is<sp/>way<sp/>too<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nAnonymizableBalance<sp/>&lt;<sp/>nLowestDenom)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>:<sp/>No<sp/>funds<sp/>detected<sp/>in<sp/>need<sp/>of<sp/>denominating<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>funds<sp/>detected<sp/>in<sp/>need<sp/>of<sp/>denominating.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>enough<sp/>funds<sp/>to<sp/>anonymze<sp/>amount<sp/>we<sp/>want,<sp/>try<sp/>the<sp/>max<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBalanceNeedsAnonymized<sp/>&gt;<sp/>nAnonymizableBalance)<sp/>nBalanceNeedsAnonymized<sp/>=<sp/>nAnonymizableBalance;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>:<sp/>nLowestDenom=%d,<sp/>nBalanceNeedsAnonymized=%d\n&quot;</highlight><highlight class="normal">,<sp/>nLowestDenom,<sp/>nBalanceNeedsAnonymized);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>coins<sp/>that<sp/>should<sp/>be<sp/>given<sp/>to<sp/>the<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a260d40c79106bbaabbf3f4aaf328ffbc" kindref="member">SelectCoinsDark</ref>(nValueMin,<sp/>nBalanceNeedsAnonymized,<sp/>vCoins,<sp/>nValueIn,<sp/>0,<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>))</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoins.clear();</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a260d40c79106bbaabbf3f4aaf328ffbc" kindref="member">SelectCoinsDark</ref>(nValueMin,<sp/>9999999*COIN,<sp/>vCoins,<sp/>nValueIn,<sp/>-2,<sp/>0))</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nOnlyDenominatedBalance<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" kindref="member">GetDenominatedBalance</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" kindref="member">GetDenominatedBalance</ref>()<sp/>-<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" kindref="member">GetAnonymizedBalance</ref>();</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBalanceNeedsDenominated<sp/>=<sp/>nBalanceNeedsAnonymized<sp/>-<sp/>nOnlyDenominatedBalance;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBalanceNeedsDenominated<sp/>&gt;<sp/>nValueIn)<sp/>nBalanceNeedsDenominated<sp/>=<sp/>nValueIn;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBalanceNeedsDenominated<sp/>&lt;<sp/>nLowestDenom)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>most<sp/>likely<sp/>we<sp/>just<sp/>waiting<sp/>for<sp/>denoms<sp/>to<sp/>confirm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fDryRun)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateDenominated(nBalanceNeedsDenominated);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>:<sp/>Can&apos;t<sp/>denominate<sp/>-<sp/>no<sp/>compatible<sp/>inputs<sp/>left\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>denominate:<sp/>no<sp/>compatible<sp/>inputs<sp/>left.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fDryRun)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>nOnlyDenominatedBalance<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" kindref="member">GetDenominatedBalance</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" kindref="member">GetDenominatedBalance</ref>()<sp/>-<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" kindref="member">GetAnonymizedBalance</ref>();</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>nBalanceNeedsDenominated<sp/>=<sp/>nBalanceNeedsAnonymized<sp/>-<sp/>nOnlyDenominatedBalance;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>we<sp/>have<sp/>should<sp/>create<sp/>more<sp/>denominated<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBalanceNeedsDenominated<sp/>&gt;<sp/>nOnlyDenominatedBalance)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateDenominated(nBalanceNeedsDenominated);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>we<sp/>have<sp/>the<sp/>collateral<sp/>sized<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" kindref="member">HasCollateralInputs</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" kindref="member">HasCollateralInputs</ref>()<sp/>&amp;&amp;<sp/>MakeCollateralAmounts();</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxOut&gt;<sp/>vOut;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>phase,<sp/>find<sp/>a<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sessionFoundStormnode){</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>if<sp/>there<sp/>is<sp/>anything<sp/>left<sp/>from<sp/>previous<sp/>session</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoins();</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNull();</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nUseQueue<sp/>=<sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()%100;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" kindref="member">fSandstormMultiSession</ref><sp/>&amp;&amp;<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" kindref="member">GetDenominatedBalance</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&gt;<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//get<sp/>denominated<sp/>unconfirmed<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>--<sp/>Found<sp/>unconfirmed<sp/>denominated<sp/>outputs,<sp/>will<sp/>wait<sp/>till<sp/>they<sp/>confirm<sp/>to<sp/>continue.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>unconfirmed<sp/>denominated<sp/>outputs,<sp/>will<sp/>wait<sp/>till<sp/>they<sp/>confirm<sp/>to<sp/>continue.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>our<sp/>collateral<sp/>and<sp/>create<sp/>new<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strReason;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txCollateral<sp/>==<sp/><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref>()){</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a7fce7ef2029f265caf93d4db3bdb70c3" kindref="member">CreateCollateralTransaction</ref>(txCollateral,<sp/>strReason)){</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%<sp/>--<sp/>create<sp/>collateral<sp/>error:%s\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>strReason);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsCollateralValid(txCollateral))<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>--<sp/>invalid<sp/>collateral,<sp/>recreating...\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a7fce7ef2029f265caf93d4db3bdb70c3" kindref="member">CreateCollateralTransaction</ref>(txCollateral,<sp/>strReason)){</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>--<sp/>create<sp/>collateral<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>strReason);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we&apos;ve<sp/>used<sp/>90%<sp/>of<sp/>the<sp/>Stormnode<sp/>list<sp/>then<sp/>drop<sp/>all<sp/>the<sp/>oldest<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nThreshold<sp/>=<sp/>(int)(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(MIN_POOL_PEER_PROTO_VERSION)<sp/>*<sp/>0.9);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>vecStormnodesUsed<sp/>size<sp/>%d<sp/>threshold<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.size(),<sp/>nThreshold);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.size()<sp/>&gt;<sp/>nThreshold){</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.erase(<ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.begin());</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vecStormnodesUsed<sp/>size<sp/>%d<sp/>threshold<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.size(),<sp/>nThreshold);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>the<sp/>queues<sp/>all<sp/>of<sp/>the<sp/>time<sp/>for<sp/>mixing<sp/>unless<sp/>we<sp/>are<sp/>a<sp/>liquidity<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref><sp/>||<sp/>nUseQueue<sp/>&gt;<sp/>33){</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>through<sp/>the<sp/>queues<sp/>and<sp/>see<sp/>if<sp/>anything<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_sandstorm_queue" kindref="compound">CSandstormQueue</ref>&amp;<sp/>ssq,<sp/><ref refid="sandstorm_8cpp_1ae4370a1e41b31b2b6690d62314d0b971" kindref="member">vecSandstormQueue</ref>){</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addr;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ssq.<ref refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" kindref="member">time</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ssq.<ref refid="class_c_sandstorm_queue_1a0e1739e9a0c517f0de35807c92db1256" kindref="member">GetAddress</ref>(addr))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ssq.<ref refid="class_c_sandstorm_queue_1a2b509d89f0a6c0d858a5e28bab2e2017" kindref="member">IsExpired</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocolVersion;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ssq.<ref refid="class_c_sandstorm_queue_1acaa6374baeb707ed1726ec60c67c1624" kindref="member">GetProtocolVersion</ref>(protocolVersion))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(protocolVersion<sp/>&lt;<sp/>MIN_POOL_PEER_PROTO_VERSION)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//non-denom&apos;s<sp/>are<sp/>incompatible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ssq.<ref refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" kindref="member">nDenom</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>4)))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUsed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//don&apos;t<sp/>reuse<sp/>Stormnodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>usedVin,<sp/><ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>){</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ssq.<ref refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" kindref="member">vin</ref><sp/>==<sp/>usedVin)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUsed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUsed)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;<sp/>vTempCoins;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;COutput&gt;<sp/>vTempCoins2;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>match<sp/>their<sp/>denominations<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aa7606e8da251a609bf5d89a138f5d12e" kindref="member">SelectCoinsByDenominations</ref>(ssq.<ref refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" kindref="member">nDenom</ref>,<sp/>nValueMin,<sp/>nBalanceNeedsAnonymized,<sp/>vTempCoins,<sp/>vTempCoins2,<sp/>nValueIn,<sp/>0,<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>)){</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>-<sp/>Couldn&apos;t<sp/>match<sp/>denominations<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ssq.<ref refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" kindref="member">nDenom</ref>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>to<sp/>Stormnode<sp/>and<sp/>submit<sp/>the<sp/>queue<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode<sp/>=<sp/><ref refid="net_8cpp_1ac6e0da5071d4eaa6960dbf889c765834" kindref="member">ConnectNode</ref>((<ref refid="class_c_address" kindref="compound">CAddress</ref>)addr,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pnode<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(ssq.<ref refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>---<sp/>ssq<sp/>vin<sp/>%s<sp/>is<sp/>not<sp/>in<sp/>stormnode<sp/>list!&quot;</highlight><highlight class="normal">,<sp/>ssq.<ref refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSubmittedToStormnode<sp/>=<sp/>psn;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.push_back(ssq.<ref refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionDenom<sp/>=<sp/>ssq.<ref refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" kindref="member">nDenom</ref>;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;ssa&quot;</highlight><highlight class="normal">,<sp/>sessionDenom,<sp/>txCollateral);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>---<sp/>connected<sp/>(from<sp/>queue),<sp/>sending<sp/>dsa<sp/>for<sp/>%d<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sessionDenom,<sp/>pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Mixing<sp/>in<sp/>progress...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" kindref="member">time</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//remove<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>---<sp/>error<sp/>connecting<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>connecting<sp/>to<sp/>Stormnode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" kindref="member">time</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//remove<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>initiate<sp/>queue<sp/>if<sp/>we<sp/>are<sp/>a<sp/>liquidity<sp/>proveder<sp/>to<sp/>avoid<sp/>useless<sp/>inter-mixing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>try<sp/>one<sp/>randomly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" kindref="member">FindRandomNotInVec</ref>(<ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>,<sp/>MIN_POOL_PEER_PROTO_VERSION);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>---<sp/>Can&apos;t<sp/>find<sp/>random<sp/>stormnode!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>random<sp/>Stormnode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>+<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(MIN_POOL_PEER_PROTO_VERSION)/5<sp/>&gt;<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref>){</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTimeChanged<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>--<sp/>attempt<sp/>%d<sp/>connection<sp/>to<sp/>Stormnode<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>psn-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode<sp/>=<sp/><ref refid="net_8cpp_1ac6e0da5071d4eaa6960dbf889c765834" kindref="member">ConnectNode</ref>((<ref refid="class_c_address" kindref="compound">CAddress</ref>)psn-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pnode<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSubmittedToStormnode<sp/>=<sp/>psn;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.push_back(psn-&gt;<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CAmount&gt;<sp/>vecAmounts;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a8b3d2bb029430a437780037c5db7c0e0" kindref="member">ConvertList</ref>(vCoins,<sp/>vecAmounts);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>get<sp/>a<sp/>single<sp/>random<sp/>denom<sp/>out<sp/>of<sp/>vecAmounts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sessionDenom<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionDenom<sp/>=<sp/>GetDenominationsByAmounts(vecAmounts);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;PushMessage(</highlight><highlight class="stringliteral">&quot;ssa&quot;</highlight><highlight class="normal">,<sp/>sessionDenom,<sp/>txCollateral);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>---<sp/>connected,<sp/>sending<sp/>dsa<sp/>for<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sessionDenom);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Mixing<sp/>in<sp/>progress...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1a14433e04d57b0e7b6d605713bbb936ed" kindref="member">vecStormnodesUsed</ref>.push_back(psn-&gt;<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>);<sp/></highlight><highlight class="comment">//<sp/>postpone<sp/>SN<sp/>we<sp/>wasn&apos;t<sp/>able<sp/>to<sp/>connect<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>compatible<sp/>Stormnode<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Mixing<sp/>in<sp/>progress...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628" refid="class_c_sandstorm_pool_1a0348c28d46ac4180e2984336df1b4d50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a0348c28d46ac4180e2984336df1b4d50" kindref="member">CSandstormPool::PrepareSandstormDenominate</ref>()</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>transaction<sp/>to<sp/>the<sp/>pool<sp/>if<sp/>we<sp/>get<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>use<sp/>only<sp/>inputs<sp/>with<sp/>the<sp/>same<sp/>number<sp/>of<sp/>rounds<sp/>starting<sp/>from<sp/>lowest<sp/>number<sp/>of<sp/>rounds<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" kindref="member">PrepareSandstormDenominate</ref>(i,<sp/>i+1);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>:<sp/>Running<sp/>Sandstorm<sp/>denominate<sp/>for<sp/>%d<sp/>rounds.<sp/>Return<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>strError);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strError<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>failed?<sp/>That&apos;s<sp/>strange<sp/>but<sp/>let&apos;s<sp/>just<sp/>make<sp/>final<sp/>attempt<sp/>and<sp/>try<sp/>to<sp/>mix<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>strError<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" kindref="member">PrepareSandstormDenominate</ref>(0,<sp/>nSandstormRounds);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>:<sp/>Running<sp/>Sandstorm<sp/>denominate<sp/>for<sp/>all<sp/>rounds.<sp/>Return<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strError<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>never<sp/>actually<sp/>get<sp/>here<sp/>but<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/>strError;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>:<sp/>Error<sp/>running<sp/>denominate,<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Split<sp/>up<sp/>large<sp/>inputs<sp/>or<sp/>create<sp/>fee<sp/>sized<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651" refid="class_c_sandstorm_pool_1af0d8155078c47c07ea80ce65f317940a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1af0d8155078c47c07ea80ce65f317940a" kindref="member">CSandstormPool::MakeCollateralAmounts</ref>()</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtx;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeeRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strFail<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;<sp/>pair&lt;CScript,<sp/>CAmount&gt;<sp/>&gt;<sp/>vecSend;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref><sp/>*coinControl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>collateral<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekeyCollateral(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>change<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekeyChange(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptCollateral;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>vchPubKey;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(reservekeyCollateral.<ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">GetReservedKey</ref>(vchPubKey));<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>fail,<sp/>as<sp/>we<sp/>just<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptCollateral<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptCollateral,<sp/>SANDSTORM_COLLATERAL*4));</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>use<sp/>non-denominated<sp/>and<sp/>not<sp/>sn-like<sp/>funds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;CreateTransaction(scriptPubKey,<sp/>nValue,<sp/>sNarr,<sp/>wtxNew,<sp/>reservekey,<sp/>nFeeRequired,<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChangePos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a98bcc563b7598ac652d39f091a38e418" kindref="member">CreateTransaction</ref>(vecSend,<sp/>wtx,<sp/>reservekeyChange,<sp/>nFeeRet,<sp/>nChangePos,<sp/>strFail,<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea94cc8a0e81d9490cdbdfc3d3f215e9e7" kindref="member">ALL_COINS</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir)<sp/>implement<sp/>ONLY_NONDENOMINATED_NOTSN<sp/>in<sp/>CreateTransaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nFeeRet,<sp/>strFail,<sp/>coinControl,<sp/>ONLY_NONDENOMINATED_NOTSN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!success){</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>failed<sp/>(most<sp/>likeky<sp/>not<sp/>enough<sp/>funds),<sp/>try<sp/>to<sp/>use<sp/>all<sp/>coins<sp/>instead<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SN-like<sp/>funds<sp/>should<sp/>not<sp/>be<sp/>touched<sp/>in<sp/>any<sp/>case<sp/>and<sp/>we<sp/>can&apos;t<sp/>mix<sp/>denominated<sp/>without<sp/>collaterals<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;MakeCollateralAmounts:<sp/>ONLY_NONDENOMINATED_NOTSN<sp/>Error<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strFail);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir)<sp/>implement<sp/>ONLY_NONDENOMINATED<sp/>in<sp/>CreateTransaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a98bcc563b7598ac652d39f091a38e418" kindref="member">CreateTransaction</ref>(vecSend,<sp/>wtx,<sp/>reservekeyChange,<sp/>nFeeRet,<sp/>nChangePos,<sp/>strFail,<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea94cc8a0e81d9490cdbdfc3d3f215e9e7" kindref="member">ALL_COINS</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nFeeRet,<sp/>strFail,<sp/>coinControl,<sp/>ONLY_NONDENOMINATED);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!success){</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;MakeCollateralAmounts:<sp/>ONLY_NONDENOMINATED<sp/>Error<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strFail);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reservekeyCollateral.<ref refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" kindref="member">ReturnKey</ref>();</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>reservekeyCollateral.<ref refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" kindref="member">KeepKey</ref>();</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;MakeCollateralAmounts:<sp/>tx<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>wtx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>());</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>same<sp/>cachedLastSuccess<sp/>as<sp/>for<sp/>SS<sp/>mixinx<sp/>to<sp/>prevent<sp/>race</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" kindref="member">CommitTransaction</ref>(wtx,<sp/>reservekeyChange))<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;MakeCollateralAmounts:<sp/>CommitTransaction<sp/>failed!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>cachedLastSuccess<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>denominations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707" refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" kindref="member">CSandstormPool::CreateDenominated</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalValue)</highlight></codeline>
<codeline lineno="1708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtx;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeeRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strFail<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;<sp/>pair&lt;CScript,<sp/>CAmount&gt;<sp/>&gt;<sp/>vecSend;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueLeft<sp/>=<sp/>nTotalValue;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>collateral<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekeyCollateral(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>change<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekeyChange(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>denom<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekeyDenom(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptCollateral;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>vchPubKey;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(reservekeyCollateral.<ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">GetReservedKey</ref>(vchPubKey));<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>fail,<sp/>as<sp/>we<sp/>just<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptCollateral<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>******<sp/>Add<sp/>collateral<sp/>outputs<sp/>************<sp/>/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" kindref="member">HasCollateralInputs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptCollateral,<sp/>SANDSTORM_COLLATERAL*4));</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueLeft<sp/>-=<sp/>SANDSTORM_COLLATERAL*4;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>******<sp/>Add<sp/>denoms<sp/>************<sp/>/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_REVERSE_FOREACH(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>v,<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>){</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>denoms<sp/>are<sp/>skipped<sp/>if<sp/>there<sp/>are<sp/>already<sp/>DENOMS_COUNT_MAX<sp/>of<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>skipped<sp/>denoms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsDenomSkipped(v))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>new<sp/>denoms<sp/>to<sp/>skip<sp/>if<sp/>any<sp/>(ignore<sp/>the<sp/>largest<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>[0]<sp/>&amp;&amp;<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a6ab79abf1aba845254fe5969731ba2ad" kindref="member">CountInputsWithAmount</ref>(v)<sp/>&gt;<sp/>DENOMS_COUNT_MAX){</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAutoDenomResult<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>%f<sp/>denominations,<sp/>removing.&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)v/COIN);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DoAutomaticDenominating<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strAutoDenomResult);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sandStormDenominationsSkipped.push_back(v);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOutputs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>each<sp/>output<sp/>up<sp/>to<sp/>10<sp/>times<sp/>until<sp/>it<sp/>can&apos;t<sp/>be<sp/>added<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nValueLeft<sp/>-<sp/>v<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>nOutputs<sp/>&lt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptDenom;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>vchPubKey;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//use<sp/>a<sp/>unique<sp/>change<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(reservekeyDenom.<ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">GetReservedKey</ref>(vchPubKey));<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>fail,<sp/>as<sp/>we<sp/>just<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptDenom<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>do<sp/>not<sp/>keep<sp/>reservekeyDenom<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reservekeyDenom.<ref refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" kindref="member">KeepKey</ref>();</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptDenom,<sp/>v));</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//increment<sp/>outputs<sp/>and<sp/>subtract<sp/>denomination<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nOutputs++;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueLeft<sp/>-=<sp/>v;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateDenominated1<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nValueLeft);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueLeft<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateDenominated2<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nValueLeft);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>anything<sp/>left<sp/>over,<sp/>it<sp/>will<sp/>be<sp/>automatically<sp/>send<sp/>back<sp/>as<sp/>change<sp/>-<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>send<sp/>it<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref><sp/>*coinControl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>CreateTransaction<sp/>use<sp/>7th<sp/>parameter<sp/>for<sp/>sandstorm<sp/>ONLY_NONDENOMINATED_NOTSN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChangePos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a98bcc563b7598ac652d39f091a38e418" kindref="member">CreateTransaction</ref>(vecSend,<sp/>wtx,<sp/>reservekeyChange,<sp/>nFeeRet,<sp/>nChangePos,<sp/>strFail,<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea94cc8a0e81d9490cdbdfc3d3f215e9e7" kindref="member">ALL_COINS</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!success){</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateDenominated:<sp/>Error<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strFail);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>return<sp/>reservekeyDenom<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reservekeyCollateral.<ref refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" kindref="member">ReturnKey</ref>();</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>keep<sp/>reservekeyDenom<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>reservekeyCollateral.<ref refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" kindref="member">KeepKey</ref>();</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>same<sp/>cachedLastSuccess<sp/>as<sp/>for<sp/>SS<sp/>mixinx<sp/>to<sp/>prevent<sp/>race</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" kindref="member">CommitTransaction</ref>(wtx,<sp/>reservekeyChange))</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cachedLastSuccess<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateDenominated:<sp/>CommitTransaction<sp/>failed!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateDenominated:<sp/>tx<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>wtx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>());</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800" refid="class_c_sandstorm_pool_1aedb9e08d71363870b12ae5ffcf506b61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1aedb9e08d71363870b12ae5ffcf506b61" kindref="member">CSandstormPool::IsCompatibleWithEntries</ref>(std::vector&lt;CTxOut&gt;&amp;<sp/>vout)</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetDenominations(vout)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_entry" kindref="compound">CSandStormEntry</ref><sp/>v,<sp/>entries)<sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>IsCompatibleWithEntries<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>GetDenominations(vout),<sp/>GetDenominations(v.<ref refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" kindref="member">vout</ref>));</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetDenominations(vout)<sp/>!=<sp/>GetDenominations(v.<ref refid="class_c_sand_storm_entry_1a116f3b2ccbbd5958421dfdcce6a4f9c5" kindref="member">vout</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813" refid="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" kindref="member">CSandstormPool::IsCompatibleWithSession</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nDenom,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>txCollateral,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>errorID)</highlight></codeline>
<codeline lineno="1814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDenom<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::IsCompatibleWithSession<sp/>-<sp/>sessionDenom<sp/>%d<sp/>sessionUsers<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sessionDenom,<sp/>sessionUsers);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unitTest<sp/>&amp;&amp;<sp/>!IsCollateralValid(txCollateral)){</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CSandstormPool::IsCompatibleWithSession<sp/>-<sp/>collateral<sp/>not<sp/>valid!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_INVALID_COLLATERAL;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sessionUsers<sp/>&lt;<sp/>0)<sp/>sessionUsers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sessionUsers<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionID<sp/>=<sp/>1<sp/>+<sp/>(<ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()<sp/>%<sp/>999999);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionDenom<sp/>=<sp/>nDenom;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionUsers++;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTimeChanged<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!unitTest){</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//broadcast<sp/>that<sp/>I&apos;m<sp/>accepting<sp/>entries,<sp/>only<sp/>if<sp/>it&apos;s<sp/>the<sp/>first<sp/>entry<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_sandstorm_queue" kindref="compound">CSandstormQueue</ref><sp/>ssq;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" kindref="member">nDenom</ref><sp/>=<sp/>nDenom;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" kindref="member">vin</ref><sp/>=<sp/>activeStormnode.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" kindref="member">time</ref><sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" kindref="member">Sign</ref>();</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssq.<ref refid="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" kindref="member">Relay</ref>();</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateState(<ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref>);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecSessionCollateral.push_back(txCollateral);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>!=<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref><sp/>&amp;&amp;<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>!=<sp/><ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref>)<sp/>||<sp/>sessionUsers<sp/>&gt;=<sp/>GetMaxPoolTransactions()){</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>!=<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref><sp/>&amp;&amp;<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>!=<sp/><ref refid="sandstorm_8h_1abaaef77ee773e358bcb3296554f84c7c" kindref="member">POOL_STATUS_QUEUE</ref>))<sp/>errorID<sp/>=<sp/>ERR_MODE;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sessionUsers<sp/>&gt;=<sp/>GetMaxPoolTransactions())<sp/>errorID<sp/>=<sp/>ERR_QUEUE_FULL;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormPool::IsCompatibleWithSession<sp/>-<sp/>incompatible<sp/>mode,<sp/>return<sp/>false<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>!=<sp/><ref refid="sandstorm_8h_1ac3a16edb4f6035996969b0b2bc3ded08" kindref="member">POOL_STATUS_ACCEPTING_ENTRIES</ref>,<sp/>sessionUsers<sp/>&gt;=<sp/>GetMaxPoolTransactions());</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDenom<sp/>!=<sp/>sessionDenom)<sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorID<sp/>=<sp/>ERR_DENOM;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandStormPool::IsCompatibleWithSession<sp/>-<sp/>compatible\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionUsers++;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTimeChanged<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSessionCollateral.push_back(txCollateral);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="comment">//create<sp/>a<sp/>nice<sp/>string<sp/>to<sp/>show<sp/>the<sp/>denominations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870" refid="class_c_sandstorm_pool_1af792e1a4f37918317d869b3b73467af7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1af792e1a4f37918317d869b3b73467af7" kindref="member">CSandstormPool::GetDenominationsToString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDenom,<sp/>std::string&amp;<sp/>strDenom){</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>returns<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>0<sp/>-<sp/>100DRK+1<sp/>(<sp/>bit<sp/>on<sp/>if<sp/>present<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>1<sp/>-<sp/>10DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>2<sp/>-<sp/>1DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>3<sp/>-<sp/>.1DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>3<sp/>-<sp/>non-denom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/>strDenom<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strDenom.size()<sp/>&gt;<sp/>0)<sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strDenom.size()<sp/>&gt;<sp/>0)<sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strDenom.size()<sp/>&gt;<sp/>0)<sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strDenom.size()<sp/>&gt;<sp/>0)<sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strDenom<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;0.1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903" refid="class_c_sandstorm_pool_1a109d7f04c53b6c43d8fa855b0a9c2ec2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" kindref="member">CSandstormPool::GetDenominations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CTxSSOut&gt;&amp;<sp/>vout){</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxOut&gt;<sp/>vout2;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_s_s_out" kindref="compound">CTxSSOut</ref><sp/>out,<sp/>vout)</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vout2.push_back(out);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetDenominations(vout2);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>a<sp/>bitshifted<sp/>integer<sp/>representing<sp/>the<sp/>denominations<sp/>in<sp/>this<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913" refid="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" kindref="member">CSandstormPool::GetDenominations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CTxOut&gt;&amp;<sp/>vout,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSingleRandomDenom){</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pair&lt;CAmount,<sp/>int&gt;<sp/>&gt;<sp/>denomUsed;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>list<sp/>of<sp/>denominations,<sp/>with<sp/>zero<sp/>uses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>d,<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>)</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denomUsed.push_back(make_pair(d,<sp/>0));</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>denominations<sp/>and<sp/>update<sp/>uses<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>out,<sp/>vout){</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&amp;<sp/>s,<sp/>denomUsed){</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref><sp/>==<sp/>s.first){</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.second<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>denomination<sp/>is<sp/>used,<sp/>shift<sp/>the<sp/>bit<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>move<sp/>to<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&amp;<sp/>s,<sp/>denomUsed)<sp/>{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit<sp/>=<sp/>(fSingleRandomDenom<sp/>?<sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()%2<sp/>:<sp/>1)<sp/>*<sp/>s.second;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denom<sp/>|=<sp/>bit<sp/>&lt;&lt;<sp/>c++;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fSingleRandomDenom<sp/>&amp;&amp;<sp/>bit)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>just<sp/>one<sp/>random<sp/>denomination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>returns<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>0<sp/>-<sp/>100DRK+1<sp/>(<sp/>bit<sp/>on<sp/>if<sp/>present<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>1<sp/>-<sp/>10DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>2<sp/>-<sp/>1DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>3<sp/>-<sp/>.1DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>denom;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953" refid="class_c_sandstorm_pool_1a1557c65382d02a17fed149290797d960" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a1557c65382d02a17fed149290797d960" kindref="member">CSandstormPool::GetDenominationsByAmounts</ref>(std::vector&lt;CAmount&gt;&amp;<sp/>vecAmount){</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>e<sp/>=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxOut&gt;<sp/>vout1;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>outputs<sp/>by<sp/>looping<sp/>through<sp/>denominations,<sp/>from<sp/>small<sp/>to<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_REVERSE_FOREACH(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>v,<sp/>vecAmount){</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o(v,<sp/>e);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vout1.push_back(o);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetDenominations(vout1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966" refid="class_c_sandstorm_pool_1af7d1f51900ef204ed612fa27096181af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1af7d1f51900ef204ed612fa27096181af" kindref="member">CSandstormPool::GetDenominationsByAmount</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nAmount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDenomTarget){</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>e<sp/>=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>();</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueLeft<sp/>=<sp/>nAmount;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxOut&gt;<sp/>vout1;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>outputs<sp/>by<sp/>looping<sp/>through<sp/>denominations,<sp/>from<sp/>small<sp/>to<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_REVERSE_FOREACH(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>v,<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>){</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDenomTarget<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAccepted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenomTarget<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>0))<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>==<sp/>((100*COIN)+100000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenomTarget<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>1))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((10*COIN)<sp/>+10000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenomTarget<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>2))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((1*COIN)<sp/><sp/>+1000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenomTarget<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>3))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((.1*COIN)<sp/>+100))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fAccepted)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOutputs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>each<sp/>output<sp/>up<sp/>to<sp/>10<sp/>times<sp/>until<sp/>it<sp/>can&apos;t<sp/>be<sp/>added<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nValueLeft<sp/>-<sp/>v<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>nOutputs<sp/>&lt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o(v,<sp/>e);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vout1.push_back(o);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueLeft<sp/>-=<sp/>v;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nOutputs++;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;GetDenominationsByAmount<sp/>---<sp/>%d<sp/>nOutputs<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>v,<sp/>nOutputs);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetDenominations(vout1);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998" refid="class_c_sandstorm_pool_1a1b34d9c712a8fc4c795d3294209597af" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_sandstorm_pool_1a1b34d9c712a8fc4c795d3294209597af" kindref="member">CSandstormPool::GetMessageByID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>messageID)<sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(messageID)<sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_ALREADY_HAVE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Already<sp/>have<sp/>that<sp/>input.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_DENOM:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>matching<sp/>denominations<sp/>found<sp/>for<sp/>mixing.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_ENTRIES_FULL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Entries<sp/>are<sp/>full.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_EXISTING_TX:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>compatible<sp/>with<sp/>existing<sp/>transactions.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_FEES:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>fees<sp/>are<sp/>too<sp/>high.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_INVALID_COLLATERAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Collateral<sp/>not<sp/>valid.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_INVALID_INPUT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Input<sp/>is<sp/>not<sp/>valid.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_INVALID_SCRIPT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>script<sp/>detected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_INVALID_TX:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>not<sp/>valid.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_MAXIMUM:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>more<sp/>than<sp/>Sandstorm<sp/>pool<sp/>maximum<sp/>allows.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_SN_LIST:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>in<sp/>the<sp/>Stormnode<sp/>list.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_MODE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Incompatible<sp/>mode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_NON_STANDARD_PUBKEY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Non-standard<sp/>public<sp/>key<sp/>detected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_NOT_A_SN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>a<sp/>Stormnode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_QUEUE_FULL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>queue<sp/>is<sp/>full.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_RECENT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Last<sp/>Sandstorm<sp/>was<sp/>too<sp/>recent.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_SESSION:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Session<sp/>not<sp/>complete!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_MISSING_TX:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>input<sp/>transaction<sp/>information.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERR_VERSION:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Incompatible<sp/>version.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MSG_SUCCESS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>created<sp/>successfully.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MSG_ENTRIES_ADDED:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Your<sp/>entries<sp/>added<sp/>successfully.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MSG_NOERR:</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027" refid="class_c_sand_storm_signer_1a21af58bfa950441f5d61e789a876ddda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_signer_1a21af58bfa950441f5d61e789a876ddda" kindref="member">CSandStormSigner::IsVinAssociatedWithPubkey</ref>(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey){</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>payee2;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>payee2<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>txVin;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" kindref="member">GetTransaction</ref>(vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>,<sp/>txVin,<sp/>hash)){</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>out,<sp/>txVin.vout){</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref><sp/>==<sp/>1000*COIN){</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref><sp/>==<sp/>payee2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044" refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">CSandStormSigner::SetKey</ref>(std::string<sp/>strSecret,<sp/>std::string&amp;<sp/>errorMessage,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>key,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey){</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_secret" kindref="compound">CDarkSilkSecret</ref><sp/>vchSecret;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fGood<sp/>=<sp/>vchSecret.<ref refid="class_c_dark_silk_secret_1a06075192fb631c3b406a6ca231d2f926" kindref="member">SetString</ref>(strSecret);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fGood)<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>private<sp/>key.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>=<sp/>vchSecret.<ref refid="class_c_dark_silk_secret_1af7b026d90efb897f6e592ce424c8d2c9" kindref="member">GetKey</ref>();</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>pubkey<sp/>=<sp/>key.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059" refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">CSandStormSigner::SignMessage</ref>(std::string<sp/>strMessage,<sp/>std::string&amp;<sp/>errorMessage,<sp/>vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vchSig,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key)</highlight></codeline>
<codeline lineno="2060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a1cad9567b6474e6096232b14ed6a8476" kindref="member">strMessageMagic</ref>;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>strMessage;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key.<ref refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" kindref="member">SignCompact</ref>(ss.<ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>(),<sp/>vchSig))<sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Signing<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073" refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">CSandStormSigner::VerifyMessage</ref>(<ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey,<sp/>vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vchSig,<sp/>std::string<sp/>strMessage,<sp/>std::string&amp;<sp/>errorMessage)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a1cad9567b6474e6096232b14ed6a8476" kindref="member">strMessageMagic</ref>;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>strMessage;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey2;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pubkey2.<ref refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" kindref="member">RecoverCompact</ref>(ss.<ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>(),<sp/>vchSig))<sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>recovering<sp/>public<sp/>key.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref><sp/>&amp;&amp;<sp/>pubkey2.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()<sp/>!=<sp/>pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>())</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandStormSigner::VerifyMessage<sp/>--<sp/>keys<sp/>don&apos;t<sp/>match:<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pubkey2.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pubkey2.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()<sp/>==<sp/>pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="2089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091" refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" kindref="member">CSandstormQueue::Sign</ref>()</highlight></codeline>
<codeline lineno="2092"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/>vin.ToString()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(nDenom)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(time)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(ready);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key2;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey2;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sandStormSigner.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>,<sp/>errorMessage,<sp/>key2,<sp/>pubkey2))</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormQueue():Relay<sp/>-<sp/>ERROR:<sp/>Invalid<sp/>Stormnodeprivkey:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sandStormSigner.<ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">SignMessage</ref>(strMessage,<sp/>errorMessage,<sp/>vchSig,<sp/>key2))<sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormQueue():Relay<sp/>-<sp/>Sign<sp/>message<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sandStormSigner.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(pubkey2,<sp/>vchSig,<sp/>strMessage,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CSandstormQueue():Relay<sp/>-<sp/>Verify<sp/>message<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120" refid="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" kindref="member">CSandstormQueue::Relay</ref>()</highlight></codeline>
<codeline lineno="2121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>){</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>relay<sp/>to<sp/>everyone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;ssq&quot;</highlight><highlight class="normal">,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132" refid="class_c_sandstorm_queue_1a8ef2f37969599d3b30bbe479eff56460" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_queue_1a8ef2f37969599d3b30bbe479eff56460" kindref="member">CSandstormQueue::CheckSignature</ref>()</highlight></codeline>
<codeline lineno="2133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(vin);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/>vin.ToString()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(nDenom)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(time)<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(ready);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sandStormSigner.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(psn-&gt;<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>,<sp/>vchSig,<sp/>strMessage,<sp/>errorMessage)){</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CSandstormQueue::CheckSignature()<sp/>-<sp/>Got<sp/>bad<sp/>Stormnode<sp/>address<sp/>signature<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>vin.ToString().c_str());</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152" refid="class_c_sandstorm_pool_1aa07e994eb333486b5aa63733ba3b5ac5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1aa07e994eb333486b5aa63733ba3b5ac5" kindref="member">CSandstormPool::RelayFinalTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txNew)</highlight></codeline>
<codeline lineno="2153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>)</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;ssf&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>txNew);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight></codeline>
<codeline lineno="2161" refid="class_c_sandstorm_pool_1ade2ee9d0faa6598f90f672302d17eba8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1ade2ee9d0faa6598f90f672302d17eba8" kindref="member">CSandstormPool::RelayIn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CTxSSIn&gt;&amp;<sp/>vin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nAmount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txCollateral,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CTxSSOut&gt;&amp;<sp/>vout)</highlight></codeline>
<codeline lineno="2162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pSubmittedToStormnode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;<sp/>vin2;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxOut&gt;<sp/>vout2;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_s_s_in" kindref="compound">CTxSSIn</ref><sp/>in,<sp/>vin)</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vin2.push_back(in);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_s_s_out" kindref="compound">CTxSSOut</ref><sp/>out,<sp/>vout)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vout2.push_back(out);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode<sp/>=<sp/><ref refid="net_8cpp_1a66a7371d8e724cac0b4495169cdf2859" kindref="member">FindNode</ref>(pSubmittedToStormnode-&gt;addr);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pnode<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;RelayIn<sp/>-<sp/>found<sp/>storm,<sp/>relaying<sp/>message<sp/>-<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;ssi&quot;</highlight><highlight class="normal">,<sp/>vin2,<sp/>nAmount,<sp/>txCollateral,<sp/>vout2);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181" refid="class_c_sandstorm_pool_1a1b21018ceeb726bdb554b56b8f7f03d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a1b21018ceeb726bdb554b56b8f7f03d1" kindref="member">CSandstormPool::RelayStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newState,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newEntriesCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newAccepted,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorID)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>)</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sssu&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>newState,<sp/>newEntriesCount,<sp/>newAccepted,<sp/>errorID);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188" refid="class_c_sandstorm_pool_1a6679f34e84daacfceddb01b74ebb2a4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_sandstorm_pool_1a6679f34e84daacfceddb01b74ebb2a4e" kindref="member">CSandstormPool::RelayCompletedTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorID)</highlight></codeline>
<codeline lineno="2189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>)</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;ssc&quot;</highlight><highlight class="normal">,<sp/>sessionID,<sp/>error,<sp/>errorID);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight><highlight class="comment">//TODO:<sp/>Rename/move<sp/>to<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196" refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8cpp_1ac661e702905cd5093cb237555ba5c1c0" kindref="member">ThreadCheckSandStormPool</ref>()</highlight></codeline>
<codeline lineno="2197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//disable<sp/>all<sp/>Sandstorm/Stormnode<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>this<sp/>thread<sp/>recognisable<sp/>as<sp/>the<sp/>wallet<sp/>flushing<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(</highlight><highlight class="stringliteral">&quot;darksilk-sandstorm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(1000);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;ThreadCheckSandStormPool::check<sp/>timeout\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>sync<sp/>from<sp/>all<sp/>available<sp/>nodes,<sp/>one<sp/>step<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" kindref="member">Process</ref>();</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c++;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>should<sp/>activate<sp/>or<sp/>ping<sp/>every<sp/>few<sp/>minutes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>right<sp/>after<sp/>sync<sp/>is<sp/>considered<sp/>to<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>%<sp/>STORMNODE_PING_SECONDS<sp/>==<sp/>1)<sp/>activeStormnode.<ref refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" kindref="member">ManageStatus</ref>();</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>%<sp/>60<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" kindref="member">CheckAndRemove</ref>();</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" kindref="member">ProcessStormnodeConnections</ref>();</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a0113fb8a5dc2e0b0efd0b8180535f9d0" kindref="member">CleanPaymentList</ref>();</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1afede7ddd9c324103f27d52a2a3b75b1c" kindref="member">CleanTransactionLocksList</ref>();</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(c<sp/>%<sp/>STORMNODES_DUMP_SECONDS<sp/>==<sp/>0)<sp/>DumpStormnodes();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" kindref="member">CheckTimeout</ref>();</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" kindref="member">CheckForCompleteQueue</ref>();</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sandStormPool.<ref refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" kindref="member">GetState</ref>()<sp/>==<sp/><ref refid="sandstorm_8h_1a2c403b5fdc8a3fe7d868cfb93fc19e34" kindref="member">POOL_STATUS_IDLE</ref><sp/>&amp;&amp;<sp/>c<sp/>%<sp/>15<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sandStormPool.<ref refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" kindref="member">DoAutomaticDenominating</ref>();</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/sandstorm.cpp"/>
  </compounddef>
</doxygen>
