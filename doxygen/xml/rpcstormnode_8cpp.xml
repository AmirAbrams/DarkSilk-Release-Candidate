<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="rpcstormnode_8cpp" kind="file" language="C++">
    <compoundname>rpcstormnode.cpp</compoundname>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="db_8h" local="yes">db.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes refid="activestormnode_8h" local="yes">activestormnode.h</includes>
    <includes refid="stormnode-budget_8h" local="yes">stormnode-budget.h</includes>
    <includes refid="stormnode-payments_8h" local="yes">stormnode-payments.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes refid="stormnodeconfig_8h" local="yes">stormnodeconfig.h</includes>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="rpcserver_8h" local="yes">rpcserver.h</includes>
    <includes refid="sandstorm_8h" local="yes">sandstorm.h</includes>
    <includes local="no">fstream</includes>
    <incdepgraph>
      <node id="20700">
        <label>list</label>
      </node>
      <node id="20669">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="20734">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20732" relation="include">
        </childnode>
      </node>
      <node id="20748">
        <label>netinet/in.h</label>
      </node>
      <node id="20652">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
      </node>
      <node id="20741">
        <label>arpa/inet.h</label>
      </node>
      <node id="20718">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="20798">
        <label>iomanip</label>
      </node>
      <node id="20790">
        <label>boost/version.hpp</label>
      </node>
      <node id="20786">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="20659">
        <label>limits</label>
      </node>
      <node id="20760">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="20687">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
      </node>
      <node id="20769">
        <label>stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20737" relation="include">
        </childnode>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20772" relation="include">
        </childnode>
        <childnode refid="20760" relation="include">
        </childnode>
      </node>
      <node id="20688">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="20689" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20671" relation="include">
        </childnode>
      </node>
      <node id="20651">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20715" relation="include">
        </childnode>
        <childnode refid="20713" relation="include">
        </childnode>
      </node>
      <node id="20679">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20680" relation="include">
        </childnode>
        <childnode refid="20681" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20691" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20712" relation="include">
        </childnode>
      </node>
      <node id="20711">
        <label>openssl/rand.h</label>
      </node>
      <node id="20764">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="20758" relation="include">
        </childnode>
        <childnode refid="20765" relation="include">
        </childnode>
        <childnode refid="20712" relation="include">
        </childnode>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20700" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20701" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20791">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="20676">
        <label>assert.h</label>
      </node>
      <node id="20664">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="20747">
        <label>net/if.h</label>
      </node>
      <node id="20799">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20761" relation="include">
        </childnode>
        <childnode refid="20776" relation="include">
        </childnode>
      </node>
      <node id="20774">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="20773" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
      </node>
      <node id="20650">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20721" relation="include">
        </childnode>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20736" relation="include">
        </childnode>
      </node>
      <node id="20772">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="20733">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="20689" relation="include">
        </childnode>
      </node>
      <node id="20720">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="20770">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="20753" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20648">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode.cpp"/>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20758" relation="include">
        </childnode>
        <childnode refid="20760" relation="include">
        </childnode>
        <childnode refid="20761" relation="include">
        </childnode>
        <childnode refid="20769" relation="include">
        </childnode>
        <childnode refid="20773" relation="include">
        </childnode>
        <childnode refid="20774" relation="include">
        </childnode>
        <childnode refid="20775" relation="include">
        </childnode>
        <childnode refid="20776" relation="include">
        </childnode>
        <childnode refid="20777" relation="include">
        </childnode>
        <childnode refid="20799" relation="include">
        </childnode>
        <childnode refid="20800" relation="include">
        </childnode>
      </node>
      <node id="20673">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="20674" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
      </node>
      <node id="20721">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="20722" relation="include">
        </childnode>
        <childnode refid="20650" relation="include">
        </childnode>
        <childnode refid="20676" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20680" relation="include">
        </childnode>
        <childnode refid="20735" relation="include">
        </childnode>
      </node>
      <node id="20670">
        <label>sys/mman.h</label>
      </node>
      <node id="20667">
        <label>stdlib.h</label>
      </node>
      <node id="20755">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="20756" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20753" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20680" relation="include">
        </childnode>
      </node>
      <node id="20680">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="20710">
        <label>openssl/crypto.h</label>
      </node>
      <node id="20787">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="20654" relation="include">
        </childnode>
      </node>
      <node id="20773">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20772" relation="include">
        </childnode>
      </node>
      <node id="20795">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="20744">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="20745" relation="include">
        </childnode>
        <childnode refid="20670" relation="include">
        </childnode>
        <childnode refid="20746" relation="include">
        </childnode>
        <childnode refid="20694" relation="include">
        </childnode>
        <childnode refid="20747" relation="include">
        </childnode>
        <childnode refid="20748" relation="include">
        </childnode>
        <childnode refid="20741" relation="include">
        </childnode>
        <childnode refid="20749" relation="include">
        </childnode>
        <childnode refid="20671" relation="include">
        </childnode>
        <childnode refid="20750" relation="include">
        </childnode>
        <childnode refid="20672" relation="include">
        </childnode>
        <childnode refid="20751" relation="include">
        </childnode>
      </node>
      <node id="20706">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="20684">
        <label>openssl/sha.h</label>
      </node>
      <node id="20751">
        <label>errno.h</label>
      </node>
      <node id="20658">
        <label>cassert</label>
      </node>
      <node id="20677">
        <label>stdexcept</label>
      </node>
      <node id="20693">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="20694" relation="include">
        </childnode>
        <childnode refid="20695" relation="include">
        </childnode>
        <childnode refid="20696" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20697" relation="include">
        </childnode>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20700" relation="include">
        </childnode>
        <childnode refid="20701" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20702" relation="include">
        </childnode>
        <childnode refid="20703" relation="include">
        </childnode>
        <childnode refid="20704" relation="include">
        </childnode>
        <childnode refid="20705" relation="include">
        </childnode>
        <childnode refid="20706" relation="include">
        </childnode>
        <childnode refid="20707" relation="include">
        </childnode>
        <childnode refid="20708" relation="include">
        </childnode>
        <childnode refid="20709" relation="include">
        </childnode>
        <childnode refid="20710" relation="include">
        </childnode>
        <childnode refid="20711" relation="include">
        </childnode>
        <childnode refid="20692" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
      </node>
      <node id="20752">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="20753" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20743" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
      </node>
      <node id="20796">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="20784" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
      </node>
      <node id="20705">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="20729">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20713" relation="include">
        </childnode>
        <childnode refid="20730" relation="include">
        </childnode>
        <childnode refid="20733" relation="include">
        </childnode>
      </node>
      <node id="20654">
        <label>string</label>
      </node>
      <node id="20763">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
        <childnode refid="20756" relation="include">
        </childnode>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20766" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20765" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20712" relation="include">
        </childnode>
      </node>
      <node id="20757">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20737" relation="include">
        </childnode>
      </node>
      <node id="20656">
        <label>map</label>
      </node>
      <node id="20780">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="20702">
        <label>boost/thread.hpp</label>
      </node>
      <node id="20754">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="20743" relation="include">
        </childnode>
        <childnode refid="20752" relation="include">
        </childnode>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20715" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20771">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20737" relation="include">
        </childnode>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20715" relation="include">
        </childnode>
      </node>
      <node id="20783">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="20784" relation="include">
        </childnode>
        <childnode refid="20787" relation="include">
        </childnode>
        <childnode refid="20788" relation="include">
        </childnode>
        <childnode refid="20789" relation="include">
        </childnode>
        <childnode refid="20790" relation="include">
        </childnode>
        <childnode refid="20791" relation="include">
        </childnode>
        <childnode refid="20792" relation="include">
        </childnode>
        <childnode refid="20793" relation="include">
        </childnode>
        <childnode refid="20794" relation="include">
        </childnode>
        <childnode refid="20795" relation="include">
        </childnode>
      </node>
      <node id="20767">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20740" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
      </node>
      <node id="20725">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20726" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20704" relation="include">
        </childnode>
        <childnode refid="20729" relation="include">
        </childnode>
        <childnode refid="20734" relation="include">
        </childnode>
      </node>
      <node id="20689">
        <label>stddef.h</label>
      </node>
      <node id="20681">
        <label>boost/variant.hpp</label>
      </node>
      <node id="20800">
        <label>fstream</label>
      </node>
      <node id="20779">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="20750">
        <label>netdb.h</label>
      </node>
      <node id="20745">
        <label>sys/fcntl.h</label>
      </node>
      <node id="20722">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="20723" relation="include">
        </childnode>
      </node>
      <node id="20732">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20731" relation="include">
        </childnode>
      </node>
      <node id="20736">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="20789">
        <label>boost/function.hpp</label>
      </node>
      <node id="20653">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20657" relation="include">
        </childnode>
        <childnode refid="20658" relation="include">
        </childnode>
        <childnode refid="20659" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20661" relation="include">
        </childnode>
        <childnode refid="20662" relation="include">
        </childnode>
        <childnode refid="20663" relation="include">
        </childnode>
        <childnode refid="20664" relation="include">
        </childnode>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20673" relation="include">
        </childnode>
      </node>
      <node id="20671">
        <label>limits.h</label>
      </node>
      <node id="20717">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="20742">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="20657" relation="include">
        </childnode>
        <childnode refid="20738" relation="include">
        </childnode>
      </node>
      <node id="20696">
        <label>sys/resource.h</label>
      </node>
      <node id="20707">
        <label>openssl/bio.h</label>
      </node>
      <node id="20766">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20765" relation="include">
        </childnode>
      </node>
      <node id="20740">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="20743">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20744" relation="include">
        </childnode>
      </node>
      <node id="20765">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20740" relation="include">
        </childnode>
        <childnode refid="20681" relation="include">
        </childnode>
      </node>
      <node id="20781">
        <label>boost/asio.hpp</label>
      </node>
      <node id="20782">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="20683">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20684" relation="include">
        </childnode>
        <childnode refid="20685" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20687" relation="include">
        </childnode>
        <childnode refid="20688" relation="include">
        </childnode>
        <childnode refid="20690" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20749">
        <label>ifaddrs.h</label>
      </node>
      <node id="20712">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
        <childnode refid="20713" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20714" relation="include">
        </childnode>
      </node>
      <node id="20694">
        <label>sys/types.h</label>
      </node>
      <node id="20728">
        <label>ios</label>
      </node>
      <node id="20668">
        <label>string.h</label>
      </node>
      <node id="20674">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="20662">
        <label>cstdio</label>
      </node>
      <node id="20719">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="20709">
        <label>openssl/buffer.h</label>
      </node>
      <node id="20663">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="20649">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="20650" relation="include">
        </childnode>
        <childnode refid="20737" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20726" relation="include">
        </childnode>
        <childnode refid="20724" relation="include">
        </childnode>
        <childnode refid="20755" relation="include">
        </childnode>
        <childnode refid="20700" relation="include">
        </childnode>
        <childnode refid="20735" relation="include">
        </childnode>
      </node>
      <node id="20704">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="20776">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20737" relation="include">
        </childnode>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
      </node>
      <node id="20735">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="20682">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20672">
        <label>unistd.h</label>
      </node>
      <node id="20759">
        <label>db_cxx.h</label>
      </node>
      <node id="20655">
        <label>vector</label>
      </node>
      <node id="20691">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20692" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
      </node>
      <node id="20778">
        <label>rpcprotocol.h</label>
        <link refid="rpcprotocol_8h"/>
        <childnode refid="20744" relation="include">
        </childnode>
        <childnode refid="20700" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20779" relation="include">
        </childnode>
        <childnode refid="20780" relation="include">
        </childnode>
        <childnode refid="20781" relation="include">
        </childnode>
        <childnode refid="20782" relation="include">
        </childnode>
        <childnode refid="20783" relation="include">
        </childnode>
        <childnode refid="20796" relation="include">
        </childnode>
        <childnode refid="20797" relation="include">
        </childnode>
      </node>
      <node id="20737">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="20738" relation="include">
        </childnode>
        <childnode refid="20739" relation="include">
        </childnode>
        <childnode refid="20680" relation="include">
        </childnode>
        <childnode refid="20740" relation="include">
        </childnode>
        <childnode refid="20711" relation="include">
        </childnode>
        <childnode refid="20741" relation="include">
        </childnode>
        <childnode refid="20742" relation="include">
        </childnode>
        <childnode refid="20743" relation="include">
        </childnode>
        <childnode refid="20752" relation="include">
        </childnode>
        <childnode refid="20754" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20726" relation="include">
        </childnode>
      </node>
      <node id="20797">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="20784" relation="include">
        </childnode>
        <childnode refid="20658" relation="include">
        </childnode>
        <childnode refid="20699" relation="include">
        </childnode>
        <childnode refid="20798" relation="include">
        </childnode>
      </node>
      <node id="20685">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="20703">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="20793">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="20701">
        <label>utility</label>
      </node>
      <node id="20723">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20724" relation="include">
        </childnode>
      </node>
      <node id="20699">
        <label>sstream</label>
      </node>
      <node id="20768">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="20762">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20708">
        <label>openssl/evp.h</label>
      </node>
      <node id="20697">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="20658" relation="include">
        </childnode>
        <childnode refid="20698" relation="include">
        </childnode>
        <childnode refid="20699" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
      </node>
      <node id="20660">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="20758">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20726" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20704" relation="include">
        </childnode>
        <childnode refid="20759" relation="include">
        </childnode>
      </node>
      <node id="20726">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20727" relation="include">
        </childnode>
        <childnode refid="20676" relation="include">
        </childnode>
        <childnode refid="20728" relation="include">
        </childnode>
        <childnode refid="20659" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20657" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20668" relation="include">
        </childnode>
        <childnode refid="20701" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20690">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20689" relation="include">
        </childnode>
        <childnode refid="20671" relation="include">
        </childnode>
      </node>
      <node id="20695">
        <label>sys/time.h</label>
      </node>
      <node id="20698">
        <label>iostream</label>
      </node>
      <node id="20777">
        <label>rpcserver.h</label>
        <link refid="rpcserver_8h"/>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20778" relation="include">
        </childnode>
        <childnode refid="20700" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
      </node>
      <node id="20775">
        <label>stormnodeconfig.h</label>
        <link refid="stormnodeconfig_8h"/>
      </node>
      <node id="20738">
        <label>deque</label>
      </node>
      <node id="20675">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="20676" relation="include">
        </childnode>
        <childnode refid="20661" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20788">
        <label>boost/bind.hpp</label>
      </node>
      <node id="20785">
        <label>boost/config.hpp</label>
      </node>
      <node id="20746">
        <label>sys/socket.h</label>
      </node>
      <node id="20731">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="20676" relation="include">
        </childnode>
        <childnode refid="20689" relation="include">
        </childnode>
        <childnode refid="20668" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
      </node>
      <node id="20784">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20658" relation="include">
        </childnode>
        <childnode refid="20699" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20785" relation="include">
        </childnode>
        <childnode refid="20786" relation="include">
        </childnode>
        <childnode refid="20681" relation="include">
        </childnode>
      </node>
      <node id="20739">
        <label>boost/array.hpp</label>
      </node>
      <node id="20692">
        <label>openssl/bn.h</label>
      </node>
      <node id="20724">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="20725" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20701" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20715">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="20660" relation="include">
        </childnode>
      </node>
      <node id="20665">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="20666" relation="include">
        </childnode>
        <childnode refid="20668" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20670" relation="include">
        </childnode>
        <childnode refid="20671" relation="include">
        </childnode>
        <childnode refid="20672" relation="include">
        </childnode>
      </node>
      <node id="20794">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="20753">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="20691" relation="include">
        </childnode>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
      </node>
      <node id="20657">
        <label>set</label>
      </node>
      <node id="20727">
        <label>algorithm</label>
      </node>
      <node id="20761">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="20716" relation="include">
        </childnode>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20763" relation="include">
        </childnode>
      </node>
      <node id="20686">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
      </node>
      <node id="20678">
        <label>util.h</label>
      </node>
      <node id="20713">
        <label>stdio.h</label>
      </node>
      <node id="20666">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="20667" relation="include">
        </childnode>
      </node>
      <node id="20661">
        <label>cstring</label>
      </node>
      <node id="20716">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="20717" relation="include">
        </childnode>
        <childnode refid="20718" relation="include">
        </childnode>
        <childnode refid="20719" relation="include">
        </childnode>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20720" relation="include">
        </childnode>
      </node>
      <node id="20714">
        <label>inttypes.h</label>
      </node>
      <node id="20730">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="20731" relation="include">
        </childnode>
        <childnode refid="20732" relation="include">
        </childnode>
      </node>
      <node id="20792">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
      <node id="20756">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20690" relation="include">
        </childnode>
        <childnode refid="20757" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value sandstorm</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>sandstorm</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcstormnode.cpp" line="20" column="1" bodyfile="/home/dev/ds-160209/src/rpcstormnode.cpp" bodystart="20" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getpoolinfo</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getpoolinfo</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcstormnode.cpp" line="65" column="1" bodyfile="/home/dev/ds-160209/src/rpcstormnode.cpp" bodystart="65" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value stormnode</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>stormnode</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcstormnode.cpp" line="81" column="1" bodyfile="/home/dev/ds-160209/src/rpcstormnode.cpp" bodystart="81" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value stormnodelist</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>stormnodelist</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcstormnode.cpp" line="473" column="1" bodyfile="/home/dev/ds-160209/src/rpcstormnode.cpp" bodystart="473" bodyend="572"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Dash<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db_8h" kindref="compound">db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activestormnode_8h" kindref="compound">activestormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-budget_8h" kindref="compound">stormnode-budget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-payments_8h" kindref="compound">stormnode-payments.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeconfig_8h" kindref="compound">stormnodeconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcserver_8h" kindref="compound">rpcserver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sandstorm_8h" kindref="compound">sandstorm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejson__spirit" kindref="compound">json_spirit</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" kindref="member">sandstorm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sandstorm<sp/>\&quot;command\&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nArguments:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>\&quot;command\&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(string<sp/>or<sp/>set<sp/>of<sp/>strings,<sp/>required)<sp/>The<sp/>command<sp/>to<sp/>execute\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nAvailable<sp/>commands:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>start<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Start<sp/>mixing\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>stop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Stop<sp/>mixing\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Reset<sp/>mixing\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>status<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>mixing<sp/>status\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpcserver_8h_1abcfbb0ad9335791f2832c01209b8f12d" kindref="member">HelpRequiringPassphrase</ref>());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada0c1fbdf17d83da9f5124f2dbf0ba4765" kindref="member">RPC_WALLET_UNLOCK_NEEDED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Please<sp/>enter<sp/>the<sp/>wallet<sp/>passphrase<sp/>with<sp/>walletpassphrase<sp/>first.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Mixing<sp/>is<sp/>not<sp/>supported<sp/>from<sp/>stormnodes&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" kindref="member">DoAutomaticDenominating</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fEnableSandstorm<sp/>=<sp/>result;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Mixing<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(result<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;started<sp/>successfully&quot;</highlight><highlight class="normal"><sp/>:<sp/>(</highlight><highlight class="stringliteral">&quot;start<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1abf8b2c93df923f599639502bfaa165ec" kindref="member">GetStatus</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>will<sp/>retry&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;stop&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Mixing<sp/>was<sp/>stopped&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;reset&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1ab355cf2e1380a83aec75a7cf259c86ab" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Mixing<sp/>was<sp/>reset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Mixing<sp/>status:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1abf8b2c93df923f599639502bfaa165ec" kindref="member">GetStatus</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>command,<sp/>please<sp/>see<sp/>\&quot;help<sp/>sandstorm\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" kindref="member">getpoolinfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getpoolinfo\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>an<sp/>object<sp/>containing<sp/>anonymous<sp/>pool-related<sp/>information.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;current_stormnode&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" kindref="member">GetCurrentStormNode</ref>()-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>()));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" kindref="member">GetState</ref>()));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;entries&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1adb2e1bef95a98b65a8467fa0c7e8be4a" kindref="member">GetEntriesCount</ref>()));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;entries_accepted&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a724a0b6e9048760901010eb5da6328fd" kindref="member">GetCountEntriesAccepted</ref>()));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strCommand;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strCommand<sp/>=<sp/>params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/><sp/>||</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;start-alias&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;start-many&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;start-all&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;start-missing&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;start-disabled&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;list-conf&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal"><sp/><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;enforce&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;current&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;winners&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;genkey&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;connect&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;outputs&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strCommand<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;calcscore&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>\&quot;command\&quot;...<sp/>(<sp/>\&quot;passphrase\&quot;<sp/>)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>of<sp/>commands<sp/>to<sp/>execute<sp/>stormnode<sp/>related<sp/>actions\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nArguments:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>\&quot;command\&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(string<sp/>or<sp/>set<sp/>of<sp/>strings,<sp/>required)<sp/>The<sp/>command<sp/>to<sp/>execute\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>\&quot;passphrase\&quot;<sp/><sp/><sp/><sp/><sp/>(string,<sp/>optional)<sp/>The<sp/>wallet<sp/>passphrase\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nAvailable<sp/>commands:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>number<sp/>of<sp/>all<sp/>known<sp/>stormnodes<sp/>(optional:<sp/>&apos;ds&apos;,<sp/>&apos;enabled&apos;,<sp/>&apos;all&apos;,<sp/>&apos;qualify&apos;)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>current<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>info<sp/>on<sp/>current<sp/>stormnode<sp/>winner\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>debug<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>stormnode<sp/>status\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>genkey<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Generate<sp/>new<sp/>stormnodeprivkey\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>enforce<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Enforce<sp/>stormnode<sp/>payments\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>outputs<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>stormnode<sp/>compatible<sp/>outputs\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>start<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Start<sp/>local<sp/>Hot<sp/>stormnode<sp/>configured<sp/>in<sp/>darksilk.conf\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>start-alias<sp/><sp/>-<sp/>Start<sp/>single<sp/>remote<sp/>stormnode<sp/>by<sp/>assigned<sp/>alias<sp/>configured<sp/>in<sp/>stormnode.conf\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>start-&lt;mode&gt;<sp/>-<sp/>Start<sp/>remote<sp/>stormnodes<sp/>configured<sp/>in<sp/>stormnode.conf<sp/>(&lt;mode&gt;:<sp/>&apos;all&apos;,<sp/>&apos;missing&apos;,<sp/>&apos;disabled&apos;)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>status<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>stormnode<sp/>status<sp/>information\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>list<sp/>of<sp/>all<sp/>known<sp/>stormnodes<sp/>(see<sp/>stormnodelist<sp/>for<sp/>more<sp/>info)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>list-conf<sp/><sp/><sp/><sp/>-<sp/>Print<sp/>stormnode.conf<sp/>in<sp/>JSON<sp/>format\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>winners<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>list<sp/>of<sp/>stormnode<sp/>winners\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>newParams(params.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(params.begin()<sp/>+<sp/>1,<sp/>params.end(),<sp/>newParams.begin());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" kindref="member">stormnodelist</ref>(newParams,<sp/>fHelp);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;budget&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>budgets&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;connect&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strAddress<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAddress<sp/>=<sp/>params[1].get_str();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>address<sp/>required\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addr<sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(strAddress);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="net_8cpp_1ac6e0da5071d4eaa6960dbf889c765834" kindref="member">ConnectNode</ref>((<ref refid="class_c_address" kindref="compound">CAddress</ref>)addr,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;successfully<sp/>connected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;error<sp/>connecting\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>&gt;<sp/>2){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>parameters\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" kindref="member">GetNextStormnodeInQueueForPayment</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>nCount);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ds&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(MIN_POOL_PEER_PROTO_VERSION);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;qualify&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nCount;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Total:<sp/>%d<sp/>(DS<sp/>Compatible:<sp/>%d<sp/>/<sp/>Enabled:<sp/>%d<sp/>/<sp/>Qualify:<sp/>%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(MIN_POOL_PEER_PROTO_VERSION),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCount);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;current&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>winner<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" kindref="member">GetCurrentStormNode</ref>(1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(winner)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;IP:port&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>winner-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>()));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;protocol&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)winner-&gt;<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;vin&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winner-&gt;<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>()));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;pubkey&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(winner-&gt;<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()).ToString()));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;lastseen&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(winner-&gt;<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>==<sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref>())<sp/>?<sp/>winner-&gt;<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)winner-&gt;<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref>));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;activeseconds&quot;</highlight><highlight class="normal">,<sp/>(winner-&gt;<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>==<sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref>())<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)(winner-&gt;<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>-<sp/>winner-&gt;<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>)));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>!=<sp/>ACTIVE_STORMNODE_INITIAL<sp/>||<sp/>!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1a0f196a2ca46b0cc4de3a488a4cbc2374" kindref="member">IsSynced</ref>())</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">GetStatus</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey<sp/>=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.GetStormNodeVin(vin,<sp/>pubkey,<sp/>key);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found){</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Missing<sp/>stormnode<sp/>input,<sp/>please<sp/>look<sp/>at<sp/>the<sp/>documentation<sp/>for<sp/>instructions<sp/>on<sp/>stormnode<sp/>creation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">GetStatus</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;enforce&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="util_8cpp_1aef1290adaaac08bd8da8b458c869554f" kindref="member">enforceStormnodePaymentsTime</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;you<sp/>must<sp/>set<sp/>stormnode=1<sp/>in<sp/>the<sp/>configuration\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/>strWalletPass;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strWalletPass.reserve(100);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strWalletPass<sp/>=<sp/>params[1].get_str().c_str();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Your<sp/>wallet<sp/>is<sp/>locked,<sp/>passphrase<sp/>is<sp/>required\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a654ae5a3a7c4c7c7bfd271f108781b40" kindref="member">Unlock</ref>(strWalletPass)){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;incorrect<sp/>passphrase\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>!=<sp/>ACTIVE_STORMNODE_STARTED){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" kindref="member">status</ref><sp/>=<sp/>ACTIVE_STORMNODE_INITIAL;<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>consider<sp/>better<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" kindref="member">ManageStatus</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a0404b6bc1cb804aadc69b9902b52282a" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">GetStatus</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-alias&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>&lt;<sp/>2){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;command<sp/>needs<sp/>at<sp/>least<sp/>2<sp/>parameters\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>alias<sp/>=<sp/>params[1].get_str();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/>strWalletPass;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strWalletPass.reserve(100);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strWalletPass<sp/>=<sp/>params[2].get_str().c_str();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Your<sp/>wallet<sp/>is<sp/>locked,<sp/>passphrase<sp/>is<sp/>required\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a654ae5a3a7c4c7c7bfd271f108781b40" kindref="member">Unlock</ref>(strWalletPass)){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;incorrect<sp/>passphrase\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>statusObj;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;alias&quot;</highlight><highlight class="normal">,<sp/>alias));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry" kindref="compound">CStormnodeConfig::CStormnodeEntry</ref><sp/>sne,<sp/><ref refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" kindref="member">stormnodeConfig</ref>.<ref refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" kindref="member">getEntries</ref>())<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ae6bc0007a5896e6edd061bca02251dbf" kindref="member">getAlias</ref>()<sp/>==<sp/>alias)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.Register(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1af8e47485670e314e68ccb2a007d4f97e" kindref="member">getIp</ref>(),<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a02796f15b7991ec6682193b211353265" kindref="member">getPrivKey</ref>(),<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>(),<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>(),<sp/>errorMessage);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">,<sp/>result<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;successful&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;errorMessage&quot;</highlight><highlight class="normal">,<sp/>errorMessage));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;errorMessage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>alias<sp/>in<sp/>config.<sp/>Verify<sp/>with<sp/>list-conf.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a0404b6bc1cb804aadc69b9902b52282a" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>statusObj;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-many&quot;</highlight><highlight class="normal"><sp/>||<sp/>strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-all&quot;</highlight><highlight class="normal"><sp/>||<sp/>strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-missing&quot;</highlight><highlight class="normal"><sp/>||<sp/>strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-disabled&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" kindref="member">IsLocked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/>strWalletPass;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strWalletPass.reserve(100);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strWalletPass<sp/>=<sp/>params[1].get_str().c_str();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Your<sp/>wallet<sp/>is<sp/>locked,<sp/>passphrase<sp/>is<sp/>required\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a654ae5a3a7c4c7c7bfd271f108781b40" kindref="member">Unlock</ref>(strWalletPass)){</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;incorrect<sp/>passphrase\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-missing&quot;</highlight><highlight class="normal"><sp/>||<sp/>strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-disabled&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1abd82a675dc58c17710dac55b20426945" kindref="member">RequestedStormnodeAssets</ref><sp/>&lt;=<sp/>STORMNODE_SYNC_LIST<sp/>||</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1abd82a675dc58c17710dac55b20426945" kindref="member">RequestedStormnodeAssets</ref><sp/>==<sp/>STORMNODE_SYNC_FAILED))<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;You<sp/>can&apos;t<sp/>use<sp/>this<sp/>command<sp/>until<sp/>stormnode<sp/>list<sp/>is<sp/>synced\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CStormnodeConfig::CStormnodeEntry&gt;<sp/>snEntries;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snEntries<sp/>=<sp/><ref refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" kindref="member">stormnodeConfig</ref>.<ref refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" kindref="member">getEntries</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>successful<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>resultsObj;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry" kindref="compound">CStormnodeConfig::CStormnodeEntry</ref><sp/>sne,<sp/><ref refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" kindref="member">stormnodeConfig</ref>.<ref refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" kindref="member">getEntries</ref>())<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(<ref refid="classuint256" kindref="compound">uint256</ref>(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>()),<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>(<ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>().c_str())));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(vin);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-missing&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>psn)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;start-disabled&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>psn<sp/>&amp;&amp;<sp/>psn-&gt;IsEnabled())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.Register(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1af8e47485670e314e68ccb2a007d4f97e" kindref="member">getIp</ref>(),<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a02796f15b7991ec6682193b211353265" kindref="member">getPrivKey</ref>(),<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>(),<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>(),<sp/>errorMessage);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>statusObj;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;alias&quot;</highlight><highlight class="normal">,<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ae6bc0007a5896e6edd061bca02251dbf" kindref="member">getAlias</ref>()));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">,<sp/>result<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;successful&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>successful++;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed++;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;errorMessage&quot;</highlight><highlight class="normal">,<sp/>errorMessage));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultsObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">,<sp/>statusObj));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a0404b6bc1cb804aadc69b9902b52282a" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>returnObj;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;overall&quot;</highlight><highlight class="normal">,<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>started<sp/>%d<sp/>stormnodes,<sp/>failed<sp/>to<sp/>start<sp/>%d,<sp/>total<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>successful,<sp/>failed,<sp/>successful<sp/>+<sp/>failed)));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;detail&quot;</highlight><highlight class="normal">,<sp/>resultsObj));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnObj;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Not<sp/>implemented<sp/>yet,<sp/>please<sp/>look<sp/>at<sp/>the<sp/>documentation<sp/>for<sp/>instructions<sp/>on<sp/>stormnode<sp/>creation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;genkey&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>secret;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secret.<ref refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" kindref="member">MakeNewKey</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_dark_silk_secret" kindref="compound">CDarkSilkSecret</ref>(secret).<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;list-conf&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CStormnodeConfig::CStormnodeEntry&gt;<sp/>snEntries;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snEntries<sp/>=<sp/><ref refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" kindref="member">stormnodeConfig</ref>.<ref refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" kindref="member">getEntries</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>resultObj;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry" kindref="compound">CStormnodeConfig::CStormnodeEntry</ref><sp/>sne,<sp/><ref refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" kindref="member">stormnodeConfig</ref>.<ref refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" kindref="member">getEntries</ref>())<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(<ref refid="classuint256" kindref="compound">uint256</ref>(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>()),<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>(<ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>().c_str())));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(vin);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strStatus<sp/>=<sp/>psn<sp/>?<sp/>psn-&gt;<ref refid="class_c_stormnode_1aa96a9dc4e1c835657fe5d9c8410adf83" kindref="member">Status</ref>()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;MISSING&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>snObj;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;alias&quot;</highlight><highlight class="normal">,<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ae6bc0007a5896e6edd061bca02251dbf" kindref="member">getAlias</ref>()));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;address&quot;</highlight><highlight class="normal">,<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1af8e47485670e314e68ccb2a007d4f97e" kindref="member">getIp</ref>()));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;privateKey&quot;</highlight><highlight class="normal">,<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a02796f15b7991ec6682193b211353265" kindref="member">getPrivKey</ref>()));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;txHash&quot;</highlight><highlight class="normal">,<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>()));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;outputIndex&quot;</highlight><highlight class="normal">,<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>()));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">,<sp/>strStatus));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/>snObj));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultObj;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;outputs&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>possible<sp/>candidates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>possibleCoins<sp/>=<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" kindref="member">SelectCoinsStormnode</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>possibleCoins)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>)));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>a<sp/>stormnode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>snObj;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;vin&quot;</highlight><highlight class="normal">,<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>()));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;service&quot;</highlight><highlight class="normal">,<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" kindref="member">service</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>()));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psn)<sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;pubkey&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(psn-&gt;<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()).ToString()));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snObj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">,<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" kindref="member">GetStatus</ref>()));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snObj;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;winners&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLast<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>&gt;=<sp/>2){</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLast<sp/>=<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(params[1].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>-nLast;<sp/>nHeight<sp/>&lt;<sp/>pindexBest-&gt;nHeight+20;<sp/>nHeight++)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>nHeight),<sp/><ref refid="stormnode-payments_8cpp_1a7828ab0b9a1302db35b658f727b260e1" kindref="member">GetRequiredPaymentsString</ref>(nHeight)));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shows<sp/>which<sp/>stormnode<sp/>wins<sp/>by<sp/>score<sp/>each<sp/>block</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;calcscore&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLast<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>&gt;=<sp/>2){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLast<sp/>=<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(params[1].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CStormnode&gt;<sp/>vStormnodes<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a7002dd29b10a0db885c361f1d9981de8" kindref="member">GetFullStormnodeVector</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>-nLast;<sp/>nHeight<sp/>&lt;<sp/>pindexBest-&gt;nHeight+20;<sp/>nHeight++){</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>nHigh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*pBestStormnode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>n<sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" kindref="member">CalculateScore</ref>(1,<sp/>nHeight-100);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/>nHigh){</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHigh<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBestStormnode<sp/>=<sp/>&amp;sn;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pBestStormnode)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>nHeight),<sp/>pBestStormnode-&gt;<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>().c_str()));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl_1abb8ef4f2732e2c842afa716c456cb35d" kindref="member">Value::null</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" kindref="member">stormnodelist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strFilter<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>&gt;=<sp/>1)<sp/>strMode<sp/>=<sp/>params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>2)<sp/>strFilter<sp/>=<sp/>params[1].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;vin&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;pubkey&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;lastseen&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;activeseconds&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;rank&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;addr&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;protocol&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;full&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;lastpaid&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnodelist<sp/>(<sp/>\&quot;mode\&quot;<sp/>\&quot;filter\&quot;<sp/>)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Get<sp/>a<sp/>list<sp/>of<sp/>stormnodes<sp/>in<sp/>different<sp/>modes\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nArguments:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>\&quot;mode\&quot;<sp/><sp/><sp/><sp/><sp/><sp/>(string,<sp/>optional/required<sp/>to<sp/>use<sp/>filter,<sp/>defaults<sp/>=<sp/>status)<sp/>The<sp/>mode<sp/>to<sp/>run<sp/>list<sp/>in\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>\&quot;filter\&quot;<sp/><sp/><sp/><sp/>(string,<sp/>optional)<sp/>Filter<sp/>results.<sp/>Partial<sp/>match<sp/>by<sp/>IP<sp/>by<sp/>default<sp/>in<sp/>all<sp/>modes,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additional<sp/>matches<sp/>in<sp/>some<sp/>modes<sp/>are<sp/>also<sp/>available\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nAvailable<sp/>modes:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>activeseconds<sp/><sp/>-<sp/>Print<sp/>number<sp/>of<sp/>seconds<sp/>stormnode<sp/>recognized<sp/>by<sp/>the<sp/>network<sp/>as<sp/>enabled\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(since<sp/>latest<sp/>issued<sp/>\&quot;stormnode<sp/>start/start-many/start-alias\&quot;)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>addr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>ip<sp/>address<sp/>associated<sp/>with<sp/>a<sp/>stormnode<sp/>(can<sp/>be<sp/>additionally<sp/>filtered,<sp/>partial<sp/>match)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>full<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>info<sp/>in<sp/>format<sp/>&apos;status<sp/>protocol<sp/>pubkey<sp/>IP<sp/>lastseen<sp/>activeseconds<sp/>lastpaid&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(can<sp/>be<sp/>additionally<sp/>filtered,<sp/>partial<sp/>match)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>lastseen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>timestamp<sp/>of<sp/>when<sp/>a<sp/>stormnode<sp/>was<sp/>last<sp/>seen<sp/>on<sp/>the<sp/>network\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>lastpaid<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>The<sp/>last<sp/>time<sp/>a<sp/>node<sp/>was<sp/>paid<sp/>on<sp/>the<sp/>network\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>protocol<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>protocol<sp/>of<sp/>a<sp/>stormnode<sp/>(can<sp/>be<sp/>additionally<sp/>filtered,<sp/>exact<sp/>match))\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pubkey<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>public<sp/>key<sp/>associated<sp/>with<sp/>a<sp/>stormnode<sp/>(can<sp/>be<sp/>additionally<sp/>filtered,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial<sp/>match)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>rank<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>rank<sp/>of<sp/>a<sp/>stormnode<sp/>based<sp/>on<sp/>current<sp/>block\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>status<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Print<sp/>stormnode<sp/>status:<sp/>ENABLED<sp/>/<sp/>EXPIRED<sp/>/<sp/>VIN_SPENT<sp/>/<sp/>REMOVE<sp/>/<sp/>POS_ERROR\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(can<sp/>be<sp/>additionally<sp/>filtered,<sp/>partial<sp/>match)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;rank&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;pair&lt;int,<sp/>CStormnode&gt;<sp/>&gt;<sp/>vStormnodeRanks<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" kindref="member">GetStormnodeRanks</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>)&amp;<sp/>s,<sp/>vStormnodeRanks)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strVin<sp/>=<sp/>s.second.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.first));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CStormnode&gt;<sp/>vStormnodes<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a7002dd29b10a0db885c361f1d9981de8" kindref="member">GetFullStormnodeVector</ref>();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strVin<sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;activeseconds&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)(sn.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>-<sp/>sn.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>)));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;addr&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().find(strFilter)<sp/>==<sp/>string::npos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>()));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;full&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>addrStream;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addrStream<sp/>&lt;&lt;<sp/>setw(21)<sp/>&lt;&lt;<sp/>strVin;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>stringStream;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringStream<sp/>&lt;&lt;<sp/>setw(9)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1aa96a9dc4e1c835657fe5d9c8410adf83" kindref="member">Status</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(sn.<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()).ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setw(21)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)sn.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)(sn.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>-<sp/>sn.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)sn.<ref refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" kindref="member">GetLastPaid</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>output<sp/>=<sp/>stringStream.str();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strVin;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>stringStream.str().find(strFilter)<sp/>==<sp/>string::npos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(addrStream.str(),<sp/>output));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;lastseen&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)sn.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref>));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;lastpaid&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().find(strFilter)<sp/>==<sp/>string::npos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)sn.<ref refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" kindref="member">GetLastPaid</ref>()));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;protocol&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strFilter<sp/>!=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pubkey&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address(sn.<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>address.ToString().find(strFilter)<sp/>==<sp/>string::npos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>address.ToString()));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strMode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strStatus<sp/>=<sp/>sn.<ref refid="class_c_stormnode_1aa96a9dc4e1c835657fe5d9c8410adf83" kindref="member">Status</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strFilter<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strVin.find(strFilter)<sp/>==<sp/>string::npos<sp/>&amp;&amp;<sp/>strStatus.find(strFilter)<sp/>==<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(strVin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>strStatus));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/rpcstormnode.cpp"/>
  </compounddef>
</doxygen>
