<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="thread_8h" kind="file" language="C++">
    <compoundname>thread.h</compoundname>
    <includes local="no">pthread.h</includes>
    <includedby refid="core_8c" local="yes">/home/dev/ds-160209/src/crypto/argon2/core.c</includedby>
    <includedby refid="thread_8c" local="yes">/home/dev/ds-160209/src/crypto/argon2/thread.c</includedby>
    <incdepgraph>
      <node id="4094">
        <label>/home/dev/ds-160209/src/crypto/argon2/thread.h</label>
        <link refid="thread.h"/>
        <childnode refid="4095" relation="include">
        </childnode>
      </node>
      <node id="4095">
        <label>pthread.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4098">
        <label>/home/dev/ds-160209/src/crypto/argon2/thread.c</label>
        <link refid="thread_8c"/>
      </node>
      <node id="4096">
        <label>/home/dev/ds-160209/src/crypto/argon2/thread.h</label>
        <link refid="thread.h"/>
        <childnode refid="4097" relation="include">
        </childnode>
        <childnode refid="4098" relation="include">
        </childnode>
      </node>
      <node id="4097">
        <label>/home/dev/ds-160209/src/crypto/argon2/core.c</label>
        <link refid="core_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="thread_8h_1a6184874ede09a6cc34b9e20ca74b75a2" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* argon2_thread_func_t) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>argon2_thread_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/thread.h" line="19" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/thread.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" prot="public" static="no">
        <type>pthread_t</type>
        <definition>typedef pthread_t argon2_thread_handle_t</definition>
        <argsstring></argsstring>
        <name>argon2_thread_handle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/thread.h" line="20" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/thread.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="thread_8h_1a17ddfe963b3747e06a8c134f38f58bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int argon2_thread_create</definition>
        <argsstring>(argon2_thread_handle_t *handle, argon2_thread_func_t func, void *args)</argsstring>
        <name>argon2_thread_create</name>
        <param>
          <type><ref refid="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" kindref="member">argon2_thread_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="thread_8h_1a6184874ede09a6cc34b9e20ca74b75a2" kindref="member">argon2_thread_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/thread.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/thread.c" bodystart="6" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="thread_8h_1a2e67f9a3df17200908ee0801c7e5f1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int argon2_thread_join</definition>
        <argsstring>(argon2_thread_handle_t handle)</argsstring>
        <name>argon2_thread_join</name>
        <param>
          <type><ref refid="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" kindref="member">argon2_thread_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/thread.h" line="39" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/thread.c" bodystart="19" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="thread_8h_1ae143ea0ec6edcaf604f3973cbf37f577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argon2_thread_exit</definition>
        <argsstring>(void)</argsstring>
        <name>argon2_thread_exit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/thread.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/thread.c" bodystart="30" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ARGON2_THREAD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGON2_THREAD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Here<sp/>we<sp/>implement<sp/>an<sp/>abstraction<sp/>layer<sp/>for<sp/>the<sp/>simpÄºe<sp/>requirements</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>Argon2<sp/>code.<sp/>We<sp/>only<sp/>require<sp/>3<sp/>primitives---thread<sp/>creation,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joining,<sp/>and<sp/>termination---so<sp/>full<sp/>emulation<sp/>of<sp/>the<sp/>pthreads<sp/>API</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>unwarranted.<sp/>Currently<sp/>we<sp/>wrap<sp/>pthreads<sp/>and<sp/>Win32<sp/>threads.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>API<sp/>defines<sp/>2<sp/>types:<sp/>the<sp/>function<sp/>pointer<sp/>type,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>argon2_thread_func_t,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>the<sp/>type<sp/>of<sp/>the<sp/>thread<sp/>handle---argon2_thread_handle_t.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;process.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>unsigned(__stdcall<sp/>*<ref refid="thread_8h_1a6184874ede09a6cc34b9e20ca74b75a2" kindref="member">argon2_thread_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uintptr_t<sp/><ref refid="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" kindref="member">argon2_thread_handle_t</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="thread_8h_1a6184874ede09a6cc34b9e20ca74b75a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*argon2_thread_func_t)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="20" refid="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pthread_t<sp/><ref refid="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" kindref="member">argon2_thread_handle_t</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Creates<sp/>a<sp/>thread</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>pointer<sp/>to<sp/>a<sp/>thread<sp/>handle,<sp/>which<sp/>is<sp/>the<sp/>output<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>function.<sp/>Must<sp/>not<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>@param<sp/>func<sp/>A<sp/>function<sp/>pointer<sp/>for<sp/>the<sp/>thread&apos;s<sp/>entry<sp/>point.<sp/>Must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>NULL.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>@param<sp/>args<sp/>Pointer<sp/>that<sp/>is<sp/>passed<sp/>as<sp/>an<sp/>argument<sp/>to<sp/>@func.<sp/>May<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>if<sp/>@handle<sp/>and<sp/>@func<sp/>are<sp/>valid<sp/>pointers<sp/>and<sp/>a<sp/>thread<sp/>is<sp/>successfuly</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>created.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="thread_8h_1a17ddfe963b3747e06a8c134f38f58bc1" kindref="member">argon2_thread_create</ref>(<ref refid="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" kindref="member">argon2_thread_handle_t</ref><sp/>*handle,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="thread_8h_1a6184874ede09a6cc34b9e20ca74b75a2" kindref="member">argon2_thread_func_t</ref><sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Waits<sp/>for<sp/>a<sp/>thread<sp/>to<sp/>terminate</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>Handle<sp/>to<sp/>a<sp/>thread<sp/>created<sp/>with<sp/>argon2_thread_create.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>if<sp/>@handle<sp/>is<sp/>a<sp/>valid<sp/>handle,<sp/>and<sp/>joining<sp/>completed<sp/>successfully.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="thread_8h_1a2e67f9a3df17200908ee0801c7e5f1f1" kindref="member">argon2_thread_join</ref>(<ref refid="thread_8h_1a503637a7a6e8c40a06470b8838aa750c" kindref="member">argon2_thread_handle_t</ref><sp/>handle);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Terminate<sp/>the<sp/>current<sp/>thread.<sp/>Must<sp/>be<sp/>run<sp/>inside<sp/>a<sp/>thread<sp/>created<sp/>by</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>argon2_thread_create.</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="thread_8h_1ae143ea0ec6edcaf604f3973cbf37f577" kindref="member">argon2_thread_exit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/crypto/argon2/thread.h"/>
  </compounddef>
</doxygen>
