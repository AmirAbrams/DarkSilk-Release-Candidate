<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_fee_rate" kind="class" language="C++" prot="public">
    <compoundname>CFeeRate</compoundname>
    <includes refid="amount_8h" local="no">amount.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_fee_rate_1a80e7dc7192bd5ef6ef9eede89d406ac1" prot="private" static="no" mutable="no">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount CFeeRate::nSatoshisPerK</definition>
        <argsstring></argsstring>
        <name>nSatoshisPerK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="28" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_fee_rate_1ab1030f8a059eb5ccade1e3803bd727b3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CFeeRate::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="45" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_fee_rate_1aed181aa12213c646c8a4632280444412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CFeeRate::CFeeRate</definition>
        <argsstring>()</argsstring>
        <name>CFeeRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_c_fee_rate_1abee4364fc0d83612feda7c9f5425a7cc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CFeeRate::CFeeRate</definition>
        <argsstring>(const CAmount &amp;_nSatoshisPerK)</argsstring>
        <name>CFeeRate</name>
        <param>
          <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>_nSatoshisPerK</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="31" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_c_fee_rate_1ad92ea084b8fa9495cbfe0da9cfd1cd69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CFeeRate::CFeeRate</definition>
        <argsstring>(const CAmount &amp;nFeePaid, size_t nSize)</argsstring>
        <name>CFeeRate</name>
        <param>
          <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nFeePaid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/amount.cpp" bodystart="9" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_c_fee_rate_1aa82ca8ba290a1c02ed522aacfb5105ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CFeeRate::CFeeRate</definition>
        <argsstring>(const CFeeRate &amp;other)</argsstring>
        <name>CFeeRate</name>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_c_fee_rate_1a11d1c2c0c9e5601d82fecd023358bcc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount CFeeRate::GetFee</definition>
        <argsstring>(size_t size) const </argsstring>
        <name>GetFee</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/amount.cpp" bodystart="17" bodyend="25"/>
        <referencedby refid="class_c_fee_rate_1a5cf990404e896b332cf6fb836244b4a6" compoundref="amount_8h" startline="36" endline="36">GetFeePerK</referencedby>
        <referencedby refid="class_c_tx_out_1aebf080be8a28855321e3581dfe3abcaf" compoundref="transaction_8h" startline="220" endline="231">CTxOut::IsDust</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_fee_rate_1a5cf990404e896b332cf6fb836244b4a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount CFeeRate::GetFeePerK</definition>
        <argsstring>() const </argsstring>
        <name>GetFeePerK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="36" bodyend="36"/>
        <references refid="class_c_fee_rate_1a11d1c2c0c9e5601d82fecd023358bcc2" compoundref="amount_8cpp" startline="17" endline="25">GetFee</references>
        <referencedby refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" compoundref="txmempool_8h" startline="98" endline="105">CBlockAverage::AreSane</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_fee_rate_1ab517bd05a9b78fbd02aabe7d74d7049f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CFeeRate::ToString</definition>
        <argsstring>() const </argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/amount.cpp" bodystart="27" bodyend="30"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <referencedby refid="class_c_miner_policy_estimator_1a2b30e1eaa7eec2744c576fba5bd1a168" compoundref="txmempool_8h" startline="209" endline="270">CMinerPolicyEstimator::seenBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_fee_rate_1aface850a2c1af316cedf87d24f04fda3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CFeeRate::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="48" bodyend="50"/>
        <references refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" compoundref="serialize_8h" startline="101">READWRITE</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_fee_rate_1ac6171d01f1032c0f08e804f2b19e84e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const CFeeRate &amp;a, const CFeeRate &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_fee_rate_1ab69eafe1cbb126cc0549bc5936422a2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const CFeeRate &amp;a, const CFeeRate &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="39" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_fee_rate_1a90b4daf7a7d840f47c453b9ba51744cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CFeeRate &amp;a, const CFeeRate &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="40" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_fee_rate_1af580c9e0a2509b79a497cee50116bfcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const CFeeRate &amp;a, const CFeeRate &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="41" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_fee_rate_1a3eebd7ed699091974194e47cfb2a571c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const CFeeRate &amp;a, const CFeeRate &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/amount.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Type-safe wrapper class to for fee rates (how much to pay based on transaction size) </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/amount.h" line="26" column="1" bodyfile="/home/dev/ds-160209/src/amount.h" bodystart="25" bodyend="51"/>
    <listofallmembers>
      <member refid="class_c_fee_rate_1ab1030f8a059eb5ccade1e3803bd727b3" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_fee_rate_1aed181aa12213c646c8a4632280444412" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>CFeeRate</name></member>
      <member refid="class_c_fee_rate_1abee4364fc0d83612feda7c9f5425a7cc" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>CFeeRate</name></member>
      <member refid="class_c_fee_rate_1ad92ea084b8fa9495cbfe0da9cfd1cd69" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>CFeeRate</name></member>
      <member refid="class_c_fee_rate_1aa82ca8ba290a1c02ed522aacfb5105ef" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>CFeeRate</name></member>
      <member refid="class_c_fee_rate_1a11d1c2c0c9e5601d82fecd023358bcc2" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>GetFee</name></member>
      <member refid="class_c_fee_rate_1a5cf990404e896b332cf6fb836244b4a6" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>GetFeePerK</name></member>
      <member refid="class_c_fee_rate_1a80e7dc7192bd5ef6ef9eede89d406ac1" prot="private" virt="non-virtual"><scope>CFeeRate</scope><name>nSatoshisPerK</name></member>
      <member refid="class_c_fee_rate_1ac6171d01f1032c0f08e804f2b19e84e8" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>operator&lt;</name></member>
      <member refid="class_c_fee_rate_1af580c9e0a2509b79a497cee50116bfcc" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>operator&lt;=</name></member>
      <member refid="class_c_fee_rate_1a90b4daf7a7d840f47c453b9ba51744cf" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>operator==</name></member>
      <member refid="class_c_fee_rate_1ab69eafe1cbb126cc0549bc5936422a2c" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>operator&gt;</name></member>
      <member refid="class_c_fee_rate_1a3eebd7ed699091974194e47cfb2a571c" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>operator&gt;=</name></member>
      <member refid="class_c_fee_rate_1aface850a2c1af316cedf87d24f04fda3" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>SerializationOp</name></member>
      <member refid="class_c_fee_rate_1ab517bd05a9b78fbd02aabe7d74d7049f" prot="public" virt="non-virtual"><scope>CFeeRate</scope><name>ToString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
