<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_coins" kind="class" language="C++" prot="public">
    <compoundname>CCoins</compoundname>
    <includes refid="coins_8h" local="no">coins.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_coins_1adeedfaef84ba39b6e295d5d1fb9d8f0b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CCoins::fCoinBase</definition>
        <argsstring></argsstring>
        <name>fCoinBase</name>
        <briefdescription>
<para>whether transaction is a coinbase </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="107" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="107" bodyend="-1"/>
        <referencedby refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" compoundref="coins_8cpp" startline="34" endline="48">Spend</referencedby>
        <referencedby refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" compoundref="coins_8h" startline="158" endline="163">swap</referencedby>
        <referencedby refid="class_c_coins_1a5dda8b622fd4ebd48d382ea6be0db3c6" compoundref="coins_8h" startline="181" endline="183">IsCoinBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c_tx_out" kindref="compound">CTxOut</ref> &gt;</type>
        <definition>std::vector&lt;CTxOut&gt; CCoins::vout</definition>
        <argsstring></argsstring>
        <name>vout</name>
        <briefdescription>
<para>unspent transaction outputs; spent outputs are .IsNull(); spent outputs at the end of the array are dropped </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="110" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="class_c_coins_1a3dab547bdbce1152a2375c5c6c017ad5" compoundref="coins_8cpp" startline="16" endline="32">CalcMaskSize</referencedby>
        <referencedby refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" compoundref="coins_8cpp" startline="34" endline="48">Spend</referencedby>
        <referencedby refid="class_c_coins_view_cache_1aa441d7d3869be2f164af1c52a3acb56a" compoundref="coins_8cpp" startline="199" endline="204">CCoinsViewCache::GetOutputFor</referencedby>
        <referencedby refid="class_c_coins_view_cache_1a0ba6f2f115a73a91d3cfb8f59569099d" compoundref="coins_8cpp" startline="232" endline="247">CCoinsViewCache::GetPriority</referencedby>
        <referencedby refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" compoundref="coins_8h" startline="158" endline="163">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_coins_1af7396dfad71367de46f21cf92e2c70ab" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CCoins::nHeight</definition>
        <argsstring></argsstring>
        <name>nHeight</name>
        <briefdescription>
<para>at which height this transaction was included in the active block chain </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="113" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" compoundref="coins_8cpp" startline="34" endline="48">Spend</referencedby>
        <referencedby refid="class_c_coins_view_cache_1a0ba6f2f115a73a91d3cfb8f59569099d" compoundref="coins_8cpp" startline="232" endline="247">CCoinsViewCache::GetPriority</referencedby>
        <referencedby refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" compoundref="coins_8h" startline="158" endline="163">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_coins_1a96fea4ee8841e9ce32f60c2e7e3cf6b6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CCoins::nVersion</definition>
        <argsstring></argsstring>
        <name>nVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>version of the <ref refid="class_c_transaction" kindref="compound">CTransaction</ref>; accesses to this value should probably check for nHeight as well, as new tx version will probably only be introduced at certain heights </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="117" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="117" bodyend="-1"/>
        <referencedby refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" compoundref="coins_8cpp" startline="34" endline="48">Spend</referencedby>
        <referencedby refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" compoundref="coins_8h" startline="158" endline="163">swap</referencedby>
        <referencedby refid="class_c_coins_1a74ddd9230570c084ea56feaf4b9d7e06" compoundref="coins_8h" startline="185" endline="208">GetSerializeSize</referencedby>
        <referencedby refid="class_c_coins_1a0932a94966083092cbceabec1ef65d73" compoundref="coins_8h" startline="211" endline="237">Serialize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_coins_1abf67e501a1d207c892c1f52dd383956e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CCoins::FromTx</definition>
        <argsstring>(const CTransaction &amp;tx, int nHeightIn)</argsstring>
        <name>FromTx</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nHeightIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="119" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="119" bodyend="125"/>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_transaction_1a6c29bdd822859c7b21b7b6c22dca6825" compoundref="transaction_8h" startline="259">CTransaction::nVersion</references>
        <references refid="class_c_coins_1ad8b649abb32bdba255adec6dcfd57fc5" compoundref="coins_8h" startline="150" endline="156">ClearUnspendable</references>
        <referencedby refid="class_c_coins_1a303f3b245c339c11a1ea4318b01ec290" compoundref="coins_8h" startline="128" endline="130">CCoins</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a303f3b245c339c11a1ea4318b01ec290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CCoins::CCoins</definition>
        <argsstring>(const CTransaction &amp;tx, int nHeightIn)</argsstring>
        <name>CCoins</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nHeightIn</declname>
        </param>
        <briefdescription>
<para>construct a <ref refid="class_c_coins" kindref="compound">CCoins</ref> from a <ref refid="class_c_transaction" kindref="compound">CTransaction</ref>, at a given height </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="128" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="128" bodyend="130"/>
        <references refid="class_c_coins_1abf67e501a1d207c892c1f52dd383956e" compoundref="coins_8h" startline="119" endline="125">FromTx</references>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a4d4197688436b752234bea95f0230b82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CCoins::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="132" bodyend="137"/>
        <references refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" compoundref="coins_8h" startline="158" endline="163">swap</references>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a543757065d6c77d23953a33eecb31a46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CCoins::CCoins</definition>
        <argsstring>()</argsstring>
        <name>CCoins</name>
        <briefdescription>
<para>empty constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a7cfa2efc07f4d35785c9c75caa8bddcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CCoins::Cleanup</definition>
        <argsstring>()</argsstring>
        <name>Cleanup</name>
        <briefdescription>
<para>remove spent outputs at the end of vout </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="143" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="143" bodyend="148"/>
        <referencedby refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" compoundref="coins_8cpp" startline="34" endline="48">Spend</referencedby>
        <referencedby refid="class_c_coins_1ad8b649abb32bdba255adec6dcfd57fc5" compoundref="coins_8h" startline="150" endline="156">ClearUnspendable</referencedby>
        <referencedby refid="class_c_coins_1adaa98cb6d8da3a4d573cd799ddd11051" compoundref="coins_8h" startline="240" endline="271">Unserialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1ad8b649abb32bdba255adec6dcfd57fc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CCoins::ClearUnspendable</definition>
        <argsstring>()</argsstring>
        <name>ClearUnspendable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="150" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="150" bodyend="156"/>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="class_c_script_1a5d8efd005dde9242d88212c8b7fdb696" compoundref="script_8h" startline="859" endline="862">CScript::IsUnspendable</references>
        <references refid="class_c_tx_out_1a9fe5e6a1be651f130d3dc84a64e78a24" compoundref="transaction_8h" startline="192" endline="197">CTxOut::SetNull</references>
        <references refid="class_c_coins_1a7cfa2efc07f4d35785c9c75caa8bddcb" compoundref="coins_8h" startline="143" endline="148">Cleanup</references>
        <referencedby refid="class_c_coins_1abf67e501a1d207c892c1f52dd383956e" compoundref="coins_8h" startline="119" endline="125">FromTx</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CCoins::swap</definition>
        <argsstring>(CCoins &amp;to)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="class_c_coins" kindref="compound">CCoins</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="158" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="158" bodyend="163"/>
        <references refid="class_c_coins_1adeedfaef84ba39b6e295d5d1fb9d8f0b" compoundref="coins_8h" startline="107">fCoinBase</references>
        <references refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" compoundref="coins_8h" startline="110">vout</references>
        <references refid="class_c_coins_1af7396dfad71367de46f21cf92e2c70ab" compoundref="coins_8h" startline="113">nHeight</references>
        <references refid="class_c_coins_1a96fea4ee8841e9ce32f60c2e7e3cf6b6" compoundref="coins_8h" startline="117">nVersion</references>
        <referencedby refid="class_c_coins_view_cache_1a561bb7c6c97701b12c48fbbb563d0a91" compoundref="coins_8cpp" startline="153" endline="187">CCoinsViewCache::BatchWrite</referencedby>
        <referencedby refid="class_c_coins_1a4d4197688436b752234bea95f0230b82" compoundref="coins_8h" startline="132" endline="137">Clear</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a3dab547bdbce1152a2375c5c6c017ad5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CCoins::CalcMaskSize</definition>
        <argsstring>(unsigned int &amp;nBytes, unsigned int &amp;nNonzeroBytes) const </argsstring>
        <name>CalcMaskSize</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>nBytes</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>nNonzeroBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculate number of bytes for the bitmask, and its number of non-zero bytes each bit in the bitmask represents the availability of one output, but the availabilities of the first two outputs are encoded separately </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="179" column="1" bodyfile="/home/dev/ds-160209/src/coins.cpp" bodystart="16" bodyend="32"/>
        <references refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" compoundref="coins_8h" startline="110">vout</references>
        <referencedby refid="class_c_coins_1a74ddd9230570c084ea56feaf4b9d7e06" compoundref="coins_8h" startline="185" endline="208">GetSerializeSize</referencedby>
        <referencedby refid="class_c_coins_1a0932a94966083092cbceabec1ef65d73" compoundref="coins_8h" startline="211" endline="237">Serialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a5dda8b622fd4ebd48d382ea6be0db3c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CCoins::IsCoinBase</definition>
        <argsstring>() const </argsstring>
        <name>IsCoinBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="181" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="181" bodyend="183"/>
        <references refid="class_c_coins_1adeedfaef84ba39b6e295d5d1fb9d8f0b" compoundref="coins_8h" startline="107">fCoinBase</references>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a74ddd9230570c084ea56feaf4b9d7e06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CCoins::GetSerializeSize</definition>
        <argsstring>(int nType, int nVersion) const </argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="185" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="185" bodyend="208"/>
        <references refid="class_c_coins_1a3dab547bdbce1152a2375c5c6c017ad5" compoundref="coins_8cpp" startline="16" endline="32">CalcMaskSize</references>
        <references refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" compoundref="serialize_8h" startline="330">VARINT</references>
        <references refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" compoundref="serialize_8h" startline="36" endline="39">REF</references>
        <references refid="class_c_coins_1a96fea4ee8841e9ce32f60c2e7e3cf6b6" compoundref="coins_8h" startline="117">nVersion</references>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a0932a94966083092cbceabec1ef65d73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CCoins::Serialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="211" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="211" bodyend="237"/>
        <references refid="class_c_coins_1a3dab547bdbce1152a2375c5c6c017ad5" compoundref="coins_8cpp" startline="16" endline="32">CalcMaskSize</references>
        <references refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" compoundref="serialize_8h" startline="330">VARINT</references>
        <references refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" compoundref="serialize_8h" startline="36" endline="39">REF</references>
        <references refid="class_c_coins_1a96fea4ee8841e9ce32f60c2e7e3cf6b6" compoundref="coins_8h" startline="117">nVersion</references>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1adaa98cb6d8da3a4d573cd799ddd11051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CCoins::Unserialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="240" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="240" bodyend="271"/>
        <references refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" compoundref="serialize_8h" startline="330">VARINT</references>
        <references refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" compoundref="serialize_8h" startline="36" endline="39">REF</references>
        <references refid="class_c_coins_1a7cfa2efc07f4d35785c9c75caa8bddcb" compoundref="coins_8h" startline="143" endline="148">Cleanup</references>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CCoins::Spend</definition>
        <argsstring>(const COutPoint &amp;out, CTxInUndo &amp;undo)</argsstring>
        <name>Spend</name>
        <param>
          <type>const <ref refid="class_c_out_point" kindref="compound">COutPoint</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_c_tx_in_undo" kindref="compound">CTxInUndo</ref> &amp;</type>
          <declname>undo</declname>
        </param>
        <briefdescription>
<para>mark an outpoint spent, and construct undo information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="274" column="1" bodyfile="/home/dev/ds-160209/src/coins.cpp" bodystart="34" bodyend="48"/>
        <references refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" compoundref="transaction_8h" startline="31">COutPoint::n</references>
        <references refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" compoundref="coins_8h" startline="110">vout</references>
        <references refid="class_c_coins_1a7cfa2efc07f4d35785c9c75caa8bddcb" compoundref="coins_8h" startline="143" endline="148">Cleanup</references>
        <references refid="class_c_tx_in_undo_1af022118f015a9b1b9ab96e04e8452292" compoundref="undo_8h" startline="51">CTxInUndo::nHeight</references>
        <references refid="class_c_coins_1af7396dfad71367de46f21cf92e2c70ab" compoundref="coins_8h" startline="113">nHeight</references>
        <references refid="class_c_tx_in_undo_1a5952f917224de3a2193157b856c47864" compoundref="undo_8h" startline="50">CTxInUndo::fCoinBase</references>
        <references refid="class_c_coins_1adeedfaef84ba39b6e295d5d1fb9d8f0b" compoundref="coins_8h" startline="107">fCoinBase</references>
        <references refid="class_c_tx_in_undo_1a193281289475ca792e436a7a02de23ef" compoundref="undo_8h" startline="52">CTxInUndo::nVersion</references>
        <references refid="class_c_coins_1a96fea4ee8841e9ce32f60c2e7e3cf6b6" compoundref="coins_8h" startline="117">nVersion</references>
        <referencedby refid="class_c_coins_1a99210076cac4b1ac521a532d3b5df182" compoundref="coins_8cpp" startline="50" endline="54">Spend</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a99210076cac4b1ac521a532d3b5df182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CCoins::Spend</definition>
        <argsstring>(int nPos)</argsstring>
        <name>Spend</name>
        <param>
          <type>int</type>
          <declname>nPos</declname>
        </param>
        <briefdescription>
<para>mark a vout spent </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="277" column="1" bodyfile="/home/dev/ds-160209/src/coins.cpp" bodystart="50" bodyend="54"/>
        <references refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" compoundref="coins_8cpp" startline="34" endline="48">Spend</references>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1a69bdcbac02e1644cb02b2645068777b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CCoins::IsAvailable</definition>
        <argsstring>(unsigned int nPos) const </argsstring>
        <name>IsAvailable</name>
        <param>
          <type>unsigned int</type>
          <declname>nPos</declname>
        </param>
        <briefdescription>
<para>check whether a particular output is still available </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="280" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="280" bodyend="282"/>
        <referencedby refid="class_c_coins_view_cache_1aa441d7d3869be2f164af1c52a3acb56a" compoundref="coins_8cpp" startline="199" endline="204">CCoinsViewCache::GetOutputFor</referencedby>
        <referencedby refid="class_c_coins_view_cache_1a2b547a48709e9f9af9a4cfc77a328a3f" compoundref="coins_8cpp" startline="218" endline="230">CCoinsViewCache::HaveInputs</referencedby>
        <referencedby refid="class_c_coins_view_cache_1a0ba6f2f115a73a91d3cfb8f59569099d" compoundref="coins_8cpp" startline="232" endline="247">CCoinsViewCache::GetPriority</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_1af28a2e44f0b41c3a4a6366607b4b8f81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CCoins::IsPruned</definition>
        <argsstring>() const </argsstring>
        <name>IsPruned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check whether the entire <ref refid="class_c_coins" kindref="compound">CCoins</ref> is spent note that only !IsPruned() <ref refid="class_c_coins" kindref="compound">CCoins</ref> can be serialized </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="286" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="286" bodyend="291"/>
        <references refid="class_c_tx_out_1aeaa6b16e0c4caee54196cf8eb0f127f3" compoundref="transaction_8h" startline="199" endline="202">CTxOut::IsNull</references>
        <referencedby refid="class_c_coins_view_mem_pool_1a01564f29ff2673ddd0d27414e576f1bc" compoundref="coins_8cpp" startline="357" endline="367">CCoinsViewMemPool::GetCoins</referencedby>
        <referencedby refid="txdb_8h_1ac78624a7ae785f74ad74dd33341b6cd4" compoundref="txdb_8cpp" startline="16" endline="21">BatchWriteCoins</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_coins_1a77593e3db3e4b369c21a91aad2afcc05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CCoins &amp;a, const CCoins &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_coins" kindref="compound">CCoins</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_coins" kindref="compound">CCoins</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>equality test </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="166" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="166" bodyend="174"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_coins_1a42ef9fcc8ca59916b5fb69904db1c9bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CCoins &amp;a, const CCoins &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_coins" kindref="compound">CCoins</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_coins" kindref="compound">CCoins</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="175" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="175" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/coins.h" line="104" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="103" bodyend="292"/>
    <listofallmembers>
      <member refid="class_c_coins_1a3dab547bdbce1152a2375c5c6c017ad5" prot="public" virt="non-virtual"><scope>CCoins</scope><name>CalcMaskSize</name></member>
      <member refid="class_c_coins_1a303f3b245c339c11a1ea4318b01ec290" prot="public" virt="non-virtual"><scope>CCoins</scope><name>CCoins</name></member>
      <member refid="class_c_coins_1a543757065d6c77d23953a33eecb31a46" prot="public" virt="non-virtual"><scope>CCoins</scope><name>CCoins</name></member>
      <member refid="class_c_coins_1a7cfa2efc07f4d35785c9c75caa8bddcb" prot="public" virt="non-virtual"><scope>CCoins</scope><name>Cleanup</name></member>
      <member refid="class_c_coins_1a4d4197688436b752234bea95f0230b82" prot="public" virt="non-virtual"><scope>CCoins</scope><name>Clear</name></member>
      <member refid="class_c_coins_1ad8b649abb32bdba255adec6dcfd57fc5" prot="public" virt="non-virtual"><scope>CCoins</scope><name>ClearUnspendable</name></member>
      <member refid="class_c_coins_1adeedfaef84ba39b6e295d5d1fb9d8f0b" prot="public" virt="non-virtual"><scope>CCoins</scope><name>fCoinBase</name></member>
      <member refid="class_c_coins_1abf67e501a1d207c892c1f52dd383956e" prot="public" virt="non-virtual"><scope>CCoins</scope><name>FromTx</name></member>
      <member refid="class_c_coins_1a74ddd9230570c084ea56feaf4b9d7e06" prot="public" virt="non-virtual"><scope>CCoins</scope><name>GetSerializeSize</name></member>
      <member refid="class_c_coins_1a69bdcbac02e1644cb02b2645068777b5" prot="public" virt="non-virtual"><scope>CCoins</scope><name>IsAvailable</name></member>
      <member refid="class_c_coins_1a5dda8b622fd4ebd48d382ea6be0db3c6" prot="public" virt="non-virtual"><scope>CCoins</scope><name>IsCoinBase</name></member>
      <member refid="class_c_coins_1af28a2e44f0b41c3a4a6366607b4b8f81" prot="public" virt="non-virtual"><scope>CCoins</scope><name>IsPruned</name></member>
      <member refid="class_c_coins_1af7396dfad71367de46f21cf92e2c70ab" prot="public" virt="non-virtual"><scope>CCoins</scope><name>nHeight</name></member>
      <member refid="class_c_coins_1a96fea4ee8841e9ce32f60c2e7e3cf6b6" prot="public" virt="non-virtual"><scope>CCoins</scope><name>nVersion</name></member>
      <member refid="class_c_coins_1a42ef9fcc8ca59916b5fb69904db1c9bd" prot="public" virt="non-virtual"><scope>CCoins</scope><name>operator!=</name></member>
      <member refid="class_c_coins_1a77593e3db3e4b369c21a91aad2afcc05" prot="public" virt="non-virtual"><scope>CCoins</scope><name>operator==</name></member>
      <member refid="class_c_coins_1a0932a94966083092cbceabec1ef65d73" prot="public" virt="non-virtual"><scope>CCoins</scope><name>Serialize</name></member>
      <member refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" prot="public" virt="non-virtual"><scope>CCoins</scope><name>Spend</name></member>
      <member refid="class_c_coins_1a99210076cac4b1ac521a532d3b5df182" prot="public" virt="non-virtual"><scope>CCoins</scope><name>Spend</name></member>
      <member refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" prot="public" virt="non-virtual"><scope>CCoins</scope><name>swap</name></member>
      <member refid="class_c_coins_1adaa98cb6d8da3a4d573cd799ddd11051" prot="public" virt="non-virtual"><scope>CCoins</scope><name>Unserialize</name></member>
      <member refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" prot="public" virt="non-virtual"><scope>CCoins</scope><name>vout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
