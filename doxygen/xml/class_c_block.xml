<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_block" kind="class" language="C++" prot="public">
    <compoundname>CBlock</compoundname>
    <basecompoundref refid="class_c_block_header" prot="public" virt="non-virtual">CBlockHeader</basecompoundref>
    <includes refid="primitives_2block_8h" local="no">block.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_block_1a9b6508d662722775f3029b980b382b66" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &gt;</type>
        <definition>std::vector&lt;CTransaction&gt; CBlock::vtx</definition>
        <argsstring></argsstring>
        <name>vtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="107" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="107" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1a9532c041d24701a338ea5c91008b72aa" compoundref="chain_8cpp" startline="191" endline="214">DisconnectBlock</referencedby>
        <referencedby refid="class_c_block_1aea2c77ad84cd7909720f75a0c3f7ddc2" compoundref="chain_8cpp" startline="250" endline="295">RebuildAddressIndex</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">ConnectBlock</referencedby>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CheckBlock</referencedby>
        <referencedby refid="class_c_block_index_1a59e8716601432cd20856d45bc2f10633" compoundref="chain_8h" startline="186" endline="218">CBlockIndex::CBlockIndex</referencedby>
        <referencedby refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" compoundref="main_8cpp" startline="786" endline="829">CMerkleTx::SetMerkleBranch</referencedby>
        <referencedby refid="main_8h_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="miner_8h_1a6f07c738a8aadffe748358e985b43d3f" compoundref="miner_8cpp" startline="383" endline="399">IncrementExtraNonce</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" compoundref="block_8cpp" startline="10" endline="50">CheckBlockSignature</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">ToString</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a0ccac8f2681d64203d20324d6c06f2e3" compoundref="rpcwallet_8cpp" startline="2580" endline="2645">scanforstealthtxns</referencedby>
        <referencedby refid="stormnode-payments_8h_1a775fd7f6eef6c395268172c278b9100b" compoundref="stormnode-payments_8cpp" startline="185" endline="228">IsBlockValueValid</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
        <referencedby refid="class_c_wallet_1a979a17e80e4897ed1f4ae9a4be7c493c" compoundref="wallet_8cpp" startline="1124" endline="1151">CWallet::ScanForWalletTransactions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CBlock::vchBlockSig</definition>
        <argsstring></argsstring>
        <name>vchBlockSig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="110" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" compoundref="block_8cpp" startline="10" endline="50">CheckBlockSignature</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">ToString</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_1a1604a6d25f313ab1bf4e3777a6cba948" prot="public" static="no" mutable="yes">
        <type><ref refid="class_c_script" kindref="compound">CScript</ref></type>
        <definition>CScript CBlock::payee</definition>
        <argsstring></argsstring>
        <name>payee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="113" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_1a019ae6579acd08974653d3f443dd398a" prot="public" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="classuint256" kindref="compound">uint256</ref> &gt;</type>
        <definition>std::vector&lt;uint256&gt; CBlock::vMerkleTree</definition>
        <argsstring></argsstring>
        <name>vMerkleTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="114" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">ToString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_1a53ba28b86cf6c5b1de640941786fa3b8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CBlock::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_block_1aaaf8819d785559699cffbbfccb37a3b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBlock::CBlock</definition>
        <argsstring>()</argsstring>
        <name>CBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="116" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="116" bodyend="119"/>
        <references refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">SetNull</references>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">ConnectBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1aaeb7e05f86d36f481bbc2802768256bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBlock::CBlock</definition>
        <argsstring>(const CBlockHeader &amp;header)</argsstring>
        <name>CBlock</name>
        <param>
          <type>const <ref refid="class_c_block_header" kindref="compound">CBlockHeader</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="121" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="121" bodyend="125"/>
        <references refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">SetNull</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBlock::SetNull</definition>
        <argsstring>()</argsstring>
        <name>SetNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="127" bodyend="140"/>
        <references refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" compoundref="primitives_2block_8h" startline="39">CBlockHeader::nVersion</references>
        <references refid="class_c_block_header_1a1da5740e22d124df509383a1ff96eb7c" compoundref="primitives_2block_8h" startline="38">CBlockHeader::CURRENT_VERSION</references>
        <references refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" compoundref="primitives_2block_8h" startline="40">CBlockHeader::hashPrevBlock</references>
        <references refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" compoundref="primitives_2block_8h" startline="41">CBlockHeader::hashMerkleRoot</references>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" compoundref="primitives_2block_8h" startline="44">CBlockHeader::nNonce</references>
        <references refid="class_c_block_header_1af07deb221708fa7a992e65ec20d13534" compoundref="primitives_2block_8h" startline="47">CBlockHeader::nDoS</references>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">ReadFromDisk</referencedby>
        <referencedby refid="class_c_block_1aaaf8819d785559699cffbbfccb37a3b6" compoundref="primitives_2block_8h" startline="116" endline="119">CBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1aa83bbf64300154e8919249f7778f4c17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CBlock::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="145" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="145" bodyend="158"/>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa4f355599a80a433c2b6d27f236eb420a" compoundref="serialize_8h" startline="94">SER_BLOCKHEADERONLY</references>
        <references refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" compoundref="serialize_8h" startline="101">READWRITE</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CBlock::UpdateTime</definition>
        <argsstring>(const CBlockIndex *pindexPrev)</argsstring>
        <name>UpdateTime</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="160" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.cpp" bodystart="52" bodyend="55"/>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1aa3e358ffbd3c15aa937fd8a4f8cdf0d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CBlock::GetStakeEntropyBit</definition>
        <argsstring>() const </argsstring>
        <name>GetStakeEntropyBit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="163" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="163" bodyend="169"/>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="classbase__uint_1a0cb831d93f1580c1355b9665c21629f2" compoundref="uint256_8h" startline="266" endline="269">base_uint&lt; BITS &gt;::Get64</references>
        <references refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">ToString</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::IsProofOfStake</definition>
        <argsstring>() const </argsstring>
        <name>IsProofOfStake</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="172" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="172" bodyend="175"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">ConnectBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CheckBlock</referencedby>
        <referencedby refid="class_c_block_index_1a59e8716601432cd20856d45bc2f10633" compoundref="chain_8h" startline="186" endline="218">CBlockIndex::CBlockIndex</referencedby>
        <referencedby refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" compoundref="primitives_2block_8h" startline="177" endline="180">IsProofOfWork</referencedby>
        <referencedby refid="class_c_block_1aee66480cbb9bc01b5f1d27e6ab71f512" compoundref="primitives_2block_8h" startline="182" endline="185">GetProofOfStake</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::IsProofOfWork</definition>
        <argsstring>() const </argsstring>
        <name>IsProofOfWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="177" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="177" bodyend="180"/>
        <references refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" compoundref="primitives_2block_8h" startline="172" endline="175">IsProofOfStake</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">ConnectBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CheckBlock</referencedby>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">ReadFromDisk</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" compoundref="block_8cpp" startline="10" endline="50">CheckBlockSignature</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1aee66480cbb9bc01b5f1d27e6ab71f512" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="class_c_out_point" kindref="compound">COutPoint</ref>, unsigned int &gt;</type>
        <definition>std::pair&lt;COutPoint, unsigned int&gt; CBlock::GetProofOfStake</definition>
        <argsstring>() const </argsstring>
        <name>GetProofOfStake</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="182" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="182" bodyend="185"/>
        <references refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" compoundref="primitives_2block_8h" startline="172" endline="175">IsProofOfStake</references>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1afea5a853e484ab34d8b5fcb9faaf6c49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CBlock::GetMaxTransactionTime</definition>
        <argsstring>() const </argsstring>
        <name>GetMaxTransactionTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="188" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="188" bodyend="194"/>
        <references refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" compoundref="transaction_8h" startline="260">CTransaction::nTime</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CBlock::BuildMerkleTree</definition>
        <argsstring>() const </argsstring>
        <name>BuildMerkleTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="196" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="196" bodyend="213"/>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" compoundref="util_8h" startline="45">BEGIN</references>
        <references refid="util_8h_1ac32457d3f041434e57a2924847796fda" compoundref="util_8h" startline="46">END</references>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CheckBlock</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_block_1ad857691c46c20eee278c083f7513d0f6" compoundref="primitives_2block_8h" startline="215" endline="229">GetMerkleBranch</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="miner_8h_1a6f07c738a8aadffe748358e985b43d3f" compoundref="miner_8cpp" startline="383" endline="399">IncrementExtraNonce</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1ad857691c46c20eee278c083f7513d0f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classuint256" kindref="compound">uint256</ref> &gt;</type>
        <definition>std::vector&lt;uint256&gt; CBlock::GetMerkleBranch</definition>
        <argsstring>(int nIndex) const </argsstring>
        <name>GetMerkleBranch</name>
        <param>
          <type>int</type>
          <declname>nIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="215" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="215" bodyend="229"/>
        <references refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">BuildMerkleTree</references>
        <referencedby refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" compoundref="main_8cpp" startline="786" endline="829">CMerkleTx::SetMerkleBranch</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::WriteToDisk</definition>
        <argsstring>(unsigned int &amp;nFileRet, unsigned int &amp;nBlockPosRet)</argsstring>
        <name>WriteToDisk</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>nFileRet</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>nBlockPosRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="246" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="830" bodyend="854"/>
        <references refid="chain_8cpp_1a62302a7b63a33b410581fccd0152df1e" compoundref="chain_8cpp" startline="639" endline="658">AppendBlockFile</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="class_c_auto_file_1a883a261f0d7d0320f72152ff2167fd24" compoundref="streams_8h" startline="404" endline="408">CAutoFile::GetSerializeSize</references>
        <references refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" compoundref="serialize_8h" startline="329">FLATDATA</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="util_8cpp_1a7572b77c2a5191de8d40d4050322ab84" compoundref="util_8cpp" startline="1294" endline="1302">FileCommit</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">AcceptBlock</referencedby>
        <referencedby refid="main_8h_1a367f303d34b8a5501ac4d77bebab578c" compoundref="main_8cpp" startline="2068" endline="2104">LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::ReadFromDisk</definition>
        <argsstring>(unsigned int nFile, unsigned int nBlockPos, bool fReadTransactions=true)</argsstring>
        <name>ReadFromDisk</name>
        <param>
          <type>unsigned int</type>
          <declname>nFile</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBlockPos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fReadTransactions</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="248" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="856" bodyend="880"/>
        <references refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">SetNull</references>
        <references refid="main_8cpp_1a4728972adc7d389a00a7f7333b74b71d" compoundref="main_8cpp" startline="4036" endline="4052">OpenBlockFile</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="class_c_auto_file_1a39ca705ff45e36a05acd5df3c4114aef" compoundref="streams_8h" startline="327">CAutoFile::nType</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa4f355599a80a433c2b6d27f236eb420a" compoundref="serialize_8h" startline="94">SER_BLOCKHEADERONLY</references>
        <references refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" compoundref="primitives_2block_8h" startline="177" endline="180">IsProofOfWork</references>
        <references refid="main_8h_1a20a76dbc6ac5b8a6e0aaef85522b1069" compoundref="block_8cpp" startline="57" endline="71">CheckProofOfWork</references>
        <references refid="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" compoundref="primitives_2block_8h" startline="87" endline="90">CBlockHeader::GetPoWHash</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
        <referencedby refid="class_c_block_1ad31bb55c819816d722ebc0980d85cfc7" compoundref="chain_8cpp" startline="816" endline="828">ReadFromDisk</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" compoundref="kernel_8cpp" startline="328" endline="353">CheckKernel</referencedby>
        <referencedby refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" compoundref="main_8cpp" startline="786" endline="829">CMerkleTx::SetMerkleBranch</referencedby>
        <referencedby refid="class_c_tx_index_1ab6119cf086e8e4b2c690f36c15479220" compoundref="main_8cpp" startline="1540" endline="1554">CTxIndex::GetDepthInMainChain</referencedby>
        <referencedby refid="main_8h_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">SetBestChain</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a63608cf1bb275120194c3b4e070af3d7" compoundref="rpcblockchain_8cpp" startline="229" endline="248">getblock</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a4039f7b3e313c63b81c98e3fc479a117" compoundref="rpcblockchain_8cpp" startline="250" endline="273">getblockbynumber</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a0ccac8f2681d64203d20324d6c06f2e3" compoundref="rpcwallet_8cpp" startline="2580" endline="2645">scanforstealthtxns</referencedby>
        <referencedby refid="smessage_8h_1a440b38f2f513f80283993a2d81e908b5" compoundref="smessage_8cpp" startline="2073" endline="2121">ScanChainForPublicKeys</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
        <referencedby refid="class_c_wallet_1a979a17e80e4897ed1f4ae9a4be7c493c" compoundref="wallet_8cpp" startline="1124" endline="1151">CWallet::ScanForWalletTransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CBlock::ToString</definition>
        <argsstring>() const </argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="250" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.cpp" bodystart="73" bodyend="93"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" compoundref="primitives_2block_8h" startline="39">CBlockHeader::nVersion</references>
        <references refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" compoundref="primitives_2block_8h" startline="40">CBlockHeader::hashPrevBlock</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" compoundref="primitives_2block_8h" startline="41">CBlockHeader::hashMerkleRoot</references>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" compoundref="primitives_2block_8h" startline="44">CBlockHeader::nNonce</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">vtx</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" compoundref="primitives_2block_8h" startline="110">vchBlockSig</references>
        <references refid="class_c_block_1a019ae6579acd08974653d3f443dd398a" compoundref="primitives_2block_8h" startline="114">vMerkleTree</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_block_1aa3e358ffbd3c15aa937fd8a4f8cdf0d7" compoundref="primitives_2block_8h" startline="163" endline="169">GetStakeEntropyBit</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a9532c041d24701a338ea5c91008b72aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::DisconnectBlock</definition>
        <argsstring>(CTxDB &amp;txdb, CBlockIndex *pindex)</argsstring>
        <name>DisconnectBlock</name>
        <param>
          <type><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref> &amp;</type>
          <declname>txdb</declname>
        </param>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="252" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="191" bodyend="214"/>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">vtx</references>
        <references refid="class_c_transaction_po_s_1a7bdd6909103ec8da895172cf7dfe6a0a" compoundref="main_8cpp" startline="3712" endline="3744">CTransactionPoS::DisconnectInputs</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_disk_block_index_1a0dda572f44335a5317de18001c3594a8" compoundref="chain_8h" startline="338">CDiskBlockIndex::hashNext</references>
        <references refid="class_c_tx_d_b_1a56f170187a609bd747c29b3a4adddd8e" compoundref="txdb-leveldb_8cpp" startline="292" endline="295">CTxDB::WriteBlockIndex</references>
        <references refid="main_8cpp_1ac79dd0809b8f21bd8d861dfcfc4a7fb3" compoundref="main_8cpp" startline="250" endline="252">SyncWithWallets</references>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::ConnectBlock</definition>
        <argsstring>(CTxDB &amp;txdb, CBlockIndex *pindex, bool fJustCheck=false)</argsstring>
        <name>ConnectBlock</name>
        <param>
          <type><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref> &amp;</type>
          <declname>txdb</declname>
        </param>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fJustCheck</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="253" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="299" bodyend="490"/>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CheckBlock</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaaf5285ebdd78ad81c50c4230cc4899a6a" compoundref="script_8h" startline="102">SCRIPT_VERIFY_NOCACHE</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaa02e26973bd44ecd8dfcf135f799bf693" compoundref="script_8h" startline="120">SCRIPT_VERIFY_NULLDUMMY</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaa7cae377bd68b4e2da8f33283cec5dda8" compoundref="script_8h" startline="109">SCRIPT_VERIFY_STRICTENC</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaab2898a68578befcca918b3ebc610548e" compoundref="script_8h" startline="141">SCRIPT_VERIFY_ALLOW_EMPTY_SIG</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaa020f2f4cac918323cf03ff2060cbe286" compoundref="script_8h" startline="142">SCRIPT_VERIFY_FIX_HASHTYPE</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaa5fd9da5fae3b94c839682742c8edf49e" compoundref="script_8h" startline="143">SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY</references>
        <references refid="class_c_block_index_1af8de5426e2da2c78e1e7729a89a7670a" compoundref="chain_8h" startline="114">CBlockIndex::nBlockPos</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <references refid="class_c_block_1aaaf8819d785559699cffbbfccb37a3b6" compoundref="primitives_2block_8h" startline="116" endline="119">CBlock</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" compoundref="serialize_8h" startline="183" endline="189">GetSizeOfCompactSize</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">vtx</references>
        <references refid="util_8h_1a0c5a06b50cd805b1923552114494c029" compoundref="util_8h" startline="389" endline="393">GetTimeMicros</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="main_8cpp_1ad2eaf4f8542c12ea9ee1183609cc6d1a" compoundref="main_8cpp" startline="756" endline="768">GetLegacySigOpCount</references>
        <references refid="class_c_block_header_1a514e4d5250fa700272ac467fecf7fa7b" compoundref="primitives_2block_8h" startline="48" endline="48">CBlockHeader::DoS</references>
        <references refid="class_c_block_index_1a3bf9ecd8938c42be6a4b14d3c7ef5c21" compoundref="chain_8h" startline="113">CBlockIndex::nFile</references>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_po_s_1ad85303c69a61f41eb8874f07c15faa10" compoundref="main_8cpp" startline="3635" endline="3647">CTransactionPoS::GetValueOut</references>
        <references refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" compoundref="main_8cpp" startline="3747" endline="3817">CTransactionPoS::FetchInputs</references>
        <references refid="main_8cpp_1a519cfd439598a8bf64fe5503aa74cfcb" compoundref="main_8cpp" startline="770" endline="784">GetP2SHSigOpCount</references>
        <references refid="class_c_transaction_po_s_1ac2c734d9f302dda6e8681ce6d0f7843e" compoundref="main_8cpp" startline="3832" endline="3844">CTransactionPoS::GetValueIn</references>
        <references refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" compoundref="transaction_8h" startline="319" endline="323">CTransaction::IsCoinStake</references>
        <references refid="class_c_transaction_po_s_1a19de7fad0cc156ebd4e5a3858db7619f" compoundref="main_8cpp" startline="3846" endline="3971">CTransactionPoS::ConnectInputs</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" compoundref="primitives_2block_8h" startline="177" endline="180">IsProofOfWork</references>
        <references refid="main_8cpp_1a54eeb686375f66683fb139de496c088d" compoundref="main_8cpp" startline="1662" endline="1675">GetProofOfWorkReward</references>
        <references refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" compoundref="primitives_2block_8h" startline="172" endline="175">IsProofOfStake</references>
        <references refid="class_c_block_index_1a6559fddea3401548ae144e870d150359" compoundref="chain_8h" startline="118">CBlockIndex::nMint</references>
        <references refid="class_c_block_index_1a309fdc44d871b336abe64eadf250cafd" compoundref="chain_8h" startline="119">CBlockIndex::nMoneySupply</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_tx_d_b_1a56f170187a609bd747c29b3a4adddd8e" compoundref="txdb-leveldb_8cpp" startline="292" endline="295">CTxDB::WriteBlockIndex</references>
        <references refid="class_c_tx_d_b_1a62fb371022854dc8cb247bed36302df2" compoundref="txdb-leveldb_8cpp" startline="241" endline="244">CTxDB::UpdateTxIndex</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="class_c_tx_d_b_1aa661acc6807641aa0b27c41864c3102c" compoundref="txdb-leveldb_8cpp" startline="208" endline="228">CTxDB::WriteAddrIndex</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_disk_block_index_1a0dda572f44335a5317de18001c3594a8" compoundref="chain_8h" startline="338">CDiskBlockIndex::hashNext</references>
        <references refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" compoundref="chain_8h" startline="233" endline="236">CBlockIndex::GetBlockHash</references>
        <references refid="main_8cpp_1ac79dd0809b8f21bd8d861dfcfc4a7fb3" compoundref="main_8cpp" startline="250" endline="252">SyncWithWallets</references>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1ad31bb55c819816d722ebc0980d85cfc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::ReadFromDisk</definition>
        <argsstring>(const CBlockIndex *pindex, bool fReadTransactions=true)</argsstring>
        <name>ReadFromDisk</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fReadTransactions</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="254" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="816" bodyend="828"/>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">ReadFromDisk</references>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::SetBestChain</definition>
        <argsstring>(CTxDB &amp;txdb, CBlockIndex *pindexNew)</argsstring>
        <name>SetBestChain</name>
        <param>
          <type><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref> &amp;</type>
          <declname>txdb</declname>
        </param>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexNew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="255" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4125" bodyend="4242"/>
        <references refid="class_c_tx_d_b_1af3c27c5cb8f922b5c03840feda844016" compoundref="txdb-leveldb_8cpp" startline="144" endline="149">CTxDB::TxnBegin</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1a40411665bb7ca75a8758d33594901e91" compoundref="chainparams_8h" startline="55" endline="55">CChainParams::HashGenesisBlock</references>
        <references refid="class_c_tx_d_b_1a2cf58de69c1c07e500a1f8d0b0709476" compoundref="txdb-leveldb_8cpp" startline="302" endline="305">CTxDB::WriteHashBestChain</references>
        <references refid="class_c_tx_d_b_1aff04f078df2fc3640d559ce62fc9a6a2" compoundref="txdb-leveldb_8cpp" startline="151" endline="162">CTxDB::TxnCommit</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1aa11268e5a01c5a7d33fb313fb0494015" compoundref="chain_8h" startline="115">CBlockIndex::nChainTrust</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="chain_8cpp_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</references>
        <references refid="class_c_tx_d_b_1ac984bce763c97af6fd90f3056367b521" compoundref="txdb-leveldb_8h" startline="175" endline="180">CTxDB::TxnAbort</references>
        <references refid="chain_8cpp_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">ReadFromDisk</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="chain_8h_1a5f1b54ddbc71601bb0c66ef701e02663">pblockindexFBBHLast</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="class_c_big_num_1adca0fa61568497152375328deef6c895" compoundref="bignum_8h" startline="376" endline="400">CBigNum::ToString</references>
        <references refid="classbase__uint_1a0cb831d93f1580c1355b9665c21629f2" compoundref="uint256_8h" startline="266" endline="269">base_uint&lt; BITS &gt;::Get64</references>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
        <references refid="main_8cpp_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1a45126301a0a6e26010527a7bbfc1ef58" compoundref="chain_8h" startline="139">CBlockIndex::nVersion</references>
        <references refid="class_c_block_header_1a1da5740e22d124df509383a1ff96eb7c" compoundref="primitives_2block_8h" startline="38">CBlockHeader::CURRENT_VERSION</references>
        <references refid="util_8cpp_1a396fd0b4e52260e1ddf379fa6e09d887" compoundref="util_8cpp" startline="104">strMiscWarning</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
        <references refid="util_8cpp_1adf94c00a5ac719c92a2f1bb2f8b2167f" compoundref="util_8cpp" startline="1434" endline="1439">runCommand</references>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::AddToBlockIndex</definition>
        <argsstring>(unsigned int nFile, unsigned int nBlockPos, const uint256 &amp;hashProof)</argsstring>
        <name>AddToBlockIndex</name>
        <param>
          <type>unsigned int</type>
          <declname>nFile</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBlockPos</declname>
        </param>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashProof</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="256" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4244" bodyend="4311"/>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_block_index_1afac8099e03ffda463c7153ca82d37b66" compoundref="chain_8h" startline="110">CBlockIndex::phashBlock</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1aa11268e5a01c5a7d33fb313fb0494015" compoundref="chain_8h" startline="115">CBlockIndex::nChainTrust</references>
        <references refid="class_c_block_index_1ab8cb2abace4e5b6dd405e85f66f17f9a" compoundref="chain_8cpp" startline="615" endline="624">CBlockIndex::GetBlockTrust</references>
        <references refid="class_c_block_index_1a7a161878ce10e36cf7c12004f31357cf" compoundref="chain_8h" startline="296" endline="302">CBlockIndex::SetStakeEntropyBit</references>
        <references refid="class_c_block_index_1a553e6fc301e8130118d7ec68dce91ee9" compoundref="chain_8h" startline="136">CBlockIndex::hashProof</references>
        <references refid="kernel_8cpp_1aa58b095aa0abb6f956cc68169124099a" compoundref="kernel_8cpp" startline="111" endline="189">ComputeNextStakeModifier</references>
        <references refid="class_c_block_index_1acc51fc41aa2b57c4f700aa09cdde92f8" compoundref="chain_8h" startline="309" endline="314">CBlockIndex::SetStakeModifier</references>
        <references refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" compoundref="chain_8h" startline="130">CBlockIndex::bnStakeModifierV2</references>
        <references refid="kernel_8cpp_1ae7cea47493b7e179fe492df175c9cfdc" compoundref="kernel_8cpp" startline="196" endline="204">ComputeStakeModifierV2</references>
        <references refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" compoundref="chain_8h" startline="281" endline="284">CBlockIndex::IsProofOfStake</references>
        <references refid="class_c_block_index_1ac2c040d5e3db73a5ceb87ee4095a405f" compoundref="chain_8h" startline="133">CBlockIndex::prevoutStake</references>
        <references refid="class_c_block_index_1ae6870336a5bf237680502fa067262af8" compoundref="chain_8h" startline="134">CBlockIndex::nStakeTime</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_tx_d_b_1af3c27c5cb8f922b5c03840feda844016" compoundref="txdb-leveldb_8cpp" startline="144" endline="149">CTxDB::TxnBegin</references>
        <references refid="class_c_tx_d_b_1a56f170187a609bd747c29b3a4adddd8e" compoundref="txdb-leveldb_8cpp" startline="292" endline="295">CTxDB::WriteBlockIndex</references>
        <references refid="class_c_tx_d_b_1aff04f078df2fc3640d559ce62fc9a6a2" compoundref="txdb-leveldb_8cpp" startline="151" endline="162">CTxDB::TxnCommit</references>
        <references refid="classuint256_1a2ed8bd4e54421a37430768374a7e91b3" compoundref="uint256_8cpp" startline="339" endline="357">uint256::GetHash</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">AcceptBlock</referencedby>
        <referencedby refid="main_8h_1a367f303d34b8a5501ac4d77bebab578c" compoundref="main_8cpp" startline="2068" endline="2104">LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1aa735790178f95defd59f984dd51bc0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::CheckBlock</definition>
        <argsstring>(CValidationState &amp;state, bool fCheckPOW=true, bool fCheckMerkleRoot=true, bool fCheckSig=true)</argsstring>
        <name>CheckBlock</name>
        <param>
          <type><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fCheckPOW</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>fCheckMerkleRoot</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>fCheckSig</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="257" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="678" bodyend="789"/>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">vtx</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="class_c_block_header_1a514e4d5250fa700272ac467fecf7fa7b" compoundref="primitives_2block_8h" startline="48" endline="48">CBlockHeader::DoS</references>
        <references refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" compoundref="primitives_2block_8h" startline="177" endline="180">IsProofOfWork</references>
        <references refid="main_8h_1a20a76dbc6ac5b8a6e0aaef85522b1069" compoundref="block_8cpp" startline="57" endline="71">CheckProofOfWork</references>
        <references refid="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" compoundref="primitives_2block_8h" startline="87" endline="90">CBlockHeader::GetPoWHash</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="primitives_2block_8h_1a92e30c263b07cab75b295dafda535302" compoundref="primitives_2block_8h" startline="22" endline="22">FutureDrift</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" compoundref="primitives_2block_8h" startline="172" endline="175">IsProofOfStake</references>
        <references refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" compoundref="block_8cpp" startline="10" endline="50">CheckBlockSignature</references>
        <references refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" compoundref="spork_8cpp" startline="82" endline="102">IsSporkActive</references>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" compoundref="instantx_8cpp" startline="27">mapLockedInputs</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_transaction_1afa2875bea30d31900a30baf7fd56b96b" compoundref="transaction_8cpp" startline="49" endline="98">CTransaction::CheckTransaction</references>
        <references refid="class_c_transaction_1a2a1fd6929add85d3df299249da78d015" compoundref="transaction_8h" startline="266">CTransaction::nDoS</references>
        <references refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" compoundref="transaction_8h" startline="260">CTransaction::nTime</references>
        <references refid="main_8cpp_1ad2eaf4f8542c12ea9ee1183609cc6d1a" compoundref="main_8cpp" startline="756" endline="768">GetLegacySigOpCount</references>
        <references refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" compoundref="primitives_2block_8h" startline="41">CBlockHeader::hashMerkleRoot</references>
        <references refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">BuildMerkleTree</references>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">ConnectBlock</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::AcceptBlock</definition>
        <argsstring>()</argsstring>
        <name>AcceptBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="258" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="92" bodyend="189"/>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" compoundref="primitives_2block_8h" startline="39">CBlockHeader::nVersion</references>
        <references refid="class_c_block_header_1a1da5740e22d124df509383a1ff96eb7c" compoundref="primitives_2block_8h" startline="38">CBlockHeader::CURRENT_VERSION</references>
        <references refid="class_c_block_header_1a514e4d5250fa700272ac467fecf7fa7b" compoundref="primitives_2block_8h" startline="48" endline="48">CBlockHeader::DoS</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" compoundref="main_8cpp" startline="59">mapBlockIndex</references>
        <references refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" compoundref="primitives_2block_8h" startline="40">CBlockHeader::hashPrevBlock</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" compoundref="primitives_2block_8h" startline="172" endline="175">IsProofOfStake</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1a3cffb9a755e132d5f175bca6448fd13e" compoundref="chainparams_8h" startline="69" endline="69">CChainParams::FirstPOSBlock</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="primitives_2block_8h_1a92e30c263b07cab75b295dafda535302" compoundref="primitives_2block_8h" startline="22" endline="22">FutureDrift</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">vtx</references>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <references refid="kernel_8cpp_1a03754eb0da5023cee284ac6aa68cb4e0" compoundref="kernel_8cpp" startline="323" endline="326">CheckCoinStakeTimestamp</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="main_8cpp_1a868a58404bd61b6a82901f428d152bae" compoundref="main_8cpp" startline="1685" endline="1723">GetNextTargetRequired</references>
        <references refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" compoundref="primitives_2block_8h" startline="177" endline="180">IsProofOfWork</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_block_index_1a52a53d7e151aba62e32ec4ffd165b5a7" compoundref="chain_8h" startline="255" endline="258">CBlockIndex::GetPastTimeLimit</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
        <references refid="main_8cpp_1adc332cd7ac94e639bb4239618341be19" compoundref="main_8cpp" startline="665" endline="681">IsFinalTx</references>
        <references refid="namespace_checkpoints_1a896b098d769129c8e84c511f838baaa7" compoundref="checkpoints_8cpp" startline="37" endline="44">Checkpoints::CheckHardened</references>
        <references refid="kernel_8cpp_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" compoundref="primitives_2block_8h" startline="87" endline="90">CBlockHeader::GetPoWHash</references>
        <references refid="namespace_checkpoints_1ab698c7033e4afdd7f7173bbe22b7c2c5" compoundref="checkpoints_8cpp" startline="80" endline="87">Checkpoints::CheckSync</references>
        <references refid="lz4_8c_1a7d26a1c40d6107cf2f19558492591e67" compoundref="lz4_8c" startline="150">expect</references>
        <references refid="main_8cpp_1a7d4a97e049394047743b48c0cd0f0791" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" compoundref="chain_8cpp" startline="830" endline="854">WriteToDisk</references>
        <references refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" compoundref="main_8cpp" startline="4244" endline="4311">AddToBlockIndex</references>
        <references refid="namespace_checkpoints_1ac4dc0a0ba00009be52fee3eef694c2c0" compoundref="checkpoints_8cpp" startline="46" endline="53">Checkpoints::GetTotalBlocksEstimate</references>
        <references refid="main_8cpp_1ace9c3343567f488a96598abe61e1d309" compoundref="main_8cpp" startline="74">hashBestChain</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="class_c_node_1a597b41bd64e2ac9391b7211e65aeb52a" compoundref="net_8h" startline="284">CNode::nStartingHeight</references>
        <references refid="class_c_node_1a7cef2333aa8776127a7e7fcab659eb6a" compoundref="net_8h" startline="494" endline="501">CNode::PushInventory</references>
        <references refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a4cae15fd207d555331995cd5c57689c1" compoundref="protocol_8h" startline="143">MSG_BLOCK</references>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a5a6b04461fc7ab5b21f00d6c403e35dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::SignBlock</definition>
        <argsstring>(CWallet &amp;keystore, CAmount nFees)</argsstring>
        <name>SignBlock</name>
        <param>
          <type><ref refid="class_c_wallet" kindref="compound">CWallet</ref> &amp;</type>
          <declname>keystore</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>nFees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1a7e0103e7a0117173cb9c975702e06392" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::CheckBlockSignature</definition>
        <argsstring>() const </argsstring>
        <name>CheckBlockSignature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="260" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.cpp" bodystart="10" bodyend="50"/>
        <references refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" compoundref="primitives_2block_8h" startline="177" endline="180">IsProofOfWork</references>
        <references refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" compoundref="primitives_2block_8h" startline="110">vchBlockSig</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">vtx</references>
        <references refid="script_8cpp_1a6ee6be50bff44464e905680c6fcee6dc" compoundref="script_8cpp" startline="2342" endline="2461">Solver</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="script_8h_1a750f89f617f934820d5371be790e09adab6494d355b65e346dac2cc16f901e0d2" compoundref="script_8h" startline="179">TX_PUBKEY</references>
        <references refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" compoundref="pubkey_8cpp" startline="167" endline="185">CPubKey::Verify</references>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" compoundref="script_8h" startline="702" endline="709">CScript::GetOp</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" compoundref="script_8h" startline="241">OP_RETURN</references>
        <references refid="script_8cpp_1a810f9eeea7027cd10732bc82fc21d6e1" compoundref="script_8cpp" startline="342" endline="355">IsCompressedOrUncompressedPubKey</references>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CheckBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_1aea2c77ad84cd7909720f75a0c3f7ddc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CBlock::RebuildAddressIndex</definition>
        <argsstring>(CTxDB &amp;txdb)</argsstring>
        <name>RebuildAddressIndex</name>
        <param>
          <type><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref> &amp;</type>
          <declname>txdb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="261" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="250" bodyend="295"/>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">vtx</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" compoundref="main_8cpp" startline="3747" endline="3817">CTransactionPoS::FetchInputs</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="class_c_tx_d_b_1aa661acc6807641aa0b27c41864c3102c" compoundref="txdb-leveldb_8cpp" startline="208" endline="228">CTxDB::WriteAddrIndex</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_block_1ab0d596c51fb317e3cb6f444015a652a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>static uint256 CBlock::CheckMerkleBranch</definition>
        <argsstring>(uint256 hash, const std::vector&lt; uint256 &gt; &amp;vMerkleBranch, int nIndex)</argsstring>
        <name>CheckMerkleBranch</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classuint256" kindref="compound">uint256</ref> &gt; &amp;</type>
          <declname>vMerkleBranch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="231" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="231" bodyend="244"/>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" compoundref="util_8h" startline="45">BEGIN</references>
        <references refid="util_8h_1ac32457d3f041434e57a2924847796fda" compoundref="util_8h" startline="46">END</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_block_1a82c90ccbecf89a38ff56d8429514e2c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlock::SetBestChainInner</definition>
        <argsstring>(CTxDB &amp;txdb, CBlockIndex *pindexNew)</argsstring>
        <name>SetBestChainInner</name>
        <param>
          <type><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref> &amp;</type>
          <declname>txdb</declname>
        </param>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexNew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="264" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="792" bodyend="814"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2179">
        <label>CBlockHeader</label>
        <link refid="class_c_block_header"/>
      </node>
      <node id="2178">
        <label>CBlock</label>
        <link refid="class_c_block"/>
        <childnode refid="2179" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2183">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="2181">
        <label>CBlockHeader</label>
        <link refid="class_c_block_header"/>
        <childnode refid="2182" relation="usage">
          <edgelabel>hashPrevBlock</edgelabel>
          <edgelabel>hashMerkleRoot</edgelabel>
        </childnode>
      </node>
      <node id="2182">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="2183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2184">
        <label>CScript</label>
        <link refid="class_c_script"/>
        <childnode refid="2185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2185">
        <label>std::vector&lt; unsigned char &gt;</label>
      </node>
      <node id="2180">
        <label>CBlock</label>
        <link refid="class_c_block"/>
        <childnode refid="2181" relation="public-inheritance">
        </childnode>
        <childnode refid="2184" relation="usage">
          <edgelabel>payee</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/primitives/block.h" line="104" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="103" bodyend="265"/>
    <listofallmembers>
      <member refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" prot="public" virt="non-virtual"><scope>CBlock</scope><name>AcceptBlock</name></member>
      <member refid="class_c_block_1a53ba28b86cf6c5b1de640941786fa3b8" prot="public" virt="non-virtual"><scope>CBlock</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" prot="public" virt="non-virtual"><scope>CBlock</scope><name>AddToBlockIndex</name></member>
      <member refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" prot="public" virt="non-virtual"><scope>CBlock</scope><name>BuildMerkleTree</name></member>
      <member refid="class_c_block_1aaaf8819d785559699cffbbfccb37a3b6" prot="public" virt="non-virtual"><scope>CBlock</scope><name>CBlock</name></member>
      <member refid="class_c_block_1aaeb7e05f86d36f481bbc2802768256bc" prot="public" virt="non-virtual"><scope>CBlock</scope><name>CBlock</name></member>
      <member refid="class_c_block_header_1a9afed57bea877bbd25b5eb6740c6990d" prot="public" virt="non-virtual"><scope>CBlock</scope><name>CBlockHeader</name></member>
      <member refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" prot="public" virt="non-virtual"><scope>CBlock</scope><name>CheckBlock</name></member>
      <member refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" prot="public" virt="non-virtual"><scope>CBlock</scope><name>CheckBlockSignature</name></member>
      <member refid="class_c_block_1ab0d596c51fb317e3cb6f444015a652a5" prot="public" virt="non-virtual"><scope>CBlock</scope><name>CheckMerkleBranch</name></member>
      <member refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" prot="public" virt="non-virtual"><scope>CBlock</scope><name>ConnectBlock</name></member>
      <member refid="class_c_block_header_1a1da5740e22d124df509383a1ff96eb7c" prot="public" virt="non-virtual"><scope>CBlock</scope><name>CURRENT_VERSION</name></member>
      <member refid="class_c_block_1a9532c041d24701a338ea5c91008b72aa" prot="public" virt="non-virtual"><scope>CBlock</scope><name>DisconnectBlock</name></member>
      <member refid="class_c_block_header_1a514e4d5250fa700272ac467fecf7fa7b" prot="public" virt="non-virtual"><scope>CBlock</scope><name>DoS</name></member>
      <member refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetBlockTime</name></member>
      <member refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetHash</name></member>
      <member refid="class_c_block_1afea5a853e484ab34d8b5fcb9faaf6c49" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetMaxTransactionTime</name></member>
      <member refid="class_c_block_1ad857691c46c20eee278c083f7513d0f6" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetMerkleBranch</name></member>
      <member refid="class_c_block_header_1a795e040a33329757f6b31dfbcabbb2a5" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetPoWArgonHash</name></member>
      <member refid="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetPoWHash</name></member>
      <member refid="class_c_block_1aee66480cbb9bc01b5f1d27e6ab71f512" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetProofOfStake</name></member>
      <member refid="class_c_block_1aa3e358ffbd3c15aa937fd8a4f8cdf0d7" prot="public" virt="non-virtual"><scope>CBlock</scope><name>GetStakeEntropyBit</name></member>
      <member refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" prot="public" virt="non-virtual"><scope>CBlock</scope><name>hashMerkleRoot</name></member>
      <member refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" prot="public" virt="non-virtual"><scope>CBlock</scope><name>hashPrevBlock</name></member>
      <member refid="class_c_block_header_1a5c179f4a8b5728ba381a26d0450403b8" prot="public" virt="non-virtual"><scope>CBlock</scope><name>IsNull</name></member>
      <member refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" prot="public" virt="non-virtual"><scope>CBlock</scope><name>IsProofOfStake</name></member>
      <member refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" prot="public" virt="non-virtual"><scope>CBlock</scope><name>IsProofOfWork</name></member>
      <member refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" prot="public" virt="non-virtual"><scope>CBlock</scope><name>nBits</name></member>
      <member refid="class_c_block_header_1af07deb221708fa7a992e65ec20d13534" prot="public" virt="non-virtual"><scope>CBlock</scope><name>nDoS</name></member>
      <member refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" prot="public" virt="non-virtual"><scope>CBlock</scope><name>nNonce</name></member>
      <member refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" prot="public" virt="non-virtual"><scope>CBlock</scope><name>nTime</name></member>
      <member refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" prot="public" virt="non-virtual"><scope>CBlock</scope><name>nVersion</name></member>
      <member refid="class_c_block_1a1604a6d25f313ab1bf4e3777a6cba948" prot="public" virt="non-virtual"><scope>CBlock</scope><name>payee</name></member>
      <member refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" prot="public" virt="non-virtual"><scope>CBlock</scope><name>ReadFromDisk</name></member>
      <member refid="class_c_block_1ad31bb55c819816d722ebc0980d85cfc7" prot="public" virt="non-virtual"><scope>CBlock</scope><name>ReadFromDisk</name></member>
      <member refid="class_c_block_1aea2c77ad84cd7909720f75a0c3f7ddc2" prot="public" virt="non-virtual"><scope>CBlock</scope><name>RebuildAddressIndex</name></member>
      <member refid="class_c_block_1aa83bbf64300154e8919249f7778f4c17" prot="public" virt="non-virtual"><scope>CBlock</scope><name>SerializationOp</name></member>
      <member refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" prot="public" virt="non-virtual"><scope>CBlock</scope><name>SetBestChain</name></member>
      <member refid="class_c_block_1a82c90ccbecf89a38ff56d8429514e2c2" prot="private" virt="non-virtual"><scope>CBlock</scope><name>SetBestChainInner</name></member>
      <member refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" prot="public" virt="non-virtual"><scope>CBlock</scope><name>SetNull</name></member>
      <member refid="class_c_block_1a5a6b04461fc7ab5b21f00d6c403e35dd" prot="public" virt="non-virtual"><scope>CBlock</scope><name>SignBlock</name></member>
      <member refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" prot="public" virt="non-virtual"><scope>CBlock</scope><name>ToString</name></member>
      <member refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" prot="public" virt="non-virtual"><scope>CBlock</scope><name>UpdateTime</name></member>
      <member refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" prot="public" virt="non-virtual"><scope>CBlock</scope><name>vchBlockSig</name></member>
      <member refid="class_c_block_1a019ae6579acd08974653d3f443dd398a" prot="public" virt="non-virtual"><scope>CBlock</scope><name>vMerkleTree</name></member>
      <member refid="class_c_block_1a9b6508d662722775f3029b980b382b66" prot="public" virt="non-virtual"><scope>CBlock</scope><name>vtx</name></member>
      <member refid="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" prot="public" virt="non-virtual"><scope>CBlock</scope><name>WriteToDisk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
