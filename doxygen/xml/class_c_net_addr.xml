<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_net_addr" kind="class" language="C++" prot="public">
    <compoundname>CNetAddr</compoundname>
    <derivedcompoundref refid="class_c_service" prot="public" virt="non-virtual">CService</derivedcompoundref>
    <includes refid="netbase_8h" local="no">netbase.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" prot="protected" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char CNetAddr::ip[16]</definition>
        <argsstring>[16]</argsstring>
        <name>ip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="46" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_net_addr_1ab08e22719f96b42c61e998158a895e5f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CNetAddr::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="99" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_net_addr_1ad997a7ab057fbeab1dd6601135f8e02d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CNetAddr::CNetAddr</definition>
        <argsstring>()</argsstring>
        <name>CNetAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="53" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a0af492cd8aca9bbaa3392cdbfbb55681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CNetAddr::CNetAddr</definition>
        <argsstring>(const struct in_addr &amp;ipv4Addr)</argsstring>
        <name>CNetAddr</name>
        <param>
          <type>const struct in_addr &amp;</type>
          <declname>ipv4Addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="54" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="598" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a3549332f92d95ccadf262bdce9f4eacf" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CNetAddr::CNetAddr</definition>
        <argsstring>(const char *pszIp, bool fAllowLookup=false)</argsstring>
        <name>CNetAddr</name>
        <param>
          <type>const char *</type>
          <declname>pszIp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fAllowLookup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="55" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="615" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1ae237602be0e4bce6ff31061270371144" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CNetAddr::CNetAddr</definition>
        <argsstring>(const std::string &amp;strIp, bool fAllowLookup=false)</argsstring>
        <name>CNetAddr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strIp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fAllowLookup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="56" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="623" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1adab412fbc5a9203bea90ae173996ab10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CNetAddr::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="541" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a1c6087345e5ca07a151451cd6deb974f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CNetAddr::SetIP</definition>
        <argsstring>(const CNetAddr &amp;ip)</argsstring>
        <name>SetIP</name>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="58" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="549" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1aa3e44dfd064d9d8da1cb48cdcb7dd231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::SetSpecial</definition>
        <argsstring>(const std::string &amp;strName)</argsstring>
        <name>SetSpecial</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="59" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="560" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a16ff4478f02f06f5a9a038a24d5da2f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsIPv4</definition>
        <argsstring>() const </argsstring>
        <name>IsIPv4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="60" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="636" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a0edb022cd6a186de8099799415409d57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsIPv6</definition>
        <argsstring>() const </argsstring>
        <name>IsIPv6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="641" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC1918</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC1918</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="650" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a639dff0ffea6ad930353784686def39b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC3849</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC3849</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="63" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a3d8e5495fd3a2f92bedf272452a2d4b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC3927</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC3927</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="64" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="658" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a312065a9243977a602412665d6148f26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC3964</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC3964</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="668" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1ac47bf0c27f8026497b1933393a6570ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC4193</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC4193</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="66" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1afc6e370bb97c97f83260bba898ec4731" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC4380</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC4380</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="67" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="679" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1ad69e51fffff5ee9fcabedda51f10a3ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC4843</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC4843</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="68" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="701" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a5cba67eb628ea99ea68addfe14913fa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC4862</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC4862</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="69" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="684" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a8057dbecf9f5b4d33a643990b6eec873" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC6052</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC6052</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="70" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="673" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1ab5d91a88d77777004c8ebd658c8caf54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRFC6145</definition>
        <argsstring>() const </argsstring>
        <name>IsRFC6145</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="71" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="695" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a3fba9e0b18f531c0ed15794a30e8165d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsTor</definition>
        <argsstring>() const </argsstring>
        <name>IsTor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="72" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="706" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a4502c75bf0bf1b5d07738587627288b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsI2P</definition>
        <argsstring>() const </argsstring>
        <name>IsI2P</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="73" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="724" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a6cfa18f323424408cf7ace36c9a7c2e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsLocal</definition>
        <argsstring>() const </argsstring>
        <name>IsLocal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="74" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="729" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a35131b2792434d1c9a860c583b610ab6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsRoutable</definition>
        <argsstring>() const </argsstring>
        <name>IsRoutable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="75" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsValid</definition>
        <argsstring>() const </argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="76" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="754" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1ab6593d2d75ca7cc6f00c2831cc0a8b73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::IsMulticast</definition>
        <argsstring>() const </argsstring>
        <name>IsMulticast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="77" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="748" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a34a4760424f5c51998fc3baf82ccb5c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3" kindref="member">Network</ref></type>
        <definition>enum Network CNetAddr::GetNetwork</definition>
        <argsstring>() const </argsstring>
        <name>GetNetwork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="77" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="800" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1aae906cecdba331389f249a64693895b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CNetAddr::ToString</definition>
        <argsstring>() const </argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="79" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CNetAddr::ToStringIP</definition>
        <argsstring>() const </argsstring>
        <name>ToStringIP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="80" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="822" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a0793d30a6baae6e3d4e06084ec33eddd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CNetAddr::GetByte</definition>
        <argsstring>(int n) const </argsstring>
        <name>GetByte</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="81" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a4c94fea8695ef97adf5b2a18e1074308" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t CNetAddr::GetHash</definition>
        <argsstring>() const </argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="82" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="985" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1aa2e2c78db01a6a27d6a2740f2ba43e90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::GetInAddr</definition>
        <argsstring>(struct in_addr *pipv4Addr) const </argsstring>
        <name>GetInAddr</name>
        <param>
          <type>struct in_addr *</type>
          <declname>pipv4Addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="83" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="882" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1af196f306433562cb088dc83fd314a267" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt; unsigned char &gt; CNetAddr::GetGroup</definition>
        <argsstring>() const </argsstring>
        <name>GetGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="84" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="902" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a3007deff5e9872d620952362ae0ef144" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CNetAddr::GetReachabilityFrom</definition>
        <argsstring>(const CNetAddr *paddrPartner=NULL) const </argsstring>
        <name>GetReachabilityFrom</name>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> *</type>
          <declname>paddrPartner</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates a metric for how reachable (*this) is from a given partner </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="85" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="1007" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a9eae4232457f7659a157467274d1b444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CNetAddr::CNetAddr</definition>
        <argsstring>(const struct in6_addr &amp;pipv6Addr)</argsstring>
        <name>CNetAddr</name>
        <param>
          <type>const struct in6_addr &amp;</type>
          <declname>pipv6Addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="87" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="607" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1add7811be50f5fe60c4fa65b461dea98c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CNetAddr::GetIn6Addr</definition>
        <argsstring>(struct in6_addr *pipv6Addr) const </argsstring>
        <name>GetIn6Addr</name>
        <param>
          <type>struct in6_addr *</type>
          <declname>pipv6Addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="88" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="890" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="class_c_net_addr_1a7c914d155a533f64f8aa0d2f9bfff8a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CNetAddr::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="102" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="102" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_net_addr_1a6cc88956853ab8dc9586d55cda059934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CNetAddr &amp;a, const CNetAddr &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="95" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="855" bodyend="862"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_net_addr_1ac361eb83c41464359dfb1dfc296c3a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CNetAddr &amp;a, const CNetAddr &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="96" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="864" bodyend="871"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_net_addr_1af220590d55a24354e2ba2e547e34fd77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const CNetAddr &amp;a, const CNetAddr &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/netbase.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/netbase.cpp" bodystart="873" bodyend="880"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>IP address (IPv6, or IPv4 using mapped IPv6 range (::FFFF:0:0/96)) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="597">
        <label>CAddress</label>
        <link refid="class_c_address"/>
        <childnode refid="596" relation="public-inheritance">
        </childnode>
      </node>
      <node id="598">
        <label>CAddrInfo</label>
        <link refid="class_c_addr_info"/>
        <childnode refid="597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="595">
        <label>CNetAddr</label>
        <link refid="class_c_net_addr"/>
      </node>
      <node id="596">
        <label>CService</label>
        <link refid="class_c_service"/>
        <childnode refid="595" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/dev/ds-160209/src/netbase.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/netbase.h" bodystart="43" bodyend="111"/>
    <listofallmembers>
      <member refid="class_c_net_addr_1ab08e22719f96b42c61e998158a895e5f" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_net_addr_1ad997a7ab057fbeab1dd6601135f8e02d" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1a0af492cd8aca9bbaa3392cdbfbb55681" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1a3549332f92d95ccadf262bdce9f4eacf" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1ae237602be0e4bce6ff31061270371144" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1a9eae4232457f7659a157467274d1b444" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>CNetAddr</name></member>
      <member refid="class_c_net_addr_1a0793d30a6baae6e3d4e06084ec33eddd" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>GetByte</name></member>
      <member refid="class_c_net_addr_1af196f306433562cb088dc83fd314a267" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>GetGroup</name></member>
      <member refid="class_c_net_addr_1a4c94fea8695ef97adf5b2a18e1074308" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>GetHash</name></member>
      <member refid="class_c_net_addr_1add7811be50f5fe60c4fa65b461dea98c" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>GetIn6Addr</name></member>
      <member refid="class_c_net_addr_1aa2e2c78db01a6a27d6a2740f2ba43e90" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>GetInAddr</name></member>
      <member refid="class_c_net_addr_1a34a4760424f5c51998fc3baf82ccb5c8" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>GetNetwork</name></member>
      <member refid="class_c_net_addr_1a3007deff5e9872d620952362ae0ef144" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>GetReachabilityFrom</name></member>
      <member refid="class_c_net_addr_1adab412fbc5a9203bea90ae173996ab10" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>Init</name></member>
      <member refid="class_c_net_addr_1acff7ce68f33f8dfbfe6d79d80928d417" prot="protected" virt="non-virtual"><scope>CNetAddr</scope><name>ip</name></member>
      <member refid="class_c_net_addr_1a4502c75bf0bf1b5d07738587627288b4" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsI2P</name></member>
      <member refid="class_c_net_addr_1a16ff4478f02f06f5a9a038a24d5da2f9" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsIPv4</name></member>
      <member refid="class_c_net_addr_1a0edb022cd6a186de8099799415409d57" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsIPv6</name></member>
      <member refid="class_c_net_addr_1a6cfa18f323424408cf7ace36c9a7c2e2" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsLocal</name></member>
      <member refid="class_c_net_addr_1ab6593d2d75ca7cc6f00c2831cc0a8b73" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsMulticast</name></member>
      <member refid="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC1918</name></member>
      <member refid="class_c_net_addr_1a639dff0ffea6ad930353784686def39b" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC3849</name></member>
      <member refid="class_c_net_addr_1a3d8e5495fd3a2f92bedf272452a2d4b0" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC3927</name></member>
      <member refid="class_c_net_addr_1a312065a9243977a602412665d6148f26" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC3964</name></member>
      <member refid="class_c_net_addr_1ac47bf0c27f8026497b1933393a6570ba" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC4193</name></member>
      <member refid="class_c_net_addr_1afc6e370bb97c97f83260bba898ec4731" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC4380</name></member>
      <member refid="class_c_net_addr_1ad69e51fffff5ee9fcabedda51f10a3ce" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC4843</name></member>
      <member refid="class_c_net_addr_1a5cba67eb628ea99ea68addfe14913fa3" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC4862</name></member>
      <member refid="class_c_net_addr_1a8057dbecf9f5b4d33a643990b6eec873" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC6052</name></member>
      <member refid="class_c_net_addr_1ab5d91a88d77777004c8ebd658c8caf54" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRFC6145</name></member>
      <member refid="class_c_net_addr_1a35131b2792434d1c9a860c583b610ab6" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsRoutable</name></member>
      <member refid="class_c_net_addr_1a3fba9e0b18f531c0ed15794a30e8165d" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsTor</name></member>
      <member refid="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>IsValid</name></member>
      <member refid="class_c_net_addr_1ac361eb83c41464359dfb1dfc296c3a4c" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>operator!=</name></member>
      <member refid="class_c_net_addr_1af220590d55a24354e2ba2e547e34fd77" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>operator&lt;</name></member>
      <member refid="class_c_net_addr_1a6cc88956853ab8dc9586d55cda059934" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>operator==</name></member>
      <member refid="class_c_net_addr_1a7c914d155a533f64f8aa0d2f9bfff8a7" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>SerializationOp</name></member>
      <member refid="class_c_net_addr_1a1c6087345e5ca07a151451cd6deb974f" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>SetIP</name></member>
      <member refid="class_c_net_addr_1aa3e44dfd064d9d8da1cb48cdcb7dd231" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>SetSpecial</name></member>
      <member refid="class_c_net_addr_1aae906cecdba331389f249a64693895b6" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>ToString</name></member>
      <member refid="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" prot="public" virt="non-virtual"><scope>CNetAddr</scope><name>ToStringIP</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
