<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="sigopcount__tests_8cpp" kind="file" language="C++">
    <compoundname>sigopcount_tests.cpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <includes refid="script_8h" local="yes">script.h</includes>
    <includes refid="key_8h" local="yes">key.h</includes>
    <incdepgraph>
      <node id="55877">
        <label>list</label>
      </node>
      <node id="55854">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="55876">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="55842" relation="include">
        </childnode>
        <childnode refid="55852" relation="include">
        </childnode>
        <childnode refid="55833" relation="include">
        </childnode>
      </node>
      <node id="55846">
        <label>limits</label>
      </node>
      <node id="55863">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="55834" relation="include">
        </childnode>
        <childnode refid="55852" relation="include">
        </childnode>
      </node>
      <node id="55864">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="55865" relation="include">
        </childnode>
        <childnode refid="55834" relation="include">
        </childnode>
        <childnode refid="55856" relation="include">
        </childnode>
      </node>
      <node id="55832">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="55833" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
        <childnode refid="55834" relation="include">
        </childnode>
        <childnode refid="55831" relation="include">
        </childnode>
        <childnode refid="55835" relation="include">
        </childnode>
        <childnode refid="55836" relation="include">
        </childnode>
        <childnode refid="55867" relation="include">
        </childnode>
        <childnode refid="55869" relation="include">
        </childnode>
        <childnode refid="55889" relation="include">
        </childnode>
      </node>
      <node id="55888">
        <label>openssl/rand.h</label>
      </node>
      <node id="55849">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="55839">
        <label>assert.h</label>
      </node>
      <node id="55858">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="55859" relation="include">
        </childnode>
        <childnode refid="55833" relation="include">
        </childnode>
      </node>
      <node id="55830">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="55855">
        <label>sys/mman.h</label>
      </node>
      <node id="55852">
        <label>stdlib.h</label>
      </node>
      <node id="55831">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="55887">
        <label>openssl/crypto.h</label>
      </node>
      <node id="55883">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="55860">
        <label>openssl/sha.h</label>
      </node>
      <node id="55845">
        <label>cassert</label>
      </node>
      <node id="55841">
        <label>stdexcept</label>
      </node>
      <node id="55869">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="55870" relation="include">
        </childnode>
        <childnode refid="55871" relation="include">
        </childnode>
        <childnode refid="55872" relation="include">
        </childnode>
        <childnode refid="55842" relation="include">
        </childnode>
        <childnode refid="55873" relation="include">
        </childnode>
        <childnode refid="55876" relation="include">
        </childnode>
        <childnode refid="55843" relation="include">
        </childnode>
        <childnode refid="55877" relation="include">
        </childnode>
        <childnode refid="55878" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
        <childnode refid="55833" relation="include">
        </childnode>
        <childnode refid="55879" relation="include">
        </childnode>
        <childnode refid="55880" relation="include">
        </childnode>
        <childnode refid="55881" relation="include">
        </childnode>
        <childnode refid="55882" relation="include">
        </childnode>
        <childnode refid="55883" relation="include">
        </childnode>
        <childnode refid="55884" relation="include">
        </childnode>
        <childnode refid="55885" relation="include">
        </childnode>
        <childnode refid="55886" relation="include">
        </childnode>
        <childnode refid="55887" relation="include">
        </childnode>
        <childnode refid="55888" relation="include">
        </childnode>
        <childnode refid="55868" relation="include">
        </childnode>
        <childnode refid="55834" relation="include">
        </childnode>
      </node>
      <node id="55882">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="55833">
        <label>string</label>
      </node>
      <node id="55843">
        <label>map</label>
      </node>
      <node id="55879">
        <label>boost/thread.hpp</label>
      </node>
      <node id="55865">
        <label>stddef.h</label>
      </node>
      <node id="55835">
        <label>boost/variant.hpp</label>
      </node>
      <node id="55842">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="55833" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
        <childnode refid="55843" relation="include">
        </childnode>
        <childnode refid="55844" relation="include">
        </childnode>
        <childnode refid="55845" relation="include">
        </childnode>
        <childnode refid="55846" relation="include">
        </childnode>
        <childnode refid="55834" relation="include">
        </childnode>
        <childnode refid="55840" relation="include">
        </childnode>
        <childnode refid="55847" relation="include">
        </childnode>
        <childnode refid="55848" relation="include">
        </childnode>
        <childnode refid="55849" relation="include">
        </childnode>
        <childnode refid="55850" relation="include">
        </childnode>
        <childnode refid="55858" relation="include">
        </childnode>
      </node>
      <node id="55856">
        <label>limits.h</label>
      </node>
      <node id="55872">
        <label>sys/resource.h</label>
      </node>
      <node id="55884">
        <label>openssl/bio.h</label>
      </node>
      <node id="55837">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="55838" relation="include">
        </childnode>
        <childnode refid="55842" relation="include">
        </childnode>
        <childnode refid="55860" relation="include">
        </childnode>
        <childnode refid="55861" relation="include">
        </childnode>
        <childnode refid="55862" relation="include">
        </childnode>
        <childnode refid="55863" relation="include">
        </childnode>
        <childnode refid="55864" relation="include">
        </childnode>
        <childnode refid="55866" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
      </node>
      <node id="55889">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="55869" relation="include">
        </childnode>
        <childnode refid="55842" relation="include">
        </childnode>
        <childnode refid="55852" relation="include">
        </childnode>
        <childnode refid="55890" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
        <childnode refid="55891" relation="include">
        </childnode>
      </node>
      <node id="55870">
        <label>sys/types.h</label>
      </node>
      <node id="55853">
        <label>string.h</label>
      </node>
      <node id="55859">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="55847">
        <label>cstdio</label>
      </node>
      <node id="55886">
        <label>openssl/buffer.h</label>
      </node>
      <node id="55848">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="55881">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="55828">
        <label>/home/dev/ds-160209/src/test/sigopcount_tests.cpp</label>
        <link refid="sigopcount_tests.cpp"/>
        <childnode refid="55829" relation="include">
        </childnode>
        <childnode refid="55830" relation="include">
        </childnode>
        <childnode refid="55831" relation="include">
        </childnode>
        <childnode refid="55832" relation="include">
        </childnode>
        <childnode refid="55892" relation="include">
        </childnode>
      </node>
      <node id="55836">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="55837" relation="include">
        </childnode>
        <childnode refid="55842" relation="include">
        </childnode>
        <childnode refid="55838" relation="include">
        </childnode>
        <childnode refid="55841" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
      </node>
      <node id="55857">
        <label>unistd.h</label>
      </node>
      <node id="55829">
        <label>vector</label>
      </node>
      <node id="55867">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="55842" relation="include">
        </childnode>
        <childnode refid="55838" relation="include">
        </childnode>
        <childnode refid="55868" relation="include">
        </childnode>
        <childnode refid="55841" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
        <childnode refid="55834" relation="include">
        </childnode>
      </node>
      <node id="55861">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="55880">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="55878">
        <label>utility</label>
      </node>
      <node id="55875">
        <label>sstream</label>
      </node>
      <node id="55892">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="55850" relation="include">
        </childnode>
        <childnode refid="55836" relation="include">
        </childnode>
        <childnode refid="55841" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
      </node>
      <node id="55885">
        <label>openssl/evp.h</label>
      </node>
      <node id="55873">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="55845" relation="include">
        </childnode>
        <childnode refid="55874" relation="include">
        </childnode>
        <childnode refid="55875" relation="include">
        </childnode>
        <childnode refid="55841" relation="include">
        </childnode>
      </node>
      <node id="55834">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="55866">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="55834" relation="include">
        </childnode>
        <childnode refid="55865" relation="include">
        </childnode>
        <childnode refid="55856" relation="include">
        </childnode>
      </node>
      <node id="55871">
        <label>sys/time.h</label>
      </node>
      <node id="55874">
        <label>iostream</label>
      </node>
      <node id="55838">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="55839" relation="include">
        </childnode>
        <childnode refid="55840" relation="include">
        </childnode>
        <childnode refid="55841" relation="include">
        </childnode>
        <childnode refid="55834" relation="include">
        </childnode>
        <childnode refid="55833" relation="include">
        </childnode>
        <childnode refid="55829" relation="include">
        </childnode>
      </node>
      <node id="55868">
        <label>openssl/bn.h</label>
      </node>
      <node id="55850">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="55851" relation="include">
        </childnode>
        <childnode refid="55853" relation="include">
        </childnode>
        <childnode refid="55833" relation="include">
        </childnode>
        <childnode refid="55854" relation="include">
        </childnode>
        <childnode refid="55843" relation="include">
        </childnode>
        <childnode refid="55855" relation="include">
        </childnode>
        <childnode refid="55856" relation="include">
        </childnode>
        <childnode refid="55857" relation="include">
        </childnode>
      </node>
      <node id="55844">
        <label>set</label>
      </node>
      <node id="55862">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="55834" relation="include">
        </childnode>
        <childnode refid="55852" relation="include">
        </childnode>
      </node>
      <node id="55890">
        <label>stdio.h</label>
      </node>
      <node id="55851">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="55852" relation="include">
        </childnode>
      </node>
      <node id="55840">
        <label>cstring</label>
      </node>
      <node id="55891">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sigopcount__tests_8cpp_1a7a10311fbdcc22a53daccd568419488a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>static std::vector&lt;unsigned char&gt; Serialize</definition>
        <argsstring>(const CScript &amp;s)</argsstring>
        <name>Serialize</name>
        <param>
          <type>const <ref refid="class_c_script" kindref="compound">CScript</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/sigopcount_tests.cpp" line="12" column="1" bodyfile="/home/dev/ds-160209/src/test/sigopcount_tests.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="sigopcount__tests_8cpp_1aef2e9baa5f7a374852166d1c3945d620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(GetSigOpCount)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>GetSigOpCount</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/sigopcount_tests.cpp" line="20" column="1" bodyfile="/home/dev/ds-160209/src/test/sigopcount_tests.cpp" bodystart="20" bodyend="58"/>
        <references refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" compoundref="script_8cpp" startline="3095" endline="3117">CScript::GetSigOpCount</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda7e89d91965ffa7edb7733a5e9bf8a9f3" compoundref="script_8h" startline="213">OP_1</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda1495bace124dab79e3e9ba54e4b53ca3" compoundref="script_8h" startline="215">OP_2</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda237677a3bb15c383d342aa297e7e9526" compoundref="script_8h" startline="322">OP_CHECKMULTISIG</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda25d6de8236cc98dc5620b85681bf3727" compoundref="script_8h" startline="234">OP_IF</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda2c190c5caf052f92d3d9ac31a0d96151" compoundref="script_8h" startline="320">OP_CHECKSIG</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda44fdbbc64dace53006d9520820cbf20b" compoundref="script_8h" startline="239">OP_ENDIF</references>
        <references refid="class_c_script_1ad1b5a9077241aa06116040c4f1b7c31e" compoundref="script_8cpp" startline="3211" endline="3214">CScript::SetDestination</references>
        <references refid="class_c_script_1a59fd961e1b74202a0951a077b576c0ba" compoundref="script_8h" startline="893" endline="896">CScript::GetID</references>
        <references refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdaccd484dad2223fffdbdc2637c4f1e40e" compoundref="script_8h" startline="206">OP_0</references>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
        <references refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" compoundref="key_8cpp" startline="139" endline="146">CKey::MakeNewKey</references>
        <references refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" compoundref="key_8cpp" startline="169" endline="180">CKey::GetPubKey</references>
        <references refid="class_c_script_1a1bb2091fd110a07fabed259b94589227" compoundref="script_8cpp" startline="3216" endline="3224">CScript::SetMultisig</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/foreach.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="script_8h" kindref="compound">script.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key_8h" kindref="compound">key.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>sSerialized(s);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sSerialized;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">BOOST_AUTO_TEST_SUITE(sigopcount_tests)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="sigopcount__tests_8cpp_1aef2e9baa5f7a374852166d1c3945d620" refkind="member"><highlight class="normal"><ref refid="sigopcount__tests_8cpp_1aef2e9baa5f7a374852166d1c3945d620" kindref="member">BOOST_AUTO_TEST_CASE</ref>(GetSigOpCount)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>CScript::GetSigOpCount()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>s1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(s1.<ref refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" kindref="member">GetSigOpCount</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(s1.<ref refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" kindref="member">GetSigOpCount</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint160" kindref="compound">uint160</ref><sp/>dummy;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda7e89d91965ffa7edb7733a5e9bf8a9f3" kindref="member">OP_1</ref><sp/>&lt;&lt;<sp/>dummy<sp/>&lt;&lt;<sp/>dummy<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda1495bace124dab79e3e9ba54e4b53ca3" kindref="member">OP_2</ref><sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda237677a3bb15c383d342aa297e7e9526" kindref="member">OP_CHECKMULTISIG</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(s1.<ref refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" kindref="member">GetSigOpCount</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda25d6de8236cc98dc5620b85681bf3727" kindref="member">OP_IF</ref><sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda2c190c5caf052f92d3d9ac31a0d96151" kindref="member">OP_CHECKSIG</ref><sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda44fdbbc64dace53006d9520820cbf20b" kindref="member">OP_ENDIF</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(s1.<ref refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" kindref="member">GetSigOpCount</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>3);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(s1.<ref refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" kindref="member">GetSigOpCount</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>21);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>p2sh;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>p2sh.<ref refid="class_c_script_1ad1b5a9077241aa06116040c4f1b7c31e" kindref="member">SetDestination</ref>(s1.<ref refid="class_c_script_1a59fd961e1b74202a0951a077b576c0ba" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptSig;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptSig<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdaccd484dad2223fffdbdc2637c4f1e40e" kindref="member">OP_0</ref><sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(s1);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(scriptSig),<sp/>3);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CPubKey&gt;<sp/>keys;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>k;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k.<ref refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" kindref="member">MakeNewKey</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keys.push_back(k.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>s2;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>s2.<ref refid="class_c_script_1a1bb2091fd110a07fabed259b94589227" kindref="member">SetMultisig</ref>(1,<sp/>keys);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(s2.<ref refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" kindref="member">GetSigOpCount</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>3);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(s2.<ref refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" kindref="member">GetSigOpCount</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>20);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>p2sh.SetDestination(s2.<ref refid="class_c_script_1a59fd961e1b74202a0951a077b576c0ba" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptSig2;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptSig2<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda7e89d91965ffa7edb7733a5e9bf8a9f3" kindref="member">OP_1</ref><sp/>&lt;&lt;<sp/>dummy<sp/>&lt;&lt;<sp/>dummy<sp/>&lt;&lt;<sp/>Serialize(s2);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(scriptSig2),<sp/>3);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/sigopcount_tests.cpp"/>
  </compounddef>
</doxygen>
