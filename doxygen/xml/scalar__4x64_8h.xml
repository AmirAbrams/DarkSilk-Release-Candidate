<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="scalar__4x64_8h" kind="file" language="C++">
    <compoundname>scalar_4x64.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <incdepgraph>
      <node id="22637">
        <label>/home/dev/ds-160209/src/secp256k1/src/scalar_4x64.h</label>
        <link refid="scalar_4x64.h"/>
        <childnode refid="22638" relation="include">
        </childnode>
      </node>
      <node id="22638">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structsecp256k1__scalar" prot="public">secp256k1_scalar</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="scalar__4x64_8h_1aacfea2d1debc522154567ac4ac7b4fc9" prot="public" static="no">
        <name>SECP256K1_SCALAR_CONST</name>
        <param><defname>d7</defname></param>
        <param><defname>d6</defname></param>
        <param><defname>d5</defname></param>
        <param><defname>d4</defname></param>
        <param><defname>d3</defname></param>
        <param><defname>d2</defname></param>
        <param><defname>d1</defname></param>
        <param><defname>d0</defname></param>
        <initializer>{{((<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(d1)) &lt;&lt; 32 | (d0), ((<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(d3)) &lt;&lt; 32 | (d2), ((<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(d5)) &lt;&lt; 32 | (d4), ((<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(d7)) &lt;&lt; 32 | (d6)}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_4x64.h" line="17" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_4x64.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_SCALAR_REPR_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SECP256K1_SCALAR_REPR_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structsecp256k1__scalar" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14" refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>d[4];</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}<sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="scalar__4x64_8h_1aacfea2d1debc522154567ac4ac7b4fc9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_SCALAR_CONST(d7,<sp/>d6,<sp/>d5,<sp/>d4,<sp/>d3,<sp/>d2,<sp/>d1,<sp/>d0)<sp/>{{((uint64_t)(d1))<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>(d0),<sp/>((uint64_t)(d3))<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>(d2),<sp/>((uint64_t)(d5))<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>(d4),<sp/>((uint64_t)(d7))<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>(d6)}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_4x64.h"/>
  </compounddef>
</doxygen>
