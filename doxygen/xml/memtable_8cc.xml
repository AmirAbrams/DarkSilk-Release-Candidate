<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="memtable_8cc" kind="file" language="C++">
    <compoundname>memtable.cc</compoundname>
    <includes refid="memtable_8h" local="yes">db/memtable.h</includes>
    <includes refid="dbformat_8h" local="yes">db/dbformat.h</includes>
    <includes refid="comparator_8h" local="yes">leveldb/comparator.h</includes>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="iterator_8h" local="yes">leveldb/iterator.h</includes>
    <includes refid="coding_8h" local="yes">util/coding.h</includes>
    <incdepgraph>
      <node id="7370">
        <label>stdarg.h</label>
      </node>
      <node id="7364">
        <label>db/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="7352" relation="include">
        </childnode>
        <childnode refid="7365" relation="include">
        </childnode>
        <childnode refid="7362" relation="include">
        </childnode>
        <childnode refid="7366" relation="include">
        </childnode>
        <childnode refid="7368" relation="include">
        </childnode>
      </node>
      <node id="7368">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="7348" relation="include">
        </childnode>
      </node>
      <node id="7363">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7362" relation="include">
        </childnode>
      </node>
      <node id="7352">
        <label>assert.h</label>
      </node>
      <node id="7356">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="7353" relation="include">
        </childnode>
      </node>
      <node id="7366">
        <label>util/arena.h</label>
        <link refid="arena_8h"/>
        <childnode refid="7367" relation="include">
        </childnode>
        <childnode refid="7352" relation="include">
        </childnode>
        <childnode refid="7353" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
      </node>
      <node id="7365">
        <label>stdlib.h</label>
      </node>
      <node id="7357">
        <label>db/dbformat.h</label>
        <link refid="dbformat_8h"/>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7358" relation="include">
        </childnode>
        <childnode refid="7347" relation="include">
        </childnode>
        <childnode refid="7359" relation="include">
        </childnode>
        <childnode refid="7351" relation="include">
        </childnode>
        <childnode refid="7360" relation="include">
        </childnode>
        <childnode refid="7361" relation="include">
        </childnode>
        <childnode refid="7363" relation="include">
        </childnode>
      </node>
      <node id="7347">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7350" relation="include">
        </childnode>
        <childnode refid="7356" relation="include">
        </childnode>
      </node>
      <node id="7346">
        <label>string</label>
      </node>
      <node id="7353">
        <label>stddef.h</label>
      </node>
      <node id="7355">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7351" relation="include">
        </childnode>
      </node>
      <node id="7361">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7354" relation="include">
        </childnode>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7351" relation="include">
        </childnode>
        <childnode refid="7362" relation="include">
        </childnode>
      </node>
      <node id="7354">
        <label>string.h</label>
      </node>
      <node id="7367">
        <label>vector</label>
      </node>
      <node id="7362">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="7354" relation="include">
        </childnode>
      </node>
      <node id="7348">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="7345">
        <label>db/memtable.h</label>
        <link refid="memtable_8h"/>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7347" relation="include">
        </childnode>
        <childnode refid="7357" relation="include">
        </childnode>
        <childnode refid="7364" relation="include">
        </childnode>
        <childnode refid="7366" relation="include">
        </childnode>
      </node>
      <node id="7360">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7356" relation="include">
        </childnode>
        <childnode refid="7355" relation="include">
        </childnode>
      </node>
      <node id="7344">
        <label>/home/dev/ds-160209/src/leveldb/db/memtable.cc</label>
        <link refid="memtable.cc"/>
        <childnode refid="7345" relation="include">
        </childnode>
        <childnode refid="7357" relation="include">
        </childnode>
        <childnode refid="7358" relation="include">
        </childnode>
        <childnode refid="7369" relation="include">
        </childnode>
        <childnode refid="7350" relation="include">
        </childnode>
        <childnode refid="7361" relation="include">
        </childnode>
      </node>
      <node id="7351">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="7352" relation="include">
        </childnode>
        <childnode refid="7353" relation="include">
        </childnode>
        <childnode refid="7354" relation="include">
        </childnode>
        <childnode refid="7346" relation="include">
        </childnode>
      </node>
      <node id="7369">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7367" relation="include">
        </childnode>
        <childnode refid="7370" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7355" relation="include">
        </childnode>
      </node>
      <node id="7349">
        <label>stdio.h</label>
      </node>
      <node id="7359">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="7346" relation="include">
        </childnode>
      </node>
      <node id="7358">
        <label>leveldb/comparator.h</label>
        <link refid="comparator_8h"/>
        <childnode refid="7346" relation="include">
        </childnode>
      </node>
      <node id="7350">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="7351" relation="include">
        </childnode>
        <childnode refid="7355" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classleveldb_1_1_mem_table_iterator" prot="public">leveldb::MemTableIterator</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtable_8h" kindref="compound">db/memtable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dbformat_8h" kindref="compound">db/dbformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comparator_8h" kindref="compound">leveldb/comparator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="iterator_8h" kindref="compound">leveldb/iterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coding_8h" kindref="compound">util/coding.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Slice<sp/>GetLengthPrefixedSlice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>len;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" kindref="member">GetVarint32Ptr</ref>(p,<sp/>p<sp/>+<sp/>5,<sp/>&amp;len);<sp/><sp/></highlight><highlight class="comment">//<sp/>+5:<sp/>we<sp/>assume<sp/>&quot;p&quot;<sp/>is<sp/>not<sp/>corrupted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Slice(p,<sp/>len);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classleveldb_1_1_mem_table_1a23add92a4a6e5d1521f3b6695dba5c2d" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_mem_table_1a23add92a4a6e5d1521f3b6695dba5c2d" kindref="member">MemTable::MemTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>&amp;<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="merger_8cc_1a29ff5c524642d9eface6bf6b5dec44d3" kindref="member">comparator_</ref>(cmp),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="memenv_8cc_1af5ddacec8db71e6c2253bcb2050a8d2e" kindref="member">refs_</ref>(0),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cache_8cc_1ae64a918efc86efd2537d69b8e5652d8e" kindref="member">table_</ref>(<ref refid="merger_8cc_1a29ff5c524642d9eface6bf6b5dec44d3" kindref="member">comparator_</ref>,<sp/>&amp;arena_)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">MemTable::~MemTable()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>assert(refs_<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classleveldb_1_1_mem_table_1a667a1ada274201f0bdd3615baf1bd882" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1a667a1ada274201f0bdd3615baf1bd882" kindref="member">MemTable::ApproximateMemoryUsage</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arena_.<ref refid="classleveldb_1_1_arena_1aaf8db075d5d1130106bbbf66b1d267b2" kindref="member">MemoryUsage</ref>();<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MemTable::KeyComparator::operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bptr)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>keys<sp/>are<sp/>encoded<sp/>as<sp/>length-prefixed<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>a<sp/>=<sp/>GetLengthPrefixedSlice(aptr);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>b<sp/>=<sp/>GetLengthPrefixedSlice(bptr);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comparator.Compare(a,<sp/>b);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Encode<sp/>a<sp/>suitable<sp/>internal<sp/>key<sp/>target<sp/>for<sp/>&quot;target&quot;<sp/>and<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uses<sp/>*scratch<sp/>as<sp/>scratch<sp/>space,<sp/>and<sp/>the<sp/>returned<sp/>pointer<sp/>will<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>this<sp/>scratch<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>EncodeKey(std::string*<sp/>scratch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>target)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>scratch-&gt;clear();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1ab00e282f3fd7058b8a41afcf4b56e685" kindref="member">PutVarint32</ref>(scratch,<sp/>target.size());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>scratch-&gt;append(target.data(),<sp/>target.size());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scratch-&gt;data();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classleveldb_1_1_mem_table_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_mem_table_iterator" kindref="compound">MemTableIterator</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="classleveldb_1_1_mem_table_iterator_1a3cf243a6e8166d55ce87081f69a5ecd7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a3cf243a6e8166d55ce87081f69a5ecd7" kindref="member">MemTableIterator</ref>(<ref refid="classleveldb_1_1_skip_list" kindref="compound">MemTable::Table</ref>*<sp/>table)<sp/>:<sp/>iter_(table)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classleveldb_1_1_mem_table_iterator_1a95a8909aa37acb52f85a88c97329fa11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a95a8909aa37acb52f85a88c97329fa11" kindref="member">Valid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter_.Valid();<sp/>}</highlight></codeline>
<codeline lineno="56" refid="classleveldb_1_1_mem_table_iterator_1a140f9575286994337de9b49ea7fe62cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a140f9575286994337de9b49ea7fe62cb" kindref="member">Seek</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>k)<sp/>{<sp/>iter_.Seek(EncodeKey(&amp;tmp_,<sp/>k));<sp/>}</highlight></codeline>
<codeline lineno="57" refid="classleveldb_1_1_mem_table_iterator_1a72eaf5c1bcb6d513f71d4edcb8db3f98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a72eaf5c1bcb6d513f71d4edcb8db3f98" kindref="member">SeekToFirst</ref>()<sp/>{<sp/>iter_.SeekToFirst();<sp/>}</highlight></codeline>
<codeline lineno="58" refid="classleveldb_1_1_mem_table_iterator_1aaed044dc887a51c924086f2a2844a5f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1aaed044dc887a51c924086f2a2844a5f0" kindref="member">SeekToLast</ref>()<sp/>{<sp/>iter_.SeekToLast();<sp/>}</highlight></codeline>
<codeline lineno="59" refid="classleveldb_1_1_mem_table_iterator_1a8ce5457cf61b989ce1ceec80084f891c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a8ce5457cf61b989ce1ceec80084f891c" kindref="member">Next</ref>()<sp/>{<sp/>iter_.Next();<sp/>}</highlight></codeline>
<codeline lineno="60" refid="classleveldb_1_1_mem_table_iterator_1a61f8a385b268158a1e7bd0cba29a83c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a61f8a385b268158a1e7bd0cba29a83c1" kindref="member">Prev</ref>()<sp/>{<sp/>iter_.Prev();<sp/>}</highlight></codeline>
<codeline lineno="61" refid="classleveldb_1_1_mem_table_iterator_1a3e9b1c478d4ba8747dae4c8acb77a289" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a3e9b1c478d4ba8747dae4c8acb77a289" kindref="member">key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetLengthPrefixedSlice(iter_.key());<sp/>}</highlight></codeline>
<codeline lineno="62" refid="classleveldb_1_1_mem_table_iterator_1a5910c8d44980cdec2d8ba603aabb98b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a5910c8d44980cdec2d8ba603aabb98b8" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>key_slice<sp/>=<sp/>GetLengthPrefixedSlice(iter_.key());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetLengthPrefixedSlice(key_slice.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()<sp/>+<sp/>key_slice.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classleveldb_1_1_mem_table_iterator_1a1669aab641ff394968c30581a6b63f2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a1669aab641ff394968c30581a6b63f2a" kindref="member">status</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>MemTable::Table::Iterator<sp/>iter_;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::string<sp/>tmp_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>passing<sp/>to<sp/>EncodeKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mem_table_iterator_1a3cf243a6e8166d55ce87081f69a5ecd7" kindref="member">MemTableIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator" kindref="compound">MemTableIterator</ref>&amp;);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_iterator" kindref="compound">MemTableIterator</ref>&amp;);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" kindref="member">MemTable::NewIterator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1ad6cb602bccb9af617c8cb348ae693d4a" kindref="member">MemTableIterator</ref>(&amp;table_);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classleveldb_1_1_mem_table_1a37bec80954badb2354426aa175e9371f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1a37bec80954badb2354426aa175e9371f" kindref="member">MemTable::Add</ref>(<ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/>s,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" kindref="member">ValueType</ref><sp/>type,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>of<sp/>an<sp/>entry<sp/>is<sp/>concatenation<sp/>of:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>key_size<sp/><sp/><sp/><sp/><sp/>:<sp/>varint32<sp/>of<sp/>internal_key.size()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>key<sp/>bytes<sp/><sp/><sp/><sp/>:<sp/>char[internal_key.size()]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>value_size<sp/><sp/><sp/>:<sp/>varint32<sp/>of<sp/>value.size()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>value<sp/>bytes<sp/><sp/>:<sp/>char[value.size()]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_size<sp/>=<sp/>key.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>val_size<sp/>=<sp/>value.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>internal_key_size<sp/>=<sp/>key_size<sp/>+<sp/>8;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>encoded_len<sp/>=</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ac22b2a69554ed12ecf1bd4650282f307" kindref="member">VarintLength</ref>(internal_key_size)<sp/>+<sp/>internal_key_size<sp/>+</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ac22b2a69554ed12ecf1bd4650282f307" kindref="member">VarintLength</ref>(val_size)<sp/>+<sp/>val_size;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf<sp/>=<sp/>arena_.<ref refid="classleveldb_1_1_arena_1add4bc4b1c8fdf5be7a96a7ec00a0732e" kindref="member">Allocate</ref>(encoded_len);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/><ref refid="namespaceleveldb_1ac5e7a0e0356b856317349a870e3bfb41" kindref="member">EncodeVarint32</ref>(buf,<sp/>internal_key_size);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>memcpy(p,<sp/>key.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>key_size);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>p<sp/>+=<sp/>key_size;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a725a2c0ebf763116b4ca3fb78564ff70" kindref="member">EncodeFixed64</ref>(p,<sp/>(s<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>type);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>p<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="namespaceleveldb_1ac5e7a0e0356b856317349a870e3bfb41" kindref="member">EncodeVarint32</ref>(p,<sp/>val_size);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>memcpy(p,<sp/>value.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>val_size);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>assert((p<sp/>+<sp/>val_size)<sp/>-<sp/>buf<sp/>==<sp/>encoded_len);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>table_.<ref refid="classleveldb_1_1_skip_list_1af1ed755f0825f38272aafe3cae4da644" kindref="member">Insert</ref>(buf);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classleveldb_1_1_mem_table_1af94f80a5909a440d0675afa68f8765c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_1af94f80a5909a440d0675afa68f8765c5" kindref="member">MemTable::Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_lookup_key" kindref="compound">LookupKey</ref>&amp;<sp/>key,<sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>,<sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>memkey<sp/>=<sp/>key.<ref refid="classleveldb_1_1_lookup_key_1a16b7ee6c701da7e7503510880a106a3a" kindref="member">memtable_key</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>Table::Iterator<sp/>iter(&amp;table_);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>iter.Seek(memkey.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter.Valid())<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entry<sp/>format<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>klength<sp/><sp/>varint32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>userkey<sp/><sp/>char[klength]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tag<sp/><sp/><sp/><sp/><sp/><sp/>uint64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vlength<sp/><sp/>varint32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>value<sp/><sp/><sp/><sp/>char[vlength]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>it<sp/>belongs<sp/>to<sp/>same<sp/>user<sp/>key.<sp/><sp/>We<sp/>do<sp/>not<sp/>check<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence<sp/>number<sp/>since<sp/>the<sp/>Seek()<sp/>call<sp/>above<sp/>should<sp/>have<sp/>skipped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>entries<sp/>with<sp/>overly<sp/>large<sp/>sequence<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>entry<sp/>=<sp/>iter.key();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="cache_8cc_1ab8d33547e1ef26613cc6d92a7909d99a" kindref="member">key_length</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key_ptr<sp/>=<sp/><ref refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" kindref="member">GetVarint32Ptr</ref>(entry,<sp/>entry+5,<sp/>&amp;key_length);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comparator_.comparator.user_comparator()-&gt;Compare(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(key_ptr,<sp/>key_length<sp/>-<sp/>8),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.<ref refid="classleveldb_1_1_lookup_key_1adf91e9804383dd1b2bfd8545df45342f" kindref="member">user_key</ref>())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correct<sp/>user<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>tag<sp/>=<sp/><ref refid="namespaceleveldb_1a239098b0291873752d0be16633652825" kindref="member">DecodeFixed64</ref>(key_ptr<sp/>+<sp/>key_length<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(static_cast&lt;ValueType&gt;(tag<sp/>&amp;<sp/>0xff))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>:<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>v<sp/>=<sp/>GetLengthPrefixedSlice(key_ptr<sp/>+<sp/>key_length);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value-&gt;assign(v.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>v.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" kindref="member">kTypeDeletion</ref>:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a9e5beb5b2e758f041e0c012426e7b1b8" kindref="member">Status::NotFound</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/db/memtable.cc"/>
  </compounddef>
</doxygen>
