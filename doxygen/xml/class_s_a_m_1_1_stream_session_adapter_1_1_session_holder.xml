<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder" kind="class" language="C++" prot="public">
    <compoundname>SAM::StreamSessionAdapter::SessionHolder</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a8c2700bfcb5009cc6706982e675fda5d" prot="private" static="no">
        <type>boost::shared_mutex</type>
        <definition>typedef boost::shared_mutex SAM::StreamSessionAdapter::SessionHolder::mutex_type</definition>
        <argsstring></argsstring>
        <name>mutex_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="25" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a3be87c9c20b28a57fccb78ede3394cc1" prot="private" static="no" mutable="yes">
        <type>std::auto_ptr&lt; <ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref> &gt;</type>
        <definition>std::auto_ptr&lt;SAM::StreamSession&gt; SAM::StreamSessionAdapter::SessionHolder::session_</definition>
        <argsstring></argsstring>
        <name>session_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="24" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a1c1f82b2d6d140fa49e9312fd5b7eb81" prot="private" static="no" mutable="yes">
        <type>mutex_type</type>
        <definition>mutex_type SAM::StreamSessionAdapter::SessionHolder::mtx_</definition>
        <argsstring></argsstring>
        <name>mtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="26" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1ae1e2a6ccc998b0593900a760d4fee71e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>SAM::StreamSessionAdapter::SessionHolder::SessionHolder</definition>
        <argsstring>(std::auto_ptr&lt; SAM::StreamSession &gt; session)</argsstring>
        <name>SessionHolder</name>
        <param>
          <type>std::auto_ptr&lt; <ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref> &gt;</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="16" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1abfe42c992695ab920cdc947a5f7207e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref> &amp;</type>
        <definition>const SAM::StreamSession &amp; SAM::StreamSessionAdapter::SessionHolder::getSession</definition>
        <argsstring>() const </argsstring>
        <name>getSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="18" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a1fc3997d4d2eebb27b6103def34baec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref> &amp;</type>
        <definition>SAM::StreamSession &amp; SAM::StreamSessionAdapter::SessionHolder::getSession</definition>
        <argsstring>()</argsstring>
        <name>getSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="19" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="44" bodyend="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a3c5d962ff2eed64ae85d6050c1922300" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SAM::StreamSessionAdapter::SessionHolder::heal</definition>
        <argsstring>() const </argsstring>
        <name>heal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="21" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a18b871b0cec2614866abece0ac3b379f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SAM::StreamSessionAdapter::SessionHolder::reborn</definition>
        <argsstring>() const </argsstring>
        <name>reborn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.cpp" line="22" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="60" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/i2p.cpp" line="14" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="13" bodyend="27"/>
    <listofallmembers>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1abfe42c992695ab920cdc947a5f7207e5" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>getSession</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a1fc3997d4d2eebb27b6103def34baec0" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>getSession</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a3c5d962ff2eed64ae85d6050c1922300" prot="private" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>heal</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a1c1f82b2d6d140fa49e9312fd5b7eb81" prot="private" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>mtx_</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a8c2700bfcb5009cc6706982e675fda5d" prot="private" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>mutex_type</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a18b871b0cec2614866abece0ac3b379f" prot="private" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>reborn</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a3be87c9c20b28a57fccb78ede3394cc1" prot="private" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>session_</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1ae1e2a6ccc998b0593900a760d4fee71e" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter::SessionHolder</scope><name>SessionHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
