<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_test_payload_visitor" kind="class" language="C++" prot="public">
    <compoundname>TestPayloadVisitor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">boost::static_visitor&lt; bool &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_payload_visitor_1a6807c11efee2ac8413893c8b81fd4c11" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; TestPayloadVisitor::exp_payload</definition>
        <argsstring></argsstring>
        <name>exp_payload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/base58_tests.cpp" line="85" column="1" bodyfile="/home/dev/ds-160209/src/test/base58_tests.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_payload_visitor_1a8f963dfce22edb3c83c5712f4a9fa64d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TestPayloadVisitor::TestPayloadVisitor</definition>
        <argsstring>(std::vector&lt; unsigned char &gt; &amp;exp_payload)</argsstring>
        <name>TestPayloadVisitor</name>
        <param>
          <type>std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>exp_payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/base58_tests.cpp" line="87" column="1" bodyfile="/home/dev/ds-160209/src/test/base58_tests.cpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_test_payload_visitor_1a696edf0b12cc446b448ab676dfc6fc78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TestPayloadVisitor::operator()</definition>
        <argsstring>(const CKeyID &amp;id) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/base58_tests.cpp" line="88" column="1" bodyfile="/home/dev/ds-160209/src/test/base58_tests.cpp" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_test_payload_visitor_1a8ff11d72e4866f6ae023e3ce23830454" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TestPayloadVisitor::operator()</definition>
        <argsstring>(const CScriptID &amp;id) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="class_c_script_i_d" kindref="compound">CScriptID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/base58_tests.cpp" line="93" column="1" bodyfile="/home/dev/ds-160209/src/test/base58_tests.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_test_payload_visitor_1ae7023a445384bfb2602f5fbdb6bba932" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TestPayloadVisitor::operator()</definition>
        <argsstring>(const CNoDestination &amp;no) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="class_c_no_destination" kindref="compound">CNoDestination</ref> &amp;</type>
          <declname>no</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/base58_tests.cpp" line="98" column="1" bodyfile="/home/dev/ds-160209/src/test/base58_tests.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1823">
        <label>boost::static_visitor&lt; bool &gt;</label>
      </node>
      <node id="1822">
        <label>TestPayloadVisitor</label>
        <link refid="class_test_payload_visitor"/>
        <childnode refid="1823" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1825">
        <label>boost::static_visitor&lt; bool &gt;</label>
      </node>
      <node id="1824">
        <label>TestPayloadVisitor</label>
        <link refid="class_test_payload_visitor"/>
        <childnode refid="1825" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/test/base58_tests.cpp" line="83" column="1" bodyfile="/home/dev/ds-160209/src/test/base58_tests.cpp" bodystart="82" bodyend="102"/>
    <listofallmembers>
      <member refid="class_test_payload_visitor_1a6807c11efee2ac8413893c8b81fd4c11" prot="private" virt="non-virtual"><scope>TestPayloadVisitor</scope><name>exp_payload</name></member>
      <member refid="class_test_payload_visitor_1a696edf0b12cc446b448ab676dfc6fc78" prot="public" virt="non-virtual"><scope>TestPayloadVisitor</scope><name>operator()</name></member>
      <member refid="class_test_payload_visitor_1a8ff11d72e4866f6ae023e3ce23830454" prot="public" virt="non-virtual"><scope>TestPayloadVisitor</scope><name>operator()</name></member>
      <member refid="class_test_payload_visitor_1ae7023a445384bfb2602f5fbdb6bba932" prot="public" virt="non-virtual"><scope>TestPayloadVisitor</scope><name>operator()</name></member>
      <member refid="class_test_payload_visitor_1a8f963dfce22edb3c83c5712f4a9fa64d" prot="public" virt="non-virtual"><scope>TestPayloadVisitor</scope><name>TestPayloadVisitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
