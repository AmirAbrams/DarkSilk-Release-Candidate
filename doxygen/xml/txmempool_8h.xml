<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="txmempool_8h" kind="file" language="C++">
    <compoundname>txmempool.h</compoundname>
    <includes refid="transaction_8h" local="yes">primitives/transaction.h</includes>
    <includes refid="sync_8h" local="yes">sync.h</includes>
    <includes refid="coins_8h" local="yes">coins.h</includes>
    <includes refid="amount_8h" local="yes">amount.h</includes>
    <includes local="no">boost/circular_buffer.hpp</includes>
    <includedby refid="main_8h" local="yes">/home/dev/ds-160209/src/main.h</includedby>
    <includedby refid="coins_8h" local="yes">/home/dev/ds-160209/src/coins.h</includedby>
    <includedby refid="txmempool_8cpp" local="yes">/home/dev/ds-160209/src/txmempool.cpp</includedby>
    <incdepgraph>
      <node id="57218">
        <label>list</label>
      </node>
      <node id="57187">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="57252">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57250" relation="include">
        </childnode>
      </node>
      <node id="57265">
        <label>netinet/in.h</label>
      </node>
      <node id="57170">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57185" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
      </node>
      <node id="57258">
        <label>arpa/inet.h</label>
      </node>
      <node id="57236">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="57177">
        <label>limits</label>
      </node>
      <node id="57205">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57185" relation="include">
        </childnode>
      </node>
      <node id="57206">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="57207" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57189" relation="include">
        </childnode>
      </node>
      <node id="57169">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="57170" relation="include">
        </childnode>
        <childnode refid="57193" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57196" relation="include">
        </childnode>
        <childnode refid="57197" relation="include">
        </childnode>
        <childnode refid="57233" relation="include">
        </childnode>
        <childnode refid="57231" relation="include">
        </childnode>
      </node>
      <node id="57197">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57198" relation="include">
        </childnode>
        <childnode refid="57199" relation="include">
        </childnode>
        <childnode refid="57200" relation="include">
        </childnode>
        <childnode refid="57209" relation="include">
        </childnode>
        <childnode refid="57211" relation="include">
        </childnode>
        <childnode refid="57230" relation="include">
        </childnode>
      </node>
      <node id="57229">
        <label>openssl/rand.h</label>
      </node>
      <node id="57194">
        <label>assert.h</label>
      </node>
      <node id="57182">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="57264">
        <label>net/if.h</label>
      </node>
      <node id="57168">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool.h"/>
        <childnode refid="57169" relation="include">
        </childnode>
        <childnode refid="57234" relation="include">
        </childnode>
        <childnode refid="57239" relation="include">
        </childnode>
        <childnode refid="57170" relation="include">
        </childnode>
        <childnode refid="57276" relation="include">
        </childnode>
      </node>
      <node id="57251">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="57207" relation="include">
        </childnode>
      </node>
      <node id="57238">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="57191">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="57192" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
      </node>
      <node id="57239">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="57240" relation="include">
        </childnode>
        <childnode refid="57168" relation="include">
        </childnode>
        <childnode refid="57194" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57198" relation="include">
        </childnode>
        <childnode refid="57275" relation="include">
        </childnode>
      </node>
      <node id="57188">
        <label>sys/mman.h</label>
      </node>
      <node id="57185">
        <label>stdlib.h</label>
      </node>
      <node id="57272">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="57273" relation="include">
        </childnode>
        <childnode refid="57211" relation="include">
        </childnode>
        <childnode refid="57270" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
        <childnode refid="57198" relation="include">
        </childnode>
      </node>
      <node id="57198">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="57228">
        <label>openssl/crypto.h</label>
      </node>
      <node id="57261">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="57262" relation="include">
        </childnode>
        <childnode refid="57188" relation="include">
        </childnode>
        <childnode refid="57263" relation="include">
        </childnode>
        <childnode refid="57212" relation="include">
        </childnode>
        <childnode refid="57264" relation="include">
        </childnode>
        <childnode refid="57265" relation="include">
        </childnode>
        <childnode refid="57258" relation="include">
        </childnode>
        <childnode refid="57266" relation="include">
        </childnode>
        <childnode refid="57189" relation="include">
        </childnode>
        <childnode refid="57267" relation="include">
        </childnode>
        <childnode refid="57190" relation="include">
        </childnode>
        <childnode refid="57268" relation="include">
        </childnode>
      </node>
      <node id="57224">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="57202">
        <label>openssl/sha.h</label>
      </node>
      <node id="57268">
        <label>errno.h</label>
      </node>
      <node id="57176">
        <label>cassert</label>
      </node>
      <node id="57195">
        <label>stdexcept</label>
      </node>
      <node id="57211">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="57212" relation="include">
        </childnode>
        <childnode refid="57213" relation="include">
        </childnode>
        <childnode refid="57214" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57215" relation="include">
        </childnode>
        <childnode refid="57170" relation="include">
        </childnode>
        <childnode refid="57174" relation="include">
        </childnode>
        <childnode refid="57218" relation="include">
        </childnode>
        <childnode refid="57219" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57220" relation="include">
        </childnode>
        <childnode refid="57221" relation="include">
        </childnode>
        <childnode refid="57222" relation="include">
        </childnode>
        <childnode refid="57223" relation="include">
        </childnode>
        <childnode refid="57224" relation="include">
        </childnode>
        <childnode refid="57225" relation="include">
        </childnode>
        <childnode refid="57226" relation="include">
        </childnode>
        <childnode refid="57227" relation="include">
        </childnode>
        <childnode refid="57228" relation="include">
        </childnode>
        <childnode refid="57229" relation="include">
        </childnode>
        <childnode refid="57210" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
      </node>
      <node id="57269">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="57270" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57260" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
      </node>
      <node id="57223">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="57247">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57231" relation="include">
        </childnode>
        <childnode refid="57248" relation="include">
        </childnode>
        <childnode refid="57251" relation="include">
        </childnode>
      </node>
      <node id="57172">
        <label>string</label>
      </node>
      <node id="57274">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57185" relation="include">
        </childnode>
        <childnode refid="57211" relation="include">
        </childnode>
        <childnode refid="57254" relation="include">
        </childnode>
      </node>
      <node id="57174">
        <label>map</label>
      </node>
      <node id="57220">
        <label>boost/thread.hpp</label>
      </node>
      <node id="57271">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="57260" relation="include">
        </childnode>
        <childnode refid="57269" relation="include">
        </childnode>
        <childnode refid="57234" relation="include">
        </childnode>
        <childnode refid="57233" relation="include">
        </childnode>
        <childnode refid="57211" relation="include">
        </childnode>
        <childnode refid="57174" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
      </node>
      <node id="57243">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57244" relation="include">
        </childnode>
        <childnode refid="57211" relation="include">
        </childnode>
        <childnode refid="57222" relation="include">
        </childnode>
        <childnode refid="57247" relation="include">
        </childnode>
        <childnode refid="57252" relation="include">
        </childnode>
      </node>
      <node id="57207">
        <label>stddef.h</label>
      </node>
      <node id="57199">
        <label>boost/variant.hpp</label>
      </node>
      <node id="57267">
        <label>netdb.h</label>
      </node>
      <node id="57262">
        <label>sys/fcntl.h</label>
      </node>
      <node id="57240">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="57241" relation="include">
        </childnode>
      </node>
      <node id="57250">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57249" relation="include">
        </childnode>
      </node>
      <node id="57276">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="57171">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
        <childnode refid="57174" relation="include">
        </childnode>
        <childnode refid="57175" relation="include">
        </childnode>
        <childnode refid="57176" relation="include">
        </childnode>
        <childnode refid="57177" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57179" relation="include">
        </childnode>
        <childnode refid="57180" relation="include">
        </childnode>
        <childnode refid="57181" relation="include">
        </childnode>
        <childnode refid="57182" relation="include">
        </childnode>
        <childnode refid="57183" relation="include">
        </childnode>
        <childnode refid="57191" relation="include">
        </childnode>
      </node>
      <node id="57189">
        <label>limits.h</label>
      </node>
      <node id="57235">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="57259">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="57175" relation="include">
        </childnode>
        <childnode refid="57255" relation="include">
        </childnode>
      </node>
      <node id="57214">
        <label>sys/resource.h</label>
      </node>
      <node id="57225">
        <label>openssl/bio.h</label>
      </node>
      <node id="57257">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="57260">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57261" relation="include">
        </childnode>
      </node>
      <node id="57201">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="57193" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57202" relation="include">
        </childnode>
        <childnode refid="57203" relation="include">
        </childnode>
        <childnode refid="57204" relation="include">
        </childnode>
        <childnode refid="57205" relation="include">
        </childnode>
        <childnode refid="57206" relation="include">
        </childnode>
        <childnode refid="57208" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
      </node>
      <node id="57266">
        <label>ifaddrs.h</label>
      </node>
      <node id="57230">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="57211" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57185" relation="include">
        </childnode>
        <childnode refid="57231" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
        <childnode refid="57232" relation="include">
        </childnode>
      </node>
      <node id="57212">
        <label>sys/types.h</label>
      </node>
      <node id="57246">
        <label>ios</label>
      </node>
      <node id="57186">
        <label>string.h</label>
      </node>
      <node id="57192">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="57180">
        <label>cstdio</label>
      </node>
      <node id="57237">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="57227">
        <label>openssl/buffer.h</label>
      </node>
      <node id="57181">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="57253">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="57168" relation="include">
        </childnode>
        <childnode refid="57254" relation="include">
        </childnode>
        <childnode refid="57197" relation="include">
        </childnode>
        <childnode refid="57244" relation="include">
        </childnode>
        <childnode refid="57242" relation="include">
        </childnode>
        <childnode refid="57272" relation="include">
        </childnode>
        <childnode refid="57218" relation="include">
        </childnode>
        <childnode refid="57275" relation="include">
        </childnode>
      </node>
      <node id="57222">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="57275">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="57200">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="57201" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57193" relation="include">
        </childnode>
        <childnode refid="57195" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
      </node>
      <node id="57190">
        <label>unistd.h</label>
      </node>
      <node id="57173">
        <label>vector</label>
      </node>
      <node id="57209">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57193" relation="include">
        </childnode>
        <childnode refid="57210" relation="include">
        </childnode>
        <childnode refid="57195" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
      </node>
      <node id="57254">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="57255" relation="include">
        </childnode>
        <childnode refid="57256" relation="include">
        </childnode>
        <childnode refid="57198" relation="include">
        </childnode>
        <childnode refid="57257" relation="include">
        </childnode>
        <childnode refid="57229" relation="include">
        </childnode>
        <childnode refid="57258" relation="include">
        </childnode>
        <childnode refid="57259" relation="include">
        </childnode>
        <childnode refid="57260" relation="include">
        </childnode>
        <childnode refid="57269" relation="include">
        </childnode>
        <childnode refid="57271" relation="include">
        </childnode>
        <childnode refid="57201" relation="include">
        </childnode>
        <childnode refid="57244" relation="include">
        </childnode>
      </node>
      <node id="57203">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="57221">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="57219">
        <label>utility</label>
      </node>
      <node id="57241">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="57169" relation="include">
        </childnode>
        <childnode refid="57242" relation="include">
        </childnode>
      </node>
      <node id="57217">
        <label>sstream</label>
      </node>
      <node id="57226">
        <label>openssl/evp.h</label>
      </node>
      <node id="57215">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="57176" relation="include">
        </childnode>
        <childnode refid="57216" relation="include">
        </childnode>
        <childnode refid="57217" relation="include">
        </childnode>
        <childnode refid="57195" relation="include">
        </childnode>
      </node>
      <node id="57178">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="57244">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="57183" relation="include">
        </childnode>
        <childnode refid="57171" relation="include">
        </childnode>
        <childnode refid="57245" relation="include">
        </childnode>
        <childnode refid="57194" relation="include">
        </childnode>
        <childnode refid="57246" relation="include">
        </childnode>
        <childnode refid="57177" relation="include">
        </childnode>
        <childnode refid="57174" relation="include">
        </childnode>
        <childnode refid="57175" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57186" relation="include">
        </childnode>
        <childnode refid="57219" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
      </node>
      <node id="57208">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57207" relation="include">
        </childnode>
        <childnode refid="57189" relation="include">
        </childnode>
      </node>
      <node id="57213">
        <label>sys/time.h</label>
      </node>
      <node id="57216">
        <label>iostream</label>
      </node>
      <node id="57255">
        <label>deque</label>
      </node>
      <node id="57193">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="57194" relation="include">
        </childnode>
        <childnode refid="57179" relation="include">
        </childnode>
        <childnode refid="57195" relation="include">
        </childnode>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
      </node>
      <node id="57263">
        <label>sys/socket.h</label>
      </node>
      <node id="57249">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="57194" relation="include">
        </childnode>
        <childnode refid="57207" relation="include">
        </childnode>
        <childnode refid="57186" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
      </node>
      <node id="57256">
        <label>boost/array.hpp</label>
      </node>
      <node id="57210">
        <label>openssl/bn.h</label>
      </node>
      <node id="57242">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="57243" relation="include">
        </childnode>
        <childnode refid="57253" relation="include">
        </childnode>
        <childnode refid="57174" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57219" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
      </node>
      <node id="57233">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="57178" relation="include">
        </childnode>
      </node>
      <node id="57183">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="57184" relation="include">
        </childnode>
        <childnode refid="57186" relation="include">
        </childnode>
        <childnode refid="57172" relation="include">
        </childnode>
        <childnode refid="57187" relation="include">
        </childnode>
        <childnode refid="57174" relation="include">
        </childnode>
        <childnode refid="57188" relation="include">
        </childnode>
        <childnode refid="57189" relation="include">
        </childnode>
        <childnode refid="57190" relation="include">
        </childnode>
      </node>
      <node id="57270">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="57209" relation="include">
        </childnode>
        <childnode refid="57193" relation="include">
        </childnode>
        <childnode refid="57173" relation="include">
        </childnode>
      </node>
      <node id="57175">
        <label>set</label>
      </node>
      <node id="57245">
        <label>algorithm</label>
      </node>
      <node id="57204">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="57178" relation="include">
        </childnode>
        <childnode refid="57185" relation="include">
        </childnode>
      </node>
      <node id="57196">
        <label>util.h</label>
      </node>
      <node id="57231">
        <label>stdio.h</label>
      </node>
      <node id="57184">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="57185" relation="include">
        </childnode>
      </node>
      <node id="57179">
        <label>cstring</label>
      </node>
      <node id="57234">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="57235" relation="include">
        </childnode>
        <childnode refid="57236" relation="include">
        </childnode>
        <childnode refid="57237" relation="include">
        </childnode>
        <childnode refid="57187" relation="include">
        </childnode>
        <childnode refid="57238" relation="include">
        </childnode>
      </node>
      <node id="57232">
        <label>inttypes.h</label>
      </node>
      <node id="57248">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="57249" relation="include">
        </childnode>
        <childnode refid="57250" relation="include">
        </childnode>
      </node>
      <node id="57273">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="57169" relation="include">
        </childnode>
        <childnode refid="57208" relation="include">
        </childnode>
        <childnode refid="57274" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="57310">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="57294">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="57315">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="57295">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="57323">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="57360">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57301" relation="include">
        </childnode>
        <childnode refid="57302" relation="include">
        </childnode>
        <childnode refid="57291" relation="include">
        </childnode>
        <childnode refid="57305" relation="include">
        </childnode>
        <childnode refid="57292" relation="include">
        </childnode>
        <childnode refid="57293" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57308">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="57309" relation="include">
        </childnode>
        <childnode refid="57310" relation="include">
        </childnode>
        <childnode refid="57311" relation="include">
        </childnode>
        <childnode refid="57312" relation="include">
        </childnode>
        <childnode refid="57313" relation="include">
        </childnode>
        <childnode refid="57314" relation="include">
        </childnode>
      </node>
      <node id="57321">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="57296">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="57282">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="57283" relation="include">
        </childnode>
        <childnode refid="57286" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57296" relation="include">
        </childnode>
        <childnode refid="57297" relation="include">
        </childnode>
        <childnode refid="57298" relation="include">
        </childnode>
        <childnode refid="57299" relation="include">
        </childnode>
        <childnode refid="57300" relation="include">
        </childnode>
        <childnode refid="57301" relation="include">
        </childnode>
        <childnode refid="57302" relation="include">
        </childnode>
        <childnode refid="57303" relation="include">
        </childnode>
        <childnode refid="57304" relation="include">
        </childnode>
        <childnode refid="57305" relation="include">
        </childnode>
        <childnode refid="57292" relation="include">
        </childnode>
        <childnode refid="57306" relation="include">
        </childnode>
        <childnode refid="57294" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57355">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="57281" relation="include">
        </childnode>
        <childnode refid="57286" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57356" relation="include">
        </childnode>
        <childnode refid="57310" relation="include">
        </childnode>
        <childnode refid="57318" relation="include">
        </childnode>
        <childnode refid="57290" relation="include">
        </childnode>
        <childnode refid="57301" relation="include">
        </childnode>
        <childnode refid="57302" relation="include">
        </childnode>
        <childnode refid="57304" relation="include">
        </childnode>
        <childnode refid="57305" relation="include">
        </childnode>
        <childnode refid="57292" relation="include">
        </childnode>
        <childnode refid="57293" relation="include">
        </childnode>
        <childnode refid="57306" relation="include">
        </childnode>
        <childnode refid="57294" relation="include">
        </childnode>
      </node>
      <node id="57277">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool.h"/>
        <childnode refid="57278" relation="include">
        </childnode>
        <childnode refid="57345" relation="include">
        </childnode>
        <childnode refid="57371" relation="include">
        </childnode>
      </node>
      <node id="57291">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="57336">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="57356">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="57330">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="57302">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="57297">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="57346">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins_8cpp"/>
      </node>
      <node id="57311">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="57345">
        <label>/home/dev/ds-160209/src/coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="57277" relation="include">
        </childnode>
        <childnode refid="57346" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
      </node>
      <node id="57307">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57308" relation="include">
        </childnode>
        <childnode refid="57314" relation="include">
        </childnode>
        <childnode refid="57289" relation="include">
        </childnode>
        <childnode refid="57315" relation="include">
        </childnode>
        <childnode refid="57316" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57309">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="57337">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="57367">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="57334" relation="include">
        </childnode>
      </node>
      <node id="57371">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool_8cpp"/>
      </node>
      <node id="57354">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="57355" relation="include">
        </childnode>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57288" relation="include">
        </childnode>
        <childnode refid="57301" relation="include">
        </childnode>
        <childnode refid="57302" relation="include">
        </childnode>
        <childnode refid="57304" relation="include">
        </childnode>
        <childnode refid="57292" relation="include">
        </childnode>
        <childnode refid="57293" relation="include">
        </childnode>
        <childnode refid="57306" relation="include">
        </childnode>
        <childnode refid="57294" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57334">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="57326">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="57364">
        <label>/home/dev/ds-160209/src/qt/debugconsole.h</label>
        <link refid="debugconsole_8h"/>
        <childnode refid="57310" relation="include">
        </childnode>
        <childnode refid="57365" relation="include">
        </childnode>
      </node>
      <node id="57362">
        <label>/home/dev/ds-160209/src/chainparams.cpp</label>
        <link refid="chainparams_8cpp"/>
      </node>
      <node id="57289">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="57348">
        <label>/home/dev/ds-160209/src/compressor.cpp</label>
        <link refid="compressor_8cpp"/>
      </node>
      <node id="57328">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="57279">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="57280" relation="include">
        </childnode>
        <childnode refid="57284" relation="include">
        </childnode>
        <childnode refid="57307" relation="include">
        </childnode>
        <childnode refid="57317" relation="include">
        </childnode>
        <childnode refid="57296" relation="include">
        </childnode>
        <childnode refid="57319" relation="include">
        </childnode>
        <childnode refid="57320" relation="include">
        </childnode>
        <childnode refid="57321" relation="include">
        </childnode>
        <childnode refid="57331" relation="include">
        </childnode>
        <childnode refid="57332" relation="include">
        </childnode>
        <childnode refid="57297" relation="include">
        </childnode>
        <childnode refid="57309" relation="include">
        </childnode>
        <childnode refid="57310" relation="include">
        </childnode>
        <childnode refid="57333" relation="include">
        </childnode>
        <childnode refid="57335" relation="include">
        </childnode>
        <childnode refid="57327" relation="include">
        </childnode>
        <childnode refid="57334" relation="include">
        </childnode>
        <childnode refid="57299" relation="include">
        </childnode>
        <childnode refid="57336" relation="include">
        </childnode>
        <childnode refid="57300" relation="include">
        </childnode>
        <childnode refid="57329" relation="include">
        </childnode>
        <childnode refid="57289" relation="include">
        </childnode>
        <childnode refid="57337" relation="include">
        </childnode>
        <childnode refid="57338" relation="include">
        </childnode>
        <childnode refid="57339" relation="include">
        </childnode>
        <childnode refid="57340" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
        <childnode refid="57341" relation="include">
        </childnode>
      </node>
      <node id="57368">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="57353">
        <label>/home/dev/ds-160209/src/txdb.cpp</label>
        <link refid="txdb_8cpp"/>
      </node>
      <node id="57327">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="57288">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="57293">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="57318">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="57359">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="57303" relation="include">
        </childnode>
      </node>
      <node id="57332">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="57357">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="57354" relation="include">
        </childnode>
        <childnode refid="57358" relation="include">
        </childnode>
        <childnode refid="57360" relation="include">
        </childnode>
        <childnode refid="57299" relation="include">
        </childnode>
        <childnode refid="57305" relation="include">
        </childnode>
        <childnode refid="57293" relation="include">
        </childnode>
        <childnode refid="57306" relation="include">
        </childnode>
        <childnode refid="57294" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57352">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="57300">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="57344">
        <label>/home/dev/ds-160209/src/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="57345" relation="include">
        </childnode>
        <childnode refid="57347" relation="include">
        </childnode>
      </node>
      <node id="57370">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator__tests_8cpp"/>
      </node>
      <node id="57369">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="57339">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="57299">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="57324">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="57292">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="57340">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="57335">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="57338">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="57351">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="57278">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="57279" relation="include">
        </childnode>
        <childnode refid="57342" relation="include">
        </childnode>
        <childnode refid="57354" relation="include">
        </childnode>
        <childnode refid="57357" relation="include">
        </childnode>
        <childnode refid="57355" relation="include">
        </childnode>
        <childnode refid="57358" relation="include">
        </childnode>
        <childnode refid="57283" relation="include">
        </childnode>
        <childnode refid="57361" relation="include">
        </childnode>
        <childnode refid="57362" relation="include">
        </childnode>
        <childnode refid="57349" relation="include">
        </childnode>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57360" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57296" relation="include">
        </childnode>
        <childnode refid="57331" relation="include">
        </childnode>
        <childnode refid="57332" relation="include">
        </childnode>
        <childnode refid="57363" relation="include">
        </childnode>
        <childnode refid="57356" relation="include">
        </childnode>
        <childnode refid="57333" relation="include">
        </childnode>
        <childnode refid="57327" relation="include">
        </childnode>
        <childnode refid="57334" relation="include">
        </childnode>
        <childnode refid="57336" relation="include">
        </childnode>
        <childnode refid="57367" relation="include">
        </childnode>
        <childnode refid="57318" relation="include">
        </childnode>
        <childnode refid="57290" relation="include">
        </childnode>
        <childnode refid="57368" relation="include">
        </childnode>
        <childnode refid="57351" relation="include">
        </childnode>
        <childnode refid="57315" relation="include">
        </childnode>
        <childnode refid="57301" relation="include">
        </childnode>
        <childnode refid="57302" relation="include">
        </childnode>
        <childnode refid="57369" relation="include">
        </childnode>
        <childnode refid="57291" relation="include">
        </childnode>
        <childnode refid="57305" relation="include">
        </childnode>
        <childnode refid="57370" relation="include">
        </childnode>
        <childnode refid="57339" relation="include">
        </childnode>
        <childnode refid="57340" relation="include">
        </childnode>
        <childnode refid="57352" relation="include">
        </childnode>
      </node>
      <node id="57303">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="57358">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="57281" relation="include">
        </childnode>
        <childnode refid="57282" relation="include">
        </childnode>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57286" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57288" relation="include">
        </childnode>
        <childnode refid="57356" relation="include">
        </childnode>
        <childnode refid="57299" relation="include">
        </childnode>
        <childnode refid="57301" relation="include">
        </childnode>
        <childnode refid="57302" relation="include">
        </childnode>
        <childnode refid="57359" relation="include">
        </childnode>
        <childnode refid="57305" relation="include">
        </childnode>
        <childnode refid="57292" relation="include">
        </childnode>
        <childnode refid="57293" relation="include">
        </childnode>
        <childnode refid="57306" relation="include">
        </childnode>
        <childnode refid="57294" relation="include">
        </childnode>
      </node>
      <node id="57350">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="57322">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="57301">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="57343">
        <label>/home/dev/ds-160209/src/compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="57344" relation="include">
        </childnode>
        <childnode refid="57348" relation="include">
        </childnode>
      </node>
      <node id="57281">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="57341">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="57284">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="57305">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="57347">
        <label>/home/dev/ds-160209/src/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="57361">
        <label>/home/dev/ds-160209/src/txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="57284" relation="include">
        </childnode>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57350" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57288" relation="include">
        </childnode>
        <childnode refid="57336" relation="include">
        </childnode>
        <childnode refid="57318" relation="include">
        </childnode>
        <childnode refid="57351" relation="include">
        </childnode>
        <childnode refid="57316" relation="include">
        </childnode>
        <childnode refid="57352" relation="include">
        </childnode>
        <childnode refid="57353" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57319">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="57286">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="57285">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="57363">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="57356" relation="include">
        </childnode>
        <childnode refid="57364" relation="include">
        </childnode>
        <childnode refid="57366" relation="include">
        </childnode>
      </node>
      <node id="57312">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="57283">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="57281" relation="include">
        </childnode>
        <childnode refid="57284" relation="include">
        </childnode>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57286" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57288" relation="include">
        </childnode>
        <childnode refid="57289" relation="include">
        </childnode>
        <childnode refid="57290" relation="include">
        </childnode>
        <childnode refid="57291" relation="include">
        </childnode>
        <childnode refid="57292" relation="include">
        </childnode>
        <childnode refid="57293" relation="include">
        </childnode>
        <childnode refid="57294" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57313">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="57314">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="57317">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="57288" relation="include">
        </childnode>
        <childnode refid="57318" relation="include">
        </childnode>
      </node>
      <node id="57316">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="57366">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.cpp</label>
        <link refid="peertablemodel_8cpp"/>
      </node>
      <node id="57333">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="57310" relation="include">
        </childnode>
        <childnode refid="57334" relation="include">
        </childnode>
      </node>
      <node id="57342">
        <label>/home/dev/ds-160209/src/txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="57343" relation="include">
        </childnode>
        <childnode refid="57278" relation="include">
        </childnode>
        <childnode refid="57349" relation="include">
        </childnode>
        <childnode refid="57346" relation="include">
        </childnode>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57350" relation="include">
        </childnode>
        <childnode refid="57287" relation="include">
        </childnode>
        <childnode refid="57288" relation="include">
        </childnode>
        <childnode refid="57318" relation="include">
        </childnode>
        <childnode refid="57351" relation="include">
        </childnode>
        <childnode refid="57316" relation="include">
        </childnode>
        <childnode refid="57352" relation="include">
        </childnode>
        <childnode refid="57353" relation="include">
        </childnode>
        <childnode refid="57295" relation="include">
        </childnode>
      </node>
      <node id="57329">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="57287">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="57290">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="57325">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="57280">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="57281" relation="include">
        </childnode>
        <childnode refid="57282" relation="include">
        </childnode>
        <childnode refid="57285" relation="include">
        </childnode>
        <childnode refid="57286" relation="include">
        </childnode>
        <childnode refid="57299" relation="include">
        </childnode>
        <childnode refid="57301" relation="include">
        </childnode>
        <childnode refid="57302" relation="include">
        </childnode>
        <childnode refid="57293" relation="include">
        </childnode>
        <childnode refid="57294" relation="include">
        </childnode>
      </node>
      <node id="57320">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="57321" relation="include">
        </childnode>
        <childnode refid="57322" relation="include">
        </childnode>
        <childnode refid="57297" relation="include">
        </childnode>
        <childnode refid="57309" relation="include">
        </childnode>
        <childnode refid="57310" relation="include">
        </childnode>
        <childnode refid="57323" relation="include">
        </childnode>
        <childnode refid="57311" relation="include">
        </childnode>
        <childnode refid="57298" relation="include">
        </childnode>
        <childnode refid="57324" relation="include">
        </childnode>
        <childnode refid="57325" relation="include">
        </childnode>
        <childnode refid="57326" relation="include">
        </childnode>
        <childnode refid="57313" relation="include">
        </childnode>
        <childnode refid="57314" relation="include">
        </childnode>
        <childnode refid="57327" relation="include">
        </childnode>
        <childnode refid="57299" relation="include">
        </childnode>
        <childnode refid="57328" relation="include">
        </childnode>
        <childnode refid="57329" relation="include">
        </childnode>
        <childnode refid="57330" relation="include">
        </childnode>
        <childnode refid="57289" relation="include">
        </childnode>
      </node>
      <node id="57304">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="57331">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="57332" relation="include">
        </childnode>
        <childnode refid="57310" relation="include">
        </childnode>
      </node>
      <node id="57298">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="57349">
        <label>/home/dev/ds-160209/src/checkpoints.cpp</label>
        <link refid="checkpoints_8cpp"/>
      </node>
      <node id="57306">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="57365">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_tx_mem_pool_entry" prot="public">CTxMemPoolEntry</innerclass>
    <innerclass refid="class_c_block_average" prot="public">CBlockAverage</innerclass>
    <innerclass refid="class_c_miner_policy_estimator" prot="public">CMinerPolicyEstimator</innerclass>
    <innerclass refid="class_c_tx_mem_pool" prot="public">CTxMemPool</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="txmempool_8h_1ac18cc9fcf96dcd34beef99424c12b268" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MEMPOOL_HEIGHT</definition>
        <argsstring></argsstring>
        <name>MEMPOOL_HEIGHT</name>
        <initializer>= 0x7FFFFFFF</initializer>
        <briefdescription>
<para>Fake height value used in <ref refid="class_c_coins" kindref="compound">CCoins</ref> to signify they are only in the memory pool (since 0.8) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/txmempool.h" line="431" column="1" bodyfile="/home/dev/ds-160209/src/txmempool.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="txmempool_8h_1a51bd4734f99121bdc24323fd5aebacc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double AllowFreeThreshold</definition>
        <argsstring>()</argsstring>
        <name>AllowFreeThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/txmempool.h" line="15" column="1" bodyfile="/home/dev/ds-160209/src/txmempool.h" bodystart="15" bodyend="18"/>
        <referencedby refid="txmempool_8h_1ae6c67bac023a01f1ae29b7f2f4505bba" compoundref="txmempool_8h" startline="20" endline="25">AllowFree</referencedby>
      </memberdef>
      <memberdef kind="function" id="txmempool_8h_1ae6c67bac023a01f1ae29b7f2f4505bba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool AllowFree</definition>
        <argsstring>(double dPriority)</argsstring>
        <name>AllowFree</name>
        <param>
          <type>double</type>
          <declname>dPriority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/txmempool.h" line="20" column="1" bodyfile="/home/dev/ds-160209/src/txmempool.h" bodystart="20" bodyend="25"/>
        <references refid="txmempool_8h_1a51bd4734f99121bdc24323fd5aebacc3" compoundref="txmempool_8h" startline="15" endline="18">AllowFreeThreshold</references>
        <referencedby refid="class_coin_control_dialog_1a4fc60e89b097952ff22dc0f9c58c87d9" compoundref="coincontroldialog_8cpp" startline="451" endline="631">CoinControlDialog::updateLabels</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DARKSILK_TXMEMPOOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_TXMEMPOOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transaction_8h" kindref="compound">primitives/transaction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sync_8h" kindref="compound">sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coins_8h" kindref="compound">coins.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="amount_8h" kindref="compound">amount.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/circular_buffer.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="txmempool_8h_1a51bd4734f99121bdc24323fd5aebacc3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="txmempool_8h_1a51bd4734f99121bdc24323fd5aebacc3" kindref="member">AllowFreeThreshold</ref>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COIN<sp/>*<sp/>576<sp/>/<sp/>250;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="txmempool_8h_1ae6c67bac023a01f1ae29b7f2f4505bba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="txmempool_8h_1ae6c67bac023a01f1ae29b7f2f4505bba" kindref="member">AllowFree</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPriority)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Large<sp/>(in<sp/>bytes)<sp/>low-priority<sp/>(new,<sp/>small-coin)<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>a<sp/>fee.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dPriority<sp/>&gt;<sp/><ref refid="txmempool_8h_1a51bd4734f99121bdc24323fd5aebacc3" kindref="member">AllowFreeThreshold</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_c_tx_mem_pool_entry" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_tx_mem_pool_entry" kindref="compound">CTxMemPoolEntry</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFee;<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nTxSize;<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nModSize;<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime;<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPriority;<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_entry_1a4a22f1c696136f99f5c296c90cf0406a" kindref="member">CTxMemPoolEntry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>_tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>_nFee,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>_nTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_dPriority,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_nHeight);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_entry_1a4a22f1c696136f99f5c296c90cf0406a" kindref="member">CTxMemPoolEntry</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_entry_1a4a22f1c696136f99f5c296c90cf0406a" kindref="member">CTxMemPoolEntry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_entry" kindref="compound">CTxMemPoolEntry</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_c_tx_mem_pool_entry_1a59f51f38161c191dae2614c53ed40fb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/><ref refid="class_c_tx_mem_pool_entry_1a59f51f38161c191dae2614c53ed40fb2" kindref="member">GetTx</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tx;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_entry_1aa419a2eb4c9f1097e6e692bb8e60ebde" kindref="member">GetPriority</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentHeight)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47" refid="class_c_tx_mem_pool_entry_1a313b0505c1df8796713e807508ebe456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_tx_mem_pool_entry_1a313b0505c1df8796713e807508ebe456" kindref="member">GetFee</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nFee;<sp/>}</highlight></codeline>
<codeline lineno="48" refid="class_c_tx_mem_pool_entry_1a500fcb2039ceb24798d8ddb7d548b7b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_entry_1a500fcb2039ceb24798d8ddb7d548b7b5" kindref="member">GetTxSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTxSize;<sp/>}</highlight></codeline>
<codeline lineno="49" refid="class_c_tx_mem_pool_entry_1a249b1f68b5b06bf8ec8fcbb5bef61090" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="class_c_tx_mem_pool_entry_1a249b1f68b5b06bf8ec8fcbb5bef61090" kindref="member">GetTime</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTime;<sp/>}</highlight></codeline>
<codeline lineno="50" refid="class_c_tx_mem_pool_entry_1ac519a06da6ba8f9358d4301c5cac4ac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_entry_1ac519a06da6ba8f9358d4301c5cac4ac9" kindref="member">GetHeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nHeight;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_c_block_average" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_block_average" kindref="compound">CBlockAverage</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::circular_buffer&lt;CFeeRate&gt;<sp/>feeSamples;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::circular_buffer&lt;double&gt;<sp/>prioritySamples;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>std::vector&lt;T&gt;<sp/>buf2vec(boost::circular_buffer&lt;T&gt;<sp/>buf)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="63"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>vec(buf.begin(),<sp/>buf.end());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69" refid="class_c_block_average_1adec219b95a2e1c67471f188dee48fb3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_average_1adec219b95a2e1c67471f188dee48fb3a" kindref="member">CBlockAverage</ref>()<sp/>:<sp/>feeSamples(100),<sp/>prioritySamples(100)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_c_block_average_1a50af3241dc8fb3e49e1e980ed2a7fc95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a50af3241dc8fb3e49e1e980ed2a7fc95" kindref="member">RecordFee</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>feeRate)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feeSamples.push_back(feeRate);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_c_block_average_1ae4d71208ccf3ecd85751ce3644d12853" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1ae4d71208ccf3ecd85751ce3644d12853" kindref="member">RecordPriority</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>priority)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prioritySamples.push_back(priority);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_c_block_average_1a9e63c1415286edf12ac82145723e564f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a9e63c1415286edf12ac82145723e564f" kindref="member">FeeSamples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feeSamples.size();<sp/>}</highlight></codeline>
<codeline lineno="80" refid="class_c_block_average_1a43152caddf026ec3f430d55435735ee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a43152caddf026ec3f430d55435735ee4" kindref="member">GetFeeSamples</ref>(std::vector&lt;CFeeRate&gt;&amp;<sp/>insertInto)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="81"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>f,<sp/>feeSamples)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertInto.push_back(f);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feeSamples.size();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86" refid="class_c_block_average_1a5b6ca2bd5fe9093ba81af14d7882145d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a5b6ca2bd5fe9093ba81af14d7882145d" kindref="member">PrioritySamples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prioritySamples.size();<sp/>}</highlight></codeline>
<codeline lineno="87" refid="class_c_block_average_1a5f56bd04cccb15d891f7dfb41af8b382" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a5f56bd04cccb15d891f7dfb41af8b382" kindref="member">GetPrioritySamples</ref>(std::vector&lt;double&gt;&amp;<sp/>insertInto)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="88"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/>prioritySamples)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertInto.push_back(d);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prioritySamples.size();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" kindref="member">AreSane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref><sp/>fee,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>minRelayFee)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fee<sp/>&lt;<sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>(0))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fee.<ref refid="class_c_fee_rate_1a5cf990404e896b332cf6fb836244b4a6" kindref="member">GetFeePerK</ref>()<sp/>&gt;<sp/>minRelayFee.<ref refid="class_c_fee_rate_1a5cf990404e896b332cf6fb836244b4a6" kindref="member">GetFeePerK</ref>()<sp/>*<sp/>10000)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106" refid="class_c_block_average_1a92abf5615a926971eba5f6fbaadac880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a92abf5615a926971eba5f6fbaadac880" kindref="member">AreSane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CFeeRate&gt;&amp;<sp/>vecFee,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>minRelayFee)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref><sp/>fee,<sp/>vecFee)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" kindref="member">AreSane</ref>(fee,<sp/>minRelayFee))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115" refid="class_c_block_average_1af5b855fc318c24c1eda1998ae07a8ed2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1af5b855fc318c24c1eda1998ae07a8ed2" kindref="member">AreSane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>priority)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>priority<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119" refid="class_c_block_average_1a2bdd0f3aa2eb5edddde259551965fcaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a2bdd0f3aa2eb5edddde259551965fcaf" kindref="member">AreSane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>vecPriority)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>priority,<sp/>vecPriority)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" kindref="member">AreSane</ref>(priority))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_c_block_average_1a2c549117b02d3366cbc840dbdf5ebd6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1a2c549117b02d3366cbc840dbdf5ebd6b" kindref="member">Write</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>fileout)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="130"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CFeeRate&gt;<sp/>vecFee<sp/>=<sp/>buf2vec(feeSamples);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>vecFee;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vecPriority<sp/>=<sp/>buf2vec(prioritySamples);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>vecPriority;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_c_block_average_1aac4081eec4bf68d7d3a07521ea953489" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average_1aac4081eec4bf68d7d3a07521ea953489" kindref="member">Read</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>filein,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>minRelayFee)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CFeeRate&gt;<sp/>vecFee;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein<sp/>&gt;&gt;<sp/>vecFee;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" kindref="member">AreSane</ref>(vecFee,<sp/>minRelayFee))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feeSamples.insert(feeSamples.end(),<sp/>vecFee.begin(),<sp/>vecFee.end());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>fee<sp/>value<sp/>in<sp/>estimates<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vecPriority;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein<sp/>&gt;&gt;<sp/>vecPriority;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" kindref="member">AreSane</ref>(vecPriority))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prioritySamples.insert(prioritySamples.end(),<sp/>vecPriority.begin(),<sp/>vecPriority.end());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>priority<sp/>value<sp/>in<sp/>estimates<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feeSamples.size()<sp/>+<sp/>prioritySamples.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;estimatefee&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>%d<sp/>fee<sp/>samples<sp/>and<sp/>%d<sp/>priority<sp/>samples\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feeSamples.size(),<sp/>prioritySamples.size());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_c_miner_policy_estimator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_miner_policy_estimator" kindref="compound">CMinerPolicyEstimator</ref></highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CBlockAverage&gt;<sp/>history;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CFeeRate&gt;<sp/>sortedFeeSamples;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>sortedPrioritySamples;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBestSeenHeight;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>seenTxConfirm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>feeRate,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>minRelayFee,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPriority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlocksAgo)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>entry<sp/>records<sp/>&quot;everything<sp/>else&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlocksTruncated<sp/>=<sp/>min(nBlocksAgo,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>history.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(nBlocksTruncated<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>guess<sp/>why<sp/>the<sp/>transaction<sp/>was<sp/>included<sp/>in<sp/>a<sp/>block--<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>it<sp/>is<sp/>high-priority<sp/>or<sp/>because<sp/>it<sp/>has<sp/>sufficient<sp/>fees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sufficientFee<sp/>=<sp/>(feeRate<sp/>&gt;<sp/>minRelayFee);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sufficientPriority<sp/>=<sp/><ref refid="txmempool_8h_1ae6c67bac023a01f1ae29b7f2f4505bba" kindref="member">AllowFree</ref>(dPriority);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>assignedTo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;unassigned&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sufficientFee<sp/>&amp;&amp;<sp/>!sufficientPriority<sp/>&amp;&amp;<sp/><ref refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" kindref="member">CBlockAverage::AreSane</ref>(feeRate,<sp/>minRelayFee))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history[nBlocksTruncated].RecordFee(feeRate);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assignedTo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fee&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sufficientPriority<sp/>&amp;&amp;<sp/>!sufficientFee<sp/>&amp;&amp;<sp/><ref refid="class_c_block_average_1a31ed22222a49a95787f9791f212ec521" kindref="member">CBlockAverage::AreSane</ref>(dPriority))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history[nBlocksTruncated].RecordPriority(dPriority);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assignedTo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neither<sp/>or<sp/>both<sp/>fee<sp/>and<sp/>priority<sp/>sufficient<sp/>to<sp/>get<sp/>confirmed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>know<sp/>why<sp/>they<sp/>got<sp/>confirmed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;estimatefee&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Seen<sp/>TX<sp/>confirm:<sp/>%s<sp/>:<sp/>%s<sp/>fee/%g<sp/>priority,<sp/>took<sp/>%d<sp/>blocks\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assignedTo,<sp/>feeRate.<ref refid="class_c_fee_rate_1ab517bd05a9b78fbd02aabe7d74d7049f" kindref="member">ToString</ref>(),<sp/>dPriority,<sp/>nBlocksAgo);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204" refid="class_c_miner_policy_estimator_1a13e8fe709d07a3e6b1bf31fbc128a998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_miner_policy_estimator_1a13e8fe709d07a3e6b1bf31fbc128a998" kindref="member">CMinerPolicyEstimator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nEntries)<sp/>:<sp/>nBestSeenHeight(0)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history.resize(nEntries);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_c_miner_policy_estimator_1a2b30e1eaa7eec2744c576fba5bd1a168" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_miner_policy_estimator_1a2b30e1eaa7eec2744c576fba5bd1a168" kindref="member">seenBlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CTxMemPoolEntry&gt;&amp;<sp/>entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref><sp/>minRelayFee)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBlockHeight<sp/>&lt;=<sp/>nBestSeenHeight)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>side<sp/>chains<sp/>and<sp/>re-orgs;<sp/>assuming<sp/>they<sp/>are<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>don&apos;t<sp/>affect<sp/>the<sp/>estimate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>if<sp/>an<sp/>attacker<sp/>can<sp/>re-org<sp/>the<sp/>chain<sp/>at<sp/>will,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you&apos;ve<sp/>got<sp/>much<sp/>bigger<sp/>problems<sp/>than<sp/>&quot;attacker<sp/>can<sp/>influence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transaction<sp/>fees.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBestSeenHeight<sp/>=<sp/>nBlockHeight;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>up<sp/>the<sp/>history<sp/>buckets<sp/>based<sp/>on<sp/>how<sp/>long<sp/>transactions<sp/>took</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>confirm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;const<sp/>CTxMemPoolEntry*&gt;<sp/>&gt;<sp/>entriesByConfirmations;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entriesByConfirmations.resize(history.size());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_entry" kindref="compound">CTxMemPoolEntry</ref>&amp;<sp/>entry,<sp/>entries)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>blocks<sp/>did<sp/>it<sp/>take<sp/>for<sp/>miners<sp/>to<sp/>include<sp/>this<sp/>transaction?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>nBlockHeight<sp/>-<sp/>entry.<ref refid="class_c_tx_mem_pool_entry_1ac519a06da6ba8f9358d4301c5cac4ac9" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-org<sp/>made<sp/>us<sp/>lose<sp/>height,<sp/>this<sp/>should<sp/>only<sp/>happen<sp/>if<sp/>we<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>re-org<sp/>on<sp/>a<sp/>difficulty<sp/>transition<sp/>point:<sp/>very<sp/>rare!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((delta-1)<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)history.size())</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>history.size();<sp/></highlight><highlight class="comment">//<sp/>Last<sp/>bucket<sp/>is<sp/>catch-all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entriesByConfirmations.at(delta-1).push_back(&amp;entry);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>entriesByConfirmations.size();<sp/>i++)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>CTxMemPoolEntry*&gt;<sp/>&amp;e<sp/>=<sp/>entriesByConfirmations.at(i);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>at<sp/>most<sp/>10<sp/>random<sp/>entries<sp/>per<sp/>bucket,<sp/>otherwise<sp/>a<sp/>single<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>dominate<sp/>an<sp/>estimate:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.size()<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::random_shuffle(e.begin(),<sp/>e.end());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.resize(10);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_entry" kindref="compound">CTxMemPoolEntry</ref>*<sp/>entry,<sp/>e)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fees<sp/>are<sp/>stored<sp/>and<sp/>reported<sp/>as<sp/>BTC-per-kb:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref><sp/>feeRate(entry-&gt;<ref refid="class_c_tx_mem_pool_entry_1a313b0505c1df8796713e807508ebe456" kindref="member">GetFee</ref>(),<sp/>entry-&gt;<ref refid="class_c_tx_mem_pool_entry_1a500fcb2039ceb24798d8ddb7d548b7b5" kindref="member">GetTxSize</ref>());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPriority<sp/>=<sp/>entry-&gt;<ref refid="class_c_tx_mem_pool_entry_1aa419a2eb4c9f1097e6e692bb8e60ebde" kindref="member">GetPriority</ref>(entry-&gt;<ref refid="class_c_tx_mem_pool_entry_1ac519a06da6ba8f9358d4301c5cac4ac9" kindref="member">GetHeight</ref>());<sp/></highlight><highlight class="comment">//<sp/>Want<sp/>priority<sp/>when<sp/>it<sp/>went<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seenTxConfirm(feeRate,<sp/>minRelayFee,<sp/>dPriority,<sp/>i);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//After<sp/>new<sp/>samples<sp/>are<sp/>added,<sp/>we<sp/>have<sp/>to<sp/>clear<sp/>the<sp/>sorted<sp/>lists,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//so<sp/>they&apos;ll<sp/>be<sp/>resorted<sp/>the<sp/>next<sp/>time<sp/>someone<sp/>asks<sp/>for<sp/>an<sp/>estimate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sortedFeeSamples.clear();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sortedPrioritySamples.clear();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>history.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(history[i].FeeSamples()<sp/>+<sp/>history[i].PrioritySamples()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;estimatefee&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;estimates:<sp/>for<sp/>confirming<sp/>within<sp/>%d<sp/>blocks<sp/>based<sp/>on<sp/>%d/%d<sp/>samples,<sp/>fee=%s,<sp/>prio=%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history[i].FeeSamples(),<sp/>history[i].PrioritySamples(),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_miner_policy_estimator_1a00b6f58a508ee87999910972f37b3281" kindref="member">estimateFee</ref>(i+1).<ref refid="class_c_fee_rate_1ab517bd05a9b78fbd02aabe7d74d7049f" kindref="member">ToString</ref>(),<sp/><ref refid="class_c_miner_policy_estimator_1ae9bb4813622680e6e3b48ea8c0ce41b6" kindref="member">estimatePriority</ref>(i+1));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_c_miner_policy_estimator_1a00b6f58a508ee87999910972f37b3281" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref><sp/><ref refid="class_c_miner_policy_estimator_1a00b6f58a508ee87999910972f37b3281" kindref="member">estimateFee</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlocksToConfirm)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlocksToConfirm--;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBlocksToConfirm<sp/>&lt;<sp/>0<sp/>||<sp/>nBlocksToConfirm<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)history.size())</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>(0);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sortedFeeSamples.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>history.size();<sp/>i++)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history.at(i).GetFeeSamples(sortedFeeSamples);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(sortedFeeSamples.begin(),<sp/>sortedFeeSamples.end(),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::greater&lt;CFeeRate&gt;());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sortedFeeSamples.size()<sp/>&lt;<sp/>11)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eleven<sp/>is<sp/>Gavin&apos;s<sp/>Favorite<sp/>Number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>but<sp/>we<sp/>also<sp/>take<sp/>a<sp/>maximum<sp/>of<sp/>10<sp/>samples<sp/>per<sp/>block<sp/>so<sp/>eleven<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>getting<sp/>samples<sp/>from<sp/>at<sp/>least<sp/>two<sp/>different<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>(0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBucketSize<sp/>=<sp/>history.at(nBlocksToConfirm).FeeSamples();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimates<sp/>should<sp/>not<sp/>increase<sp/>as<sp/>number<sp/>of<sp/>confirmations<sp/>goes<sp/>up,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>estimates<sp/>are<sp/>noisy<sp/>because<sp/>confirmations<sp/>happen<sp/>discretely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>blocks.<sp/>To<sp/>smooth<sp/>out<sp/>the<sp/>estimates,<sp/>use<sp/>all<sp/>samples<sp/>in<sp/>the<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>use<sp/>the<sp/>nth<sp/>highest<sp/>where<sp/>n<sp/>is<sp/>(number<sp/>of<sp/>samples<sp/>in<sp/>previous<sp/>bucket<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>half<sp/>the<sp/>samples<sp/>in<sp/>nBlocksToConfirm<sp/>bucket):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPrevSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nBlocksToConfirm;<sp/>i++)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nPrevSize<sp/>+=<sp/>history.at(i).FeeSamples();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>min(nPrevSize<sp/>+<sp/>nBucketSize/2,<sp/>sortedFeeSamples.size()-1);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sortedFeeSamples[index];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310" refid="class_c_miner_policy_estimator_1ae9bb4813622680e6e3b48ea8c0ce41b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_miner_policy_estimator_1ae9bb4813622680e6e3b48ea8c0ce41b6" kindref="member">estimatePriority</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlocksToConfirm)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlocksToConfirm--;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBlocksToConfirm<sp/>&lt;<sp/>0<sp/>||<sp/>nBlocksToConfirm<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)history.size())</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sortedPrioritySamples.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>history.size();<sp/>i++)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history.at(i).GetPrioritySamples(sortedPrioritySamples);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(sortedPrioritySamples.begin(),<sp/>sortedPrioritySamples.end(),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::greater&lt;double&gt;());</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sortedPrioritySamples.size()<sp/>&lt;<sp/>11)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBucketSize<sp/>=<sp/>history.at(nBlocksToConfirm).PrioritySamples();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimates<sp/>should<sp/>not<sp/>increase<sp/>as<sp/>number<sp/>of<sp/>confirmations<sp/>needed<sp/>goes<sp/>up,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>estimates<sp/>are<sp/>noisy<sp/>because<sp/>confirmations<sp/>happen<sp/>discretely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>blocks.<sp/>To<sp/>smooth<sp/>out<sp/>the<sp/>estimates,<sp/>use<sp/>all<sp/>samples<sp/>in<sp/>the<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>use<sp/>the<sp/>nth<sp/>highest<sp/>where<sp/>n<sp/>is<sp/>(number<sp/>of<sp/>samples<sp/>in<sp/>previous<sp/>buckets<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>half<sp/>the<sp/>samples<sp/>in<sp/>nBlocksToConfirm<sp/>bucket).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPrevSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nBlocksToConfirm;<sp/>i++)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nPrevSize<sp/>+=<sp/>history.at(i).PrioritySamples();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>min(nPrevSize<sp/>+<sp/>nBucketSize/2,<sp/>sortedPrioritySamples.size()-1);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sortedPrioritySamples[index];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="class_c_miner_policy_estimator_1aeb98d716f91294503bd5738589ffe6c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_miner_policy_estimator_1aeb98d716f91294503bd5738589ffe6c3" kindref="member">Write</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>fileout)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="342"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>nBestSeenHeight;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>history.size();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_average" kindref="compound">CBlockAverage</ref>&amp;<sp/>entry,<sp/>history)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="class_c_block_average_1a2c549117b02d3366cbc840dbdf5ebd6b" kindref="member">Write</ref>(fileout);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_c_miner_policy_estimator_1a86e709bc44e9f6f597519173f15595ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_miner_policy_estimator_1a86e709bc44e9f6f597519173f15595ff" kindref="member">Read</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>filein,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>minRelayFee)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFileBestSeenHeight;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein<sp/>&gt;&gt;<sp/>nFileBestSeenHeight;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numEntries;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein<sp/>&gt;&gt;<sp/>numEntries;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numEntries<sp/>&lt;=<sp/>0<sp/>||<sp/>numEntries<sp/>&gt;<sp/>10000)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>estimates<sp/>file.<sp/>Must<sp/>have<sp/>between<sp/>1<sp/>and<sp/>10k<sp/>entries.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CBlockAverage&gt;<sp/>fileHistory;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numEntries;<sp/>i++)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_average" kindref="compound">CBlockAverage</ref><sp/>entry;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="class_c_block_average_1aac4081eec4bf68d7d3a07521ea953489" kindref="member">Read</ref>(filein,<sp/>minRelayFee);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileHistory.push_back(entry);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>we&apos;ve<sp/>processed<sp/>the<sp/>entire<sp/>fee<sp/>estimate<sp/>data<sp/>file<sp/>and<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thrown<sp/>any<sp/>errors,<sp/>we<sp/>can<sp/>copy<sp/>it<sp/>to<sp/>our<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBestSeenHeight<sp/>=<sp/>nFileBestSeenHeight;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history<sp/>=<sp/>fileHistory;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(history.size()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal">};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>CTxMemPool<sp/>stores<sp/>valid-according-to-the-current-best-chain</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>transactions<sp/>that<sp/>may<sp/>be<sp/>included<sp/>in<sp/>the<sp/>next<sp/>block.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>Transactions<sp/>are<sp/>added<sp/>when<sp/>they<sp/>are<sp/>seen<sp/>on<sp/>the<sp/>network</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>(or<sp/>created<sp/>by<sp/>the<sp/>local<sp/>node),<sp/>but<sp/>not<sp/>all<sp/>transactions<sp/>seen</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>are<sp/>added<sp/>to<sp/>the<sp/>pool:<sp/>if<sp/>a<sp/>new<sp/>transaction<sp/>double-spends</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>an<sp/>input<sp/>of<sp/>a<sp/>transaction<sp/>in<sp/>the<sp/>pool,<sp/>it<sp/>is<sp/>dropped,</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>as<sp/>are<sp/>non-standard<sp/>transactions.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="class_c_tx_mem_pool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref></highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransactionsUpdated;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref><sp/>minRelayFee;<sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="394" refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>;</highlight></codeline>
<codeline lineno="395" refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CTransaction&gt;<sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>;</highlight></codeline>
<codeline lineno="396" refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;COutPoint,<sp/>CInPoint&gt;<sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>;</highlight></codeline>
<codeline lineno="397" refid="class_c_tx_mem_pool_1a435be1fdb4567cd7dd981a49cf633c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_miner_policy_estimator" kindref="compound">CMinerPolicyEstimator</ref>*<sp/><ref refid="class_c_tx_mem_pool_1a435be1fdb4567cd7dd981a49cf633c99" kindref="member">minerPolicyEstimator</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CTxMemPool();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a82147548cfa962975690d1926b717c1c" kindref="member">CTxMemPool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>_minRelayFee);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a038108efea0c4312e5bed2ce064702b2" kindref="member">~CTxMemPool</ref>();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="class_c_tx_mem_pool_1a1752e79ce537972fe87e252b9d07d2e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a1752e79ce537972fe87e252b9d07d2e0" kindref="member">fSanityCheck</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a1203ac5cf3bdb88af4922705afad555d" kindref="member">addUnchecked</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRecursive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1ab6f7c0b3ddb8383767d97d22103ffd9b" kindref="member">removeConflicts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a6dba6bce4139392751321438a29b6b09" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a42fa7d41a45562d02e356f2e7708bb02" kindref="member">queryHashes</ref>(std::vector&lt;uint256&gt;&amp;<sp/>vtxid);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">GetTransactionsUpdated</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a3039b67e5eebaa3ff830261c192816f2" kindref="member">AddTransactionsUpdated</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a0dbbcb6a3b7e1a6c564410668c12cd4f" kindref="member">ReadFeeEstimates</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>filein);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a0a05d7b50b9c2a387182402e60475da6" kindref="member">WriteFeeEstimates</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>fileout)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_c_tx_mem_pool_1a0d3646e13e7fce3b1df3dd30b02e3396" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a0d3646e13e7fce3b1df3dd30b02e3396" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="415"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mapTx.size();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_c_tx_mem_pool_1a93b2aa8c01fa291d183a82a9e0beeb35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a93b2aa8c01fa291d183a82a9e0beeb35" kindref="member">exists</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="421"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mapTx.count(hash)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a8c19232d17e668c6690721b0f5088960" kindref="member">lookup</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>result)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMPOOL_HEIGHT<sp/>=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DARKSILK_TXMEMPOOL_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/txmempool.h"/>
  </compounddef>
</doxygen>
