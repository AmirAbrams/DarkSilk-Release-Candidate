<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="cleanse_8cpp" kind="file" language="C++">
    <compoundname>cleanse.cpp</compoundname>
    <includes refid="cleanse_8h" local="yes">cleanse.h</includes>
    <includes local="no">openssl/crypto.h</includes>
    <incdepgraph>
      <node id="31627">
        <label>stdlib.h</label>
      </node>
      <node id="31628">
        <label>openssl/crypto.h</label>
      </node>
      <node id="31625">
        <label>/home/dev/ds-160209/src/cleanse.cpp</label>
        <link refid="cleanse.cpp"/>
        <childnode refid="31626" relation="include">
        </childnode>
        <childnode refid="31628" relation="include">
        </childnode>
      </node>
      <node id="31626">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="31627" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cleanse_8cpp_1a5a4afb85dd16ecc1f6019c782db78663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void memory_cleanse</definition>
        <argsstring>(void *ptr, size_t len)</argsstring>
        <name>memory_cleanse</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/cleanse.cpp" line="10" column="1" bodyfile="/home/dev/ds-160209/src/cleanse.cpp" bodystart="10" bodyend="13"/>
        <referencedby refid="allocators_8h_1a49577b8da0ecffd2fbc222896283004c" compoundref="allocators_8h" startline="189" endline="192">UnlockObject</referencedby>
        <referencedby refid="structsecure__allocator_1af86cc49185bd507b8b479e070d744eb0" compoundref="allocators_8h" startline="227" endline="235">secure_allocator&lt; T &gt;::deallocate</referencedby>
        <referencedby refid="structzero__after__free__allocator_1a63a1610931a9656c9373bf5dce2db796" compoundref="allocators_8h" startline="262" endline="267">zero_after_free_allocator&lt; T &gt;::deallocate</referencedby>
        <referencedby refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</referencedby>
        <referencedby refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" compoundref="crypter_8cpp" startline="25" endline="57">CCrypter::SetKeyFromPassphrase</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cleanse_8h" kindref="compound">cleanse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="cleanse_8h_1a5a4afb85dd16ecc1f6019c782db78663" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cleanse_8cpp_1a5a4afb85dd16ecc1f6019c782db78663" kindref="member">memory_cleanse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>OPENSSL_cleanse(ptr,<sp/>len);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/cleanse.cpp"/>
  </compounddef>
</doxygen>
