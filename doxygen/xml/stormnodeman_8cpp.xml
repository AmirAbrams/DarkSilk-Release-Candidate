<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="stormnodeman_8cpp" kind="file" language="C++">
    <compoundname>stormnodeman.cpp</compoundname>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="activestormnode_8h" local="yes">activestormnode.h</includes>
    <includes refid="sandstorm_8h" local="yes">sandstorm.h</includes>
    <includes refid="stormnode_8h" local="yes">stormnode.h</includes>
    <includes refid="stormnode-payments_8h" local="yes">stormnode-payments.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="addrman_8h" local="yes">addrman.h</includes>
    <includes refid="spork_8h" local="yes">spork.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <incdepgraph>
      <node id="25159">
        <label>list</label>
      </node>
      <node id="25102">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="25203">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25201" relation="include">
        </childnode>
      </node>
      <node id="25096">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman.cpp"/>
        <childnode refid="25097" relation="include">
        </childnode>
        <childnode refid="25210" relation="include">
        </childnode>
        <childnode refid="25219" relation="include">
        </childnode>
        <childnode refid="25209" relation="include">
        </childnode>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25222" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25150" relation="include">
        </childnode>
        <childnode refid="25223" relation="include">
        </childnode>
        <childnode refid="25221" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
      </node>
      <node id="25139">
        <label>netinet/in.h</label>
      </node>
      <node id="25158">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25127" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
      </node>
      <node id="25110">
        <label>arpa/inet.h</label>
      </node>
      <node id="25100">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="25119">
        <label>limits</label>
      </node>
      <node id="25174">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25127" relation="include">
        </childnode>
      </node>
      <node id="25191">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="25158" relation="include">
        </childnode>
        <childnode refid="25146" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25192" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
        <childnode refid="25151" relation="include">
        </childnode>
        <childnode refid="25187" relation="include">
        </childnode>
      </node>
      <node id="25175">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="25176" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25130" relation="include">
        </childnode>
      </node>
      <node id="25184">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25107" relation="include">
        </childnode>
        <childnode refid="25185" relation="include">
        </childnode>
        <childnode refid="25182" relation="include">
        </childnode>
        <childnode refid="25145" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
      </node>
      <node id="25109">
        <label>openssl/rand.h</label>
      </node>
      <node id="25212">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="25213" relation="include">
        </childnode>
        <childnode refid="25215" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
        <childnode refid="25158" relation="include">
        </childnode>
        <childnode refid="25159" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25147">
        <label>assert.h</label>
      </node>
      <node id="25124">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="25138">
        <label>net/if.h</label>
      </node>
      <node id="25219">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25210" relation="include">
        </childnode>
        <childnode refid="25097" relation="include">
        </childnode>
      </node>
      <node id="25222">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
      </node>
      <node id="25190">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="25191" relation="include">
        </childnode>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25193" relation="include">
        </childnode>
        <childnode refid="25158" relation="include">
        </childnode>
        <childnode refid="25205" relation="include">
        </childnode>
      </node>
      <node id="25221">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="25202">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="25176" relation="include">
        </childnode>
      </node>
      <node id="25103">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="25183">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="25144" relation="include">
        </childnode>
        <childnode refid="25182" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
        <childnode refid="25125" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25132">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="25133" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
      </node>
      <node id="25193">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="25194" relation="include">
        </childnode>
        <childnode refid="25190" relation="include">
        </childnode>
        <childnode refid="25147" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25107" relation="include">
        </childnode>
        <childnode refid="25204" relation="include">
        </childnode>
      </node>
      <node id="25129">
        <label>sys/mman.h</label>
      </node>
      <node id="25127">
        <label>stdlib.h</label>
      </node>
      <node id="25206">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="25207" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25144" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25107" relation="include">
        </childnode>
      </node>
      <node id="25107">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="25169">
        <label>openssl/crypto.h</label>
      </node>
      <node id="25220">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
        <childnode refid="25209" relation="include">
        </childnode>
        <childnode refid="25221" relation="include">
        </childnode>
      </node>
      <node id="25134">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="25135" relation="include">
        </childnode>
        <childnode refid="25129" relation="include">
        </childnode>
        <childnode refid="25136" relation="include">
        </childnode>
        <childnode refid="25137" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25110" relation="include">
        </childnode>
        <childnode refid="25140" relation="include">
        </childnode>
        <childnode refid="25130" relation="include">
        </childnode>
        <childnode refid="25141" relation="include">
        </childnode>
        <childnode refid="25131" relation="include">
        </childnode>
        <childnode refid="25142" relation="include">
        </childnode>
      </node>
      <node id="25165">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="25171">
        <label>openssl/sha.h</label>
      </node>
      <node id="25142">
        <label>errno.h</label>
      </node>
      <node id="25118">
        <label>cassert</label>
      </node>
      <node id="25148">
        <label>stdexcept</label>
      </node>
      <node id="25152">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="25137" relation="include">
        </childnode>
        <childnode refid="25153" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25155" relation="include">
        </childnode>
        <childnode refid="25158" relation="include">
        </childnode>
        <childnode refid="25117" relation="include">
        </childnode>
        <childnode refid="25159" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25161" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25163" relation="include">
        </childnode>
        <childnode refid="25164" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25166" relation="include">
        </childnode>
        <childnode refid="25167" relation="include">
        </childnode>
        <childnode refid="25168" relation="include">
        </childnode>
        <childnode refid="25169" relation="include">
        </childnode>
        <childnode refid="25109" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
      </node>
      <node id="25143">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="25144" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25113" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
      </node>
      <node id="25164">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="25198">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25187" relation="include">
        </childnode>
        <childnode refid="25199" relation="include">
        </childnode>
        <childnode refid="25202" relation="include">
        </childnode>
      </node>
      <node id="25114">
        <label>string</label>
      </node>
      <node id="25211">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="25212" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25127" relation="include">
        </childnode>
        <childnode refid="25207" relation="include">
        </childnode>
        <childnode refid="25191" relation="include">
        </childnode>
        <childnode refid="25216" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25215" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
        <childnode refid="25217" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
      </node>
      <node id="25208">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25127" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25104" relation="include">
        </childnode>
      </node>
      <node id="25117">
        <label>map</label>
      </node>
      <node id="25161">
        <label>boost/thread.hpp</label>
      </node>
      <node id="25150">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="25113" relation="include">
        </childnode>
        <childnode refid="25143" relation="include">
        </childnode>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25151" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25117" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25209">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25104" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
        <childnode refid="25151" relation="include">
        </childnode>
      </node>
      <node id="25217">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="25158" relation="include">
        </childnode>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25108" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
      </node>
      <node id="25197">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25178" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25163" relation="include">
        </childnode>
        <childnode refid="25198" relation="include">
        </childnode>
        <childnode refid="25203" relation="include">
        </childnode>
      </node>
      <node id="25176">
        <label>stddef.h</label>
      </node>
      <node id="25185">
        <label>boost/variant.hpp</label>
      </node>
      <node id="25141">
        <label>netdb.h</label>
      </node>
      <node id="25135">
        <label>sys/fcntl.h</label>
      </node>
      <node id="25194">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="25195" relation="include">
        </childnode>
      </node>
      <node id="25201">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25200" relation="include">
        </childnode>
      </node>
      <node id="25205">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="25116">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25117" relation="include">
        </childnode>
        <childnode refid="25112" relation="include">
        </childnode>
        <childnode refid="25118" relation="include">
        </childnode>
        <childnode refid="25119" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25121" relation="include">
        </childnode>
        <childnode refid="25122" relation="include">
        </childnode>
        <childnode refid="25123" relation="include">
        </childnode>
        <childnode refid="25124" relation="include">
        </childnode>
        <childnode refid="25125" relation="include">
        </childnode>
        <childnode refid="25132" relation="include">
        </childnode>
      </node>
      <node id="25130">
        <label>limits.h</label>
      </node>
      <node id="25099">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="25154">
        <label>sys/resource.h</label>
      </node>
      <node id="25111">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="25112" relation="include">
        </childnode>
        <childnode refid="25105" relation="include">
        </childnode>
      </node>
      <node id="25166">
        <label>openssl/bio.h</label>
      </node>
      <node id="25216">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="25125" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25215" relation="include">
        </childnode>
      </node>
      <node id="25108">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="25113">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25134" relation="include">
        </childnode>
      </node>
      <node id="25215">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25182" relation="include">
        </childnode>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
        <childnode refid="25108" relation="include">
        </childnode>
        <childnode refid="25185" relation="include">
        </childnode>
      </node>
      <node id="25170">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="25146" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25171" relation="include">
        </childnode>
        <childnode refid="25172" relation="include">
        </childnode>
        <childnode refid="25173" relation="include">
        </childnode>
        <childnode refid="25174" relation="include">
        </childnode>
        <childnode refid="25175" relation="include">
        </childnode>
        <childnode refid="25177" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25140">
        <label>ifaddrs.h</label>
      </node>
      <node id="25186">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25127" relation="include">
        </childnode>
        <childnode refid="25187" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25188" relation="include">
        </childnode>
      </node>
      <node id="25137">
        <label>sys/types.h</label>
      </node>
      <node id="25180">
        <label>ios</label>
      </node>
      <node id="25128">
        <label>string.h</label>
      </node>
      <node id="25133">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="25122">
        <label>cstdio</label>
      </node>
      <node id="25101">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="25168">
        <label>openssl/buffer.h</label>
      </node>
      <node id="25123">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="25189">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="25190" relation="include">
        </childnode>
        <childnode refid="25104" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
        <childnode refid="25178" relation="include">
        </childnode>
        <childnode refid="25196" relation="include">
        </childnode>
        <childnode refid="25206" relation="include">
        </childnode>
        <childnode refid="25159" relation="include">
        </childnode>
        <childnode refid="25204" relation="include">
        </childnode>
      </node>
      <node id="25163">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="25097">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25104" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
        <childnode refid="25209" relation="include">
        </childnode>
      </node>
      <node id="25204">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="25182">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="25170" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25146" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25131">
        <label>unistd.h</label>
      </node>
      <node id="25214">
        <label>db_cxx.h</label>
      </node>
      <node id="25115">
        <label>vector</label>
      </node>
      <node id="25145">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25146" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
      </node>
      <node id="25104">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="25105" relation="include">
        </childnode>
        <childnode refid="25106" relation="include">
        </childnode>
        <childnode refid="25107" relation="include">
        </childnode>
        <childnode refid="25108" relation="include">
        </childnode>
        <childnode refid="25109" relation="include">
        </childnode>
        <childnode refid="25110" relation="include">
        </childnode>
        <childnode refid="25111" relation="include">
        </childnode>
        <childnode refid="25113" relation="include">
        </childnode>
        <childnode refid="25143" relation="include">
        </childnode>
        <childnode refid="25150" relation="include">
        </childnode>
        <childnode refid="25170" relation="include">
        </childnode>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25172">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="25162">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="25160">
        <label>utility</label>
      </node>
      <node id="25195">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="25191" relation="include">
        </childnode>
        <childnode refid="25196" relation="include">
        </childnode>
      </node>
      <node id="25157">
        <label>sstream</label>
      </node>
      <node id="25218">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="25181">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="25125" relation="include">
        </childnode>
        <childnode refid="25182" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25167">
        <label>openssl/evp.h</label>
      </node>
      <node id="25155">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="25118" relation="include">
        </childnode>
        <childnode refid="25156" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
      </node>
      <node id="25120">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="25213">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25178" relation="include">
        </childnode>
        <childnode refid="25117" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
        <childnode refid="25163" relation="include">
        </childnode>
        <childnode refid="25214" relation="include">
        </childnode>
      </node>
      <node id="25178">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="25125" relation="include">
        </childnode>
        <childnode refid="25116" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25147" relation="include">
        </childnode>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25119" relation="include">
        </childnode>
        <childnode refid="25117" relation="include">
        </childnode>
        <childnode refid="25112" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25128" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25177">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25176" relation="include">
        </childnode>
        <childnode refid="25130" relation="include">
        </childnode>
      </node>
      <node id="25223">
        <label>spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="25145" relation="include">
        </childnode>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25104" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
        <childnode refid="25143" relation="include">
        </childnode>
        <childnode refid="25219" relation="include">
        </childnode>
        <childnode refid="25221" relation="include">
        </childnode>
      </node>
      <node id="25153">
        <label>sys/time.h</label>
      </node>
      <node id="25156">
        <label>iostream</label>
      </node>
      <node id="25105">
        <label>deque</label>
      </node>
      <node id="25146">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="25147" relation="include">
        </childnode>
        <childnode refid="25121" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25136">
        <label>sys/socket.h</label>
      </node>
      <node id="25200">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="25147" relation="include">
        </childnode>
        <childnode refid="25176" relation="include">
        </childnode>
        <childnode refid="25128" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
      </node>
      <node id="25106">
        <label>boost/array.hpp</label>
      </node>
      <node id="25149">
        <label>openssl/bn.h</label>
      </node>
      <node id="25196">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="25197" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
        <childnode refid="25117" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25151">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="25120" relation="include">
        </childnode>
      </node>
      <node id="25125">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="25126" relation="include">
        </childnode>
        <childnode refid="25128" relation="include">
        </childnode>
        <childnode refid="25114" relation="include">
        </childnode>
        <childnode refid="25102" relation="include">
        </childnode>
        <childnode refid="25117" relation="include">
        </childnode>
        <childnode refid="25129" relation="include">
        </childnode>
        <childnode refid="25130" relation="include">
        </childnode>
        <childnode refid="25131" relation="include">
        </childnode>
      </node>
      <node id="25144">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="25145" relation="include">
        </childnode>
        <childnode refid="25146" relation="include">
        </childnode>
        <childnode refid="25115" relation="include">
        </childnode>
      </node>
      <node id="25112">
        <label>set</label>
      </node>
      <node id="25179">
        <label>algorithm</label>
      </node>
      <node id="25210">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="25098" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25211" relation="include">
        </childnode>
      </node>
      <node id="25173">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="25120" relation="include">
        </childnode>
        <childnode refid="25127" relation="include">
        </childnode>
      </node>
      <node id="25192">
        <label>util.h</label>
      </node>
      <node id="25187">
        <label>stdio.h</label>
      </node>
      <node id="25126">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="25127" relation="include">
        </childnode>
      </node>
      <node id="25121">
        <label>cstring</label>
      </node>
      <node id="25098">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="25099" relation="include">
        </childnode>
        <childnode refid="25100" relation="include">
        </childnode>
        <childnode refid="25101" relation="include">
        </childnode>
        <childnode refid="25102" relation="include">
        </childnode>
        <childnode refid="25103" relation="include">
        </childnode>
      </node>
      <node id="25188">
        <label>inttypes.h</label>
      </node>
      <node id="25199">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="25200" relation="include">
        </childnode>
        <childnode refid="25201" relation="include">
        </childnode>
      </node>
      <node id="25207">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="25191" relation="include">
        </childnode>
        <childnode refid="25177" relation="include">
        </childnode>
        <childnode refid="25208" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_compare_last_paid" prot="public">CompareLastPaid</innerclass>
    <innerclass refid="struct_compare_score_tx_in" prot="public">CompareScoreTxIn</innerclass>
    <innerclass refid="struct_compare_score_s_n" prot="public">CompareScoreSN</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_stormnode_man" kindref="compound">CStormnodeMan</ref></type>
        <definition>CStormnodeMan snodeman</definition>
        <argsstring></argsstring>
        <name>snodeman</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stormnode manager </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnodeman.cpp" line="18" column="1" bodyfile="/home/dev/ds-160209/src/stormnodeman.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stormnodeman_8cpp_1ab4bfbf67ff3a5463457d04b68610e18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DumpStormnodes</definition>
        <argsstring>()</argsstring>
        <name>DumpStormnodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnodeman.cpp" line="178" column="1" bodyfile="/home/dev/ds-160209/src/stormnodeman.cpp" bodystart="178" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Dash<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activestormnode_8h" kindref="compound">activestormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sandstorm_8h" kindref="compound">sandstorm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode_8h" kindref="compound">stormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-payments_8h" kindref="compound">stormnode-payments.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="addrman_8h" kindref="compound">addrman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spork_8h" kindref="compound">spork.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="stormnodeman_8h_1a1e28814877e5fb4ed8113e3621ca13ff" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_man" kindref="compound">CStormnodeMan</ref><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_compare_last_paid" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_compare_last_paid" kindref="compound">CompareLastPaid</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="struct_compare_last_paid_1a0a99420c843a6ff56de405b0fc06eef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_compare_last_paid_1a0a99420c843a6ff56de405b0fc06eef6" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;int64_t,<sp/>CTxIn&gt;&amp;<sp/>t1,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;int64_t,<sp/>CTxIn&gt;&amp;<sp/>t2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="24"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1.first<sp/>&lt;<sp/>t2.first;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_compare_score_tx_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_compare_score_tx_in" kindref="compound">CompareScoreTxIn</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31" refid="struct_compare_score_tx_in_1a2f2697a41e3c757f5d9bb73242e31007" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_compare_score_tx_in_1a2f2697a41e3c757f5d9bb73242e31007" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;int64_t,<sp/>CTxIn&gt;&amp;<sp/>t1,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;int64_t,<sp/>CTxIn&gt;&amp;<sp/>t2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1.first<sp/>&lt;<sp/>t2.first;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="struct_compare_score_s_n" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_compare_score_s_n" kindref="compound">CompareScoreSN</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="struct_compare_score_s_n_1a327fb5bbaf8fe8bf42cf26d57203559e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_compare_score_s_n_1a327fb5bbaf8fe8bf42cf26d57203559e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;int64_t,<sp/>CStormnode&gt;&amp;<sp/>t1,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;int64_t,<sp/>CStormnode&gt;&amp;<sp/>t2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1.first<sp/>&lt;<sp/>t2.first;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CStormnodeDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_c_stormnode_d_b_1a212d16c07750eca6c23496e53aec5512" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_d_b_1a212d16c07750eca6c23496e53aec5512" kindref="member">CStormnodeDB::CStormnodeDB</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>pathSN<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;sncache.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>strMagicMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StormnodeCache&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_c_stormnode_d_b_1af60b25c3f72317d363fd6584045c6f5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1af60b25c3f72317d363fd6584045c6f5f" kindref="member">CStormnodeDB::Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man" kindref="compound">CStormnodeMan</ref>&amp;<sp/>snodemanToSave)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serialize,<sp/>checksum<sp/>data<sp/>up<sp/>to<sp/>that<sp/>point,<sp/>then<sp/>append<sp/>checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssStormnodes(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ssStormnodes<sp/>&lt;&lt;<sp/>strMagicMessage;<sp/></highlight><highlight class="comment">//<sp/>stormnode<sp/>cache<sp/>file<sp/>specific<sp/>magic<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>ssStormnodes<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" kindref="member">FLATDATA</ref>(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().MessageStart());<sp/></highlight><highlight class="comment">//<sp/>network<sp/>specific<sp/>magic<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ssStormnodes<sp/>&lt;&lt;<sp/>snodemanToSave;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(ssStormnodes.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ssStormnodes.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ssStormnodes<sp/>&lt;&lt;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>output<sp/>file,<sp/>and<sp/>associate<sp/>with<sp/>CAutoFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(pathSN.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref><sp/>fileout(file,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileout.IsNull())</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Failed<sp/>to<sp/>open<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>pathSN.string());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>and<sp/>commit<sp/>header,<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>ssStormnodes;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Serialize<sp/>or<sp/>I/O<sp/>error<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>FileCommit(fileout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>fileout.fclose();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Written<sp/>info<sp/>to<sp/>sncache.dat<sp/><sp/>%dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>snodemanToSave.ToString());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5ce" kindref="member">CStormnodeDB::ReadResult</ref><sp/><ref refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" kindref="member">CStormnodeDB::Read</ref>(<ref refid="class_c_stormnode_man" kindref="compound">CStormnodeMan</ref>&amp;<sp/>snodemanToLoad,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDryRun)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>input<sp/>file,<sp/>and<sp/>associate<sp/>with<sp/>CAutoFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(pathSN.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref><sp/>filein(file,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filein.IsNull())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Failed<sp/>to<sp/>open<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>pathSN.string());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cead20cc439041690b904357ce10985f17c" kindref="member">FileError</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>file<sp/>size<sp/>to<sp/>size<sp/>memory<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileSize<sp/>=<sp/>boost::filesystem::file_size(pathSN);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>fileSize<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classuint256" kindref="compound">uint256</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>try<sp/>to<sp/>resize<sp/>to<sp/>a<sp/>negative<sp/>number<sp/>if<sp/>file<sp/>is<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSize<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>vchData.resize(dataSize);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashIn;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>data<sp/>and<sp/>checksum<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;vchData[0],<sp/>dataSize);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein<sp/>&gt;&gt;<sp/>hashIn;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Deserialize<sp/>or<sp/>I/O<sp/>error<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5ceac23e2b41aec7d2f6602f85865c78a867" kindref="member">HashReadError</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>filein.fclose();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssStormnodes(vchData,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>stored<sp/>checksum<sp/>matches<sp/>input<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashTmp<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(ssStormnodes.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ssStormnodes.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hashIn<sp/>!=<sp/>hashTmp)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Checksum<sp/>mismatch,<sp/>data<sp/>corrupted&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea93753f40c1b8ef4fb1a6aa0bc891d139" kindref="member">IncorrectHash</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pchMsgTmp[4];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMagicMessageTmp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>de-serialize<sp/>file<sp/>header<sp/>(stormnode<sp/>cache<sp/>file<sp/>specific<sp/>magic<sp/>message)<sp/>and<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssStormnodes<sp/>&gt;&gt;<sp/>strMagicMessageTmp;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>verify<sp/>the<sp/>message<sp/>matches<sp/>predefined<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMagicMessage<sp/>!=<sp/>strMagicMessageTmp)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Invalid<sp/>stormnode<sp/>cache<sp/>magic<sp/>message&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5ceaea2a233f815d95bf31c2f74f056769c7" kindref="member">IncorrectMagicMessage</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>de-serialize<sp/>file<sp/>header<sp/>(network<sp/>specific<sp/>magic<sp/>number)<sp/>and<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssStormnodes<sp/>&gt;&gt;<sp/><ref refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" kindref="member">FLATDATA</ref>(pchMsgTmp);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>verify<sp/>the<sp/>network<sp/>matches<sp/>ours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(pchMsgTmp,<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().MessageStart(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pchMsgTmp)))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Invalid<sp/>network<sp/>magic<sp/>number&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5ceadc704fb8c27e918697c7299457b96bea" kindref="member">IncorrectMagicNumber</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>de-serialize<sp/>data<sp/>into<sp/>CStormnodeMan<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssStormnodes<sp/>&gt;&gt;<sp/>snodemanToLoad;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snodemanToLoad.<ref refid="class_c_stormnode_man_1aef04ea77a6774bf594f205362ba8f91d" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Deserialize<sp/>or<sp/>I/O<sp/>error<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea9092524fb8ce01be56bc89d7eb161b75" kindref="member">IncorrectFormat</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>info<sp/>from<sp/>sncache.dat<sp/><sp/>%dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>snodemanToLoad.<ref refid="class_c_stormnode_man_1a5c49bb4788cad79574d90fdca8ea7464" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fDryRun)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>manager<sp/>-<sp/>cleaning....\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snodemanToLoad.<ref refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" kindref="member">CheckAndRemove</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>manager<sp/>-<sp/>result:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>snodemanToLoad.<ref refid="class_c_stormnode_man_1a5c49bb4788cad79574d90fdca8ea7464" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea2659a41b2f2ec27fe9c3afb3fcefa3a8" kindref="member">Ok</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="stormnodeman_8h_1ab4bfbf67ff3a5463457d04b68610e18b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stormnodeman_8cpp_1ab4bfbf67ff3a5463457d04b68610e18b" kindref="member">DumpStormnodes</ref>()</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_d_b" kindref="compound">CStormnodeDB</ref><sp/>sndb;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man" kindref="compound">CStormnodeMan</ref><sp/>tempSnodeman;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Verifying<sp/>sncache.dat<sp/>format...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5ce" kindref="member">CStormnodeDB::ReadResult</ref><sp/>readResult<sp/>=<sp/>sndb.<ref refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" kindref="member">Read</ref>(tempSnodeman,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>was<sp/>an<sp/>error<sp/>and<sp/>it<sp/>was<sp/>not<sp/>an<sp/>error<sp/>on<sp/>file<sp/>opening<sp/>=&gt;<sp/>do<sp/>not<sp/>proceed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult<sp/>==<sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cead20cc439041690b904357ce10985f17c" kindref="member">CStormnodeDB::FileError</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>stormnode<sp/>cache<sp/>file<sp/>-<sp/>sncache.dat,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult<sp/>!=<sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea2659a41b2f2ec27fe9c3afb3fcefa3a8" kindref="member">CStormnodeDB::Ok</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>sncache.dat:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readResult<sp/>==<sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea9092524fb8ce01be56bc89d7eb161b75" kindref="member">CStormnodeDB::IncorrectFormat</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;magic<sp/>is<sp/>ok<sp/>but<sp/>data<sp/>has<sp/>invalid<sp/>format,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>format<sp/>is<sp/>unknown<sp/>or<sp/>invalid,<sp/>please<sp/>fix<sp/>it<sp/>manually\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Writting<sp/>info<sp/>to<sp/>sncache.dat...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>sndb.<ref refid="class_c_stormnode_d_b_1af60b25c3f72317d363fd6584045c6f5f" kindref="member">Write</ref>(snodeman);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>dump<sp/>finished<sp/><sp/>%dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_c_stormnode_man_1a72855bd5da6330e45c0964f6e1f9ade1" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_man_1a72855bd5da6330e45c0964f6e1f9ade1" kindref="member">CStormnodeMan::CStormnodeMan</ref>()<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" kindref="member">CStormnodeMan::Add</ref>(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>&amp;sn)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>()<sp/>&amp;&amp;<sp/>!sn.<ref refid="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" kindref="member">IsPreEnabled</ref>())</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*psn<sp/>=<sp/><ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodeMan:<sp/>Adding<sp/>new<sp/>Stormnode<sp/>%s<sp/>-<sp/>%i<sp/>now\n&quot;</highlight><highlight class="normal">,<sp/>sn.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>(),<sp/><ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vStormnodes.push_back(sn);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" kindref="member">CStormnodeMan::AskForSN</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>&amp;vin)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;COutPoint,<sp/>int64_t&gt;::iterator<sp/>i<sp/>=<sp/>mWeAskedForStormnodeListEntry.find(vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>mWeAskedForStormnodeListEntry.end())</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>t<sp/>=<sp/>(*i).second;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>&lt;<sp/>t)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>asked<sp/>recently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ask<sp/>for<sp/>the<sp/>snb<sp/>info<sp/>once<sp/>from<sp/>the<sp/>node<sp/>that<sp/>sent<sp/>snp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodeMan::AskForSN<sp/>-<sp/>Asking<sp/>node<sp/>for<sp/>missing<sp/>entry,<sp/>vin:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>vin.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sseg&quot;</highlight><highlight class="normal">,<sp/>vin);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>askAgain<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>+<sp/>STORMNODE_MIN_SNP_SECONDS;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>mWeAskedForStormnodeListEntry[vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>]<sp/>=<sp/>askAgain;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="class_c_stormnode_man_1a2e0f73af79892b3f86b7d1b07eaa85ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1a2e0f73af79892b3f86b7d1b07eaa85ce" kindref="member">CStormnodeMan::Check</ref>()</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" kindref="member">CStormnodeMan::CheckAndRemove</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceExpiredRemoval)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a2e0f73af79892b3f86b7d1b07eaa85ce" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>inactive<sp/>and<sp/>outdated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;CStormnode&gt;::iterator<sp/>it<sp/>=<sp/>vStormnodes.begin();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/>vStormnodes.end()){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it).activeState<sp/>==<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a89fa3f4b7441a2d2add5334396a88b06" kindref="member">CStormnode::STORMNODE_REMOVE</ref><sp/>||</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).activeState<sp/>==<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0abe760cfa737f943c06d449afc2b03f1d" kindref="member">CStormnode::STORMNODE_VIN_SPENT</ref><sp/>||</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(forceExpiredRemoval<sp/>&amp;&amp;<sp/>(*it).activeState<sp/>==<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0ab3e35c4e3e07236ee4bdd2fc0cc11f99" kindref="member">CStormnode::STORMNODE_EXPIRED</ref>)<sp/>||</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).protocolVersion<sp/>&lt;<sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" kindref="member">GetMinStormnodePaymentsProto</ref>())<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodeMan:<sp/>Removing<sp/>inactive<sp/>Stormnode<sp/>%s<sp/>-<sp/>%i<sp/>now\n&quot;</highlight><highlight class="normal">,<sp/>(*it).addr.ToString(),<sp/><ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//erase<sp/>all<sp/>of<sp/>the<sp/>broadcasts<sp/>we&apos;ve<sp/>seen<sp/>from<sp/>this<sp/>vin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>if<sp/>we<sp/>missed<sp/>a<sp/>few<sp/>pings<sp/>and<sp/>the<sp/>node<sp/>was<sp/>removed,<sp/>this<sp/>will<sp/>allow<sp/>is<sp/>to<sp/>get<sp/>it<sp/>back<sp/>without<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>sending<sp/>a<sp/>brand<sp/>new<sp/>snb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CStormnodeBroadcast&gt;::iterator<sp/>it3<sp/>=<sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.begin();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it3<sp/>!=<sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.end()){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it3).second.vin<sp/>==<sp/>(*it).vin){</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ab5874fbd02e921572983d1530cc7d69e" kindref="member">mapSeenSyncSNB</ref>.erase((*it3).first);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.erase(it3++);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it3;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>us<sp/>to<sp/>ask<sp/>for<sp/>this<sp/>stormnode<sp/>again<sp/>if<sp/>we<sp/>see<sp/>another<sp/>ping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;COutPoint,<sp/>int64_t&gt;::iterator<sp/>it2<sp/>=<sp/>mWeAskedForStormnodeListEntry.begin();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it2<sp/>!=<sp/>mWeAskedForStormnodeListEntry.end()){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it2).first<sp/>==<sp/>(*it).vin.prevout){</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWeAskedForStormnodeListEntry.erase(it2++);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it2;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>vStormnodes.erase(it);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>who&apos;s<sp/>asked<sp/>for<sp/>the<sp/>Stormnode<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;CNetAddr,<sp/>int64_t&gt;::iterator<sp/>it1<sp/>=<sp/>mAskedUsForStormnodeList.begin();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it1<sp/>!=<sp/>mAskedUsForStormnodeList.end()){</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it1).second<sp/>&lt;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>())<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAskedUsForStormnodeList.erase(it1++);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>who<sp/>we<sp/>asked<sp/>for<sp/>the<sp/>Stormnode<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>it1<sp/>=<sp/>mWeAskedForStormnodeList.begin();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it1<sp/>!=<sp/>mWeAskedForStormnodeList.end()){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it1).second<sp/>&lt;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWeAskedForStormnodeList.erase(it1++);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>which<sp/>Stormnodes<sp/>we&apos;ve<sp/>asked<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;COutPoint,<sp/>int64_t&gt;::iterator<sp/>it2<sp/>=<sp/>mWeAskedForStormnodeListEntry.begin();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it2<sp/>!=<sp/>mWeAskedForStormnodeListEntry.end()){</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it2).second<sp/>&lt;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWeAskedForStormnodeListEntry.erase(it2++);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it2;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>expired<sp/>mapSeenStormnodeBroadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CStormnodeBroadcast&gt;::iterator<sp/>it3<sp/>=<sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.begin();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it3<sp/>!=<sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.end()){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it3).second.lastPing.sigTime<sp/>&lt;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()-(STORMNODE_REMOVAL_SECONDS*2)){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.erase(it3++);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ab5874fbd02e921572983d1530cc7d69e" kindref="member">mapSeenSyncSNB</ref>.erase((*it3).second.GetHash());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it3;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>expired<sp/>mapSeenStormnodePing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CStormnodePing&gt;::iterator<sp/>it4<sp/>=<sp/><ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.begin();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it4<sp/>!=<sp/><ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.end()){</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it4).second.sigTime<sp/>&lt;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()-(STORMNODE_REMOVAL_SECONDS*2)){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.erase(it4++);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it4;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_c_stormnode_man_1aef04ea77a6774bf594f205362ba8f91d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1aef04ea77a6774bf594f205362ba8f91d" kindref="member">CStormnodeMan::Clear</ref>()</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>vStormnodes.clear();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>mAskedUsForStormnodeList.clear();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>mWeAskedForStormnodeList.clear();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>mWeAskedForStormnodeListEntry.clear();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.clear();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.clear();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CStormnodeMan::CountEnabled</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocolVersion)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>protocolVersion<sp/>=<sp/>protocolVersion<sp/>==<sp/>-1<sp/>?<sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" kindref="member">GetMinStormnodePaymentsProto</ref>()<sp/>:<sp/>protocolVersion;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/>protocolVersion<sp/>||<sp/>!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="class_c_stormnode_man_1a3f8f9f86f01df701533b544903b55113" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1a3f8f9f86f01df701533b544903b55113" kindref="member">CStormnodeMan::SsegUpdate</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().NetworkID()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" kindref="member">CChainParams::MAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" kindref="member">IsRFC1918</ref>()<sp/>||<sp/>pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_net_addr_1a6cfa18f323424408cf7ace36c9a7c2e2" kindref="member">IsLocal</ref>())){</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;CNetAddr,<sp/>int64_t&gt;::iterator<sp/>it<sp/>=<sp/>mWeAskedForStormnodeList.find(pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>mWeAskedForStormnodeList.end())</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>&lt;<sp/>(*it).second)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;sseg<sp/>-<sp/>we<sp/>already<sp/>asked<sp/>%s<sp/>for<sp/>the<sp/>list;<sp/>skipping...\n&quot;</highlight><highlight class="normal">,<sp/>pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;sseg&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>());</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>askAgain<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>+<sp/>STORMNODES_SSEG_SECONDS;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>mWeAskedForStormnodeList[pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>]<sp/>=<sp/>askAgain;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">CStormnodeMan::Find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>&amp;payee)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>payee2;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payee2<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(sn.<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payee2<sp/>==<sp/>payee)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;sn;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_c_stormnode_man_1a64b6022d93220e65e739c5cf8ba74918" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">CStormnodeMan::Find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>&amp;vin)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref><sp/>==<sp/>vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;sn;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="class_c_stormnode_man_1a8daba6b955faaf839f9441b754bd7eef" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">CStormnodeMan::Find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;pubKeyStormnode)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>==<sp/>pubKeyStormnode)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;sn;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deterministically<sp/>select<sp/>the<sp/>oldest/best<sp/>stormnode<sp/>to<sp/>pay<sp/>on<sp/>the<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/><ref refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" kindref="member">CStormnodeMan::GetNextStormnodeInQueueForPayment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFilterSigTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nCount)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*pBestStormnode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pair&lt;int64_t,<sp/>CTxIn&gt;<sp/>&gt;<sp/>vecStormnodeLastPaid;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Make<sp/>a<sp/>vector<sp/>with<sp/>all<sp/>of<sp/>the<sp/>last<sp/>paid<sp/>times</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSnCount<sp/>=<sp/><ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>&amp;sn,<sp/>vStormnodes)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>protocol<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" kindref="member">GetMinStormnodePaymentsProto</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//it&apos;s<sp/>in<sp/>the<sp/>list<sp/>(up<sp/>to<sp/>8<sp/>entries<sp/>ahead<sp/>of<sp/>current<sp/>block<sp/>to<sp/>allow<sp/>propagation)<sp/>--<sp/>so<sp/>let&apos;s<sp/>skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1ac2a8e2a9bef3c4c68c1e464903a1988f" kindref="member">IsScheduled</ref>(sn,<sp/>nBlockHeight))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//it&apos;s<sp/>too<sp/>new,<sp/>wait<sp/>for<sp/>a<sp/>cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fFilterSigTime<sp/>&amp;&amp;<sp/>sn.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>+<sp/>(nSnCount*2.6*60)<sp/>&gt;<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>it<sp/>has<sp/>as<sp/>many<sp/>confirmations<sp/>as<sp/>there<sp/>are<sp/>stormnodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1a8a82685a7b1ea42d49e44459b35932fe" kindref="member">GetStormnodeInputAge</ref>()<sp/>&lt;<sp/>nSnCount)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecStormnodeLastPaid.push_back(make_pair(sn.<ref refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" kindref="member">SecondsSincePayment</ref>(),<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>nCount<sp/>=<sp/>(int)vecStormnodeLastPaid.size();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//when<sp/>the<sp/>network<sp/>is<sp/>in<sp/>the<sp/>process<sp/>of<sp/>upgrading,<sp/>don&apos;t<sp/>penalize<sp/>nodes<sp/>that<sp/>recently<sp/>restarted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fFilterSigTime<sp/>&amp;&amp;<sp/>nCount<sp/>&lt;<sp/>nSnCount/3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" kindref="member">GetNextStormnodeInQueueForPayment</ref>(nBlockHeight,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>nCount);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>them<sp/>high<sp/>to<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vecStormnodeLastPaid.rbegin(),<sp/>vecStormnodeLastPaid.rend(),<sp/><ref refid="struct_compare_last_paid" kindref="compound">CompareLastPaid</ref>());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>at<sp/>1/10<sp/>of<sp/>the<sp/>oldest<sp/>nodes<sp/>(by<sp/>last<sp/>payment),<sp/>calculate<sp/>their<sp/>scores<sp/>and<sp/>pay<sp/>the<sp/>best<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>This<sp/>doesn&apos;t<sp/>look<sp/>at<sp/>who<sp/>is<sp/>being<sp/>paid<sp/>in<sp/>the<sp/>+8-10<sp/>blocks,<sp/>allowing<sp/>for<sp/>double<sp/>payments<sp/>very<sp/>rarely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>1/100<sp/>payments<sp/>should<sp/>be<sp/>a<sp/>double<sp/>payment<sp/>on<sp/>mainnet<sp/>-<sp/>(1/(3000/10))*2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>(chance<sp/>per<sp/>block<sp/>*<sp/>chances<sp/>before<sp/>IsScheduled<sp/>will<sp/>fire)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTenthNetwork<sp/>=<sp/><ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>()/10;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCountTenth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>nHigh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>)&amp;<sp/>s,<sp/>vecStormnodeLastPaid){</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(s.second);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!psn)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>n<sp/>=<sp/>psn-&gt;<ref refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" kindref="member">CalculateScore</ref>(1,<sp/>nBlockHeight-100);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/>nHigh){</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHigh<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBestStormnode<sp/>=<sp/>psn;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCountTenth++;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nCountTenth<sp/>&gt;=<sp/>nTenthNetwork)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pBestStormnode;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*<ref refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" kindref="member">CStormnodeMan::FindRandomNotInVec</ref>(std::vector&lt;CTxIn&gt;<sp/>&amp;vecToExclude,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocolVersion)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>protocolVersion<sp/>=<sp/>protocolVersion<sp/>==<sp/>-1<sp/>?<sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" kindref="member">GetMinStormnodePaymentsProto</ref>()<sp/>:<sp/>protocolVersion;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCountEnabled<sp/>=<sp/><ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>(protocolVersion);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodeMan::FindRandomNotInVec<sp/>-<sp/>nCountEnabled<sp/>-<sp/>vecToExclude.size()<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nCountEnabled<sp/>-<sp/>vecToExclude.size());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nCountEnabled<sp/>-<sp/>vecToExclude.size()<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref><sp/>=<sp/><ref refid="util_8cpp_1a0e44e088732172da6662db2d5e37d4b2" kindref="member">GetRandInt</ref>(nCountEnabled<sp/>-<sp/>vecToExclude.size());</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodeMan::FindRandomNotInVec<sp/>-<sp/>rand<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rand);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>&amp;sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/>protocolVersion<sp/>||<sp/>!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>&amp;usedVin,<sp/>vecToExclude)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref><sp/>==<sp/>usedVin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(--rand<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;sn;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/><ref refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" kindref="member">CStormnodeMan::GetCurrentStormNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockHeight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minProtocol)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>score<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>winner<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>for<sp/>winner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/>minProtocol<sp/>||<sp/>!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>score<sp/>for<sp/>each<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>n<sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" kindref="member">CalculateScore</ref>(mod,<sp/>nBlockHeight);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n2<sp/>=<sp/>n.<ref refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" kindref="member">GetCompact</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>winner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n2<sp/>&gt;<sp/>score){</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winner<sp/>=<sp/>&amp;sn;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>winner;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" kindref="member">CStormnodeMan::GetStormnodeRank</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockHeight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minProtocol,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOnlyActive)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pair&lt;int64_t,<sp/>CTxIn&gt;<sp/>&gt;<sp/>vecStormnodeScores;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>we<sp/>know<sp/>about<sp/>this<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode_8cpp_1a32f5cbabfc2bd53c2f2daedf122a83cb" kindref="member">GetBlockHash</ref>(hash,<sp/>nBlockHeight))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>for<sp/>winner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/>minProtocol)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fOnlyActive)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>n<sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" kindref="member">CalculateScore</ref>(1,<sp/>nBlockHeight);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n2<sp/>=<sp/>n.<ref refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" kindref="member">GetCompact</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecStormnodeScores.push_back(make_pair(n2,<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>));</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vecStormnodeScores.rbegin(),<sp/>vecStormnodeScores.rend(),<sp/><ref refid="struct_compare_score_tx_in" kindref="compound">CompareScoreTxIn</ref>());</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>)&amp;<sp/>s,<sp/>vecStormnodeScores){</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank++;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s.second.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref><sp/>==<sp/>vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rank;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" refkind="member"><highlight class="normal">std::vector&lt;pair&lt;int,<sp/>CStormnode&gt;<sp/>&gt;<sp/><ref refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" kindref="member">CStormnodeMan::GetStormnodeRanks</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockHeight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minProtocol)</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pair&lt;int64_t,<sp/>CStormnode&gt;<sp/>&gt;<sp/>vecStormnodeScores;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pair&lt;int,<sp/>CStormnode&gt;<sp/>&gt;<sp/>vecStormnodeRanks;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>we<sp/>know<sp/>about<sp/>this<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode_8cpp_1a32f5cbabfc2bd53c2f2daedf122a83cb" kindref="member">GetBlockHash</ref>(hash,<sp/>nBlockHeight))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vecStormnodeRanks;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>for<sp/>winner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/>minProtocol)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>n<sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" kindref="member">CalculateScore</ref>(1,<sp/>nBlockHeight);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n2<sp/>=<sp/>n.<ref refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" kindref="member">GetCompact</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecStormnodeScores.push_back(make_pair(n2,<sp/>sn));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vecStormnodeScores.rbegin(),<sp/>vecStormnodeScores.rend(),<sp/><ref refid="struct_compare_score_s_n" kindref="compound">CompareScoreSN</ref>());</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>,<sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>)&amp;<sp/>s,<sp/>vecStormnodeScores){</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank++;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecStormnodeRanks.push_back(make_pair(rank,<sp/>s.second));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vecStormnodeRanks;</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/><ref refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" kindref="member">CStormnodeMan::GetStormnodeByRank</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRank,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockHeight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minProtocol,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOnlyActive)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pair&lt;int64_t,<sp/>CTxIn&gt;<sp/>&gt;<sp/>vecStormnodeScores;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>for<sp/>winner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/>minProtocol)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fOnlyActive)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn.<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>n<sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" kindref="member">CalculateScore</ref>(1,<sp/>nBlockHeight);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n2<sp/>=<sp/>n.<ref refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" kindref="member">GetCompact</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecStormnodeScores.push_back(make_pair(n2,<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vecStormnodeScores.rbegin(),<sp/>vecStormnodeScores.rend(),<sp/><ref refid="struct_compare_score_tx_in" kindref="compound">CompareScoreTxIn</ref>());</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>)&amp;<sp/>s,<sp/>vecStormnodeScores){</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank++;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rank<sp/>==<sp/>nRank)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(s.second);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" kindref="member">CStormnodeMan::ProcessStormnodeConnections</ref>()</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" kindref="member">cs_vNodes</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pnode-&gt;<ref refid="class_c_node_1aab66b45769e6c8009d224c63704a1859" kindref="member">fSandStorm</ref>){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a61589289244edd2ca3bc539d725d885c" kindref="member">pSubmittedToStormnode</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref><sp/>==<sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a61589289244edd2ca3bc539d725d885c" kindref="member">pSubmittedToStormnode</ref>-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Closing<sp/>Stormnode<sp/>connection<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>pnode-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;<ref refid="class_c_node_1af2f7ea958313974e8a948292f060922e" kindref="member">fDisconnect</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674" refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" kindref="member">CStormnodeMan::ProcessMessage</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::string&amp;<sp/>strCommand,<sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>vRecv)</highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//disable<sp/>all<sp/>SandStorm/Stormnode<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_process_message);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;snb&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Stormnode<sp/>Broadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref><sp/>snb;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>snb;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.count(snb.GetHash()))<sp/>{<sp/></highlight><highlight class="comment">//seen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ad9e9ad7392c3fa1ec0af4b178b3c62c0" kindref="member">AddedStormnodeList</ref>(snb.GetHash());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.insert(make_pair(snb.GetHash(),<sp/>snb));</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDoS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!snb.CheckAndUpdate(nDoS)){</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDoS<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>nDoS);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>vout<sp/>that<sp/>was<sp/>signed<sp/>is<sp/>related<sp/>to<sp/>the<sp/>transaction<sp/>that<sp/>spawned<sp/>the<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>this<sp/>is<sp/>expensive,<sp/>so<sp/>it&apos;s<sp/>only<sp/>done<sp/>once<sp/>per<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a21af58bfa950441f5d61e789a876ddda" kindref="member">IsVinAssociatedWithPubkey</ref>(snb.vin,<sp/>snb.pubkey))<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Got<sp/>mismatched<sp/>pubkey<sp/>and<sp/>vin\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>33);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>it&apos;s<sp/>still<sp/>unspent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>this<sp/>is<sp/>checked<sp/>later<sp/>by<sp/>.check()<sp/>in<sp/>many<sp/>places<sp/>and<sp/>by<sp/>ThreadCheckSandStormPool()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(snb.CheckInputsAndAdd(nDoS))<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>this<sp/>as<sp/>a<sp/>peer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1ac575e3335fd15a19b567026491f8f01a" kindref="member">addrman</ref>.<ref refid="class_c_addr_man_1a03fcc7109b5f014760dc50a81f68c5ec" kindref="member">Add</ref>(<ref refid="class_c_address" kindref="compound">CAddress</ref>(snb.addr),<sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>,<sp/>2*60*60);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ad9e9ad7392c3fa1ec0af4b178b3c62c0" kindref="member">AddedStormnodeList</ref>(snb.GetHash());</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Rejected<sp/>Stormnode<sp/>entry<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>snb.addr.ToString());</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDoS<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>nDoS);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;snp&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Stormnode<sp/>Ping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref><sp/>snp;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>snp;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;snp<sp/>-<sp/>Stormnode<sp/>ping,<sp/>vin:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>snp.vin.ToString());</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.count(snp.GetHash()))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//seen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.insert(make_pair(snp.GetHash(),<sp/>snp));</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDoS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(snp.CheckAndUpdate(nDoS))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDoS<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>anything<sp/>significant<sp/>failed,<sp/>mark<sp/>that<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>nDoS);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>nothing<sp/>significant<sp/>failed,<sp/>search<sp/>existing<sp/>Stormnode<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(snp.vin);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>known,<sp/>don&apos;t<sp/>ask<sp/>for<sp/>the<sp/>snb,<sp/>just<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>significant<sp/>is<sp/>broken<sp/>or<sp/>sn<sp/>is<sp/>unknown,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>might<sp/>have<sp/>to<sp/>ask<sp/>for<sp/>a<sp/>stormnode<sp/>entry<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" kindref="member">AskForSN</ref>(pfrom,<sp/>snp.vin);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sseg&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Get<sp/>Stormnode<sp/>list<sp/>or<sp/>specific<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>vin;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vin<sp/>==<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>())<sp/>{<sp/></highlight><highlight class="comment">//only<sp/>should<sp/>ask<sp/>for<sp/>this<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//local<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLocal<sp/>=<sp/>(pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" kindref="member">IsRFC1918</ref>()<sp/>||<sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_net_addr_1a6cfa18f323424408cf7ace36c9a7c2e2" kindref="member">IsLocal</ref>());</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isLocal<sp/>&amp;&amp;<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().<ref refid="class_c_chain_params_1a90dc493ec0c0325c98c3ac06eb99862b" kindref="member">NetworkID</ref>()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" kindref="member">CChainParams::MAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;CNetAddr,<sp/>int64_t&gt;::iterator<sp/>i<sp/>=<sp/>mAskedUsForStormnodeList.find(pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>mAskedUsForStormnodeList.end()){</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>t<sp/>=<sp/>(*i).second;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>&lt;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>34);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;sseg<sp/>-<sp/>peer<sp/>already<sp/>asked<sp/>me<sp/>for<sp/>the<sp/>list\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>askAgain<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>+<sp/>STORMNODES_SSEG_SECONDS;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAskedUsForStormnodeList[pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>]<sp/>=<sp/>askAgain;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//else,<sp/>asking<sp/>for<sp/>a<sp/>specific<sp/>node<sp/>which<sp/>is<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nInvCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/>vStormnodes)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" kindref="member">IsRFC1918</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//local<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sn.<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sseg<sp/>-<sp/>Sending<sp/>Stormnode<sp/>entry<sp/>-<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>sn.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vin<sp/>==<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>()<sp/>||<sp/>vin<sp/>==<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>){</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref><sp/>snb<sp/>=<sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref>(sn);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a7cef2333aa8776127a7e7fcab659eb6a" kindref="member">PushInventory</ref>(<ref refid="class_c_inv" kindref="compound">CInv</ref>(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8ab71287146f20951917e47c06023ae400" kindref="member">MSG_STORMNODE_ANNOUNCE</ref>,<sp/>hash));</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nInvCount++;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.count(hash))<sp/><ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.insert(make_pair(hash,<sp/>snb));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vin<sp/>==<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;sseg<sp/>-<sp/>Sent<sp/>1<sp/>Stormnode<sp/>entries<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vin<sp/>==<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>())<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;ssc&quot;</highlight><highlight class="normal">,<sp/>STORMNODE_SYNC_LIST,<sp/>nInvCount);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;sseg<sp/>-<sp/>Sent<sp/>%d<sp/>Stormnode<sp/>entries<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>nInvCount,<sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="class_c_stormnode_man_1ad1732f409f53dc6186c6bb40894f1ed5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_man_1ad1732f409f53dc6186c6bb40894f1ed5" kindref="member">CStormnodeMan::Remove</ref>(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;CStormnode&gt;::iterator<sp/>it<sp/>=<sp/>vStormnodes.begin();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/>vStormnodes.end()){</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it).vin<sp/>==<sp/>vin){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodeMan:<sp/>Removing<sp/>Stormnode<sp/>%s<sp/>-<sp/>%i<sp/>now\n&quot;</highlight><highlight class="normal">,<sp/>(*it).addr.ToString(),<sp/><ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vStormnodes.erase(it);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820" refid="class_c_stormnode_man_1a5c49bb4788cad79574d90fdca8ea7464" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_stormnode_man_1a5c49bb4788cad79574d90fdca8ea7464" kindref="member">CStormnodeMan::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="821"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>info;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stormnodes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)vStormnodes.size()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>peers<sp/>who<sp/>asked<sp/>us<sp/>for<sp/>Stormnode<sp/>list:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)mAskedUsForStormnodeList.size()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>peers<sp/>we<sp/>asked<sp/>for<sp/>Stormnode<sp/>list:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)mWeAskedForStormnodeList.size()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>entries<sp/>in<sp/>Stormnode<sp/>list<sp/>we<sp/>asked<sp/>for:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)mWeAskedForStormnodeListEntry.size()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>nSsqCount:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)<ref refid="class_c_stormnode_man_1a28c2a3dcb6098e416de7b1758b8d48da" kindref="member">nSsqCount</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info.str();</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/stormnodeman.cpp"/>
  </compounddef>
</doxygen>
