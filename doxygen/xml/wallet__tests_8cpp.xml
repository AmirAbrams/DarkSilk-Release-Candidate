<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="wallet__tests_8cpp" kind="file" language="C++">
    <compoundname>wallet_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="wallet_8h" local="yes">wallet.h</includes>
    <incdepgraph>
      <node id="26505">
        <label>list</label>
      </node>
      <node id="26474">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="26539">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26537" relation="include">
        </childnode>
      </node>
      <node id="26553">
        <label>netinet/in.h</label>
      </node>
      <node id="26457">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26472" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
      </node>
      <node id="26546">
        <label>arpa/inet.h</label>
      </node>
      <node id="26523">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="26464">
        <label>limits</label>
      </node>
      <node id="26492">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26472" relation="include">
        </childnode>
      </node>
      <node id="26493">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="26494" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26476" relation="include">
        </childnode>
      </node>
      <node id="26456">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="26457" relation="include">
        </childnode>
        <childnode refid="26480" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26483" relation="include">
        </childnode>
        <childnode refid="26484" relation="include">
        </childnode>
        <childnode refid="26520" relation="include">
        </childnode>
        <childnode refid="26518" relation="include">
        </childnode>
      </node>
      <node id="26484">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26485" relation="include">
        </childnode>
        <childnode refid="26486" relation="include">
        </childnode>
        <childnode refid="26487" relation="include">
        </childnode>
        <childnode refid="26496" relation="include">
        </childnode>
        <childnode refid="26498" relation="include">
        </childnode>
        <childnode refid="26517" relation="include">
        </childnode>
      </node>
      <node id="26516">
        <label>openssl/rand.h</label>
      </node>
      <node id="26564">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="26565" relation="include">
        </childnode>
        <childnode refid="26567" relation="include">
        </childnode>
        <childnode refid="26517" relation="include">
        </childnode>
        <childnode refid="26457" relation="include">
        </childnode>
        <childnode refid="26505" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26506" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26481">
        <label>assert.h</label>
      </node>
      <node id="26469">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="26552">
        <label>net/if.h</label>
      </node>
      <node id="26455">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="26456" relation="include">
        </childnode>
        <childnode refid="26521" relation="include">
        </childnode>
        <childnode refid="26526" relation="include">
        </childnode>
        <childnode refid="26457" relation="include">
        </childnode>
        <childnode refid="26541" relation="include">
        </childnode>
      </node>
      <node id="26538">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="26494" relation="include">
        </childnode>
      </node>
      <node id="26525">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="26478">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="26479" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
      </node>
      <node id="26453">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="26526">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="26527" relation="include">
        </childnode>
        <childnode refid="26455" relation="include">
        </childnode>
        <childnode refid="26481" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26485" relation="include">
        </childnode>
        <childnode refid="26540" relation="include">
        </childnode>
      </node>
      <node id="26475">
        <label>sys/mman.h</label>
      </node>
      <node id="26472">
        <label>stdlib.h</label>
      </node>
      <node id="26560">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="26561" relation="include">
        </childnode>
        <childnode refid="26498" relation="include">
        </childnode>
        <childnode refid="26558" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26485" relation="include">
        </childnode>
      </node>
      <node id="26485">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="26515">
        <label>openssl/crypto.h</label>
      </node>
      <node id="26549">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="26550" relation="include">
        </childnode>
        <childnode refid="26475" relation="include">
        </childnode>
        <childnode refid="26551" relation="include">
        </childnode>
        <childnode refid="26499" relation="include">
        </childnode>
        <childnode refid="26552" relation="include">
        </childnode>
        <childnode refid="26553" relation="include">
        </childnode>
        <childnode refid="26546" relation="include">
        </childnode>
        <childnode refid="26554" relation="include">
        </childnode>
        <childnode refid="26476" relation="include">
        </childnode>
        <childnode refid="26555" relation="include">
        </childnode>
        <childnode refid="26477" relation="include">
        </childnode>
        <childnode refid="26556" relation="include">
        </childnode>
      </node>
      <node id="26511">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="26489">
        <label>openssl/sha.h</label>
      </node>
      <node id="26556">
        <label>errno.h</label>
      </node>
      <node id="26463">
        <label>cassert</label>
      </node>
      <node id="26482">
        <label>stdexcept</label>
      </node>
      <node id="26498">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="26499" relation="include">
        </childnode>
        <childnode refid="26500" relation="include">
        </childnode>
        <childnode refid="26501" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26502" relation="include">
        </childnode>
        <childnode refid="26457" relation="include">
        </childnode>
        <childnode refid="26461" relation="include">
        </childnode>
        <childnode refid="26505" relation="include">
        </childnode>
        <childnode refid="26506" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26507" relation="include">
        </childnode>
        <childnode refid="26508" relation="include">
        </childnode>
        <childnode refid="26509" relation="include">
        </childnode>
        <childnode refid="26510" relation="include">
        </childnode>
        <childnode refid="26511" relation="include">
        </childnode>
        <childnode refid="26512" relation="include">
        </childnode>
        <childnode refid="26513" relation="include">
        </childnode>
        <childnode refid="26514" relation="include">
        </childnode>
        <childnode refid="26515" relation="include">
        </childnode>
        <childnode refid="26516" relation="include">
        </childnode>
        <childnode refid="26497" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
      </node>
      <node id="26557">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="26558" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26548" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
      </node>
      <node id="26510">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="26534">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26518" relation="include">
        </childnode>
        <childnode refid="26535" relation="include">
        </childnode>
        <childnode refid="26538" relation="include">
        </childnode>
      </node>
      <node id="26459">
        <label>string</label>
      </node>
      <node id="26563">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="26564" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26472" relation="include">
        </childnode>
        <childnode refid="26561" relation="include">
        </childnode>
        <childnode refid="26456" relation="include">
        </childnode>
        <childnode refid="26569" relation="include">
        </childnode>
        <childnode refid="26454" relation="include">
        </childnode>
        <childnode refid="26568" relation="include">
        </childnode>
        <childnode refid="26567" relation="include">
        </childnode>
        <childnode refid="26484" relation="include">
        </childnode>
        <childnode refid="26570" relation="include">
        </childnode>
        <childnode refid="26498" relation="include">
        </childnode>
        <childnode refid="26517" relation="include">
        </childnode>
      </node>
      <node id="26562">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26472" relation="include">
        </childnode>
        <childnode refid="26498" relation="include">
        </childnode>
        <childnode refid="26542" relation="include">
        </childnode>
      </node>
      <node id="26461">
        <label>map</label>
      </node>
      <node id="26507">
        <label>boost/thread.hpp</label>
      </node>
      <node id="26559">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="26548" relation="include">
        </childnode>
        <childnode refid="26557" relation="include">
        </childnode>
        <childnode refid="26521" relation="include">
        </childnode>
        <childnode refid="26520" relation="include">
        </childnode>
        <childnode refid="26498" relation="include">
        </childnode>
        <childnode refid="26461" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26570">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="26457" relation="include">
        </childnode>
        <childnode refid="26571" relation="include">
        </childnode>
        <childnode refid="26545" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
      </node>
      <node id="26530">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26531" relation="include">
        </childnode>
        <childnode refid="26498" relation="include">
        </childnode>
        <childnode refid="26509" relation="include">
        </childnode>
        <childnode refid="26534" relation="include">
        </childnode>
        <childnode refid="26539" relation="include">
        </childnode>
      </node>
      <node id="26494">
        <label>stddef.h</label>
      </node>
      <node id="26486">
        <label>boost/variant.hpp</label>
      </node>
      <node id="26555">
        <label>netdb.h</label>
      </node>
      <node id="26550">
        <label>sys/fcntl.h</label>
      </node>
      <node id="26527">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="26528" relation="include">
        </childnode>
      </node>
      <node id="26537">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26536" relation="include">
        </childnode>
      </node>
      <node id="26541">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="26458">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26461" relation="include">
        </childnode>
        <childnode refid="26462" relation="include">
        </childnode>
        <childnode refid="26463" relation="include">
        </childnode>
        <childnode refid="26464" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26466" relation="include">
        </childnode>
        <childnode refid="26467" relation="include">
        </childnode>
        <childnode refid="26468" relation="include">
        </childnode>
        <childnode refid="26469" relation="include">
        </childnode>
        <childnode refid="26470" relation="include">
        </childnode>
        <childnode refid="26478" relation="include">
        </childnode>
      </node>
      <node id="26476">
        <label>limits.h</label>
      </node>
      <node id="26522">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="26547">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="26462" relation="include">
        </childnode>
        <childnode refid="26543" relation="include">
        </childnode>
      </node>
      <node id="26501">
        <label>sys/resource.h</label>
      </node>
      <node id="26512">
        <label>openssl/bio.h</label>
      </node>
      <node id="26569">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="26470" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26567" relation="include">
        </childnode>
      </node>
      <node id="26545">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="26548">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26549" relation="include">
        </childnode>
      </node>
      <node id="26452">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet_tests.cpp"/>
        <childnode refid="26453" relation="include">
        </childnode>
        <childnode refid="26454" relation="include">
        </childnode>
        <childnode refid="26563" relation="include">
        </childnode>
      </node>
      <node id="26567">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="26568" relation="include">
        </childnode>
        <childnode refid="26487" relation="include">
        </childnode>
        <childnode refid="26521" relation="include">
        </childnode>
        <childnode refid="26484" relation="include">
        </childnode>
        <childnode refid="26545" relation="include">
        </childnode>
        <childnode refid="26486" relation="include">
        </childnode>
      </node>
      <node id="26488">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="26480" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26489" relation="include">
        </childnode>
        <childnode refid="26490" relation="include">
        </childnode>
        <childnode refid="26491" relation="include">
        </childnode>
        <childnode refid="26492" relation="include">
        </childnode>
        <childnode refid="26493" relation="include">
        </childnode>
        <childnode refid="26495" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26554">
        <label>ifaddrs.h</label>
      </node>
      <node id="26517">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="26498" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26472" relation="include">
        </childnode>
        <childnode refid="26518" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26519" relation="include">
        </childnode>
      </node>
      <node id="26499">
        <label>sys/types.h</label>
      </node>
      <node id="26533">
        <label>ios</label>
      </node>
      <node id="26473">
        <label>string.h</label>
      </node>
      <node id="26479">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="26467">
        <label>cstdio</label>
      </node>
      <node id="26524">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="26514">
        <label>openssl/buffer.h</label>
      </node>
      <node id="26468">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="26454">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="26455" relation="include">
        </childnode>
        <childnode refid="26542" relation="include">
        </childnode>
        <childnode refid="26484" relation="include">
        </childnode>
        <childnode refid="26531" relation="include">
        </childnode>
        <childnode refid="26529" relation="include">
        </childnode>
        <childnode refid="26560" relation="include">
        </childnode>
        <childnode refid="26505" relation="include">
        </childnode>
        <childnode refid="26540" relation="include">
        </childnode>
      </node>
      <node id="26509">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="26540">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="26487">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="26488" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26480" relation="include">
        </childnode>
        <childnode refid="26482" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26477">
        <label>unistd.h</label>
      </node>
      <node id="26566">
        <label>db_cxx.h</label>
      </node>
      <node id="26460">
        <label>vector</label>
      </node>
      <node id="26496">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26480" relation="include">
        </childnode>
        <childnode refid="26497" relation="include">
        </childnode>
        <childnode refid="26482" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
      </node>
      <node id="26542">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="26543" relation="include">
        </childnode>
        <childnode refid="26544" relation="include">
        </childnode>
        <childnode refid="26485" relation="include">
        </childnode>
        <childnode refid="26545" relation="include">
        </childnode>
        <childnode refid="26516" relation="include">
        </childnode>
        <childnode refid="26546" relation="include">
        </childnode>
        <childnode refid="26547" relation="include">
        </childnode>
        <childnode refid="26548" relation="include">
        </childnode>
        <childnode refid="26557" relation="include">
        </childnode>
        <childnode refid="26559" relation="include">
        </childnode>
        <childnode refid="26488" relation="include">
        </childnode>
        <childnode refid="26531" relation="include">
        </childnode>
      </node>
      <node id="26490">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="26508">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="26506">
        <label>utility</label>
      </node>
      <node id="26528">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="26456" relation="include">
        </childnode>
        <childnode refid="26529" relation="include">
        </childnode>
      </node>
      <node id="26504">
        <label>sstream</label>
      </node>
      <node id="26571">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="26568">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="26470" relation="include">
        </childnode>
        <childnode refid="26487" relation="include">
        </childnode>
        <childnode refid="26482" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26513">
        <label>openssl/evp.h</label>
      </node>
      <node id="26502">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="26463" relation="include">
        </childnode>
        <childnode refid="26503" relation="include">
        </childnode>
        <childnode refid="26504" relation="include">
        </childnode>
        <childnode refid="26482" relation="include">
        </childnode>
      </node>
      <node id="26465">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="26565">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26521" relation="include">
        </childnode>
        <childnode refid="26531" relation="include">
        </childnode>
        <childnode refid="26461" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
        <childnode refid="26509" relation="include">
        </childnode>
        <childnode refid="26566" relation="include">
        </childnode>
      </node>
      <node id="26531">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="26470" relation="include">
        </childnode>
        <childnode refid="26458" relation="include">
        </childnode>
        <childnode refid="26532" relation="include">
        </childnode>
        <childnode refid="26481" relation="include">
        </childnode>
        <childnode refid="26533" relation="include">
        </childnode>
        <childnode refid="26464" relation="include">
        </childnode>
        <childnode refid="26461" relation="include">
        </childnode>
        <childnode refid="26462" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26473" relation="include">
        </childnode>
        <childnode refid="26506" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26495">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26494" relation="include">
        </childnode>
        <childnode refid="26476" relation="include">
        </childnode>
      </node>
      <node id="26500">
        <label>sys/time.h</label>
      </node>
      <node id="26503">
        <label>iostream</label>
      </node>
      <node id="26543">
        <label>deque</label>
      </node>
      <node id="26480">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="26481" relation="include">
        </childnode>
        <childnode refid="26466" relation="include">
        </childnode>
        <childnode refid="26482" relation="include">
        </childnode>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26551">
        <label>sys/socket.h</label>
      </node>
      <node id="26536">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="26481" relation="include">
        </childnode>
        <childnode refid="26494" relation="include">
        </childnode>
        <childnode refid="26473" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
      </node>
      <node id="26544">
        <label>boost/array.hpp</label>
      </node>
      <node id="26497">
        <label>openssl/bn.h</label>
      </node>
      <node id="26529">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="26530" relation="include">
        </childnode>
        <childnode refid="26454" relation="include">
        </childnode>
        <childnode refid="26461" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26506" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26520">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="26465" relation="include">
        </childnode>
      </node>
      <node id="26470">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="26471" relation="include">
        </childnode>
        <childnode refid="26473" relation="include">
        </childnode>
        <childnode refid="26459" relation="include">
        </childnode>
        <childnode refid="26474" relation="include">
        </childnode>
        <childnode refid="26461" relation="include">
        </childnode>
        <childnode refid="26475" relation="include">
        </childnode>
        <childnode refid="26476" relation="include">
        </childnode>
        <childnode refid="26477" relation="include">
        </childnode>
      </node>
      <node id="26558">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="26496" relation="include">
        </childnode>
        <childnode refid="26480" relation="include">
        </childnode>
        <childnode refid="26460" relation="include">
        </childnode>
      </node>
      <node id="26462">
        <label>set</label>
      </node>
      <node id="26532">
        <label>algorithm</label>
      </node>
      <node id="26491">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="26465" relation="include">
        </childnode>
        <childnode refid="26472" relation="include">
        </childnode>
      </node>
      <node id="26483">
        <label>util.h</label>
      </node>
      <node id="26518">
        <label>stdio.h</label>
      </node>
      <node id="26471">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="26472" relation="include">
        </childnode>
      </node>
      <node id="26466">
        <label>cstring</label>
      </node>
      <node id="26521">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="26522" relation="include">
        </childnode>
        <childnode refid="26523" relation="include">
        </childnode>
        <childnode refid="26524" relation="include">
        </childnode>
        <childnode refid="26474" relation="include">
        </childnode>
        <childnode refid="26525" relation="include">
        </childnode>
      </node>
      <node id="26519">
        <label>inttypes.h</label>
      </node>
      <node id="26535">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="26536" relation="include">
        </childnode>
        <childnode refid="26537" relation="include">
        </childnode>
      </node>
      <node id="26561">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="26456" relation="include">
        </childnode>
        <childnode refid="26495" relation="include">
        </childnode>
        <childnode refid="26562" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="wallet__tests_8cpp_1add319e05a28b292db3c140c41788db65" prot="public" static="no">
        <name>RUN_TESTS</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="7" column="9" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wallet__tests_8cpp_1ac0bb16c4c20b230e7a044546cb1204e8" prot="public" static="no">
        <name>RANDOM_REPEATS</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="11" column="9" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" prot="public" static="no">
        <type>set&lt; pair&lt; const <ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref> *, unsigned int &gt; &gt;</type>
        <definition>typedef set&lt;pair&lt;const CWalletTx*,unsigned int&gt; &gt; CoinSet</definition>
        <argsstring></argsstring>
        <name>CoinSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="15" column="1" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wallet__tests_8cpp_1a9c00a4ed4cd5678f0f6e10271c5de56e" prot="public" static="yes" mutable="no">
        <type><ref refid="class_c_wallet" kindref="compound">CWallet</ref></type>
        <definition>CWallet wallet</definition>
        <argsstring></argsstring>
        <name>wallet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="19" column="1" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wallet__tests_8cpp_1a4882ee1f29d9049f31ff980bddeb253d" prot="public" static="yes" mutable="no">
        <type>vector&lt; <ref refid="class_c_output" kindref="compound">COutput</ref> &gt;</type>
        <definition>vector&lt;COutput&gt; vCoins</definition>
        <argsstring></argsstring>
        <name>vCoins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="20" column="1" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wallet__tests_8cpp_1a02fcd2fd1d72fd5ffe7306423f9e68ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_coin</definition>
        <argsstring>(int64 nValue, int nAge=6 *24, bool fIsFromMe=false, int nInput=0)</argsstring>
        <name>add_coin</name>
        <param>
          <type>int64</type>
          <declname>nValue</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nAge</declname>
          <defval>6 *24</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>fIsFromMe</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nInput</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="22" column="1" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="22" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="wallet__tests_8cpp_1abfe75afdbb6c4aff21180f2277cf9bbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void empty_wallet</definition>
        <argsstring>(void)</argsstring>
        <name>empty_wallet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="43" column="1" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="wallet__tests_8cpp_1ab0591c258c0defdd03553c8d5f06cc49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool equal_sets</definition>
        <argsstring>(CoinSet a, CoinSet b)</argsstring>
        <name>equal_sets</name>
        <param>
          <type><ref refid="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" kindref="member">CoinSet</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" kindref="member">CoinSet</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="50" column="1" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="wallet__tests_8cpp_1aab7a824695edf3faa00177e0aff1221b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(coin_selection_tests)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>coin_selection_tests</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp" line="56" column="1" bodyfile="/home/dev/ds-160209/src/test/wallet_tests.cpp" bodystart="56" bodyend="293"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wallet_8h" kindref="compound">wallet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>times<sp/>to<sp/>run<sp/>all<sp/>the<sp/>tests<sp/>to<sp/>have<sp/>a<sp/>chance<sp/>to<sp/>catch<sp/>errors<sp/>that<sp/>only<sp/>show<sp/>up<sp/>with<sp/>particular<sp/>random<sp/>shuffles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="wallet__tests_8cpp_1add319e05a28b292db3c140c41788db65" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TESTS<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>tests<sp/>fail<sp/>1%<sp/>of<sp/>the<sp/>time<sp/>due<sp/>to<sp/>bad<sp/>luck.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>repeat<sp/>those<sp/>tests<sp/>this<sp/>many<sp/>times<sp/>and<sp/>only<sp/>complain<sp/>if<sp/>all<sp/>iterations<sp/>of<sp/>the<sp/>test<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="wallet__tests_8cpp_1ac0bb16c4c20b230e7a044546cb1204e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANDOM_REPEATS<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/><ref refid="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" kindref="member">CoinSet</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">BOOST_AUTO_TEST_SUITE(wallet_tests)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">static<sp/><ref refid="class_c_wallet" kindref="compound">CWallet</ref><sp/>wallet;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">static<sp/>vector&lt;<ref refid="class_c_output" kindref="compound">COutput</ref>&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_coin(int64<sp/>nValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAge<sp/>=<sp/>6*24,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fIsFromMe<sp/>=<sp/>false,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nInput=0)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>*<sp/>tx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;<ref refid="class_c_transaction_1ab01e4e451d2f3f84b01380979c8fdacc" kindref="member">nLockTime</ref><sp/>=<sp/>i++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>all<sp/>transactions<sp/>get<sp/>different<sp/>hashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.resize(nInput+1);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[nInput].nValue<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>wtx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>(&amp;wallet,<sp/>*tx);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tx;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fIsFromMe)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IsFromMe()<sp/>returns<sp/>(GetDebit()<sp/>&gt;<sp/>0),<sp/>and<sp/>GetDebit()<sp/>is<sp/>0<sp/>if<sp/>vin.empty(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>stop<sp/>vin<sp/>being<sp/>empty,<sp/>and<sp/>cache<sp/>a<sp/>non-zero<sp/>Debit<sp/>to<sp/>fake<sp/>out<sp/>IsFromMe()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx-&gt;<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.resize(1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx-&gt;<ref refid="class_c_wallet_tx_1ad2dca68c99f2e677e5999c9872a269da" kindref="member">fDebitCached</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx-&gt;<ref refid="class_c_wallet_tx_1aafed9b6aeecef4f9159ee73a8d69262d" kindref="member">nDebitCached</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>output(wtx,<sp/>nInput,<sp/>nAge);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>vCoins.push_back(output);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>empty_wallet(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_output" kindref="compound">COutput</ref><sp/>output,<sp/>vCoins)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>output.tx;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>vCoins.clear();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal_sets(<ref refid="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" kindref="member">CoinSet</ref><sp/>a,<sp/><ref refid="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" kindref="member">CoinSet</ref><sp/>b)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;CoinSet::iterator,<sp/>CoinSet::iterator&gt;<sp/>ret<sp/>=<sp/>mismatch(a.begin(),<sp/>a.end(),<sp/>b.begin());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret.first<sp/>==<sp/>a.end()<sp/>&amp;&amp;<sp/>ret.second<sp/>==<sp/>b.end();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="wallet__tests_8cpp_1aab7a824695edf3faa00177e0aff1221b" refkind="member"><highlight class="normal"><ref refid="wallet__tests_8cpp_1aab7a824695edf3faa00177e0aff1221b" kindref="member">BOOST_AUTO_TEST_CASE</ref>(coin_selection_tests)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="wallet__tests_8cpp_1afedf556ea571f612358e1ea41b63a3b5" kindref="member">CoinSet</ref><sp/>setCoinsRet,<sp/>setCoinsRet2;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64<sp/>nValueRet;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>multiple<sp/>times<sp/>to<sp/>allow<sp/>for<sp/>differences<sp/>in<sp/>the<sp/>shuffle<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="wallet__tests_8cpp_1add319e05a28b292db3c140c41788db65" kindref="member">RUN_TESTS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>an<sp/>empty<sp/>wallet<sp/>we<sp/>can&apos;t<sp/>even<sp/>pay<sp/>one<sp/>cent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>1<sp/>*<sp/>CENT,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(1*CENT,<sp/>4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>new<sp/>1<sp/>cent<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>new<sp/>1<sp/>cent<sp/>coin,<sp/>we<sp/>still<sp/>can&apos;t<sp/>find<sp/>a<sp/>mature<sp/>1<sp/>cent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>1<sp/>*<sp/>CENT,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>find<sp/>a<sp/>new<sp/>1<sp/>cent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>1<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(2*CENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>mature<sp/>2<sp/>cent<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>make<sp/>3<sp/>cents<sp/>of<sp/>mature<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>3<sp/>*<sp/>CENT,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>make<sp/>3<sp/>cents<sp/>of<sp/>new<sp/><sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>3<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>3<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(5*CENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>mature<sp/>5<sp/>cent<sp/>coin,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(10*CENT,<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>a<sp/>new<sp/>10<sp/>cent<sp/>coin<sp/>sent<sp/>from<sp/>one<sp/>of<sp/>our<sp/>own<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(20*CENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>mature<sp/>20<sp/>cent<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>new:<sp/>1+10=11<sp/>(of<sp/>which<sp/>10<sp/>was<sp/>self-sent),<sp/>and<sp/>mature:<sp/>2+5+20=27.<sp/><sp/>total<sp/>=<sp/>38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>make<sp/>38<sp/>cents<sp/>only<sp/>if<sp/>we<sp/>disallow<sp/>new<sp/>coins:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(38<sp/>*<sp/>CENT,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>even<sp/>make<sp/>37<sp/>cents<sp/>if<sp/>we<sp/>don&apos;t<sp/>allow<sp/>new<sp/>coins<sp/>even<sp/>if<sp/>they&apos;re<sp/>from<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(38<sp/>*<sp/>CENT,<sp/>6,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>make<sp/>37<sp/>cents<sp/>if<sp/>we<sp/>accept<sp/>new<sp/>coins<sp/>from<sp/>ourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(37<sp/>*<sp/>CENT,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>37<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>can<sp/>make<sp/>38<sp/>cents<sp/>if<sp/>we<sp/>accept<sp/>all<sp/>new<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(38<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>38<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>making<sp/>34<sp/>cents<sp/>from<sp/>1,2,5,10,20<sp/>-<sp/>we<sp/>can&apos;t<sp/>do<sp/>it<sp/>exactly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(34<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_GT(nValueRet,<sp/>34<sp/>*<sp/>CENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>should<sp/>get<sp/>more<sp/>than<sp/>34<sp/>cents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>3);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>best<sp/>should<sp/>be<sp/>20+10+5.<sp/><sp/>it&apos;s<sp/>incredibly<sp/>unlikely<sp/>the<sp/>1<sp/>or<sp/>2<sp/>got<sp/>included<sp/>(but<sp/>possible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>we<sp/>try<sp/>making<sp/>7<sp/>cents,<sp/>the<sp/>smaller<sp/>coins<sp/>(1,2,5)<sp/>are<sp/>enough.<sp/><sp/>We<sp/>should<sp/>see<sp/>just<sp/>2+5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>7<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>7<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>we<sp/>try<sp/>making<sp/>8<sp/>cents,<sp/>the<sp/>smaller<sp/>coins<sp/>(1,2,5)<sp/>are<sp/>exactly<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>8<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(nValueRet<sp/>==<sp/>8<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>3);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>we<sp/>try<sp/>making<sp/>9<sp/>cents,<sp/>no<sp/>subset<sp/>of<sp/>smaller<sp/>coins<sp/>is<sp/>enough,<sp/>and<sp/>we<sp/>get<sp/>the<sp/>next<sp/>bigger<sp/>coin<sp/>(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(<sp/>9<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>10<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>clear<sp/>out<sp/>the<sp/>wallet<sp/>and<sp/>start<sp/>again<sp/>to<sp/>test<sp/>choosing<sp/>between<sp/>subsets<sp/>of<sp/>smaller<sp/>coins<sp/>and<sp/>the<sp/>next<sp/>biggest<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>6*CENT);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>7*CENT);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>8*CENT);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(20*CENT);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(30*CENT);<sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>6+7+8+20+30<sp/>=<sp/>71<sp/>cents<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>have<sp/>71<sp/>and<sp/>not<sp/>72</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(71<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(72<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>try<sp/>making<sp/>16<sp/>cents.<sp/><sp/>the<sp/>best<sp/>smaller<sp/>coins<sp/>can<sp/>do<sp/>is<sp/>6+7+8<sp/>=<sp/>21;<sp/>not<sp/>as<sp/>good<sp/>at<sp/>the<sp/>next<sp/>biggest<sp/>coin,<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(16<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>20<sp/>*<sp/>CENT);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>20<sp/>in<sp/>one<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>5*CENT);<sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>5+6+7+8+20+30<sp/>=<sp/>75<sp/>cents<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>if<sp/>we<sp/>try<sp/>making<sp/>16<sp/>cents<sp/>again,<sp/>the<sp/>smaller<sp/>coins<sp/>can<sp/>make<sp/>5+6+7<sp/>=<sp/>18<sp/>cents,<sp/>better<sp/>than<sp/>the<sp/>next<sp/>biggest<sp/>coin,<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(16<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>18<sp/>*<sp/>CENT);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>18<sp/>in<sp/>3<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>3);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>18*CENT);<sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>5+6+7+8+18+20+30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>now<sp/>if<sp/>we<sp/>try<sp/>making<sp/>16<sp/>cents<sp/>again,<sp/>the<sp/>smaller<sp/>coins<sp/>can<sp/>make<sp/>5+6+7<sp/>=<sp/>18<sp/>cents,<sp/>the<sp/>same<sp/>as<sp/>the<sp/>next<sp/>biggest<sp/>coin,<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(16<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>18<sp/>*<sp/>CENT);<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>18<sp/>in<sp/>1<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>because<sp/>in<sp/>the<sp/>event<sp/>of<sp/>a<sp/>tie,<sp/>the<sp/>biggest<sp/>coin<sp/>wins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>try<sp/>making<sp/>11<sp/>cents.<sp/><sp/>we<sp/>should<sp/>get<sp/>5+6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(11<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>11<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>2);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>smallest<sp/>bigger<sp/>coin<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>1*COIN);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>2*COIN);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>3*COIN);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>4*COIN);<sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>5+6+7+8+18+20+30+100+200+300+400<sp/>=<sp/>1094<sp/>cents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(95<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1<sp/>*<sp/>COIN);<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>1<sp/>DRKSLK<sp/>in<sp/>1<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>1);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(195<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>2<sp/>*<sp/>COIN);<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>2<sp/>DRKSLK<sp/>in<sp/>1<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>the<sp/>wallet<sp/>and<sp/>start<sp/>again,<sp/>now<sp/>with<sp/>fractions<sp/>of<sp/>a<sp/>cent,<sp/>to<sp/>test<sp/>sub-cent<sp/>change<sp/>avoidance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.1*CENT);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.2*CENT);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.3*CENT);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.4*CENT);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.5*CENT);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>making<sp/>1<sp/>cent<sp/>from<sp/>0.1<sp/>+<sp/>0.2<sp/>+<sp/>0.3<sp/>+<sp/>0.4<sp/>+<sp/>0.5<sp/>=<sp/>1.5<sp/>cents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ll<sp/>get<sp/>sub-cent<sp/>change<sp/>whatever<sp/>happens,<sp/>so<sp/>can<sp/>expect<sp/>1.0<sp/>exactly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(1<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>if<sp/>we<sp/>add<sp/>a<sp/>bigger<sp/>coin,<sp/>making<sp/>it<sp/>possible<sp/>to<sp/>avoid<sp/>sub-cent<sp/>change,<sp/>things<sp/>change:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(1111*CENT);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>making<sp/>1<sp/>cent<sp/>from<sp/>0.1<sp/>+<sp/>0.2<sp/>+<sp/>0.3<sp/>+<sp/>0.4<sp/>+<sp/>0.5<sp/>+<sp/>1111<sp/>=<sp/>1112.5<sp/>cents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(1<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1<sp/>*<sp/>CENT);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>the<sp/>exact<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>add<sp/>more<sp/>sub-cent<sp/>coins:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.6*CENT);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.7*CENT);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>try<sp/>again<sp/>to<sp/>make<sp/>1.0<sp/>cents,<sp/>we<sp/>can<sp/>still<sp/>make<sp/>1.0<sp/>cents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(1<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1<sp/>*<sp/>CENT);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>the<sp/>exact<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>&apos;mtgox&apos;<sp/>test<sp/>(see<sp/>http://blockexplorer.com/tx/29a3efd3ef04f9153d47a990bd7b048a4b2d213daaa5fb8ed670fb85f13bdbcf)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>tried<sp/>to<sp/>consolidate<sp/>10<sp/>50k<sp/>coins<sp/>into<sp/>one<sp/>500k<sp/>coin,<sp/>and<sp/>ended<sp/>up<sp/>with<sp/>50k<sp/>in<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(50000<sp/>*<sp/>COIN);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(500000<sp/>*<sp/>COIN,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>500000<sp/>*<sp/>COIN);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>the<sp/>exact<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>10);<sp/></highlight><highlight class="comment">//<sp/>in<sp/>ten<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there&apos;s<sp/>not<sp/>enough<sp/>in<sp/>the<sp/>smaller<sp/>coins<sp/>to<sp/>make<sp/>at<sp/>least<sp/>1<sp/>cent<sp/>change<sp/>(0.5+0.6+0.7<sp/>&lt;<sp/>1.0+1.0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>try<sp/>finding<sp/>an<sp/>exact<sp/>subset<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sometimes<sp/>it<sp/>will<sp/>fail,<sp/>and<sp/>so<sp/>we<sp/>use<sp/>the<sp/>next<sp/>biggest<sp/>coin:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.5<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.6<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.7<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(1111<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(1<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1111<sp/>*<sp/>CENT);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>get<sp/>the<sp/>bigger<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>1);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>sometimes<sp/>it&apos;s<sp/>possible,<sp/>and<sp/>we<sp/>use<sp/>an<sp/>exact<sp/>subset<sp/>(0.4<sp/>+<sp/>0.6<sp/>=<sp/>1.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.4<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.6<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.8<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(1111<sp/>*<sp/>CENT);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(1<sp/>*<sp/>CENT,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1<sp/>*<sp/>CENT);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>the<sp/>exact<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>in<sp/>two<sp/>coins<sp/>0.4+0.6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>avoiding<sp/>sub-cent<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.0005<sp/>*<sp/>COIN);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(0.01<sp/>*<sp/>COIN);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(1<sp/>*<sp/>COIN);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>make<sp/>1.0001<sp/>from<sp/>these<sp/>three<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(1.0001<sp/>*<sp/>COIN,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1.0105<sp/>*<sp/>COIN);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>all<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>3);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>if<sp/>we<sp/>try<sp/>to<sp/>make<sp/>0.999,<sp/>we<sp/>should<sp/>take<sp/>the<sp/>bigger<sp/>of<sp/>the<sp/>two<sp/>small<sp/>coins<sp/>to<sp/>avoid<sp/>sub-cent<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(<sp/>wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(0.999<sp/>*<sp/>COIN,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(nValueRet,<sp/>1.01<sp/>*<sp/>COIN);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>get<sp/>1<sp/>+<sp/>0.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_EQUAL(setCoinsRet.size(),<sp/>2);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>randomness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_wallet();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2<sp/>=<sp/>0;<sp/>i2<sp/>&lt;<sp/>100;<sp/>i2++)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(COIN);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>picking<sp/>50<sp/>from<sp/>100<sp/>coins<sp/>doesn&apos;t<sp/>depend<sp/>on<sp/>the<sp/>shuffle,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>does<sp/>depend<sp/>on<sp/>randomness<sp/>in<sp/>the<sp/>stochastic<sp/>approximation<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(50<sp/>*<sp/>COIN,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet<sp/>,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(50<sp/>*<sp/>COIN,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet2,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(!equal_sets(setCoinsRet,<sp/>setCoinsRet2));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fails<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="wallet__tests_8cpp_1ac0bb16c4c20b230e7a044546cb1204e8" kindref="member">RANDOM_REPEATS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selecting<sp/>1<sp/>from<sp/>100<sp/>identical<sp/>coins<sp/>depends<sp/>on<sp/>the<sp/>shuffle;<sp/>this<sp/>test<sp/>will<sp/>fail<sp/>1%<sp/>of<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>test<sp/>RANDOM_REPEATS<sp/>times<sp/>and<sp/>only<sp/>complain<sp/>if<sp/>all<sp/>of<sp/>them<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(COIN,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet<sp/>,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(COIN,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet2,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equal_sets(setCoinsRet,<sp/>setCoinsRet2))</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fails++;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_NE(fails,<sp/>RANDOM_REPEATS);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>75<sp/>cents<sp/>in<sp/>small<sp/>change.<sp/><sp/>not<sp/>enough<sp/>to<sp/>make<sp/>90<sp/>cents,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>try<sp/>making<sp/>90<sp/>cents.<sp/><sp/>there<sp/>are<sp/>multiple<sp/>competing<sp/>&quot;smallest<sp/>bigger&quot;<sp/>coins,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>of<sp/>which<sp/>should<sp/>be<sp/>picked<sp/>at<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_coin(<sp/>5*CENT);<sp/>add_coin(10*CENT);<sp/>add_coin(15*CENT);<sp/>add_coin(20*CENT);<sp/>add_coin(25*CENT);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fails<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="wallet__tests_8cpp_1ac0bb16c4c20b230e7a044546cb1204e8" kindref="member">RANDOM_REPEATS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selecting<sp/>1<sp/>from<sp/>100<sp/>identical<sp/>coins<sp/>depends<sp/>on<sp/>the<sp/>shuffle;<sp/>this<sp/>test<sp/>will<sp/>fail<sp/>1%<sp/>of<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>test<sp/>RANDOM_REPEATS<sp/>times<sp/>and<sp/>only<sp/>complain<sp/>if<sp/>all<sp/>of<sp/>them<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(90*CENT,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet<sp/>,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(wallet.<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">SelectCoinsMinConf</ref>(90*CENT,<sp/>1,<sp/>6,<sp/>vCoins,<sp/>setCoinsRet2,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equal_sets(setCoinsRet,<sp/>setCoinsRet2))</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fails++;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_NE(fails,<sp/>RANDOM_REPEATS);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/wallet_tests.cpp"/>
  </compounddef>
</doxygen>
