<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_active_stormnode" kind="class" language="C++" prot="public">
    <compoundname>CActiveStormnode</compoundname>
    <includes refid="activestormnode_8h" local="no">activestormnode.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_active_stormnode_1a1032e37c7fc9b0642b2b76173fba21b7" prot="private" static="no" mutable="yes">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection CActiveStormnode::cs</definition>
        <argsstring></argsstring>
        <name>cs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="24" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
        <definition>CPubKey CActiveStormnode::pubKeyStormnode</definition>
        <argsstring></argsstring>
        <name>pubKeyStormnode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="39" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">Register</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref></type>
        <definition>CTxIn CActiveStormnode::vin</definition>
        <argsstring></argsstring>
        <name>vin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">Register</referencedby>
        <referencedby refid="instantx_8h_1a0753801d6e6eb2cb230a85a6ba6fd371" compoundref="instantx_8cpp" startline="259" endline="299">DoConsensusVote</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aaff1bdc7f9f32708efc9094bb6ab0e0d" compoundref="rpcstormnode-budget_8cpp" startline="569" endline="761">snfinalbudget</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" compoundref="sandstorm_8cpp" startline="869" endline="888">CSandstormPool::CheckForCompleteQueue</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" compoundref="sandstorm_8cpp" startline="1813" endline="1867">CSandstormPool::IsCompatibleWithSession</referencedby>
        <referencedby refid="class_c_finalized_budget_1a8d5710eaf0fe541dcdce1d5f2ebee51c" compoundref="stormnode-budget_8cpp" startline="1914" endline="1940">CFinalizedBudget::SubmitVote</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_service" kindref="compound">CService</ref></type>
        <definition>CService CActiveStormnode::service</definition>
        <argsstring></argsstring>
        <name>service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">Register</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CActiveStormnode::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="45" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" compoundref="activestormnode_8cpp" startline="142" endline="151">GetStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" compoundref="activestormnode_8cpp" startline="402" endline="415">EnableHotColdStormNode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CActiveStormnode::notCapableReason</definition>
        <argsstring></argsstring>
        <name>notCapableReason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="46" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" compoundref="activestormnode_8cpp" startline="142" endline="151">GetStatus</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_active_stormnode_1a717558c5c580ece599b458525e92e2ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CActiveStormnode::SendStormnodePing</definition>
        <argsstring>(std::string &amp;errorMessage)</argsstring>
        <name>SendStormnodePing</name>
        <param>
          <type>std::string &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Ping Stormnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="27" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="153" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1a240041d47eccbd814de0e0f281a60cf0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CActiveStormnode::Register</definition>
        <argsstring>(CTxIn vin, CService service, CKey key, CPubKey pubKey, CKey keyStormnode, CPubKey pubKeyStormnode, std::string &amp;retErrorMessage)</argsstring>
        <name>Register</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref></type>
          <declname>vin</declname>
        </param>
        <param>
          <type><ref refid="class_c_service" kindref="compound">CService</ref></type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
          <declname>pubKey</declname>
        </param>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref></type>
          <declname>keyStormnode</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
          <declname>pubKeyStormnode</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>retErrorMessage</declname>
        </param>
        <briefdescription>
<para>Register any Stormnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="255" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1a9f8d760b72615c9d5a73bb7f117aae37" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CActiveStormnode::GetStormNodeVin</definition>
        <argsstring>(CTxIn &amp;vin, CPubKey &amp;pubkey, CKey &amp;secretKey, std::string strTxHash, std::string strOutputIndex)</argsstring>
        <name>GetStormNodeVin</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>secretKey</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strTxHash</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strOutputIndex</declname>
        </param>
        <briefdescription>
<para>Get 10000 DRKSLK input that can be used for the Stormnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="296" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1a83b2a907a14ee65936e22361276b176b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CActiveStormnode::GetVinFromOutput</definition>
        <argsstring>(COutput out, CTxIn &amp;vin, CPubKey &amp;pubkey, CKey &amp;secretKey)</argsstring>
        <name>GetVinFromOutput</name>
        <param>
          <type><ref refid="class_c_output" kindref="compound">COutput</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>secretKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="34" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="338" bodyend="362"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_active_stormnode_1a9bc5169371b86150c909ecc8105b738d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CActiveStormnode::CActiveStormnode</definition>
        <argsstring>()</argsstring>
        <name>CActiveStormnode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CActiveStormnode::ManageStatus</definition>
        <argsstring>()</argsstring>
        <name>ManageStatus</name>
        <briefdescription>
<para>Manage status of main Stormnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="54" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="17" bodyend="140"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</references>
        <references refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" compoundref="activestormnode_8h" startline="45">status</references>
        <references refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" compoundref="activestormnode_8cpp" startline="142" endline="151">GetStatus</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" compoundref="stormnodeman_8cpp" startline="400" endline="412">CStormnodeMan::Find</references>
        <references refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" compoundref="activestormnode_8h" startline="39">pubKeyStormnode</references>
        <references refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">CStormnode::Check</references>
        <references refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" compoundref="stormnode_8h" startline="242" endline="245">CStormnode::IsEnabled</references>
        <references refid="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" compoundref="stormnode_8h" startline="247" endline="250">CStormnode::IsPreEnabled</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">CStormnode::protocolVersion</references>
        <references refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" compoundref="activestormnode_8cpp" startline="402" endline="415">EnableHotColdStormNode</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">CStormnode::vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" compoundref="activestormnode_8h" startline="46">notCapableReason</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="class_c_wallet_1afb8dee3ffdf2bc5e7499b10bb65efdaf" compoundref="wallet_8cpp" startline="1318" endline="1332">CWallet::GetBalance</references>
        <references refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" compoundref="util_8cpp" startline="78">strStormNodeAddr</references>
        <references refid="net_8cpp_1a51605827c953a7843f9b165eada26857" compoundref="net_8cpp" startline="105" endline="127">GetLocal</references>
        <references refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" compoundref="activestormnode_8h" startline="43">service</references>
        <references refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">CService::ToString</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1a90dc493ec0c0325c98c3ac06eb99862b">CChainParams::NetworkID</references>
        <references refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" compoundref="chainparams_8h" startline="39">CChainParams::MAIN</references>
        <references refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" compoundref="netbase_8cpp" startline="1149" endline="1152">CService::GetPort</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="net_8cpp_1ac6e0da5071d4eaa6960dbf889c765834" compoundref="net_8cpp" startline="378" endline="443">ConnectNode</references>
        <references refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" compoundref="activestormnode_8h" startline="42">vin</references>
        <references refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" compoundref="main_8cpp" startline="1487" endline="1504">GetInputAge</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" compoundref="wallet_8h" startline="131">CWallet::cs_wallet</references>
        <references refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" compoundref="wallet_8cpp" startline="4737" endline="4741">CWallet::LockCoin</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" compoundref="sandstorm_8cpp" startline="28">sandStormSigner</references>
        <references refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" compoundref="sandstorm_8cpp" startline="2044" endline="2057">CSandStormSigner::SetKey</references>
        <references refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" compoundref="util_8cpp" startline="77">strStormNodePrivKey</references>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" compoundref="stormnode-sync_8cpp" startline="225" endline="405">CStormnodeSync::Process</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CActiveStormnode::GetStatus</definition>
        <argsstring>()</argsstring>
        <name>GetStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="55" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="142" bodyend="151"/>
        <references refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" compoundref="activestormnode_8h" startline="45">status</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" compoundref="activestormnode_8h" startline="46">notCapableReason</references>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">Register</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CActiveStormnode::Register</definition>
        <argsstring>(std::string strService, std::string strKey, std::string strTxHash, std::string strOutputIndex, std::string &amp;errorMessage)</argsstring>
        <name>Register</name>
        <param>
          <type>std::string</type>
          <declname>strService</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strKey</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strTxHash</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strOutputIndex</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Register remote Stormnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="58" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="209" bodyend="252"/>
        <references refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" compoundref="activestormnode_8h" startline="42">vin</references>
        <references refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" compoundref="activestormnode_8h" startline="39">pubKeyStormnode</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</references>
        <references refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" compoundref="activestormnode_8cpp" startline="142" endline="151">GetStatus</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" compoundref="sandstorm_8cpp" startline="28">sandStormSigner</references>
        <references refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" compoundref="sandstorm_8cpp" startline="2044" endline="2057">CSandStormSigner::SetKey</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" compoundref="activestormnode_8h" startline="43">service</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" compoundref="chainparams_8h" startline="39">CChainParams::MAIN</references>
        <references refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" compoundref="netbase_8cpp" startline="1149" endline="1152">CService::GetPort</references>
        <references refid="net_8cpp_1ac575e3335fd15a19b567026491f8f01a" compoundref="net_8cpp" startline="61">addrman</references>
        <references refid="class_c_addr_man_1a03fcc7109b5f014760dc50a81f68c5ec" compoundref="addrman_8h" startline="414" endline="426">CAddrMan::Add</references>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1ab0e9106269959f9a396fbf914565e326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CActiveStormnode::GetStormNodeVin</definition>
        <argsstring>(CTxIn &amp;vin, CPubKey &amp;pubkey, CKey &amp;secretKey)</argsstring>
        <name>GetStormNodeVin</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>secretKey</declname>
        </param>
        <briefdescription>
<para>Get 10,000 DRKSLK input that can be used for the Stormnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_c_output" kindref="compound">COutput</ref> &gt;</type>
        <definition>vector&lt; COutput &gt; CActiveStormnode::SelectCoinsStormnode</definition>
        <argsstring>()</argsstring>
        <name>SelectCoinsStormnode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="365" bodyend="399"/>
        <references refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" compoundref="util_8cpp" startline="550" endline="559">GetBoolArg</references>
        <references refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" compoundref="stormnodeconfig_8cpp" startline="14">stormnodeConfig</references>
        <references refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" compoundref="stormnodeconfig_8h" startline="95" endline="97">CStormnodeConfig::getEntries</references>
        <references refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" compoundref="uint256_8cpp" startline="163" endline="189">base_uint&lt; BITS &gt;::SetHex</references>
        <references refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" compoundref="stormnodeconfig_8h" startline="62" endline="64">CStormnodeConfig::CStormnodeEntry::getTxHash</references>
        <references refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</references>
        <references refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" compoundref="stormnodeconfig_8h" startline="46" endline="48">CStormnodeConfig::CStormnodeEntry::getOutputIndex</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_wallet_1abd60f5b890e2c62c05c6a2de6322197f" compoundref="wallet_8cpp" startline="4743" endline="4747">CWallet::UnlockCoin</references>
        <references refid="class_c_wallet_1ad165e7a24c95ff9a5816933d7ca23c9b" compoundref="wallet_8cpp" startline="1711" endline="1768">CWallet::AvailableCoins</references>
        <references refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" compoundref="wallet_8cpp" startline="4737" endline="4741">CWallet::LockCoin</references>
        <references refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" compoundref="wallet_8h" startline="1075">COutput::tx</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" compoundref="wallet_8h" startline="1076">COutput::i</references>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CActiveStormnode::EnableHotColdStormNode</definition>
        <argsstring>(CTxIn &amp;vin, CService &amp;addr)</argsstring>
        <name>EnableHotColdStormNode</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type><ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Enable cold wallet mode (run a Stormnode with no funds) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/activestormnode.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.cpp" bodystart="402" bodyend="415"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" compoundref="activestormnode_8h" startline="45">status</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">ManageStatus</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2121">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="2122">
        <label>CPubKey</label>
        <link refid="class_c_pub_key"/>
      </node>
      <node id="2116">
        <label>CTxIn</label>
        <link refid="class_c_tx_in"/>
        <childnode refid="2117" relation="usage">
          <edgelabel>scriptSig</edgelabel>
          <edgelabel>prevPubKey</edgelabel>
        </childnode>
        <childnode refid="2119" relation="usage">
          <edgelabel>prevout</edgelabel>
        </childnode>
      </node>
      <node id="2120">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="2121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2124">
        <label>CNetAddr</label>
        <link refid="class_c_net_addr"/>
      </node>
      <node id="2115">
        <label>CActiveStormnode</label>
        <link refid="class_c_active_stormnode"/>
        <childnode refid="2116" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="2122" relation="usage">
          <edgelabel>pubKeyStormnode</edgelabel>
        </childnode>
        <childnode refid="2123" relation="usage">
          <edgelabel>service</edgelabel>
        </childnode>
      </node>
      <node id="2119">
        <label>COutPoint</label>
        <link refid="class_c_out_point"/>
        <childnode refid="2120" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="2117">
        <label>CScript</label>
        <link refid="class_c_script"/>
        <childnode refid="2118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2118">
        <label>std::vector&lt; unsigned char &gt;</label>
      </node>
      <node id="2123">
        <label>CService</label>
        <link refid="class_c_service"/>
        <childnode refid="2124" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/activestormnode.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/activestormnode.h" bodystart="20" bodyend="66"/>
    <listofallmembers>
      <member refid="class_c_active_stormnode_1a9bc5169371b86150c909ecc8105b738d" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>CActiveStormnode</name></member>
      <member refid="class_c_active_stormnode_1a1032e37c7fc9b0642b2b76173fba21b7" prot="private" virt="non-virtual"><scope>CActiveStormnode</scope><name>cs</name></member>
      <member refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>EnableHotColdStormNode</name></member>
      <member refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>GetStatus</name></member>
      <member refid="class_c_active_stormnode_1a9f8d760b72615c9d5a73bb7f117aae37" prot="private" virt="non-virtual"><scope>CActiveStormnode</scope><name>GetStormNodeVin</name></member>
      <member refid="class_c_active_stormnode_1ab0e9106269959f9a396fbf914565e326" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>GetStormNodeVin</name></member>
      <member refid="class_c_active_stormnode_1a83b2a907a14ee65936e22361276b176b" prot="private" virt="non-virtual"><scope>CActiveStormnode</scope><name>GetVinFromOutput</name></member>
      <member refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>ManageStatus</name></member>
      <member refid="class_c_active_stormnode_1a53990dc82bb42330202a5fa686ac17d1" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>notCapableReason</name></member>
      <member refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>pubKeyStormnode</name></member>
      <member refid="class_c_active_stormnode_1a240041d47eccbd814de0e0f281a60cf0" prot="private" virt="non-virtual"><scope>CActiveStormnode</scope><name>Register</name></member>
      <member refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>Register</name></member>
      <member refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>SelectCoinsStormnode</name></member>
      <member refid="class_c_active_stormnode_1a717558c5c580ece599b458525e92e2ee" prot="private" virt="non-virtual"><scope>CActiveStormnode</scope><name>SendStormnodePing</name></member>
      <member refid="class_c_active_stormnode_1ac1bd510de0060b100f5c9a1ed520c0c5" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>service</name></member>
      <member refid="class_c_active_stormnode_1a8ab0534b87cbee04dfae4eff95d83786" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>status</name></member>
      <member refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" prot="public" virt="non-virtual"><scope>CActiveStormnode</scope><name>vin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
