<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="filter__block_8cc" kind="file" language="C++">
    <compoundname>filter_block.cc</compoundname>
    <includes refid="filter__block_8h" local="yes">table/filter_block.h</includes>
    <includes refid="filter__policy_8h" local="yes">leveldb/filter_policy.h</includes>
    <includes refid="coding_8h" local="yes">util/coding.h</includes>
    <incdepgraph>
      <node id="9803">
        <label>assert.h</label>
      </node>
      <node id="9800">
        <label>string</label>
      </node>
      <node id="9796">
        <label>/home/dev/ds-160209/src/leveldb/table/filter_block.cc</label>
        <link refid="filter_block.cc"/>
        <childnode refid="9797" relation="include">
        </childnode>
        <childnode refid="9806" relation="include">
        </childnode>
        <childnode refid="9807" relation="include">
        </childnode>
      </node>
      <node id="9798">
        <label>stddef.h</label>
      </node>
      <node id="9807">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="9799" relation="include">
        </childnode>
        <childnode refid="9804" relation="include">
        </childnode>
        <childnode refid="9800" relation="include">
        </childnode>
        <childnode refid="9802" relation="include">
        </childnode>
        <childnode refid="9808" relation="include">
        </childnode>
      </node>
      <node id="9797">
        <label>table/filter_block.h</label>
        <link refid="filter__block_8h"/>
        <childnode refid="9798" relation="include">
        </childnode>
        <childnode refid="9799" relation="include">
        </childnode>
        <childnode refid="9800" relation="include">
        </childnode>
        <childnode refid="9801" relation="include">
        </childnode>
        <childnode refid="9802" relation="include">
        </childnode>
        <childnode refid="9805" relation="include">
        </childnode>
      </node>
      <node id="9804">
        <label>string.h</label>
      </node>
      <node id="9801">
        <label>vector</label>
      </node>
      <node id="9808">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="9804" relation="include">
        </childnode>
      </node>
      <node id="9799">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="9802">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="9803" relation="include">
        </childnode>
        <childnode refid="9798" relation="include">
        </childnode>
        <childnode refid="9804" relation="include">
        </childnode>
        <childnode refid="9800" relation="include">
        </childnode>
      </node>
      <node id="9805">
        <label>util/hash.h</label>
        <link refid="leveldb_2util_2hash_8h"/>
        <childnode refid="9798" relation="include">
        </childnode>
        <childnode refid="9799" relation="include">
        </childnode>
      </node>
      <node id="9806">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="9800" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filter__block_8h" kindref="compound">table/filter_block.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filter__policy_8h" kindref="compound">leveldb/filter_policy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coding_8h" kindref="compound">util/coding.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>doc/table_format.txt<sp/>for<sp/>an<sp/>explanation<sp/>of<sp/>the<sp/>filter<sp/>block<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generate<sp/>new<sp/>filter<sp/>every<sp/>2KB<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kFilterBaseLg<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kFilterBase<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>kFilterBaseLg;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classleveldb_1_1_filter_block_builder_1a8e8b5ae95df5a13c035bec85e22549ca" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_filter_block_builder_1a8e8b5ae95df5a13c035bec85e22549ca" kindref="member">FilterBlockBuilder::FilterBlockBuilder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_filter_policy" kindref="compound">FilterPolicy</ref>*<sp/>policy)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>policy_(policy)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classleveldb_1_1_filter_block_builder_1a766a753a200f7386196a68897e47c1c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_filter_block_builder_1a766a753a200f7386196a68897e47c1c3" kindref="member">FilterBlockBuilder::StartBlock</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>block_offset)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>filter_index<sp/>=<sp/>(block_offset<sp/>/<sp/>kFilterBase);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>assert(filter_index<sp/>&gt;=<sp/>filter_offsets_.size());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(filter_index<sp/>&gt;<sp/>filter_offsets_.size())<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateFilter();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classleveldb_1_1_filter_block_builder_1a4fd9db735c5c72973cec62e4fd98137d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_filter_block_builder_1a4fd9db735c5c72973cec62e4fd98137d" kindref="member">FilterBlockBuilder::AddKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>k<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>start_.push_back(keys_.size());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>keys_.append(k.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>k.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classleveldb_1_1_filter_block_builder_1a75fa127d8af42e749abdd235eed97cad" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="classleveldb_1_1_filter_block_builder_1a75fa127d8af42e749abdd235eed97cad" kindref="member">FilterBlockBuilder::Finish</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!start_.empty())<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateFilter();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>array<sp/>of<sp/>per-filter<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>array_offset<sp/>=<sp/>result_.size();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>filter_offsets_.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" kindref="member">PutFixed32</ref>(&amp;result_,<sp/>filter_offsets_[i]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" kindref="member">PutFixed32</ref>(&amp;result_,<sp/>array_offset);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>result_.push_back(kFilterBaseLg);<sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>encoding<sp/>parameter<sp/>in<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(result_);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FilterBlockBuilder::GenerateFilter()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_keys<sp/>=<sp/>start_.size();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_keys<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>path<sp/>if<sp/>there<sp/>are<sp/>no<sp/>keys<sp/>for<sp/>this<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_offsets_.push_back(result_.size());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>list<sp/>of<sp/>keys<sp/>from<sp/>flattened<sp/>key<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>start_.push_back(keys_.size());<sp/><sp/></highlight><highlight class="comment">//<sp/>Simplify<sp/>length<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>tmp_keys_.resize(num_keys);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_keys;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref><sp/>=<sp/>keys_.data()<sp/>+<sp/>start_[i];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>start_[i+1]<sp/>-<sp/>start_[i];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_keys_[i]<sp/>=<sp/>Slice(base,<sp/>length);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>filter<sp/>for<sp/>current<sp/>set<sp/>of<sp/>keys<sp/>and<sp/>append<sp/>to<sp/>result_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>filter_offsets_.push_back(result_.size());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>policy_-&gt;<ref refid="classleveldb_1_1_filter_policy_1a355e9797e16dd16b93d19056781126b2" kindref="member">CreateFilter</ref>(&amp;tmp_keys_[0],<sp/>num_keys,<sp/>&amp;result_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>tmp_keys_.clear();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>keys_.clear();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>start_.clear();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classleveldb_1_1_filter_block_reader_1a02e9203af5314959ad99057f0020c406" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_filter_block_reader_1a02e9203af5314959ad99057f0020c406" kindref="member">FilterBlockReader::FilterBlockReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_filter_policy" kindref="compound">FilterPolicy</ref>*<sp/>policy,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>contents)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>policy_(policy),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db__bench_8cc_1ad89985b46f05e1611048282ca9abac3d" kindref="member">data_</ref>(NULL),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset_(NULL),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_(0),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base_lg_(0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>contents.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>byte<sp/>for<sp/>base_lg_<sp/>and<sp/>4<sp/>for<sp/>start<sp/>of<sp/>offset<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>base_lg_<sp/>=<sp/>contents[n-1];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>last_word<sp/>=<sp/><ref refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" kindref="member">DecodeFixed32</ref>(contents.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()<sp/>+<sp/>n<sp/>-<sp/>5);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_word<sp/>&gt;<sp/>n<sp/>-<sp/>5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>data_<sp/>=<sp/>contents.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>offset_<sp/>=<sp/>data_<sp/>+<sp/>last_word;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>num_<sp/>=<sp/>(n<sp/>-<sp/>5<sp/>-<sp/>last_word)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classleveldb_1_1_filter_block_reader_1a2c1c0cd8311b99fd92d3548b7aa240d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_filter_block_reader_1a2c1c0cd8311b99fd92d3548b7aa240d0" kindref="member">FilterBlockReader::KeyMayMatch</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>block_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>index<sp/>=<sp/>block_offset<sp/>&gt;&gt;<sp/>base_lg_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>num_)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref><sp/>=<sp/><ref refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" kindref="member">DecodeFixed32</ref>(offset_<sp/>+<sp/>index*4);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>limit<sp/>=<sp/><ref refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" kindref="member">DecodeFixed32</ref>(offset_<sp/>+<sp/>index*4<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&lt;=<sp/>limit<sp/>&amp;&amp;<sp/>limit<sp/>&lt;=<sp/>(offset_<sp/>-<sp/>data_))<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>filter<sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(data_<sp/>+<sp/>start,<sp/>limit<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy_-&gt;<ref refid="classleveldb_1_1_filter_policy_1a6f8ba10ea25e0b4b8d0a6607c361c718" kindref="member">KeyMayMatch</ref>(key,<sp/>filter);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>==<sp/>limit)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>filters<sp/>do<sp/>not<sp/>match<sp/>any<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Errors<sp/>are<sp/>treated<sp/>as<sp/>potential<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/table/filter_block.cc"/>
  </compounddef>
</doxygen>
