<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="namespaceleveldb_1_1test" kind="namespace" language="C++">
    <compoundname>leveldb::test</compoundname>
    <innerclass refid="classleveldb_1_1test_1_1_error_env" prot="public">leveldb::test::ErrorEnv</innerclass>
    <innerclass refid="classleveldb_1_1test_1_1_tester" prot="public">leveldb::test::Tester</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceleveldb_1_1test_1aecde3e0440c4462e8d73aad728e3e819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::test::RegisterTest</definition>
        <argsstring>(const char *base, const char *name, void(*func)())</argsstring>
        <name>RegisterTest</name>
        <param>
          <type>const char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void(*)()</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.cc" line="24" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.cc" bodystart="24" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1_1test_1a3329162c54a0bff42d41c2ac86b2580a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::test::RunAllTests</definition>
        <argsstring>()</argsstring>
        <name>RunAllTests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.cc" line="36" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.cc" bodystart="36" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::test::TmpDir</definition>
        <argsstring>()</argsstring>
        <name>TmpDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.cc" line="60" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.cc" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::test::RandomSeed</definition>
        <argsstring>()</argsstring>
        <name>RandomSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testharness.cc" line="67" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/testharness.cc" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1_1test_1a2132c5f28cd21dcea4348246fa32b673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref></type>
        <definition>Slice leveldb::test::RandomString</definition>
        <argsstring>(Random *rnd, int len, std::string *dst)</argsstring>
        <name>RandomString</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testutil.cc" line="12" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/testutil.cc" bodystart="12" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1_1test_1ae6faec2042472bb9c3da124a677c4b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::test::RandomKey</definition>
        <argsstring>(Random *rnd, int len)</argsstring>
        <name>RandomKey</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testutil.cc" line="20" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/testutil.cc" bodystart="20" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1_1test_1a7e336c887550b617dfd8bc0f61726779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref></type>
        <definition>Slice leveldb::test::CompressibleString</definition>
        <argsstring>(Random *rnd, double compressed_fraction, size_t len, std::string *dst)</argsstring>
        <name>CompressibleString</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>compressed_fraction</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/testutil.cc" line="34" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/testutil.cc" bodystart="34" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/leveldb/util/testharness.cc" line="13" column="1"/>
  </compounddef>
</doxygen>
