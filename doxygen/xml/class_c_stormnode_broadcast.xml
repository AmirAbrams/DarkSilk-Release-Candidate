<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_stormnode_broadcast" kind="class" language="C++" prot="public">
    <compoundname>CStormnodeBroadcast</compoundname>
    <basecompoundref refid="class_c_stormnode" prot="public" virt="non-virtual">CStormnode</basecompoundref>
    <includes refid="stormnode_8h" local="no">stormnode.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_stormnode_broadcast_1a0670b7d1f8b38ad2c3b6bd98e6504f1c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CStormnodeBroadcast::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="298" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnodeBroadcast::CStormnodeBroadcast</definition>
        <argsstring>()</argsstring>
        <name>CStormnodeBroadcast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="289" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="291" bodyend="309"/>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">CStormnode::vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">CStormnode::pubkey</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">CStormnode::pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">CStormnode::sig</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">CStormnode::activeState</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" compoundref="stormnode_8h" startline="115">CStormnode::STORMNODE_ENABLED</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">CStormnode::sigTime</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">CStormnode::lastPing</references>
        <references refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" compoundref="stormnode_8h" startline="129">CStormnode::cacheInputAge</references>
        <references refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" compoundref="stormnode_8h" startline="130">CStormnode::cacheInputAgeBlock</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">CStormnode::unitTest</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">CStormnode::allowFreeTx</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">CStormnode::protocolVersion</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">CStormnode::nLastSsq</references>
        <references refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" compoundref="stormnode_8h" startline="135">CStormnode::nScanningErrorCount</references>
        <references refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" compoundref="stormnode_8h" startline="136">CStormnode::nLastScanningErrorBlockHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1a75374331e61dee9175968332d9cedc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnodeBroadcast::CStormnodeBroadcast</definition>
        <argsstring>(CService newAddr, CTxIn newVin, CPubKey newPubkey, CPubKey newPubkey2, int protocolVersionIn)</argsstring>
        <name>CStormnodeBroadcast</name>
        <param>
          <type><ref refid="class_c_service" kindref="compound">CService</ref></type>
          <declname>newAddr</declname>
        </param>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref></type>
          <declname>newVin</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
          <declname>newPubkey</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
          <declname>newPubkey2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocolVersionIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="290" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="311" bodyend="329"/>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">CStormnode::vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">CStormnode::pubkey</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">CStormnode::pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">CStormnode::sig</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">CStormnode::activeState</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" compoundref="stormnode_8h" startline="115">CStormnode::STORMNODE_ENABLED</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">CStormnode::sigTime</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">CStormnode::lastPing</references>
        <references refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" compoundref="stormnode_8h" startline="129">CStormnode::cacheInputAge</references>
        <references refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" compoundref="stormnode_8h" startline="130">CStormnode::cacheInputAgeBlock</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">CStormnode::unitTest</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">CStormnode::allowFreeTx</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">CStormnode::protocolVersion</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">CStormnode::nLastSsq</references>
        <references refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" compoundref="stormnode_8h" startline="135">CStormnode::nScanningErrorCount</references>
        <references refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" compoundref="stormnode_8h" startline="136">CStormnode::nLastScanningErrorBlockHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1a5f7014f4d8bd8b5a966921b55f50ef90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnodeBroadcast::CStormnodeBroadcast</definition>
        <argsstring>(const CStormnode &amp;sn)</argsstring>
        <name>CStormnodeBroadcast</name>
        <param>
          <type>const <ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>sn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="291" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="331" bodyend="349"/>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">CStormnode::vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">CStormnode::pubkey</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">CStormnode::pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">CStormnode::sig</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">CStormnode::activeState</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">CStormnode::sigTime</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">CStormnode::lastPing</references>
        <references refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" compoundref="stormnode_8h" startline="129">CStormnode::cacheInputAge</references>
        <references refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" compoundref="stormnode_8h" startline="130">CStormnode::cacheInputAgeBlock</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">CStormnode::unitTest</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">CStormnode::allowFreeTx</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">CStormnode::protocolVersion</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">CStormnode::nLastSsq</references>
        <references refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" compoundref="stormnode_8h" startline="135">CStormnode::nScanningErrorCount</references>
        <references refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" compoundref="stormnode_8h" startline="136">CStormnode::nLastScanningErrorBlockHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnodeBroadcast::CheckAndUpdate</definition>
        <argsstring>(int &amp;nDoS)</argsstring>
        <name>CheckAndUpdate</name>
        <param>
          <type>int &amp;</type>
          <declname>nDoS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="293" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="351" bodyend="422"/>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">CStormnode::sigTime</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">CStormnode::vin</references>
        <references refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">CStormnode::pubkey</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" compoundref="pubkey_8h" startline="93" endline="93">CPubKey::end</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">CStormnode::pubkey2</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">CService::ToString</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">CStormnode::protocolVersion</references>
        <references refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" compoundref="stormnode-payments_8cpp" startline="18">stormnodePayments</references>
        <references refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" compoundref="stormnode-payments_8cpp" startline="348" endline="352">CStormnodePayments::GetMinStormnodePaymentsProto</references>
        <references refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" compoundref="script_8cpp" startline="3226" endline="3232">GetScriptForDestination</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" compoundref="transaction_8h" startline="98">CTxIn::scriptSig</references>
        <references refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" compoundref="sandstorm_8cpp" startline="28">sandStormSigner</references>
        <references refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">CStormnode::sig</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" compoundref="chainparams_8h" startline="39">CChainParams::MAIN</references>
        <references refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" compoundref="netbase_8cpp" startline="1149" endline="1152">CService::GetPort</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" compoundref="stormnodeman_8cpp" startline="400" endline="412">CStormnodeMan::Find</references>
        <references refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" compoundref="stormnode_8h" startline="242" endline="245">CStormnode::IsEnabled</references>
        <references refid="class_c_stormnode_1a01713cf27e8c36c1677a5e3bad2674b5" compoundref="stormnode_8h" startline="222" endline="225">CStormnode::IsBroadcastedWithin</references>
        <references refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" compoundref="stormnode_8cpp" startline="128" endline="145">CStormnode::UpdateFromNewBroadcast</references>
        <references refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">CStormnode::Check</references>
        <references refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" compoundref="stormnode_8cpp" startline="509" endline="513">Relay</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1ad9e9ad7392c3fa1ec0af4b178b3c62c0" compoundref="stormnode-sync_8cpp" startline="82" endline="93">CStormnodeSync::AddedStormnodeList</references>
        <references refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" compoundref="stormnode_8h" startline="313" endline="318">GetHash</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnodeBroadcast::CheckInputsAndAdd</definition>
        <argsstring>(int &amp;nDos)</argsstring>
        <name>CheckInputsAndAdd</name>
        <param>
          <type>int &amp;</type>
          <declname>nDos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="294" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="424" bodyend="507"/>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">CStormnode::vin</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" compoundref="sandstorm_8cpp" startline="36">activeStormnode</references>
        <references refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" compoundref="activestormnode_8h" startline="42">CActiveStormnode::vin</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">CStormnode::pubkey2</references>
        <references refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" compoundref="activestormnode_8h" startline="39">CActiveStormnode::pubKeyStormnode</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" compoundref="stormnodeman_8cpp" startline="400" endline="412">CStormnodeMan::Find</references>
        <references refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" compoundref="stormnode_8h" startline="242" endline="245">CStormnode::IsEnabled</references>
        <references refid="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" compoundref="stormnode_8h" startline="247" endline="250">CStormnode::IsPreEnabled</references>
        <references refid="class_c_stormnode_man_1ad1732f409f53dc6186c6bb40894f1ed5" compoundref="stormnodeman_8cpp" startline="805" endline="818">CStormnodeMan::Remove</references>
        <references refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" compoundref="sandstorm_8cpp" startline="26">sandStormPool</references>
        <references refid="class_c_sandstorm_pool_1afc6af6d3ef8fbe2c6238d3564145a015" compoundref="sandstorm_8h" startline="310">CSandstormPool::collateralPubKey</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" compoundref="stormnodeman_8h" startline="69">CStormnodeMan::mapSeenStormnodeBroadcast</references>
        <references refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" compoundref="stormnode_8h" startline="313" endline="318">GetHash</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1ab5874fbd02e921572983d1530cc7d69e" compoundref="stormnode-sync_8h" startline="34">CStormnodeSync::mapSeenSyncSNB</references>
        <references refid="main_8cpp_1af0be4f98088716bf40c79db7734b1d01" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_validation_state_1aba47277dbc39192208515fd8cc685879" compoundref="main_8h" startline="538" endline="540">CValidationState::IsInvalid</references>
        <references refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" compoundref="main_8cpp" startline="1487" endline="1504">GetInputAge</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">CService::ToString</references>
        <references refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">CStormnode::sigTime</references>
        <references refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" compoundref="stormnodeman_8cpp" startline="211" endline="227">CStormnodeMan::Add</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">CStormnode::protocolVersion</references>
        <references refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" compoundref="activestormnode_8cpp" startline="402" endline="415">CActiveStormnode::EnableHotColdStormNode</references>
        <references refid="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" compoundref="netbase_8cpp" startline="650" endline="656">CNetAddr::IsRFC1918</references>
        <references refid="class_c_net_addr_1a6cfa18f323424408cf7ace36c9a7c2e2" compoundref="netbase_8cpp" startline="729" endline="746">CNetAddr::IsLocal</references>
        <references refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" compoundref="stormnode_8cpp" startline="509" endline="513">Relay</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnodeBroadcast::Sign</definition>
        <argsstring>(CKey &amp;keyCollateralAddress)</argsstring>
        <name>Sign</name>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>keyCollateralAddress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="295" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="515" bodyend="537"/>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">CStormnode::pubkey</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" compoundref="pubkey_8h" startline="93" endline="93">CPubKey::end</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">CStormnode::pubkey2</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">CStormnode::sigTime</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">CStormnode::addr</references>
        <references refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" compoundref="netbase_8cpp" startline="1222" endline="1225">CService::ToString</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">CStormnode::protocolVersion</references>
        <references refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" compoundref="sandstorm_8cpp" startline="28">sandStormSigner</references>
        <references refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" compoundref="sandstorm_8cpp" startline="2059" endline="2071">CSandStormSigner::SignMessage</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">CStormnode::sig</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CStormnodeBroadcast::Relay</definition>
        <argsstring>()</argsstring>
        <name>Relay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="296" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="509" bodyend="513"/>
        <references refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8ab71287146f20951917e47c06023ae400" compoundref="protocol_8h" startline="156">MSG_STORMNODE_ANNOUNCE</references>
        <references refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" compoundref="stormnode_8h" startline="313" endline="318">GetHash</references>
        <references refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" compoundref="net_8cpp" startline="196" endline="202">RelayInv</references>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CheckInputsAndAdd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1a5a56ebaf1e2e97ee84186e55440202b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CStormnodeBroadcast::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="301" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="301" bodyend="311"/>
        <references refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" compoundref="serialize_8h" startline="101">READWRITE</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CStormnodeBroadcast::GetHash</definition>
        <argsstring>()</argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="313" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="313" bodyend="318"/>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" compoundref="hash_8h" startline="186" endline="192">CHashWriter::GetHash</references>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" compoundref="stormnode_8cpp" startline="509" endline="513">Relay</referencedby>
        <referencedby refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2771">
        <label>CStormnodeBroadcast</label>
        <link refid="class_c_stormnode_broadcast"/>
        <childnode refid="2772" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2772">
        <label>CStormnode</label>
        <link refid="class_c_stormnode"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2781">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="2775">
        <label>CStormnodePing</label>
        <link refid="class_c_stormnode_ping"/>
        <childnode refid="2776" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="2780" relation="usage">
          <edgelabel>blockHash</edgelabel>
        </childnode>
      </node>
      <node id="2773">
        <label>CStormnodeBroadcast</label>
        <link refid="class_c_stormnode_broadcast"/>
        <childnode refid="2774" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2782">
        <label>CPubKey</label>
        <link refid="class_c_pub_key"/>
      </node>
      <node id="2776">
        <label>CTxIn</label>
        <link refid="class_c_tx_in"/>
        <childnode refid="2777" relation="usage">
          <edgelabel>scriptSig</edgelabel>
          <edgelabel>prevPubKey</edgelabel>
        </childnode>
        <childnode refid="2779" relation="usage">
          <edgelabel>prevout</edgelabel>
        </childnode>
      </node>
      <node id="2780">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="2781" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2784">
        <label>CNetAddr</label>
        <link refid="class_c_net_addr"/>
      </node>
      <node id="2779">
        <label>COutPoint</label>
        <link refid="class_c_out_point"/>
        <childnode refid="2780" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="2774">
        <label>CStormnode</label>
        <link refid="class_c_stormnode"/>
        <childnode refid="2775" relation="usage">
          <edgelabel>lastPing</edgelabel>
        </childnode>
        <childnode refid="2776" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="2782" relation="usage">
          <edgelabel>pubkey</edgelabel>
          <edgelabel>pubkey2</edgelabel>
        </childnode>
        <childnode refid="2783" relation="usage">
          <edgelabel>addr</edgelabel>
        </childnode>
      </node>
      <node id="2777">
        <label>CScript</label>
        <link refid="class_c_script"/>
        <childnode refid="2778" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2778">
        <label>std::vector&lt; unsigned char &gt;</label>
      </node>
      <node id="2783">
        <label>CService</label>
        <link refid="class_c_service"/>
        <childnode refid="2784" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/stormnode.h" line="287" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="286" bodyend="320"/>
    <listofallmembers>
      <member refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>activeState</name></member>
      <member refid="class_c_stormnode_broadcast_1a0670b7d1f8b38ad2c3b6bd98e6504f1c" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>addr</name></member>
      <member refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>allowFreeTx</name></member>
      <member refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>cacheInputAge</name></member>
      <member refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>cacheInputAgeBlock</name></member>
      <member refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CalculateScore</name></member>
      <member refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>Check</name></member>
      <member refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CheckAndUpdate</name></member>
      <member refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CheckInputsAndAdd</name></member>
      <member refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CStormnode</name></member>
      <member refid="class_c_stormnode_1ac5d7c79ce5e3187bf1703bdf968e4c2e" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CStormnode</name></member>
      <member refid="class_c_stormnode_1a81bcdb5b9c2b0219667edc3bfd62c1af" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CStormnode</name></member>
      <member refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CStormnodeBroadcast</name></member>
      <member refid="class_c_stormnode_broadcast_1a75374331e61dee9175968332d9cedc5c" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CStormnodeBroadcast</name></member>
      <member refid="class_c_stormnode_broadcast_1a5f7014f4d8bd8b5a966921b55f50ef90" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>CStormnodeBroadcast</name></member>
      <member refid="class_c_stormnode_1ab97bb31f794c0cfd4d740c0a3cc1efbe" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>Disable</name></member>
      <member refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>GetHash</name></member>
      <member refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>GetLastPaid</name></member>
      <member refid="class_c_stormnode_1a8a82685a7b1ea42d49e44459b35932fe" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>GetStormnodeInputAge</name></member>
      <member refid="class_c_stormnode_1a01713cf27e8c36c1677a5e3bad2674b5" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>IsBroadcastedWithin</name></member>
      <member refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>IsEnabled</name></member>
      <member refid="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>IsPingedWithin</name></member>
      <member refid="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>IsPreEnabled</name></member>
      <member refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>lastPing</name></member>
      <member refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>nLastScanningErrorBlockHeight</name></member>
      <member refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>nLastSsq</name></member>
      <member refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>nScanningErrorCount</name></member>
      <member refid="class_c_stormnode_1af951dafbb25b9e659ef86cd52683aa7f" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>operator=</name></member>
      <member refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>protocolVersion</name></member>
      <member refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>pubkey</name></member>
      <member refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>pubkey2</name></member>
      <member refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>Relay</name></member>
      <member refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>SecondsSincePayment</name></member>
      <member refid="class_c_stormnode_broadcast_1a5a56ebaf1e2e97ee84186e55440202b7" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>SerializationOp</name></member>
      <member refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>sig</name></member>
      <member refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>Sign</name></member>
      <member refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>sigTime</name></member>
      <member refid="class_c_stormnode_1a2231073a0817c566e0d5c3fa08f53b5c" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>SliceHash</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>state</name></member>
      <member refid="class_c_stormnode_1aa96a9dc4e1c835657fe5d9c8410adf83" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>Status</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>STORMNODE_ENABLED</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0ab3e35c4e3e07236ee4bdd2fc0cc11f99" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>STORMNODE_EXPIRED</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a61dac974c55abf841bb617fa4beba96e" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>STORMNODE_POS_ERROR</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4d96c08f8f4c62ae9e43b0d82db5e2f1" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>STORMNODE_PRE_ENABLED</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a89fa3f4b7441a2d2add5334396a88b06" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>STORMNODE_REMOVE</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0abe760cfa737f943c06d449afc2b03f1d" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>STORMNODE_VIN_SPENT</name></member>
      <member refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>swap</name></member>
      <member refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>unitTest</name></member>
      <member refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>UpdateFromNewBroadcast</name></member>
      <member refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" prot="public" virt="non-virtual"><scope>CStormnodeBroadcast</scope><name>vin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
