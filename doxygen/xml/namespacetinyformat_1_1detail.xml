<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="namespacetinyformat_1_1detail" kind="namespace" language="C++">
    <compoundname>tinyformat::detail</compoundname>
    <innerclass refid="structtinyformat_1_1detail_1_1convert_to_int" prot="public">tinyformat::detail::convertToInt</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1convert_to_int_3_01_t_00_01true_01_4" prot="public">tinyformat::detail::convertToInt&lt; T, true &gt;</innerclass>
    <innerclass refid="classtinyformat_1_1detail_1_1_format_iterator" prot="public">tinyformat::detail::FormatIterator</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1format_value_as_type" prot="public">tinyformat::detail::formatValueAsType</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1format_value_as_type_3_01_t_00_01fmt_t_00_01true_01_4" prot="public">tinyformat::detail::formatValueAsType&lt; T, fmtT, true &gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__convertible" prot="public">tinyformat::detail::is_convertible</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar" prot="public">tinyformat::detail::is_wchar</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01const_01wchar__t_01_5_01_4" prot="public">tinyformat::detail::is_wchar&lt; const wchar_t * &gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01const_01wchar__t[n]_4" prot="public">tinyformat::detail::is_wchar&lt; const wchar_t[n]&gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01wchar__t_01_5_01_4" prot="public">tinyformat::detail::is_wchar&lt; wchar_t * &gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01wchar__t[n]_4" prot="public">tinyformat::detail::is_wchar&lt; wchar_t[n]&gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyformat::detail::format</definition>
        <argsstring>(FormatIterator &amp;fmtIter)</argsstring>
        <name>format</name>
        <param>
          <type><ref refid="classtinyformat_1_1detail_1_1_format_iterator" kindref="compound">FormatIterator</ref> &amp;</type>
          <declname>fmtIter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="870" column="1" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="870" bodyend="873"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/tinyformat.h" line="153" column="1"/>
  </compounddef>
</doxygen>
