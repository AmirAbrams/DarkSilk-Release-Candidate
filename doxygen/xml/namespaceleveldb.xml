<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="namespaceleveldb" kind="namespace" language="C++">
    <compoundname>leveldb</compoundname>
    <innerclass refid="classleveldb_1_1_arena" prot="public">leveldb::Arena</innerclass>
    <innerclass refid="classleveldb_1_1_arena_test" prot="public">leveldb::ArenaTest</innerclass>
    <innerclass refid="classleveldb_1_1_auto_compact_test" prot="public">leveldb::AutoCompactTest</innerclass>
    <innerclass refid="classleveldb_1_1_benchmark" prot="public">leveldb::Benchmark</innerclass>
    <innerclass refid="classleveldb_1_1_block" prot="public">leveldb::Block</innerclass>
    <innerclass refid="classleveldb_1_1_block_builder" prot="public">leveldb::BlockBuilder</innerclass>
    <innerclass refid="classleveldb_1_1_block_constructor" prot="public">leveldb::BlockConstructor</innerclass>
    <innerclass refid="structleveldb_1_1_block_contents" prot="public">leveldb::BlockContents</innerclass>
    <innerclass refid="classleveldb_1_1_block_handle" prot="public">leveldb::BlockHandle</innerclass>
    <innerclass refid="classleveldb_1_1_bloom_test" prot="public">leveldb::BloomTest</innerclass>
    <innerclass refid="classleveldb_1_1_cache" prot="public">leveldb::Cache</innerclass>
    <innerclass refid="classleveldb_1_1_cache_test" prot="public">leveldb::CacheTest</innerclass>
    <innerclass refid="classleveldb_1_1_coding" prot="public">leveldb::Coding</innerclass>
    <innerclass refid="classleveldb_1_1_compaction" prot="public">leveldb::Compaction</innerclass>
    <innerclass refid="structleveldb_1_1_comparator" prot="public">leveldb::Comparator</innerclass>
    <innerclass refid="classleveldb_1_1_concurrent_test" prot="public">leveldb::ConcurrentTest</innerclass>
    <innerclass refid="classleveldb_1_1_constructor" prot="public">leveldb::Constructor</innerclass>
    <innerclass refid="classleveldb_1_1_corruption_test" prot="public">leveldb::CorruptionTest</innerclass>
    <innerclass refid="classleveldb_1_1_d_b" prot="public">leveldb::DB</innerclass>
    <innerclass refid="classleveldb_1_1_d_b_constructor" prot="public">leveldb::DBConstructor</innerclass>
    <innerclass refid="classleveldb_1_1_d_b_impl" prot="public">leveldb::DBImpl</innerclass>
    <innerclass refid="classleveldb_1_1_d_b_test" prot="public">leveldb::DBTest</innerclass>
    <innerclass refid="classleveldb_1_1_env" prot="public">leveldb::Env</innerclass>
    <innerclass refid="classleveldb_1_1_env_posix_test" prot="public">leveldb::EnvPosixTest</innerclass>
    <innerclass refid="classleveldb_1_1_env_wrapper" prot="public">leveldb::EnvWrapper</innerclass>
    <innerclass refid="classleveldb_1_1_file_lock" prot="public">leveldb::FileLock</innerclass>
    <innerclass refid="structleveldb_1_1_file_meta_data" prot="public">leveldb::FileMetaData</innerclass>
    <innerclass refid="classleveldb_1_1_file_name_test" prot="public">leveldb::FileNameTest</innerclass>
    <innerclass refid="classleveldb_1_1_filter_block_builder" prot="public">leveldb::FilterBlockBuilder</innerclass>
    <innerclass refid="classleveldb_1_1_filter_block_reader" prot="public">leveldb::FilterBlockReader</innerclass>
    <innerclass refid="classleveldb_1_1_filter_block_test" prot="public">leveldb::FilterBlockTest</innerclass>
    <innerclass refid="classleveldb_1_1_filter_policy" prot="public">leveldb::FilterPolicy</innerclass>
    <innerclass refid="classleveldb_1_1_find_file_test" prot="public">leveldb::FindFileTest</innerclass>
    <innerclass refid="classleveldb_1_1_footer" prot="public">leveldb::Footer</innerclass>
    <innerclass refid="classleveldb_1_1_format_test" prot="public">leveldb::FormatTest</innerclass>
    <innerclass refid="classleveldb_1_1_harness" prot="public">leveldb::Harness</innerclass>
    <innerclass refid="classleveldb_1_1_h_a_s_h" prot="public">leveldb::HASH</innerclass>
    <innerclass refid="classleveldb_1_1_histogram" prot="public">leveldb::Histogram</innerclass>
    <innerclass refid="classleveldb_1_1_internal_filter_policy" prot="public">leveldb::InternalFilterPolicy</innerclass>
    <innerclass refid="classleveldb_1_1_internal_key" prot="public">leveldb::InternalKey</innerclass>
    <innerclass refid="classleveldb_1_1_internal_key_comparator" prot="public">leveldb::InternalKeyComparator</innerclass>
    <innerclass refid="classleveldb_1_1_issue200" prot="public">leveldb::Issue200</innerclass>
    <innerclass refid="classleveldb_1_1_iterator" prot="public">leveldb::Iterator</innerclass>
    <innerclass refid="classleveldb_1_1_iterator_wrapper" prot="public">leveldb::IteratorWrapper</innerclass>
    <innerclass refid="classleveldb_1_1_key_converting_iterator" prot="public">leveldb::KeyConvertingIterator</innerclass>
    <innerclass refid="classleveldb_1_1_logger" prot="public">leveldb::Logger</innerclass>
    <innerclass refid="classleveldb_1_1_lookup_key" prot="public">leveldb::LookupKey</innerclass>
    <innerclass refid="classleveldb_1_1_mem_env_test" prot="public">leveldb::MemEnvTest</innerclass>
    <innerclass refid="classleveldb_1_1_mem_table" prot="public">leveldb::MemTable</innerclass>
    <innerclass refid="classleveldb_1_1_mem_table_constructor" prot="public">leveldb::MemTableConstructor</innerclass>
    <innerclass refid="classleveldb_1_1_mem_table_iterator" prot="public">leveldb::MemTableIterator</innerclass>
    <innerclass refid="classleveldb_1_1_mem_table_test" prot="public">leveldb::MemTableTest</innerclass>
    <innerclass refid="classleveldb_1_1_model_d_b" prot="public">leveldb::ModelDB</innerclass>
    <innerclass refid="classleveldb_1_1_mutex_lock" prot="public">leveldb::MutexLock</innerclass>
    <innerclass refid="structleveldb_1_1_options" prot="public">leveldb::Options</innerclass>
    <innerclass refid="structleveldb_1_1_parsed_internal_key" prot="public">leveldb::ParsedInternalKey</innerclass>
    <innerclass refid="classleveldb_1_1_posix_logger" prot="public">leveldb::PosixLogger</innerclass>
    <innerclass refid="classleveldb_1_1_random" prot="public">leveldb::Random</innerclass>
    <innerclass refid="classleveldb_1_1_random_access_file" prot="public">leveldb::RandomAccessFile</innerclass>
    <innerclass refid="structleveldb_1_1_range" prot="public">leveldb::Range</innerclass>
    <innerclass refid="structleveldb_1_1_read_options" prot="public">leveldb::ReadOptions</innerclass>
    <innerclass refid="classleveldb_1_1_sequential_file" prot="public">leveldb::SequentialFile</innerclass>
    <innerclass refid="classleveldb_1_1_skip_list" prot="public">leveldb::SkipList</innerclass>
    <innerclass refid="classleveldb_1_1_skip_test" prot="public">leveldb::SkipTest</innerclass>
    <innerclass refid="classleveldb_1_1_slice" prot="public">leveldb::Slice</innerclass>
    <innerclass refid="classleveldb_1_1_snapshot" prot="public">leveldb::Snapshot</innerclass>
    <innerclass refid="classleveldb_1_1_snapshot_impl" prot="public">leveldb::SnapshotImpl</innerclass>
    <innerclass refid="classleveldb_1_1_snapshot_list" prot="public">leveldb::SnapshotList</innerclass>
    <innerclass refid="classleveldb_1_1_special_env" prot="public">leveldb::SpecialEnv</innerclass>
    <innerclass refid="structleveldb_1_1_state" prot="public">leveldb::State</innerclass>
    <innerclass refid="classleveldb_1_1_status" prot="public">leveldb::Status</innerclass>
    <innerclass refid="classleveldb_1_1_string_sink" prot="public">leveldb::StringSink</innerclass>
    <innerclass refid="classleveldb_1_1_string_source" prot="public">leveldb::StringSource</innerclass>
    <innerclass refid="classleveldb_1_1_table" prot="public">leveldb::Table</innerclass>
    <innerclass refid="structleveldb_1_1_table_and_file" prot="public">leveldb::TableAndFile</innerclass>
    <innerclass refid="classleveldb_1_1_table_builder" prot="public">leveldb::TableBuilder</innerclass>
    <innerclass refid="classleveldb_1_1_table_cache" prot="public">leveldb::TableCache</innerclass>
    <innerclass refid="classleveldb_1_1_table_constructor" prot="public">leveldb::TableConstructor</innerclass>
    <innerclass refid="classleveldb_1_1_table_test" prot="public">leveldb::TableTest</innerclass>
    <innerclass refid="structleveldb_1_1_test_args" prot="public">leveldb::TestArgs</innerclass>
    <innerclass refid="classleveldb_1_1_test_hash_filter" prot="public">leveldb::TestHashFilter</innerclass>
    <innerclass refid="classleveldb_1_1_test_state" prot="public">leveldb::TestState</innerclass>
    <innerclass refid="classleveldb_1_1_version" prot="public">leveldb::Version</innerclass>
    <innerclass refid="classleveldb_1_1_version_edit" prot="public">leveldb::VersionEdit</innerclass>
    <innerclass refid="classleveldb_1_1_version_edit_test" prot="public">leveldb::VersionEditTest</innerclass>
    <innerclass refid="classleveldb_1_1_version_set" prot="public">leveldb::VersionSet</innerclass>
    <innerclass refid="classleveldb_1_1_writable_file" prot="public">leveldb::WritableFile</innerclass>
    <innerclass refid="classleveldb_1_1_write_batch" prot="public">leveldb::WriteBatch</innerclass>
    <innerclass refid="classleveldb_1_1_write_batch_internal" prot="public">leveldb::WriteBatchInternal</innerclass>
    <innerclass refid="classleveldb_1_1_write_batch_test" prot="public">leveldb::WriteBatchTest</innerclass>
    <innerclass refid="structleveldb_1_1_write_options" prot="public">leveldb::WriteOptions</innerclass>
    <innernamespace refid="namespaceleveldb_1_1config">leveldb::config</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1crc32c">leveldb::crc32c</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1log">leveldb::log</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1port">leveldb::port</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1test">leveldb::test</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" prot="public" static="no">
        <name>ValueType</name>
        <enumvalue id="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" prot="public">
          <name>kTypeDeletion</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" prot="public">
          <name>kTypeValue</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1" prot="public" static="no">
        <name>FileType</name>
        <enumvalue id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" prot="public">
          <name>kLogFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1abbb39081ce3d1fa7397c074443910235" prot="public">
          <name>kDBLockFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" prot="public">
          <name>kTableFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1af941d0365407ca03ed62ad30696c78da" prot="public">
          <name>kDescriptorFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a77227e6519db508a8baf96907bed69fb" prot="public">
          <name>kCurrentFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a485201937a3d025c7a5fe0e3517733d6" prot="public">
          <name>kTempFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a0e4c1f07a2b307bc47531e94007c34b2" prot="public">
          <name>kInfoLogFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.h" line="20" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.h" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3f" prot="public" static="no">
        <name>Tag</name>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fac541e987bd5d939b35bc39df1796e681" prot="public">
          <name>kComparator</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fa04978e732995d33663db37d802a7e72c" prot="public">
          <name>kLogNumber</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fab6c83de82972300808bc8fcf6d42fa9b" prot="public">
          <name>kNextFileNumber</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fab010832d8064a41609fd4812d486d1e8" prot="public">
          <name>kLastSequence</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fa417aba67b6cb00757eff9c2d95230557" prot="public">
          <name>kCompactPointer</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fa6e96d3006bc411c9c461cb3b4dc67a96" prot="public">
          <name>kDeletedFile</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fae265c5eb525120ef5fd3284cd8b35220" prot="public">
          <name>kNewFile</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1afa685d3afc34bc4ec96f33792276bc3fa3918f2a3f22eb62352c8e31f1ec161f3" prot="public">
          <name>kPrevLogNumber</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_edit.cc" line="14" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_edit.cc" bodystart="14" bodyend="24"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9b" prot="public" static="no">
        <name>CompressionType</name>
        <enumvalue id="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" prot="public">
          <name>kNoCompression</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9bad0d4e00e3596bcc3b9bdfd970900a06e" prot="public">
          <name>kSnappyCompression</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/options.h" line="23" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/options.h" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342" prot="public" static="no">
        <name>TestType</name>
        <enumvalue id="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" prot="public">
          <name>TABLE_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" prot="public">
          <name>BLOCK_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" prot="public">
          <name>MEMTABLE_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" prot="public">
          <name>DB_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="399" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="399" bodyend="404"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" prot="public" static="no">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>typedef uint64_t leveldb::SequenceNumber</definition>
        <argsstring></argsstring>
        <name>SequenceNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="63" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" prot="public" static="no">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>typedef uint64_t leveldb::Key</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="15" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" prot="public" static="no">
        <type>std::map&lt; std::string, std::string, STLLessThan &gt;</type>
        <definition>typedef std::map&lt;std::string, std::string, STLLessThan&gt; leveldb::KVMap</definition>
        <argsstring></argsstring>
        <name>KVMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="137" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceleveldb_1a193cc831a2200dd1c5e6aee70d6654d3" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kValueSize</definition>
        <argsstring></argsstring>
        <name>kValueSize</name>
        <initializer>= 200 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" line="52" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1aef708b670e7c242e59bd3b0c9fb19fe5" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kTotalSize</definition>
        <argsstring></argsstring>
        <name>kTotalSize</name>
        <initializer>= 100 * 1024 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" line="53" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a9bd5c84d01be4af58d509c6aafc20d85" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kCount</definition>
        <argsstring></argsstring>
        <name>kCount</name>
        <initializer>= kTotalSize / kValueSize</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" line="54" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a193cc831a2200dd1c5e6aee70d6654d3" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kValueSize</definition>
        <argsstring></argsstring>
        <name>kValueSize</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="25" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a550686b2c442f4c3011d68dd12c38662" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kNumNonTableCacheFiles</definition>
        <argsstring></argsstring>
        <name>kNumNonTableCacheFiles</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="38" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="38" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_d_b_impl_1a269b55605b27271d6ca5fee68af0d8f3" compoundref="db__impl_8cc" startline="116" endline="146">leveldb::DBImpl::DBImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a0b7840e7de67fb0f7905955c02f75cfa" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" kindref="member">ValueType</ref></type>
        <definition>const ValueType leveldb::kValueTypeForSeek</definition>
        <argsstring></argsstring>
        <name>kValueTypeForSeek</name>
        <initializer>= <ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1adf59027c8c0dcc54c9d8c3e5ba090463" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref></type>
        <definition>const SequenceNumber leveldb::kMaxSequenceNumber</definition>
        <argsstring></argsstring>
        <name>kMaxSequenceNumber</name>
        <initializer>=
    ((0x1ull &lt;&lt; 56) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="67" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1aa8eab3a12c3da0efefd9fe53f904440b" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kTargetFileSize</definition>
        <argsstring></argsstring>
        <name>kTargetFileSize</name>
        <initializer>= 2 * 1048576</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="23" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a68616c3e44088cbae698a3c2b385082f" prot="public" static="yes" mutable="no">
        <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>const int64_t leveldb::kMaxGrandParentOverlapBytes</definition>
        <argsstring></argsstring>
        <name>kMaxGrandParentOverlapBytes</name>
        <initializer>= 10 * kTargetFileSize</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="27" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a226c83695ff13a8d8bc5a248bdd4bd29" prot="public" static="yes" mutable="no">
        <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>const int64_t leveldb::kExpandedCompactionByteSizeLimit</definition>
        <argsstring></argsstring>
        <name>kExpandedCompactionByteSizeLimit</name>
        <initializer>= 25 * kTargetFileSize</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="32" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a0c307b86a9e098703aa8aa0a55ce504a" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t leveldb::kHeader</definition>
        <argsstring></argsstring>
        <name>kHeader</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/write_batch.cc" line="27" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/write_batch.cc" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1ab5f58e0e9055bf647e6b92dc8b69c11f" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kMajorVersion</definition>
        <argsstring></argsstring>
        <name>kMajorVersion</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="16" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1afba0124470c60dd33b9d82838f40fc04" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kMinorVersion</definition>
        <argsstring></argsstring>
        <name>kMinorVersion</name>
        <initializer>= 18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="17" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a84056738cd05489322f3480723d55d6d" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t leveldb::kFilterBaseLg</definition>
        <argsstring></argsstring>
        <name>kFilterBaseLg</name>
        <initializer>= 11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/filter_block.cc" line="15" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/filter_block.cc" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a98b7e84ea18ed9d60211fd297359cc78" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t leveldb::kFilterBase</definition>
        <argsstring></argsstring>
        <name>kFilterBase</name>
        <initializer>= 1 &lt;&lt; kFilterBaseLg</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/filter_block.cc" line="16" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/filter_block.cc" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a4ea4fa6917989c12324b715f1b3069f8" prot="public" static="yes" mutable="no">
        <type>const <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>const uint64_t leveldb::kTableMagicNumber</definition>
        <argsstring></argsstring>
        <name>kTableMagicNumber</name>
        <initializer>= 0xdb4775248b80fb57ull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/format.h" line="81" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/format.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a4f00b102aae97cb0b0418b6f703a577e" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t leveldb::kBlockTrailerSize</definition>
        <argsstring></argsstring>
        <name>kBlockTrailerSize</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/format.h" line="84" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/format.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a4f7cb0b6f4da1c10852632bfdb7dd227" prot="public" static="yes" mutable="no">
        <type>ReverseKeyComparator</type>
        <definition>ReverseKeyComparator leveldb::reverse_key_comparator</definition>
        <argsstring></argsstring>
        <name>reverse_key_comparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="64" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a6d7e1fb11fbc0e83ef27e87007c8a425" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structleveldb_1_1_test_args" kindref="compound">TestArgs</ref></type>
        <definition>const TestArgs leveldb::kTestArgList[]</definition>
        <argsstring>[]</argsstring>
        <name>kTestArgList</name>
        <initializer>= {
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>, false, 16 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>, false, 1 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>, false, 1024 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>, true, 16 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>, true, 1 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>, true, 1024 },

  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>, false, 16 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>, false, 1 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>, false, 1024 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>, true, 16 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>, true, 1 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>, true, 1024 },

  
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" kindref="member">MEMTABLE_TEST</ref>, false, 16 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" kindref="member">MEMTABLE_TEST</ref>, true, 16 },

  
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" kindref="member">DB_TEST</ref>, false, 16 },
  { <ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" kindref="member">DB_TEST</ref>, true, 16 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="412" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a0bc857a7e9baff42f61503688957b6f5" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kNumTestArgs</definition>
        <argsstring></argsstring>
        <name>kNumTestArgs</name>
        <initializer>= sizeof(kTestArgList) / sizeof(kTestArgList[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="435" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a6fb0b0eafa487f7c4940d210c77cece6" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kBlockSize</definition>
        <argsstring></argsstring>
        <name>kBlockSize</name>
        <initializer>= 4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/arena.cc" line="10" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/arena.cc" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1af8897be0086c2db6e31344b7679c170a" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kVerbose</definition>
        <argsstring></argsstring>
        <name>kVerbose</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" line="14" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1aaca89bbfe8c9115ec6faaf59a77ca965" prot="public" static="yes" mutable="no">
        <type><ref refid="classleveldb_1_1port_1_1_once_type" kindref="compound">port::OnceType</ref></type>
        <definition>port::OnceType leveldb::once</definition>
        <argsstring></argsstring>
        <name>once</name>
        <initializer>= <ref refid="port__win_8h_1aa0f16c685b4ebb93ccc49f5ae36e1c9d" kindref="member">LEVELDB_ONCE_INIT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/comparator.cc" line="69" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/comparator.cc" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1abacb49d42ee3c64ccbc0ce22391816d4" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref> *</type>
        <definition>const Comparator* leveldb::bytewise</definition>
        <argsstring></argsstring>
        <name>bytewise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/comparator.cc" line="70" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/comparator.cc" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1ae0ee2b9a8da60ad51918137eba9ffedb" prot="public" static="yes" mutable="no">
        <type>pthread_once_t</type>
        <definition>pthread_once_t leveldb::once</definition>
        <argsstring></argsstring>
        <name>once</name>
        <initializer>= PTHREAD_ONCE_INIT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_posix.cc" line="600" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_posix.cc" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a9ade93809ff59d5e6da0adc55c326a84" prot="public" static="yes" mutable="no">
        <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
        <definition>Env* leveldb::default_env</definition>
        <argsstring></argsstring>
        <name>default_env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_posix.cc" line="601" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_posix.cc" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceleveldb_1a5534e21c4b10affbe7390a9642ac0668" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int leveldb::kDelayMicros</definition>
        <argsstring></argsstring>
        <name>kDelayMicros</name>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc" line="12" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_test.cc" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(AutoCompactTest, ReadAll)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_auto_compact_test" kindref="compound">AutoCompactTest</ref></type>
        </param>
        <param>
          <type>ReadAll</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" line="106" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a404a4db88f6b45942b1945a996858a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(AutoCompactTest, ReadHalf)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_auto_compact_test" kindref="compound">AutoCompactTest</ref></type>
        </param>
        <param>
          <type>ReadHalf</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" line="110" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a10e102da98819e1a1f9b254241482e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::BuildTable</definition>
        <argsstring>(const std::string &amp;dbname, Env *env, const Options &amp;options, TableCache *table_cache, Iterator *iter, FileMetaData *meta)</argsstring>
        <name>BuildTable</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_table_cache" kindref="compound">TableCache</ref> *</type>
          <declname>table_cache</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> *</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/builder.cc" line="17" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/builder.cc" bodystart="17" bodyend="86"/>
        <references refid="structleveldb_1_1_file_meta_data_1a778ea9c773ad4fdfe4408eecaae754f7" compoundref="version__edit_8h" startline="21">leveldb::FileMetaData::file_size</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" compoundref="filename_8cc" startline="32" endline="35">TableFileName</references>
        <references refid="structleveldb_1_1_file_meta_data_1adc63bac3e06fd4387ebb9f085fc88fe7" compoundref="version__edit_8h" startline="20">leveldb::FileMetaData::number</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de">leveldb::Env::NewWritableFile</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="structleveldb_1_1_file_meta_data_1a9e5e5c149495aede836ac637cd89269f" compoundref="version__edit_8h" startline="22">leveldb::FileMetaData::smallest</references>
        <references refid="classleveldb_1_1_internal_key_1a5a8c9bced0ba968b6b62d91cfb19a82a" compoundref="dbformat_8h" startline="153" endline="153">leveldb::InternalKey::DecodeFrom</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" compoundref="version__edit_8h" startline="23">leveldb::FileMetaData::largest</references>
        <references refid="classleveldb_1_1_table_builder_1a37bd347cb6340215475ac9b42dc19d10" compoundref="table__builder_8cc" startline="92" endline="121">leveldb::TableBuilder::Add</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
        <references refid="classleveldb_1_1_table_builder_1a88f4bae006782e24462362d489dd3f35" compoundref="table__builder_8cc" startline="199" endline="254">leveldb::TableBuilder::Finish</references>
        <references refid="classleveldb_1_1_table_builder_1a5844a15a8f94d2c44da709937f29039c" compoundref="table__builder_8cc" startline="266" endline="268">leveldb::TableBuilder::FileSize</references>
        <references refid="classleveldb_1_1_table_builder_1a3b4dded079f960b8624bdfa13d967b94" compoundref="table__builder_8cc" startline="256" endline="260">leveldb::TableBuilder::Abandon</references>
        <references refid="classleveldb_1_1_writable_file_1a2d2dcef02a2c9e71f3d39125bcd5a606">leveldb::WritableFile::Sync</references>
        <references refid="classleveldb_1_1_writable_file_1a2efbf9c02a26028b5002df73b4393915">leveldb::WritableFile::Close</references>
        <references refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" compoundref="table__cache_8cc" startline="82" endline="103">leveldb::TableCache::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1ac84f34623a031b7eeb23409320f76376">leveldb::Iterator::status</references>
        <references refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af">leveldb::Env::DeleteFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a46326658ffc04dd7509c4066082edb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, Recovery)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>Recovery</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="202" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="202" bodyend="211"/>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" compoundref="filename_8h" startline="21">kLogFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a22ecc0fbc7435947076320655c5e0265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, RecoverWriteError)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>RecoverWriteError</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="213" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="213" bodyend="217"/>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a25dbda5a48ec782778d331e4ccb81b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, NewFileErrorDuringWrite)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>NewFileErrorDuringWrite</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="219" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="219" bodyend="234"/>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4" compoundref="db__impl_8cc" startline="1162" endline="1233">leveldb::DBImpl::Write</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" compoundref="testharness_8h" startline="109">ASSERT_GE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1da99cee14629599882010198aabfa2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, TableFile)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>TableFile</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="236" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="236" bodyend="245"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <references refid="classleveldb_1_1_d_b_impl_1a63fcb49466b689a534ba77d32cf84f99" compoundref="db__impl_8cc" startline="553" endline="588">leveldb::DBImpl::TEST_CompactRange</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a9f03547489b40b6e76cd8fc8a116884a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, TableFileRepair)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>TableFileRepair</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="247" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="247" bodyend="261"/>
        <references refid="repair_8cc_1a277741aecbdc3655b3bde5df34d80513" compoundref="repair_8cc" startline="104">options_</references>
        <references refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" compoundref="options_8h" startline="106">leveldb::Options::block_size</references>
        <references refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" compoundref="options_8h" startline="57">leveldb::Options::paranoid_checks</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <references refid="classleveldb_1_1_d_b_impl_1a63fcb49466b689a534ba77d32cf84f99" compoundref="db__impl_8cc" startline="553" endline="588">leveldb::DBImpl::TEST_CompactRange</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
        <references refid="namespaceleveldb_1afb65664fdacb30ab73da9414db5a4208" compoundref="repair_8cc" startline="456" endline="459">RepairDB</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1acdfa0365a941e8e01531a402e53ad325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, TableFileIndexData)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>TableFileIndexData</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="263" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="263" bodyend="271"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6214e0d0ebfaf716601f7a9571aa09ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, MissingDescriptor)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>MissingDescriptor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="273" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="273" bodyend="278"/>
        <references refid="namespaceleveldb_1afb65664fdacb30ab73da9414db5a4208" compoundref="repair_8cc" startline="456" endline="459">RepairDB</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1acc1b0ed2e8e9e4e6b930a1727d9fe0f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, SequenceNumberRecovery)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>SequenceNumberRecovery</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="280" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="280" bodyend="299"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</references>
        <references refid="namespaceleveldb_1afb65664fdacb30ab73da9414db5a4208" compoundref="repair_8cc" startline="456" endline="459">RepairDB</references>
        <references refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508" compoundref="db__impl_8cc" startline="1077" endline="1122">leveldb::DBImpl::Get</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab52c022fc16dd83fe1c1c60745c9557c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, CorruptedDescriptor)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>CorruptedDescriptor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="301" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="301" bodyend="316"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1af941d0365407ca03ed62ad30696c78da" compoundref="filename_8h" startline="24">kDescriptorFile</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="namespaceleveldb_1afb65664fdacb30ab73da9414db5a4208" compoundref="repair_8cc" startline="456" endline="459">RepairDB</references>
        <references refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508" compoundref="db__impl_8cc" startline="1077" endline="1122">leveldb::DBImpl::Get</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac45d45675cfba0614b5788177b03e717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, CompactionInputError)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>CompactionInputError</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="318" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="318" bodyend="331"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1a0a19109e7a2c8855c7565bd331d955b4" compoundref="logging_8cc" startline="36" endline="40">NumberToString</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2bb2a098a32d42044e6be132020b29b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, CompactionInputErrorParanoid)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>CompactionInputErrorParanoid</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="333" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="333" bodyend="352"/>
        <references refid="repair_8cc_1a277741aecbdc3655b3bde5df34d80513" compoundref="repair_8cc" startline="104">options_</references>
        <references refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" compoundref="options_8h" startline="57">leveldb::Options::paranoid_checks</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312">leveldb::Env::SleepForMicroseconds</references>
        <references refid="classleveldb_1_1_d_b_impl_1aa6df0739fc0b49380c284347e411b8ed" compoundref="db__impl_8cc" startline="536" endline="551">leveldb::DBImpl::CompactRange</references>
        <references refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1adbafd76c895bbb400c6aa4ad6e0eae2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CorruptionTest, UnrelatedKeys)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_corruption_test" kindref="compound">CorruptionTest</ref></type>
        </param>
        <param>
          <type>UnrelatedKeys</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" line="354" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/corruption_test.cc" bodystart="354" bodyend="368"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</references>
        <references refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508" compoundref="db__impl_8cc" startline="1077" endline="1122">leveldb::DBImpl::Get</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa571d50e762e410ba1558c7972800caa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void leveldb::ClipToRange</definition>
        <argsstring>(T *ptr, V minvalue, V maxvalue)</argsstring>
        <name>ClipToRange</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>V</type>
          <declname>minvalue</declname>
        </param>
        <param>
          <type>V</type>
          <declname>maxvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="86" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa4783e598841dca4393a97d360d10f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref></type>
        <definition>Options leveldb::SanitizeOptions</definition>
        <argsstring>(const std::string &amp;dbname, const InternalKeyComparator *icmp, const InternalFilterPolicy *ipolicy, const Options &amp;src)</argsstring>
        <name>SanitizeOptions</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref> *</type>
          <declname>icmp</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_internal_filter_policy" kindref="compound">InternalFilterPolicy</ref> *</type>
          <declname>ipolicy</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="90" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="90" bodyend="114"/>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <references refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" compoundref="options_8h" startline="136">leveldb::Options::filter_policy</references>
        <references refid="structleveldb_1_1_options_1a25c6ea125fc63342d8fc25b2f7817be4" compoundref="options_8h" startline="90">leveldb::Options::max_open_files</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" compoundref="options_8h" startline="106">leveldb::Options::block_size</references>
        <references refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" compoundref="options_8h" startline="68">leveldb::Options::info_log</references>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e">leveldb::Env::CreateDir</references>
        <references refid="classleveldb_1_1_env_1abd743b3d4751ada1ab307427827ed5b0">leveldb::Env::RenameFile</references>
        <references refid="namespaceleveldb_1ac40453ca7f9c0bd723873ffe32dc12a2" compoundref="filename_8cc" startline="63" endline="65">InfoLogFileName</references>
        <references refid="namespaceleveldb_1a2964797a29cbda9d37cce54109eefdc6" compoundref="filename_8cc" startline="68" endline="70">OldInfoLogFileName</references>
        <references refid="classleveldb_1_1_env_1a53a4c41d294fe619f13ec5b697ffc933">leveldb::Env::NewLogger</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" compoundref="options_8h" startline="98">leveldb::Options::block_cache</references>
        <references refid="namespaceleveldb_1a231e1b41322a8b342c91a15a78e425d4" compoundref="cache_8cc" startline="321" endline="323">NewLRUCache</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DestroyDB</definition>
        <argsstring>(const std::string &amp;dbname, const Options &amp;options)</argsstring>
        <name>DestroyDB</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="1482" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1482" bodyend="1511"/>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6">leveldb::Env::GetChildren</references>
        <references refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" compoundref="status_8h" startline="32" endline="32">leveldb::Status::OK</references>
        <references refid="namespaceleveldb_1a9f772d88ab2d47dec0d68e5eb85c579e" compoundref="filename_8cc" startline="54" endline="56">LockFileName</references>
        <references refid="classleveldb_1_1_env_1a9b7266f0444f832e428328ff19b7b54c">leveldb::Env::LockFile</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" compoundref="filename_8cc" startline="80" endline="124">ParseFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1abbb39081ce3d1fa7397c074443910235" compoundref="filename_8h" startline="22">kDBLockFile</references>
        <references refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af">leveldb::Env::DeleteFile</references>
        <references refid="classleveldb_1_1_env_1a194a2ee3c21bc0b204ad0e5bc3b81d4b">leveldb::Env::UnlockFile</references>
        <references refid="classleveldb_1_1_env_1a4e1a1c4495541e426b146cba56c59627">leveldb::Env::DeleteDir</references>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a31fe0ded855f188fac1650c70849760c" compoundref="autocompact__test_8cc" startline="20" endline="28">leveldb::AutoCompactTest::AutoCompactTest</referencedby>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a671873887bb99ee3731add4298a8df0b" compoundref="autocompact__test_8cc" startline="30" endline="34">leveldb::AutoCompactTest::~AutoCompactTest</referencedby>
        <referencedby refid="c_8h_1a265873c54a9e6080278da4f957a6a183" compoundref="c_8cc" startline="278" endline="283">leveldb_destroy_db</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1a9940767db260b1e4e60b8bcedc50217c" compoundref="corruption__test_8cc" startline="35" endline="46">leveldb::CorruptionTest::CorruptionTest</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1a4086f02f771d78d4ce242c14b0e392d9" compoundref="corruption__test_8cc" startline="48" endline="52">leveldb::CorruptionTest::~CorruptionTest</referencedby>
        <referencedby refid="classleveldb_1_1_benchmark_1a05d001d05283f6d1d589d417b42aa736" compoundref="db__bench_8cc" startline="389" endline="410">leveldb::Benchmark::Benchmark</referencedby>
        <referencedby refid="classleveldb_1_1_benchmark_1a2f262afa0c7d10fcf531fe9657fba490" compoundref="db__bench_8cc" startline="418" endline="529">leveldb::Benchmark::Run</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" compoundref="db__test_8cc" startline="209" endline="216">leveldb::DBTest::DBTest</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" compoundref="db__test_8cc" startline="218" endline="223">leveldb::DBTest::~DBTest</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" compoundref="db__test_8cc" startline="266" endline="271">leveldb::DBTest::DestroyAndReopen</referencedby>
        <referencedby refid="namespaceleveldb_1a88d6fdcb16ed4edc65da40f383e6f23b" compoundref="db__test_8cc" startline="1480" endline="1517">TEST</referencedby>
        <referencedby refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" compoundref="db__test_8cc" startline="2065" endline="2114">BM_LogAndApply</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1ae796b1190c072df6275e0ada4d187943" compoundref="leveldbwrapper_8cpp" startline="44" endline="67">CLevelDBWrapper::CLevelDBWrapper</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0d4b256207f27afbf4ad03976fe0fae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator * leveldb::NewDBIterator</definition>
        <argsstring>(DBImpl *db, const Comparator *user_key_comparator, Iterator *internal_iter, SequenceNumber sequence, uint32_t seed)</argsstring>
        <name>NewDBIterator</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_impl" kindref="compound">DBImpl</ref> *</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref> *</type>
          <declname>user_key_comparator</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
          <declname>internal_iter</declname>
        </param>
        <param>
          <type><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref></type>
          <declname>sequence</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_iter.cc" line="308" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_iter.cc" bodystart="308" bodyend="315"/>
        <referencedby refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" compoundref="db__impl_8cc" startline="1124" endline="1134">leveldb::DBImpl::NewIterator</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab30792c0730ee094943e8242577454af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::RandomString</definition>
        <argsstring>(Random *rnd, int len)</argsstring>
        <name>RandomString</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="22" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5cdb2a977033415260acc09b4b1b7171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, Empty)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>Empty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="506" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="506" bodyend="511"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2d427ecc9d7b712d8c5dd7ec8b6343fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, ReadWrite)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>ReadWrite</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="513" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="513" bodyend="522"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a4d273f5f0d313440832363179e28e010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, PutDeleteGet)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>PutDeleteGet</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="524" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="524" bodyend="533"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d" compoundref="db__impl_8cc" startline="1158" endline="1160">leveldb::DBImpl::Delete</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a21cac1755bd447df075909132bb964d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, GetFromImmutableLayer)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>GetFromImmutableLayer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="535" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="535" bodyend="551"/>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1affd937ddc8c138fd0b5d020a396310c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, GetFromVersions)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>GetFromVersions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="553" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="553" bodyend="559"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ad6fac95495278565df640d4055b9c9f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, GetSnapshot)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>GetSnapshot</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="561" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="561" bodyend="577"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" compoundref="db__impl_8cc" startline="1143" endline="1146">leveldb::DBImpl::GetSnapshot</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" compoundref="db__impl_8cc" startline="1148" endline="1151">leveldb::DBImpl::ReleaseSnapshot</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2b333e6a496f74899c808279627f11a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, GetLevel0Ordering)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>GetLevel0Ordering</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="579" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="579" bodyend="592"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8f54952904ed501131060691eb1b6970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, GetOrderedByLevels)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>GetOrderedByLevels</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="594" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="594" bodyend="604"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac3d2a0e1b8553c3106c45ead7d6804bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, GetPicksCorrectFile)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>GetPicksCorrectFile</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="606" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="606" bodyend="619"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0cec95f588ef6c5c121ac0d63eb4238f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, GetEncountersEmptyLevel)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>GetEncountersEmptyLevel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="621" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="621" bodyend="658"/>
        <references refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" compoundref="testharness_8h" startline="111">ASSERT_LE</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5ad106e9bbfcb5520b7dc344525f7cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, IterEmpty)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>IterEmpty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="660" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="660" bodyend="673"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" compoundref="db__impl_8cc" startline="1124" endline="1134">leveldb::DBImpl::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8a6d5f729259c0f357f4dee533a5ce6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, IterSingle)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>IterSingle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="675" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="675" bodyend="711"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" compoundref="db__impl_8cc" startline="1124" endline="1134">leveldb::DBImpl::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a683bc77ccfd830fbe21a91c26ac91347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, IterMulti)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>IterMulti</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="713" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="713" bodyend="794"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" compoundref="db__impl_8cc" startline="1124" endline="1134">leveldb::DBImpl::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a4044ccda7237640864995a0885ea6710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, IterSmallAndLargeMix)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>IterSmallAndLargeMix</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="796" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="796" bodyend="832"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" compoundref="db__impl_8cc" startline="1124" endline="1134">leveldb::DBImpl::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a3e41cdc91355438f57b9497b01c66e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, IterMultiWithDelete)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>IterMultiWithDelete</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="834" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="834" bodyend="849"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" compoundref="db__impl_8cc" startline="1124" endline="1134">leveldb::DBImpl::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab1872cabf2fb215814f9a6f1bacacc80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, Recover)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>Recover</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="851" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="851" bodyend="871"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a890ebffd31d77bc8acb760088d70ee8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, RecoveryWithEmptyLog)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>RecoveryWithEmptyLog</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="873" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="873" bodyend="883"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2e24806457c57e7dec22e3c05e46a82c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, RecoverDuringMemtableCompaction)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>RecoverDuringMemtableCompaction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="887" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="887" bodyend="906"/>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1af5ebf23c4f21b4986d6f8fb430739287" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::Key</definition>
        <argsstring>(int i)</argsstring>
        <name>Key</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="908" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="908" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1ff90ae7b19ecf46c5efb6e5af00fa0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, MinorCompactionsHappen)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>MinorCompactionsHappen</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="914" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="914" bodyend="937"/>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a01bbbae1753711e8b7740ed8faa9efd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, RecoverWithLargeLog)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>RecoverWithLargeLog</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="939" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="939" bodyend="961"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1acd61524dbc544e8f1ca63fbdfac59791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, CompactionsGenerateMultipleFiles)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>CompactionsGenerateMultipleFiles</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="963" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="963" bodyend="987"/>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1acb51ac2eb77bd1af22372748f9fb44da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, RepeatedWritesToSameKey)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>RepeatedWritesToSameKey</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="989" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="989" bodyend="1006"/>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" compoundref="version__set_8cc" startline="256">value</references>
        <references refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" compoundref="testharness_8h" startline="111">ASSERT_LE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0ed510b8c03c1ca0216ffee81199d79e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, SparseMerge)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>SparseMerge</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1008" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1008" bodyend="1046"/>
        <references refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" compoundref="options_8h" startline="129">leveldb::Options::compression</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" compoundref="options_8h" startline="26">kNoCompression</references>
        <references refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" compoundref="version__set_8cc" startline="256">value</references>
        <references refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" compoundref="testharness_8h" startline="111">ASSERT_LE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a891b358b4c0a10a44b24b8f473cc73fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::Between</definition>
        <argsstring>(uint64_t val, uint64_t low, uint64_t high)</argsstring>
        <name>Between</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>low</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1048" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1048" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6b3f1122dc9d727f0c699ed3da2d6474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, ApproximateSizes)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>ApproximateSizes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1059" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1059" bodyend="1107"/>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" compoundref="options_8h" startline="129">leveldb::Options::compression</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" compoundref="options_8h" startline="26">kNoCompression</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5c41c70ccd20279235316b8627f419da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, ApproximateSizes_MixOfSmallAndLarge)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>ApproximateSizes_MixOfSmallAndLarge</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1109" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1109" bodyend="1145"/>
        <references refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" compoundref="options_8h" startline="129">leveldb::Options::compression</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" compoundref="options_8h" startline="26">kNoCompression</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a899f7415195fa4d25d801246cdec721d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, IteratorPinsRef)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>IteratorPinsRef</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1147" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1147" bodyend="1167"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" compoundref="db__impl_8cc" startline="1124" endline="1134">leveldb::DBImpl::NewIterator</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab09998970d1ace06b8082f49da0444f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, Snapshot)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1169" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1169" bodyend="1196"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" compoundref="db__impl_8cc" startline="1143" endline="1146">leveldb::DBImpl::GetSnapshot</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" compoundref="db__impl_8cc" startline="1148" endline="1151">leveldb::DBImpl::ReleaseSnapshot</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a94214aebbf6328e7ad9ba735c5e42f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, HiddenValuesAreRemoved)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>HiddenValuesAreRemoved</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1198" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1198" bodyend="1227"/>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" compoundref="db__impl_8cc" startline="1143" endline="1146">leveldb::DBImpl::GetSnapshot</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" compoundref="db__impl_8cc" startline="1148" endline="1151">leveldb::DBImpl::ReleaseSnapshot</references>
        <references refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" compoundref="testharness_8h" startline="109">ASSERT_GE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a216168df3713bb71f35038d91b5224f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, DeletionMarkers1)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>DeletionMarkers1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1229" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1229" bodyend="1256"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a4188787b0b1e1e25475a2983374065b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, DeletionMarkers2)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>DeletionMarkers2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1258" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1258" bodyend="1282"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a4fa4ffaab998ba44a1745937c1e9c55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, OverlapInLevel0)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>OverlapInLevel0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1284" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1284" bodyend="1323"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a46665ff2f4f9bd25167f82d3be16f8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, L0_CompactionBug_Issue44_a)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>L0_CompactionBug_Issue44_a</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1325" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1325" bodyend="1340"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a727df67090c63a0ca4b2effdc90a3da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, L0_CompactionBug_Issue44_b)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>L0_CompactionBug_Issue44_b</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1342" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1342" bodyend="1366"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5cd6c2754610c66f4dd998874482c80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, ComparatorCheck)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>ComparatorCheck</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1368" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1368" bodyend="1389"/>
        <references refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" compoundref="comparator_8cc" startline="76" endline="79">BytewiseComparator</references>
        <references refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039">leveldb::Comparator::Compare</references>
        <references refid="structleveldb_1_1_comparator_1abdfe6076225e95b91ffd94f646063115">leveldb::Comparator::FindShortestSeparator</references>
        <references refid="structleveldb_1_1_comparator_1a49751dd906595633161dfad943d24b3b">leveldb::Comparator::FindShortSuccessor</references>
        <references refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" compoundref="table__test_8cc" startline="80">cmp</references>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" compoundref="status_8cc" startline="36" endline="73">leveldb::Status::ToString</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a38772a8b86ea7658430b1fa2f1a5d83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, CustomComparator)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>CustomComparator</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1391" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1391" bodyend="1444"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" compoundref="logging_8cc" startline="42" endline="46">EscapeString</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" compoundref="table__test_8cc" startline="80">cmp</references>
        <references refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" compoundref="options_8h" startline="45">leveldb::Options::create_if_missing</references>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <references refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" compoundref="options_8h" startline="136">leveldb::Options::filter_policy</references>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a34a511836c47efe81202280115290934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, ManualCompaction)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>ManualCompaction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1446" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1446" bodyend="1478"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1aa6df0739fc0b49380c284347e411b8ed" compoundref="db__impl_8cc" startline="536" endline="551">leveldb::DBImpl::CompactRange</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a88d6fdcb16ed4edc65da40f383e6f23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, DBOpen_Options)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>DBOpen_Options</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1480" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1480" bodyend="1517"/>
        <references refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" compoundref="testharness_8cc" startline="60" endline="65">leveldb::test::TmpDir</references>
        <references refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">DestroyDB</references>
        <references refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" compoundref="options_8h" startline="45">leveldb::Options::create_if_missing</references>
        <references refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" compoundref="db__impl_8cc" startline="1445" endline="1477">leveldb::DB::Open</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" compoundref="status_8cc" startline="36" endline="73">leveldb::Status::ToString</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="structleveldb_1_1_options_1aff3b99b1b30a2dba9642adc6c912d5b7" compoundref="options_8h" startline="49">leveldb::Options::error_if_exists</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8470163c7e8b292085a5b60f989dc828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, Locking)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>Locking</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1519" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1519" bodyend="1523"/>
        <references refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" compoundref="db__impl_8cc" startline="1445" endline="1477">leveldb::DB::Open</references>
        <references refid="repair_8cc_1a2661128a4b7cbc28cec2dfc2fa13816f" compoundref="repair_8cc" startline="100">dbname_</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a11f56de4abca34391c0e60f311262b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, NoSpace)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>NoSpace</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1526" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1526" bodyend="1543"/>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1a6058af464aa1533b961936d5f6c5aea0" compoundref="testharness_8h" startline="112">ASSERT_LT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a9d69b380c464519a1b946fb1faa21cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, NonWritableFileSystem)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>NonWritableFileSystem</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1545" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1545" bodyend="1563"/>
        <references refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" compoundref="options_8h" startline="83">leveldb::Options::write_buffer_size</references>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab30f3608fe480a765f28f713415b7fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, WriteSyncError)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>WriteSyncError</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1565" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1565" bodyend="1594"/>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" compoundref="options_8h" startline="186">leveldb::WriteOptions::sync</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a071c4940c40a4eed0d3e4e4044a227a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, ManifestWriteError)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>ManifestWriteError</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1596" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1596" bodyend="1635"/>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" compoundref="port__win_8cc" startline="134" endline="136">leveldb::port::AtomicPointer::Release_Store</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8e750f4502e214132281fd755d26c175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, MissingSSTFile)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>MissingSSTFile</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1637" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1637" bodyend="1653"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" compoundref="options_8h" startline="57">leveldb::Options::paranoid_checks</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" compoundref="status_8cc" startline="36" endline="73">leveldb::Status::ToString</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab4a8284a6c982c710e6e84af0d6040a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, StillReadSST)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>StillReadSST</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1655" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1655" bodyend="1669"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
        <references refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" compoundref="options_8h" startline="57">leveldb::Options::paranoid_checks</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a47755684dc15db851e0174ea9475e97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, FilesDeletedAfterCompaction)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>FilesDeletedAfterCompaction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1671" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1671" bodyend="1680"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6d54978f51e046c170696cbb320f23f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, BloomFilter)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>BloomFilter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1682" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1682" bodyend="1727"/>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" compoundref="options_8h" startline="98">leveldb::Options::block_cache</references>
        <references refid="namespaceleveldb_1a231e1b41322a8b342c91a15a78e425d4" compoundref="cache_8cc" startline="321" endline="323">NewLRUCache</references>
        <references refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" compoundref="options_8h" startline="136">leveldb::Options::filter_policy</references>
        <references refid="namespaceleveldb_1ae6b34bf2331983721554f284b1eaa1a1" compoundref="bloom_8cc" startline="91" endline="93">NewBloomFilterPolicy</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" compoundref="testharness_8h" startline="109">ASSERT_GE</references>
        <references refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" compoundref="testharness_8h" startline="111">ASSERT_LE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a9bee47c386abe6004d884f2552bd8184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, MultiThreaded)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>MultiThreaded</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1795" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1795" bodyend="1825"/>
        <references refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" compoundref="db__test_8cc" startline="1745">id</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1a25eafd1622a2cf2a415ee8b2325bc808">leveldb::Env::StartThread</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1c336258072dc26d61cabcda6bc2db75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::RandomKey</definition>
        <argsstring>(Random *rnd)</argsstring>
        <name>RandomKey</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1933" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1933" bodyend="1938"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5d2ddf843172352a05569e55d7b84a13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::CompareIterators</definition>
        <argsstring>(int step, DB *model, DB *db, const Snapshot *model_snap, const Snapshot *db_snap)</argsstring>
        <name>CompareIterators</name>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> *</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
          <declname>model_snap</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
          <declname>db_snap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1940" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1940" bodyend="1986"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a028ed215c12e1998d7073b18fce4c24c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(DBTest, Randomized)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <param>
          <type>Randomized</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1988" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1988" bodyend="2057"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
        <references refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" compoundref="random_8h" startline="48" endline="48">leveldb::Random::Uniform</references>
        <references refid="classleveldb_1_1_random_1abed35e25c0e08c2c4cb6d06b62cd1b73" compoundref="random_8h" startline="52" endline="52">leveldb::Random::OneIn</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" compoundref="db__test_8cc" startline="1840" endline="1842">leveldb::ModelDB::Put</references>
        <references refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" compoundref="db__iter_8cc" startline="111">db_</references>
        <references refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</references>
        <references refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" compoundref="db__test_8cc" startline="1843" endline="1845">leveldb::ModelDB::Delete</references>
        <references refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d" compoundref="db__impl_8cc" startline="1158" endline="1160">leveldb::DBImpl::Delete</references>
        <references refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</references>
        <references refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" compoundref="write__batch_8cc" startline="105" endline="109">leveldb::WriteBatch::Delete</references>
        <references refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" compoundref="db__test_8cc" startline="1871" endline="1885">leveldb::ModelDB::Write</references>
        <references refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4" compoundref="db__impl_8cc" startline="1162" endline="1233">leveldb::DBImpl::Write</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12" compoundref="db__test_8cc" startline="1868" endline="1870">leveldb::ModelDB::ReleaseSnapshot</references>
        <references refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" compoundref="db__impl_8cc" startline="1148" endline="1151">leveldb::DBImpl::ReleaseSnapshot</references>
        <references refid="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f" compoundref="db__test_8cc" startline="1862" endline="1866">leveldb::ModelDB::GetSnapshot</references>
        <references refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" compoundref="db__impl_8cc" startline="1143" endline="1146">leveldb::DBImpl::GetSnapshot</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::MakeKey</definition>
        <argsstring>(unsigned int num)</argsstring>
        <name>MakeKey</name>
        <param>
          <type>unsigned int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="2059" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="2059" bodyend="2063"/>
        <referencedby refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" compoundref="db__test_8cc" startline="2065" endline="2114">BM_LogAndApply</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::BM_LogAndApply</definition>
        <argsstring>(int iters, int num_base_files)</argsstring>
        <name>BM_LogAndApply</name>
        <param>
          <type>int</type>
          <declname>iters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_base_files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="2065" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="2065" bodyend="2114"/>
        <references refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" compoundref="testharness_8cc" startline="60" endline="65">leveldb::test::TmpDir</references>
        <references refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">DestroyDB</references>
        <references refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" compoundref="options_8h" startline="45">leveldb::Options::create_if_missing</references>
        <references refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" compoundref="db__impl_8cc" startline="1445" endline="1477">leveldb::DB::Open</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" compoundref="env__posix_8cc" startline="604" endline="607">leveldb::Env::Default</references>
        <references refid="db__bench_8cc_1a1a5c2f3b52d2dec1d9896cec4b02d17e" compoundref="db__bench_8cc" startline="270">mu</references>
        <references refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" compoundref="table__test_8cc" startline="80">cmp</references>
        <references refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" compoundref="comparator_8cc" startline="76" endline="79">BytewiseComparator</references>
        <references refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" compoundref="version__set_8cc" startline="896" endline="1009">leveldb::VersionSet::Recover</references>
        <references refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" compoundref="db__bench_8cc" startline="282">start</references>
        <references refid="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" compoundref="db__test_8cc" startline="2059" endline="2063">MakeKey</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" compoundref="dbformat_8h" startline="53">kTypeValue</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" compoundref="dbformat_8h" startline="52">kTypeDeletion</references>
        <references refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" compoundref="version__set_8cc" startline="811" endline="894">leveldb::VersionSet::LogAndApply</references>
        <references refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f">leveldb::Env::NowMicros</references>
        <references refid="classleveldb_1_1_version_edit_1ac222bfd1055114d57aadbd124f24ad0c" compoundref="version__edit_8h" startline="75" endline="77">leveldb::VersionEdit::DeleteFile</references>
        <references refid="classleveldb_1_1_version_edit_1a4cd5cc92761b7ae5b5f9cff46cb88263" compoundref="version__edit_8h" startline="62" endline="72">leveldb::VersionEdit::AddFile</references>
        <referencedby refid="db__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="db__test_8cc" startline="2118" endline="2128">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aefa1c5ac4d405fe1077c19fa2fe68647" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t leveldb::PackSequenceAndType</definition>
        <argsstring>(uint64_t seq, ValueType t)</argsstring>
        <name>PackSequenceAndType</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>seq</declname>
        </param>
        <param>
          <type><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" kindref="member">ValueType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.cc" line="12" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.cc" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a7192bb79e7fa6ba01490473941386534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::AppendInternalKey</definition>
        <argsstring>(std::string *result, const ParsedInternalKey &amp;key)</argsstring>
        <name>AppendInternalKey</name>
        <param>
          <type>std::string *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_parsed_internal_key" kindref="compound">ParsedInternalKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.cc" line="18" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.cc" bodystart="18" bodyend="21"/>
        <references refid="structleveldb_1_1_parsed_internal_key_1aa6e30fcf3c95fc1485d60fa08efe2b9d" compoundref="dbformat_8h" startline="71">leveldb::ParsedInternalKey::user_key</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="namespaceleveldb_1a720cd9030ba5f867ded835b57caa1d06" compoundref="coding_8cc" startline="41" endline="45">PutFixed64</references>
        <references refid="structleveldb_1_1_parsed_internal_key_1a3ab7f4382bc026081875fde4dea95e61" compoundref="dbformat_8h" startline="72">leveldb::ParsedInternalKey::sequence</references>
        <references refid="structleveldb_1_1_parsed_internal_key_1ac7c10a6f60f93982b886ad1fbbafd6c2" compoundref="dbformat_8h" startline="73">leveldb::ParsedInternalKey::type</references>
        <referencedby refid="classleveldb_1_1_internal_key_1af436814d1667db55e93b6bd583619617" compoundref="dbformat_8h" startline="149" endline="151">leveldb::InternalKey::InternalKey</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_1ada9566cd92b6b9784ab7f2f6f71d0a4e" compoundref="dbformat_8h" startline="161" endline="164">leveldb::InternalKey::SetFrom</referencedby>
        <referencedby refid="classleveldb_1_1_key_converting_iterator_1a6af9b763a5831c2fdcd8c3bebfef6ae4" compoundref="table__test_8cc" startline="281" endline="286">leveldb::KeyConvertingIterator::Seek</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8406e76939e7e97465acf293f1585581" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t leveldb::InternalKeyEncodingLength</definition>
        <argsstring>(const ParsedInternalKey &amp;key)</argsstring>
        <name>InternalKeyEncodingLength</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_parsed_internal_key" kindref="compound">ParsedInternalKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="82" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="82" bodyend="84"/>
        <references refid="structleveldb_1_1_parsed_internal_key_1aa6e30fcf3c95fc1485d60fa08efe2b9d" compoundref="dbformat_8h" startline="71">leveldb::ParsedInternalKey::user_key</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::ParseInternalKey</definition>
        <argsstring>(const Slice &amp;internal_key, ParsedInternalKey *result)</argsstring>
        <name>ParseInternalKey</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>internal_key</declname>
        </param>
        <param>
          <type><ref refid="structleveldb_1_1_parsed_internal_key" kindref="compound">ParsedInternalKey</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="176" bodyend="186"/>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="namespaceleveldb_1a239098b0291873752d0be16633652825" compoundref="coding_8h" startline="72" endline="83">DecodeFixed64</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="structleveldb_1_1_parsed_internal_key_1a3ab7f4382bc026081875fde4dea95e61" compoundref="dbformat_8h" startline="72">leveldb::ParsedInternalKey::sequence</references>
        <references refid="structleveldb_1_1_parsed_internal_key_1ac7c10a6f60f93982b886ad1fbbafd6c2" compoundref="dbformat_8h" startline="73">leveldb::ParsedInternalKey::type</references>
        <references refid="structleveldb_1_1_parsed_internal_key_1aa6e30fcf3c95fc1485d60fa08efe2b9d" compoundref="dbformat_8h" startline="71">leveldb::ParsedInternalKey::user_key</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" compoundref="dbformat_8h" startline="53">kTypeValue</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" compoundref="db__test_8cc" startline="336" endline="376">leveldb::DBTest::AllEntriesFor</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_1a737053e1b02c3eb8361e960f7fe5befb" compoundref="dbformat_8cc" startline="34" endline="44">leveldb::InternalKey::DebugString</referencedby>
        <referencedby refid="classleveldb_1_1_version_1a8b9e51b3d0503fe5868f656356557ded" compoundref="version__set_8cc" startline="435" endline="471">leveldb::Version::RecordReadSample</referencedby>
        <referencedby refid="classleveldb_1_1_key_converting_iterator_1a46402aaa27d57c5b2bee4f560c2dc04b" compoundref="table__test_8cc" startline="292" endline="300">leveldb::KeyConvertingIterator::key</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1c889869840312393b805ad91a41b94f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref></type>
        <definition>Slice leveldb::ExtractUserKey</definition>
        <argsstring>(const Slice &amp;internal_key)</argsstring>
        <name>ExtractUserKey</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>internal_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="98" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="98" bodyend="101"/>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <referencedby refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" compoundref="dbformat_8cc" startline="50" endline="66">leveldb::InternalKeyComparator::Compare</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_comparator_1afe98c9042e34927e60e078fc103991bf" compoundref="dbformat_8cc" startline="68" endline="85">leveldb::InternalKeyComparator::FindShortestSeparator</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_comparator_1a5dc88f433ef3a0d9508ec17cb40d3e27" compoundref="dbformat_8cc" startline="87" endline="99">leveldb::InternalKeyComparator::FindShortSuccessor</referencedby>
        <referencedby refid="classleveldb_1_1_internal_filter_policy_1a1c7c7b7eecdfb872e35708793d82ab40" compoundref="dbformat_8cc" startline="105" endline="115">leveldb::InternalFilterPolicy::CreateFilter</referencedby>
        <referencedby refid="classleveldb_1_1_internal_filter_policy_1a42dc5124aa139c68bec2efa7417a7373" compoundref="dbformat_8cc" startline="117" endline="119">leveldb::InternalFilterPolicy::KeyMayMatch</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_1a8eeee76862e806006549784fe21fff61" compoundref="dbformat_8h" startline="159" endline="159">leveldb::InternalKey::user_key</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0c5a6ea40d7c0e87060a6e6d3ee393ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" kindref="member">ValueType</ref></type>
        <definition>ValueType leveldb::ExtractValueType</definition>
        <argsstring>(const Slice &amp;internal_key)</argsstring>
        <name>ExtractValueType</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>internal_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat.h" line="103" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat.h" bodystart="103" bodyend="109"/>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="namespaceleveldb_1a239098b0291873752d0be16633652825" compoundref="coding_8h" startline="72" endline="83">DecodeFixed64</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a129ecd3bf532c7422038a47c86f00826" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::IKey</definition>
        <argsstring>(const std::string &amp;user_key, uint64_t seq, ValueType vt)</argsstring>
        <name>IKey</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>user_key</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>seq</declname>
        </param>
        <param>
          <type><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" kindref="member">ValueType</ref></type>
          <declname>vt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" line="11" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" bodystart="11" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac7cf47fb2e3de741ca9a5c5d3ecea061" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::Shorten</definition>
        <argsstring>(const std::string &amp;s, const std::string &amp;l)</argsstring>
        <name>Shorten</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" line="19" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a94e8c955ceebf1e1ff0cf1584cf747e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::ShortSuccessor</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>ShortSuccessor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" line="25" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a3851e7150ed244dc0e1b85170326bd67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::TestKey</definition>
        <argsstring>(const std::string &amp;key, uint64_t seq, ValueType vt)</argsstring>
        <name>TestKey</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>seq</declname>
        </param>
        <param>
          <type><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866" kindref="member">ValueType</ref></type>
          <declname>vt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" line="31" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" bodystart="31" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0cb5db14747e016f18aa8684a485bc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FormatTest, InternalKey_EncodeDecode)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_format_test" kindref="compound">FormatTest</ref></type>
        </param>
        <param>
          <type>InternalKey_EncodeDecode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" line="49" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" bodystart="49" bodyend="63"/>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" compoundref="dbformat_8h" startline="53">kTypeValue</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" compoundref="dbformat_8h" startline="52">kTypeDeletion</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a88307bc8d4ac8ed2a4d1a530b24e255f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FormatTest, InternalKeyShortSeparator)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_format_test" kindref="compound">FormatTest</ref></type>
        </param>
        <param>
          <type>InternalKeyShortSeparator</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" line="65" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" bodystart="65" bodyend="99"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" compoundref="dbformat_8h" startline="53">kTypeValue</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" compoundref="dbformat_8h" startline="52">kTypeDeletion</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1abfb19a8fcd10a881d34dba3821434415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FormatTest, InternalKeyShortestSuccessor)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_format_test" kindref="compound">FormatTest</ref></type>
        </param>
        <param>
          <type>InternalKeyShortestSuccessor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" line="101" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc" bodystart="101" bodyend="106"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" compoundref="dbformat_8h" startline="53">kTypeValue</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a119202f6323172b2ac45eae5baf7202f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DumpFile</definition>
        <argsstring>(Env *env, const std::string &amp;fname, WritableFile *dst)</argsstring>
        <name>DumpFile</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/dumpfile.cc" line="210" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/dumpfile.cc" bodystart="210" bodyend="223"/>
        <references refid="classleveldb_1_1_status_1aefef9f88d0a6ca6d34bd9dec1670309e" compoundref="status_8h" startline="44" endline="46">leveldb::Status::InvalidArgument</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" compoundref="filename_8h" startline="21">kLogFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1af941d0365407ca03ed62ad30696c78da" compoundref="filename_8h" startline="24">kDescriptorFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aaa2ccf468819a9d769dd0bf38674a6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::WriteStringToFileSync</definition>
        <argsstring>(Env *env, const Slice &amp;data, const std::string &amp;fname)</argsstring>
        <name>WriteStringToFileSync</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="15" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env.cc" bodystart="63" bodyend="66"/>
        <referencedby refid="namespaceleveldb_1a73133aa2e18928553d14913491b094e7" compoundref="filename_8cc" startline="126" endline="142">SetCurrentFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a96df2d1ac438f65a90ba02abdb8eed3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::MakeFileName</definition>
        <argsstring>(const std::string &amp;name, uint64_t number, const char *suffix)</argsstring>
        <name>MakeFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>number</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="18" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="18" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ae5aadcd574cc5186e7821177d44f4c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::LogFileName</definition>
        <argsstring>(const std::string &amp;name, uint64_t number)</argsstring>
        <name>LogFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="27" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="27" bodyend="30"/>
        <referencedby refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" compoundref="db__impl_8cc" startline="1445" endline="1477">leveldb::DB::Open</referencedby>
        <referencedby refid="namespaceleveldb_1ac77b62bf86349926d23431e4c1c9034a" compoundref="filename__test_8cc" startline="77" endline="117">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::TableFileName</definition>
        <argsstring>(const std::string &amp;name, uint64_t number)</argsstring>
        <name>TableFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="32" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="32" bodyend="35"/>
        <referencedby refid="namespaceleveldb_1a10e102da98819e1a1f9b254241482e65" compoundref="builder_8cc" startline="17" endline="86">BuildTable</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" compoundref="db__test_8cc" startline="473" endline="485">leveldb::DBTest::DeleteAnSSTFile</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" compoundref="db__test_8cc" startline="488" endline="503">leveldb::DBTest::RenameLDBToSST</referencedby>
        <referencedby refid="namespaceleveldb_1ac77b62bf86349926d23431e4c1c9034a" compoundref="filename__test_8cc" startline="77" endline="117">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa3f12c506ffc9bf556b6cc2185313c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::SSTTableFileName</definition>
        <argsstring>(const std::string &amp;name, uint64_t number)</argsstring>
        <name>SSTTableFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="37" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="37" bodyend="40"/>
        <referencedby refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" compoundref="db__test_8cc" startline="488" endline="503">leveldb::DBTest::RenameLDBToSST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1ea160b70b18dc85b537e16db3d6ddd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DescriptorFileName</definition>
        <argsstring>(const std::string &amp;dbname, uint64_t number)</argsstring>
        <name>DescriptorFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="42" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="42" bodyend="48"/>
        <referencedby refid="namespaceleveldb_1a73133aa2e18928553d14913491b094e7" compoundref="filename_8cc" startline="126" endline="142">SetCurrentFile</referencedby>
        <referencedby refid="namespaceleveldb_1ac77b62bf86349926d23431e4c1c9034a" compoundref="filename__test_8cc" startline="77" endline="117">TEST</referencedby>
        <referencedby refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" compoundref="version__set_8cc" startline="811" endline="894">leveldb::VersionSet::LogAndApply</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1affcb2d434f2a772d7c764cd5d1797a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::CurrentFileName</definition>
        <argsstring>(const std::string &amp;dbname)</argsstring>
        <name>CurrentFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="50" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="50" bodyend="52"/>
        <referencedby refid="namespaceleveldb_1a73133aa2e18928553d14913491b094e7" compoundref="filename_8cc" startline="126" endline="142">SetCurrentFile</referencedby>
        <referencedby refid="namespaceleveldb_1ac77b62bf86349926d23431e4c1c9034a" compoundref="filename__test_8cc" startline="77" endline="117">TEST</referencedby>
        <referencedby refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" compoundref="version__set_8cc" startline="896" endline="1009">leveldb::VersionSet::Recover</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a9f772d88ab2d47dec0d68e5eb85c579e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::LockFileName</definition>
        <argsstring>(const std::string &amp;dbname)</argsstring>
        <name>LockFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="54" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="54" bodyend="56"/>
        <referencedby refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">DestroyDB</referencedby>
        <referencedby refid="namespaceleveldb_1ac77b62bf86349926d23431e4c1c9034a" compoundref="filename__test_8cc" startline="77" endline="117">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0563c700d6ff17e88f429464c1442da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::TempFileName</definition>
        <argsstring>(const std::string &amp;dbname, uint64_t number)</argsstring>
        <name>TempFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="58" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="58" bodyend="61"/>
        <referencedby refid="namespaceleveldb_1a73133aa2e18928553d14913491b094e7" compoundref="filename_8cc" startline="126" endline="142">SetCurrentFile</referencedby>
        <referencedby refid="namespaceleveldb_1ac77b62bf86349926d23431e4c1c9034a" compoundref="filename__test_8cc" startline="77" endline="117">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac40453ca7f9c0bd723873ffe32dc12a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::InfoLogFileName</definition>
        <argsstring>(const std::string &amp;dbname)</argsstring>
        <name>InfoLogFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="63" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="63" bodyend="65"/>
        <referencedby refid="namespaceleveldb_1aa4783e598841dca4393a97d360d10f56" compoundref="db__impl_8cc" startline="90" endline="114">SanitizeOptions</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2964797a29cbda9d37cce54109eefdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::OldInfoLogFileName</definition>
        <argsstring>(const std::string &amp;dbname)</argsstring>
        <name>OldInfoLogFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="68" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="68" bodyend="70"/>
        <referencedby refid="namespaceleveldb_1aa4783e598841dca4393a97d360d10f56" compoundref="db__impl_8cc" startline="90" endline="114">SanitizeOptions</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::ParseFileName</definition>
        <argsstring>(const std::string &amp;fname, uint64_t *number, FileType *type)</argsstring>
        <name>ParseFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>number</declname>
        </param>
        <param>
          <type><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1" kindref="member">FileType</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="80" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="80" bodyend="124"/>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a77227e6519db508a8baf96907bed69fb" compoundref="filename_8h" startline="25">kCurrentFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1abbb39081ce3d1fa7397c074443910235" compoundref="filename_8h" startline="22">kDBLockFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a0e4c1f07a2b307bc47531e94007c34b2" compoundref="filename_8h" startline="27">kInfoLogFile</references>
        <references refid="classleveldb_1_1_slice_1aac9a3ee9b05567c8c93793e7593a5f13" compoundref="slice_8h" startline="75" endline="78">leveldb::Slice::starts_with</references>
        <references refid="classleveldb_1_1_slice_1a1be5b22958a115ebecb2b017aad2b3f6" compoundref="slice_8h" startline="59" endline="63">leveldb::Slice::remove_prefix</references>
        <references refid="namespaceleveldb_1a1bda628b65e834063ccc5fcaec8328f8" compoundref="logging_8cc" startline="48" endline="70">ConsumeDecimalNumber</references>
        <references refid="classleveldb_1_1_slice_1a7d0b93d5801bff5656068647759dcb8f" compoundref="slice_8h" startline="46" endline="46">leveldb::Slice::empty</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1af941d0365407ca03ed62ad30696c78da" compoundref="filename_8h" startline="24">kDescriptorFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" compoundref="filename_8h" startline="21">kLogFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a485201937a3d025c7a5fe0e3517733d6" compoundref="filename_8h" startline="26">kTempFile</references>
        <referencedby refid="classleveldb_1_1_corruption_test_1a22060ac0a3697640cdcf36973339b646" compoundref="corruption__test_8cc" startline="126" endline="174">leveldb::CorruptionTest::Corrupt</referencedby>
        <referencedby refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">DestroyDB</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" compoundref="db__test_8cc" startline="473" endline="485">leveldb::DBTest::DeleteAnSSTFile</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" compoundref="db__test_8cc" startline="488" endline="503">leveldb::DBTest::RenameLDBToSST</referencedby>
        <referencedby refid="namespaceleveldb_1a28c411f7a30e2e869123a26f6e69e733" compoundref="filename__test_8cc" startline="16" endline="75">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a73133aa2e18928553d14913491b094e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::SetCurrentFile</definition>
        <argsstring>(Env *env, const std::string &amp;dbname, uint64_t descriptor_number)</argsstring>
        <name>SetCurrentFile</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>descriptor_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename.cc" line="126" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename.cc" bodystart="126" bodyend="142"/>
        <references refid="namespaceleveldb_1a1ea160b70b18dc85b537e16db3d6ddd0" compoundref="filename_8cc" startline="42" endline="48">DescriptorFileName</references>
        <references refid="classleveldb_1_1_slice_1aac9a3ee9b05567c8c93793e7593a5f13" compoundref="slice_8h" startline="75" endline="78">leveldb::Slice::starts_with</references>
        <references refid="classleveldb_1_1_slice_1a1be5b22958a115ebecb2b017aad2b3f6" compoundref="slice_8h" startline="59" endline="63">leveldb::Slice::remove_prefix</references>
        <references refid="namespaceleveldb_1a0563c700d6ff17e88f429464c1442da1" compoundref="filename_8cc" startline="58" endline="61">TempFileName</references>
        <references refid="namespaceleveldb_1aaa2ccf468819a9d769dd0bf38674a6e9" compoundref="env_8cc" startline="63" endline="66">WriteStringToFileSync</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_env_1abd743b3d4751ada1ab307427827ed5b0">leveldb::Env::RenameFile</references>
        <references refid="namespaceleveldb_1affcb2d434f2a772d7c764cd5d1797a9a" compoundref="filename_8cc" startline="50" endline="52">CurrentFileName</references>
        <references refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af">leveldb::Env::DeleteFile</references>
        <referencedby refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" compoundref="version__set_8cc" startline="811" endline="894">leveldb::VersionSet::LogAndApply</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a28c411f7a30e2e869123a26f6e69e733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FileNameTest, Parse)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_file_name_test" kindref="compound">FileNameTest</ref></type>
        </param>
        <param>
          <type>Parse</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename_test.cc" line="16" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename_test.cc" bodystart="16" bodyend="75"/>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" compoundref="filename_8h" startline="21">kLogFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a77227e6519db508a8baf96907bed69fb" compoundref="filename_8h" startline="25">kCurrentFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1abbb39081ce3d1fa7397c074443910235" compoundref="filename_8h" startline="22">kDBLockFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1af941d0365407ca03ed62ad30696c78da" compoundref="filename_8h" startline="24">kDescriptorFile</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a0e4c1f07a2b307bc47531e94007c34b2" compoundref="filename_8h" startline="27">kInfoLogFile</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" compoundref="filename_8cc" startline="80" endline="124">ParseFileName</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac77b62bf86349926d23431e4c1c9034a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FileNameTest, Construction)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_file_name_test" kindref="compound">FileNameTest</ref></type>
        </param>
        <param>
          <type>Construction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/filename_test.cc" line="77" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/filename_test.cc" bodystart="77" bodyend="117"/>
        <references refid="namespaceleveldb_1affcb2d434f2a772d7c764cd5d1797a9a" compoundref="filename_8cc" startline="50" endline="52">CurrentFileName</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" compoundref="filename_8cc" startline="80" endline="124">ParseFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a77227e6519db508a8baf96907bed69fb" compoundref="filename_8h" startline="25">kCurrentFile</references>
        <references refid="namespaceleveldb_1a9f772d88ab2d47dec0d68e5eb85c579e" compoundref="filename_8cc" startline="54" endline="56">LockFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1abbb39081ce3d1fa7397c074443910235" compoundref="filename_8h" startline="22">kDBLockFile</references>
        <references refid="namespaceleveldb_1ae5aadcd574cc5186e7821177d44f4c6c" compoundref="filename_8cc" startline="27" endline="30">LogFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" compoundref="filename_8h" startline="21">kLogFile</references>
        <references refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" compoundref="filename_8cc" startline="32" endline="35">TableFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">kTableFile</references>
        <references refid="namespaceleveldb_1a1ea160b70b18dc85b537e16db3d6ddd0" compoundref="filename_8cc" startline="42" endline="48">DescriptorFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1af941d0365407ca03ed62ad30696c78da" compoundref="filename_8h" startline="24">kDescriptorFile</references>
        <references refid="namespaceleveldb_1a0563c700d6ff17e88f429464c1442da1" compoundref="filename_8cc" startline="58" endline="61">TempFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a485201937a3d025c7a5fe0e3517733d6" compoundref="filename_8h" startline="26">kTempFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1afe94b0b5eec2b0272aed6f45042a70c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref></type>
        <definition>static Slice leveldb::GetLengthPrefixedSlice</definition>
        <argsstring>(const char *data)</argsstring>
        <name>GetLengthPrefixedSlice</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/memtable.cc" line="14" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/memtable.cc" bodystart="14" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1e6f16ce568bfceff4ba4d9623d7d795" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* leveldb::EncodeKey</definition>
        <argsstring>(std::string *scratch, const Slice &amp;target)</argsstring>
        <name>EncodeKey</name>
        <param>
          <type>std::string *</type>
          <declname>scratch</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/memtable.cc" line="44" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/memtable.cc" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1afb65664fdacb30ab73da9414db5a4208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::RepairDB</definition>
        <argsstring>(const std::string &amp;dbname, const Options &amp;options)</argsstring>
        <name>RepairDB</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dbname</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/repair.cc" line="456" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/repair.cc" bodystart="456" bodyend="459"/>
        <referencedby refid="c_8h_1a255557af7bd3a589a75d38bbb674c21b" compoundref="c_8cc" startline="285" endline="290">leveldb_repair_db</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aff36b45496c39a006a14df201ef7d57b" compoundref="corruption__test_8cc" startline="64" endline="68">leveldb::CorruptionTest::RepairDB</referencedby>
        <referencedby refid="namespaceleveldb_1a9f03547489b40b6e76cd8fc8a116884a" compoundref="corruption__test_8cc" startline="247" endline="261">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a94b31a20798f6d72a6cd11c328fcaba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, Empty)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>Empty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="31" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="31" bodyend="45"/>
        <references refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" compoundref="table__test_8cc" startline="80">cmp</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_skip_list_1a134b36bafbfecf325bb7b57bc2490f87" compoundref="skiplist_8h" startline="373" endline="380">leveldb::SkipList&lt; Key, Comparator &gt;::Contains</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a21e74b2de9a6f3db48c8d3ff277a1e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, InsertAndLookup)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>InsertAndLookup</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="47" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="47" bodyend="123"/>
        <references refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884">R</references>
        <references refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" compoundref="table__test_8cc" startline="80">cmp</references>
        <references refid="classleveldb_1_1_random_1a9e00ef1fcc82ed0ad16ba91b30ae8038" compoundref="random_8h" startline="25" endline="45">leveldb::Random::Next</references>
        <references refid="classleveldb_1_1_skip_list_1af1ed755f0825f38272aafe3cae4da644" compoundref="skiplist_8h" startline="337" endline="370">leveldb::SkipList&lt; Key, Comparator &gt;::Insert</references>
        <references refid="classleveldb_1_1_skip_list_1a134b36bafbfecf325bb7b57bc2490f87" compoundref="skiplist_8h" startline="373" endline="380">leveldb::SkipList&lt; Key, Comparator &gt;::Contains</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_skip_list_1_1_iterator_1ac074827b7e9ded32283385e6228ef8cd" compoundref="skiplist_8h" startline="197" endline="199">leveldb::SkipList&lt; Key, Comparator &gt;::Iterator::Valid</references>
        <references refid="classleveldb_1_1_skip_list_1_1_iterator_1a6c641d5cd37386abdb0aa8d73454611a" compoundref="skiplist_8h" startline="225" endline="227">leveldb::SkipList&lt; Key, Comparator &gt;::Iterator::Seek</references>
        <references refid="classleveldb_1_1_skip_list_1_1_iterator_1a5d2a82038f440d557b32afb398c7eb57" compoundref="skiplist_8h" startline="202" endline="205">leveldb::SkipList&lt; Key, Comparator &gt;::Iterator::key</references>
        <references refid="classleveldb_1_1_skip_list_1_1_iterator_1adf69c04f0480a66f10a125c49e19caa7" compoundref="skiplist_8h" startline="230" endline="232">leveldb::SkipList&lt; Key, Comparator &gt;::Iterator::SeekToFirst</references>
        <references refid="classleveldb_1_1_skip_list_1_1_iterator_1afe892ff436137b85216c2ed124f3c6dd" compoundref="skiplist_8h" startline="235" endline="240">leveldb::SkipList&lt; Key, Comparator &gt;::Iterator::SeekToLast</references>
        <references refid="classleveldb_1_1_skip_list_1_1_iterator_1ade5a684c74056f578f85237735da0cef" compoundref="skiplist_8h" startline="208" endline="211">leveldb::SkipList&lt; Key, Comparator &gt;::Iterator::Next</references>
        <references refid="classleveldb_1_1_skip_list_1_1_iterator_1a10dbaf45640ab2b9f61a96c82e7227e5" compoundref="skiplist_8h" startline="214" endline="222">leveldb::SkipList&lt; Key, Comparator &gt;::Iterator::Prev</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a7a43c7e5a10488ca82072e3cc871fcb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, ConcurrentWithoutThreads)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>ConcurrentWithoutThreads</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="288" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="288" bodyend="295"/>
        <references refid="db__test_8cc_1a9cc668c18debdbcad21b45fdd8158648" compoundref="db__test_8cc" startline="1737">test</references>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
        <references refid="classleveldb_1_1_concurrent_test_1a9dcaf11ec747ad37150526f891627c50" compoundref="skiplist__test_8cc" startline="225" endline="282">leveldb::ConcurrentTest::ReadStep</references>
        <references refid="classleveldb_1_1_concurrent_test_1a43dc8afb9124c364d6e97dc3d421131f" compoundref="skiplist__test_8cc" startline="217" endline="223">leveldb::ConcurrentTest::WriteStep</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a3b35abcf0dac45639f63dbe6b56a60f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::ConcurrentReader</definition>
        <argsstring>(void *arg)</argsstring>
        <name>ConcurrentReader</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="336" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="336" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a46451103024ca345fc73c3a6126b5b48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::RunConcurrent</definition>
        <argsstring>(int run)</argsstring>
        <name>RunConcurrent</name>
        <param>
          <type>int</type>
          <declname>run</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="348" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="348" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1997f90d2777db110a06646c9a3c7ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, Concurrent1)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>Concurrent1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="368" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0ac3fd3bf30e8efdbdead6e963ffbe3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, Concurrent2)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>Concurrent2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="369" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a95f25d807cc1b1a16a34f9a3a24fb7bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, Concurrent3)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>Concurrent3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="370" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a491925bfd0a0eb00edbbbbc0f1d3c0c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, Concurrent4)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>Concurrent4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="371" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ae94270b577d135677ad028bef3170a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(SkipTest, Concurrent5)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_skip_test" kindref="compound">SkipTest</ref></type>
        </param>
        <param>
          <type>Concurrent5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" line="372" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ae1152d734df7c3bdf050111f0049cd7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::DeleteEntry</definition>
        <argsstring>(const Slice &amp;key, void *value)</argsstring>
        <name>DeleteEntry</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" line="19" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a623e7ee79df088f3d37ebf5b55c906ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::UnrefEntry</definition>
        <argsstring>(void *arg1, void *arg2)</argsstring>
        <name>UnrefEntry</name>
        <param>
          <type>void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" line="26" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/table_cache.cc" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a83eb9464b52905f9a56f8f0d5437c3c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::GetInternalKey</definition>
        <argsstring>(Slice *input, InternalKey *dst)</argsstring>
        <name>GetInternalKey</name>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_edit.cc" line="88" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_edit.cc" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1afc2dfe267c7cd8d678021e2752f336e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::GetLevel</definition>
        <argsstring>(Slice *input, int *level)</argsstring>
        <name>GetLevel</name>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_edit.cc" line="98" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_edit.cc" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a435e5ce2b770dd30fffe979090145e0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::TestEncodeDecode</definition>
        <argsstring>(const VersionEdit &amp;edit)</argsstring>
        <name>TestEncodeDecode</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref> &amp;</type>
          <declname>edit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_edit_test.cc" line="10" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_edit_test.cc" bodystart="10" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa3106d7d6e907fc13c8c7ceed76740ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(VersionEditTest, EncodeDecode)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_version_edit_test" kindref="compound">VersionEditTest</ref></type>
        </param>
        <param>
          <type>EncodeDecode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_edit_test.cc" line="22" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_edit_test.cc" bodystart="22" bodyend="40"/>
        <references refid="classleveldb_1_1_version_edit_1a4cd5cc92761b7ae5b5f9cff46cb88263" compoundref="version__edit_8h" startline="62" endline="72">leveldb::VersionEdit::AddFile</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" compoundref="dbformat_8h" startline="53">kTypeValue</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" compoundref="dbformat_8h" startline="52">kTypeDeletion</references>
        <references refid="classleveldb_1_1_version_edit_1ac222bfd1055114d57aadbd124f24ad0c" compoundref="version__edit_8h" startline="75" endline="77">leveldb::VersionEdit::DeleteFile</references>
        <references refid="classleveldb_1_1_version_edit_1ac9b26dfba1188705d7fc4deaf047271c" compoundref="version__edit_8h" startline="55" endline="57">leveldb::VersionEdit::SetCompactPointer</references>
        <references refid="classleveldb_1_1_version_edit_1ab562147cdd82b184e86e88bd375a718c" compoundref="version__edit_8h" startline="35" endline="38">leveldb::VersionEdit::SetComparatorName</references>
        <references refid="classleveldb_1_1_version_edit_1a47e5c58d34b0e27dc8990687e0c5477a" compoundref="version__edit_8h" startline="39" endline="42">leveldb::VersionEdit::SetLogNumber</references>
        <references refid="classleveldb_1_1_version_edit_1a4c104515adf573be0ead29e6835f14fb" compoundref="version__edit_8h" startline="47" endline="50">leveldb::VersionEdit::SetNextFile</references>
        <references refid="classleveldb_1_1_version_edit_1abd6e841ed400672d33d26f4b187a66bf" compoundref="version__edit_8h" startline="51" endline="54">leveldb::VersionEdit::SetLastSequence</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ad627c8c010aab67e9ea44dd73f98e31d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double leveldb::MaxBytesForLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>MaxBytesForLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="34" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a670e043671728f7aa2dd991c2b2b7139" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t leveldb::MaxFileSizeForLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>MaxFileSizeForLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="45" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8d7291b08be6643bcfb46c475f779f9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>static int64_t leveldb::TotalFileSize</definition>
        <argsstring>(const std::vector&lt; FileMetaData * &gt; &amp;files)</argsstring>
        <name>TotalFileSize</name>
        <param>
          <type>const std::vector&lt; <ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> * &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="49" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::FindFile</definition>
        <argsstring>(const InternalKeyComparator &amp;icmp, const std::vector&lt; FileMetaData * &gt; &amp;files, const Slice &amp;key)</argsstring>
        <name>FindFile</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref> &amp;</type>
          <declname>icmp</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> * &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="77" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="77" bodyend="96"/>
        <references refid="structleveldb_1_1_file_meta_data_1a410718ba1868392b298d05a774dd07d1" compoundref="version__edit_8h" startline="23">leveldb::FileMetaData::largest</references>
        <references refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" compoundref="dbformat_8h" startline="154" endline="157">leveldb::InternalKey::Encode</references>
        <referencedby refid="namespaceleveldb_1a1a6a370f17b20667b885b5b91159c5a9" compoundref="version__set_8cc" startline="112" endline="147">SomeFileOverlapsRange</referencedby>
        <referencedby refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1adbe855f4a783c2f578e1ff2fbb5259b2" compoundref="version__set_8cc" startline="165" endline="167">leveldb::Version::LevelFileNumIterator::Seek</referencedby>
        <referencedby refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" compoundref="version__set_8cc" startline="323" endline="420">leveldb::Version::Get</referencedby>
        <referencedby refid="classleveldb_1_1_find_file_test_1a233fd8c1e1764f2572e03d28b1f58ae0" compoundref="version__set__test_8cc" startline="35" endline="39">leveldb::FindFileTest::Find</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a7f9c247b8bae634426f95a6a4443ebfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::AfterFile</definition>
        <argsstring>(const Comparator *ucmp, const Slice *user_key, const FileMetaData *f)</argsstring>
        <name>AfterFile</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref> *</type>
          <declname>ucmp</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>user_key</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="98" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ad320b62435f131ca2217d00425cae151" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::BeforeFile</definition>
        <argsstring>(const Comparator *ucmp, const Slice *user_key, const FileMetaData *f)</argsstring>
        <name>BeforeFile</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref> *</type>
          <declname>ucmp</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>user_key</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="105" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1a6a370f17b20667b885b5b91159c5a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::SomeFileOverlapsRange</definition>
        <argsstring>(const InternalKeyComparator &amp;icmp, bool disjoint_sorted_files, const std::vector&lt; FileMetaData * &gt; &amp;files, const Slice *smallest_user_key, const Slice *largest_user_key)</argsstring>
        <name>SomeFileOverlapsRange</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref> &amp;</type>
          <declname>icmp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>disjoint_sorted_files</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> * &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>smallest_user_key</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>largest_user_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="112" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="112" bodyend="147"/>
        <references refid="classleveldb_1_1_internal_key_comparator_1a86ca575a4560bb76e2bcebc0618abd31" compoundref="dbformat_8h" startline="125" endline="125">leveldb::InternalKeyComparator::user_comparator</references>
        <references refid="namespaceleveldb_1a812c4c6cf8299e767535a59f2205df0c" compoundref="version__set_8cc" startline="77" endline="96">FindFile</references>
        <references refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" compoundref="dbformat_8h" startline="154" endline="157">leveldb::InternalKey::Encode</references>
        <referencedby refid="classleveldb_1_1_version_1a7945e88b8a4f2f7b6f3201cb3d791f1e" compoundref="version__set_8cc" startline="486" endline="491">leveldb::Version::OverlapInLevel</referencedby>
        <referencedby refid="classleveldb_1_1_find_file_test_1a617e51dc2e6acbe7d5bc6d0a7224ac51" compoundref="version__set__test_8cc" startline="41" endline="48">leveldb::FindFileTest::Overlaps</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a90825bb2cdcea64469b179f6d9c5de00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>static Iterator* leveldb::GetFileIterator</definition>
        <argsstring>(void *arg, const ReadOptions &amp;options, const Slice &amp;file_value)</argsstring>
        <name>GetFileIterator</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>file_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="204" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="204" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a10c2a57fa55323ee1cb072a74c15bf24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::SaveValue</definition>
        <argsstring>(void *arg, const Slice &amp;ikey, const Slice &amp;v)</argsstring>
        <name>SaveValue</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>ikey</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="259" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="259" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab65191269f2a256a310edf82d56ed842" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::NewestFirst</definition>
        <argsstring>(FileMetaData *a, FileMetaData *b)</argsstring>
        <name>NewestFirst</name>
        <param>
          <type><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structleveldb_1_1_file_meta_data" kindref="compound">FileMetaData</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set.cc" line="274" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set.cc" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a188b103f7d0b4ade94f516f01a09aa06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FindFileTest, Empty)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_find_file_test" kindref="compound">FindFileTest</ref></type>
        </param>
        <param>
          <type>Empty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" line="51" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" bodystart="51" bodyend="57"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aede67af3ba40cb44c1ff914d7074ba48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FindFileTest, Single)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_find_file_test" kindref="compound">FindFileTest</ref></type>
        </param>
        <param>
          <type>Single</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" line="59" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" bodystart="59" bodyend="87"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6ae343add2f7159a8d66341f271a99c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FindFileTest, Multiple)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_find_file_test" kindref="compound">FindFileTest</ref></type>
        </param>
        <param>
          <type>Multiple</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" line="90" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" bodystart="90" bodyend="126"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac9911f7a50cf3a0d5ddc4533910054a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FindFileTest, MultipleNullBoundaries)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_find_file_test" kindref="compound">FindFileTest</ref></type>
        </param>
        <param>
          <type>MultipleNullBoundaries</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" line="128" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" bodystart="128" bodyend="146"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a22fa4bca5e930976bcd623786011a180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FindFileTest, OverlapSequenceChecks)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_find_file_test" kindref="compound">FindFileTest</ref></type>
        </param>
        <param>
          <type>OverlapSequenceChecks</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" line="148" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" bodystart="148" bodyend="155"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a60968bf0debd7046229d2da8d0a823c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FindFileTest, OverlappingFiles)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_find_file_test" kindref="compound">FindFileTest</ref></type>
        </param>
        <param>
          <type>OverlappingFiles</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" line="157" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/version_set_test.cc" bodystart="157" bodyend="173"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a188b9c5674c8e10ff619f01f454faaf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::PrintContents</definition>
        <argsstring>(WriteBatch *b)</argsstring>
        <name>PrintContents</name>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" line="15" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" bodystart="15" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a77a1389346b24fa9b5f9698400c865f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(WriteBatchTest, Empty)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch_test" kindref="compound">WriteBatchTest</ref></type>
        </param>
        <param>
          <type>Empty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" line="57" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" bodystart="57" bodyend="61"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_write_batch_internal_1a5270ca4567dbae1524005ad14e0698e3" compoundref="write__batch_8cc" startline="82" endline="84">leveldb::WriteBatchInternal::Count</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1af2029a94a0a17d6eb1bfec4d38b7e3a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(WriteBatchTest, Multiple)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch_test" kindref="compound">WriteBatchTest</ref></type>
        </param>
        <param>
          <type>Multiple</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" line="63" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" bodystart="63" bodyend="75"/>
        <references refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</references>
        <references refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" compoundref="write__batch_8cc" startline="105" endline="109">leveldb::WriteBatch::Delete</references>
        <references refid="classleveldb_1_1_write_batch_internal_1a0ca3483de37433fb0ce37b1e91f01bd1" compoundref="write__batch_8cc" startline="94" endline="96">leveldb::WriteBatchInternal::SetSequence</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_write_batch_internal_1af657c82bd9378b78c35a3a7429f945d4" compoundref="write__batch_8cc" startline="90" endline="92">leveldb::WriteBatchInternal::Sequence</references>
        <references refid="classleveldb_1_1_write_batch_internal_1a5270ca4567dbae1524005ad14e0698e3" compoundref="write__batch_8cc" startline="82" endline="84">leveldb::WriteBatchInternal::Count</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8021231dcd7fd48d082ecf965a2b8230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(WriteBatchTest, Corruption)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch_test" kindref="compound">WriteBatchTest</ref></type>
        </param>
        <param>
          <type>Corruption</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" line="77" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" bodystart="77" bodyend="88"/>
        <references refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</references>
        <references refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" compoundref="write__batch_8cc" startline="105" endline="109">leveldb::WriteBatch::Delete</references>
        <references refid="classleveldb_1_1_write_batch_internal_1a0ca3483de37433fb0ce37b1e91f01bd1" compoundref="write__batch_8cc" startline="94" endline="96">leveldb::WriteBatchInternal::SetSequence</references>
        <references refid="classleveldb_1_1_write_batch_internal_1a348947b16653c8a17590b13115b5274d" compoundref="write__batch__internal_8h" startline="31" endline="33">leveldb::WriteBatchInternal::Contents</references>
        <references refid="classleveldb_1_1_write_batch_internal_1aa07e75250aed00d06f2e4df85ee926b9" compoundref="write__batch_8cc" startline="136" endline="139">leveldb::WriteBatchInternal::SetContents</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6b1521832d07ed987bc4ea6c3867bd00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(WriteBatchTest, Append)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch_test" kindref="compound">WriteBatchTest</ref></type>
        </param>
        <param>
          <type>Append</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" line="90" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc" bodystart="90" bodyend="114"/>
        <references refid="classleveldb_1_1_write_batch_internal_1a0ca3483de37433fb0ce37b1e91f01bd1" compoundref="write__batch_8cc" startline="94" endline="96">leveldb::WriteBatchInternal::SetSequence</references>
        <references refid="classleveldb_1_1_write_batch_internal_1ac83c9a45a815c16ad8602b99b752b4bc" compoundref="write__batch_8cc" startline="141" endline="145">leveldb::WriteBatchInternal::Append</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</references>
        <references refid="classleveldb_1_1_write_batch_1afd5058344dc9be113919a5110129006f" compoundref="write__batch_8cc" startline="37" endline="40">leveldb::WriteBatch::Clear</references>
        <references refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" compoundref="write__batch_8cc" startline="105" endline="109">leveldb::WriteBatch::Delete</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a15271a802c68de223ea56b4b26e83519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
        <definition>Env * leveldb::NewMemEnv</definition>
        <argsstring>(Env *base_env)</argsstring>
        <name>NewMemEnv</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>base_env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv.cc" line="381" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv.cc" bodystart="381" bodyend="383"/>
        <referencedby refid="class_c_level_d_b_wrapper_1ae796b1190c072df6275e0ada4d187943" compoundref="leveldbwrapper_8cpp" startline="44" endline="67">CLevelDBWrapper::CLevelDBWrapper</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0bec4396e504d47207110edc4a11f302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(MemEnvTest, Basics)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_mem_env_test" kindref="compound">MemEnvTest</ref></type>
        </param>
        <param>
          <type>Basics</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" line="28" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" bodystart="28" bodyend="85"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e">leveldb::Env::CreateDir</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_env_1acbb85047fdf7bf441bd365cfb09f9ecb">leveldb::Env::FileExists</references>
        <references refid="classleveldb_1_1_env_1aacb66541dcb3bd586e6cc5a87489690c">leveldb::Env::GetFileSize</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6">leveldb::Env::GetChildren</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de">leveldb::Env::NewWritableFile</references>
        <references refid="classleveldb_1_1_env_1abd743b3d4751ada1ab307427827ed5b0">leveldb::Env::RenameFile</references>
        <references refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351">leveldb::Env::NewSequentialFile</references>
        <references refid="classleveldb_1_1_env_1a1df3e0bb2d47ee914448df9bb9ca0734">leveldb::Env::NewRandomAccessFile</references>
        <references refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af">leveldb::Env::DeleteFile</references>
        <references refid="classleveldb_1_1_env_1a4e1a1c4495541e426b146cba56c59627">leveldb::Env::DeleteDir</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aaee612d19267a7183555aee571cd1415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(MemEnvTest, ReadWrite)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_mem_env_test" kindref="compound">MemEnvTest</ref></type>
        </param>
        <param>
          <type>ReadWrite</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" line="87" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" bodystart="87" bodyend="127"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e">leveldb::Env::CreateDir</references>
        <references refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de">leveldb::Env::NewWritableFile</references>
        <references refid="classleveldb_1_1_writable_file_1a53b41841d9577d28f65d4d90e1660de8">leveldb::WritableFile::Append</references>
        <references refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351">leveldb::Env::NewSequentialFile</references>
        <references refid="classleveldb_1_1_sequential_file_1a4136bef1546cdb9fbbd477a635460261">leveldb::SequentialFile::Read</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_slice_1add751a5852d57a6d0697c85c1e0f3c94" compoundref="slice_8h" startline="96" endline="104">leveldb::Slice::compare</references>
        <references refid="classleveldb_1_1_sequential_file_1a18c94279fc058cad4d03cdfe04b12179">leveldb::SequentialFile::Skip</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="classleveldb_1_1_env_1a1df3e0bb2d47ee914448df9bb9ca0734">leveldb::Env::NewRandomAccessFile</references>
        <references refid="classleveldb_1_1_random_access_file_1a1a09fadcec904d9791a968acabca98d0">leveldb::RandomAccessFile::Read</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab388329216765ab6e37e34b4ac778991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(MemEnvTest, Locks)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_mem_env_test" kindref="compound">MemEnvTest</ref></type>
        </param>
        <param>
          <type>Locks</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" line="129" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" bodystart="129" bodyend="135"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1a9b7266f0444f832e428328ff19b7b54c">leveldb::Env::LockFile</references>
        <references refid="classleveldb_1_1_env_1a194a2ee3c21bc0b204ad0e5bc3b81d4b">leveldb::Env::UnlockFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a57beb72845ed55c4cc316709f14670da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(MemEnvTest, Misc)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_mem_env_test" kindref="compound">MemEnvTest</ref></type>
        </param>
        <param>
          <type>Misc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" line="137" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" bodystart="137" bodyend="150"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1ab57a55be37d4d57bf3c0ff83ee689f95">leveldb::Env::GetTestDirectory</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de">leveldb::Env::NewWritableFile</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0af1e0377067cb2229d2ac1f66851040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(MemEnvTest, LargeWrite)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_mem_env_test" kindref="compound">MemEnvTest</ref></type>
        </param>
        <param>
          <type>LargeWrite</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" line="152" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" bodystart="152" bodyend="183"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de">leveldb::Env::NewWritableFile</references>
        <references refid="classleveldb_1_1_writable_file_1a53b41841d9577d28f65d4d90e1660de8">leveldb::WritableFile::Append</references>
        <references refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351">leveldb::Env::NewSequentialFile</references>
        <references refid="classleveldb_1_1_sequential_file_1a4136bef1546cdb9fbbd477a635460261">leveldb::SequentialFile::Read</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_slice_1add751a5852d57a6d0697c85c1e0f3c94" compoundref="slice_8h" startline="96" endline="104">leveldb::Slice::compare</references>
        <references refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" compoundref="json__spirit__reader_8cpp" startline="11" endline="14">json_spirit::read</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2f341cbac955029d39ecb25107434a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(MemEnvTest, DBTest)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_mem_env_test" kindref="compound">MemEnvTest</ref></type>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" line="185" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc" bodystart="185" bodyend="226"/>
        <references refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" compoundref="options_8h" startline="45">leveldb::Options::create_if_missing</references>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" compoundref="db__impl_8cc" startline="1445" endline="1477">leveldb::DB::Open</references>
        <references refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" compoundref="db__impl_8cc" startline="1431" endline="1435">leveldb::DB::Put</references>
        <references refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911">leveldb::DB::Get</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32">leveldb::DB::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a231e1b41322a8b342c91a15a78e425d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_cache" kindref="compound">Cache</ref> *</type>
        <definition>Cache * leveldb::NewLRUCache</definition>
        <argsstring>(size_t capacity)</argsstring>
        <name>NewLRUCache</name>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/cache.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache.cc" bodystart="321" bodyend="323"/>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a31fe0ded855f188fac1650c70849760c" compoundref="autocompact__test_8cc" startline="20" endline="28">leveldb::AutoCompactTest::AutoCompactTest</referencedby>
        <referencedby refid="c_8h_1a309c755dd37602eeb743070b74c8ddbc" compoundref="c_8cc" startline="560" endline="564">leveldb_cache_create_lru</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1a9940767db260b1e4e60b8bcedc50217c" compoundref="corruption__test_8cc" startline="35" endline="46">leveldb::CorruptionTest::CorruptionTest</referencedby>
        <referencedby refid="namespaceleveldb_1aa4783e598841dca4393a97d360d10f56" compoundref="db__impl_8cc" startline="90" endline="114">SanitizeOptions</referencedby>
        <referencedby refid="namespaceleveldb_1a6d54978f51e046c170696cbb320f23f1" compoundref="db__test_8cc" startline="1682" endline="1727">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref> *</type>
        <definition>const Comparator * leveldb::BytewiseComparator</definition>
        <argsstring>()</argsstring>
        <name>BytewiseComparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/comparator.h" line="59" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/comparator.cc" bodystart="76" bodyend="79"/>
        <references refid="namespaceleveldb_1_1port_1a1493e91d494e6f0ea086a743a562e983" compoundref="port__posix_8cc" startline="49" endline="51">leveldb::port::InitOnce</references>
        <referencedby refid="namespaceleveldb_1a5cd6c2754610c66f4dd998874482c80b" compoundref="db__test_8cc" startline="1368" endline="1389">TEST</referencedby>
        <referencedby refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" compoundref="db__test_8cc" startline="2065" endline="2114">BM_LogAndApply</referencedby>
        <referencedby refid="classleveldb_1_1_find_file_test_1a233fd8c1e1764f2572e03d28b1f58ae0" compoundref="version__set__test_8cc" startline="35" endline="39">leveldb::FindFileTest::Find</referencedby>
        <referencedby refid="classleveldb_1_1_find_file_test_1a617e51dc2e6acbe7d5bc6d0a7224ac51" compoundref="version__set__test_8cc" startline="41" endline="48">leveldb::FindFileTest::Overlaps</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Log</definition>
        <argsstring>(Logger *info_log, const char *format,...)</argsstring>
        <name>Log</name>
        <param>
          <type><ref refid="classleveldb_1_1_logger" kindref="compound">Logger</ref> *</type>
          <declname>info_log</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="256" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env.cc" bodystart="27" bodyend="34"/>
        <references refid="classleveldb_1_1_logger_1a408e238a0028a45e9cc7aec6ad2277c5">leveldb::Logger::Logv</references>
        <referencedby refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" compoundref="version__set_8cc" startline="811" endline="894">leveldb::VersionSet::LogAndApply</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ae01563eb18a8527096b54d60251351cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::WriteStringToFile</definition>
        <argsstring>(Env *env, const Slice &amp;data, const std::string &amp;fname)</argsstring>
        <name>WriteStringToFile</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="263" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env.cc" bodystart="58" bodyend="61"/>
        <referencedby refid="classleveldb_1_1_corruption_test_1a22060ac0a3697640cdcf36973339b646" compoundref="corruption__test_8cc" startline="126" endline="174">leveldb::CorruptionTest::Corrupt</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa47a20ae782e9ad537692c3202cd652d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::ReadFileToString</definition>
        <argsstring>(Env *env, const std::string &amp;fname, std::string *data)</argsstring>
        <name>ReadFileToString</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="267" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env.cc" bodystart="68" bodyend="91"/>
        <references refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351">leveldb::Env::NewSequentialFile</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_sequential_file_1a4136bef1546cdb9fbbd477a635460261">leveldb::SequentialFile::Read</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="classleveldb_1_1_slice_1a7d0b93d5801bff5656068647759dcb8f" compoundref="slice_8h" startline="46" endline="46">leveldb::Slice::empty</references>
        <referencedby refid="classleveldb_1_1_corruption_test_1a22060ac0a3697640cdcf36973339b646" compoundref="corruption__test_8cc" startline="126" endline="174">leveldb::CorruptionTest::Corrupt</referencedby>
        <referencedby refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" compoundref="version__set_8cc" startline="896" endline="1009">leveldb::VersionSet::Recover</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ae6b34bf2331983721554f284b1eaa1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classleveldb_1_1_filter_policy" kindref="compound">FilterPolicy</ref> *</type>
        <definition>const FilterPolicy * leveldb::NewBloomFilterPolicy</definition>
        <argsstring>(int bits_per_key)</argsstring>
        <name>NewBloomFilterPolicy</name>
        <param>
          <type>int</type>
          <declname>bits_per_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/filter_policy.h" line="66" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/bloom.cc" bodystart="91" bodyend="93"/>
        <referencedby refid="c_8h_1a1adc82e212c58033ec9b8cd05577525c" compoundref="c_8cc" startline="499" endline="520">leveldb_filterpolicy_create_bloom</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" compoundref="db__test_8cc" startline="209" endline="216">leveldb::DBTest::DBTest</referencedby>
        <referencedby refid="namespaceleveldb_1a6d54978f51e046c170696cbb320f23f1" compoundref="db__test_8cc" startline="1682" endline="1727">TEST</referencedby>
        <referencedby refid="class_c_tx_d_b_1a15efd656b7f86b0abf8d99183cae493a" compoundref="txdb-leveldb_8cpp" startline="77" endline="130">CTxDB::CTxDB</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a3293c30e4a309a7293598b1db0f3e687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator * leveldb::NewEmptyIterator</definition>
        <argsstring>()</argsstring>
        <name>NewEmptyIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/iterator.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/iterator.cc" bodystart="59" bodyend="61"/>
        <references refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" compoundref="status_8h" startline="32" endline="32">leveldb::Status::OK</references>
        <referencedby refid="classleveldb_1_1_block_1a336289029f37d18d31a1a3c178afc7b3" compoundref="block_8cc" startline="256" endline="266">leveldb::Block::NewIterator</referencedby>
        <referencedby refid="namespaceleveldb_1ab8bdbd2babe772234f8dee1bc4f44eb5" compoundref="merger_8cc" startline="186" endline="195">NewMergingIterator</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab2c425a5fcb13b97e50e32c7b93186f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator * leveldb::NewErrorIterator</definition>
        <argsstring>(const Status &amp;status)</argsstring>
        <name>NewErrorIterator</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/iterator.h" line="96" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/iterator.cc" bodystart="63" bodyend="65"/>
        <referencedby refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" compoundref="table__cache_8cc" startline="82" endline="103">leveldb::TableCache::NewIterator</referencedby>
        <referencedby refid="classleveldb_1_1_block_1a336289029f37d18d31a1a3c178afc7b3" compoundref="block_8cc" startline="256" endline="266">leveldb::Block::NewIterator</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a53c443def2386ea299281cf36de3ae4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::operator==</definition>
        <argsstring>(const Slice &amp;x, const Slice &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/slice.h" line="87" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/slice.h" bodystart="87" bodyend="90"/>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6592a36834e5a52b66cc8357c7ef806b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::operator!=</definition>
        <argsstring>(const Slice &amp;x, const Slice &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/slice.h" line="92" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/slice.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a5052c77c33dedcb489acd0c29f6bfcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Issue200, Test)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_issue200" kindref="compound">Issue200</ref></type>
        </param>
        <param>
          <type>Test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/issues/issue200_test.cc" line="16" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/issues/issue200_test.cc" bodystart="16" bodyend="53"/>
        <references refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" compoundref="testharness_8cc" startline="60" endline="65">leveldb::test::TmpDir</references>
        <references refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">DestroyDB</references>
        <references refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" compoundref="options_8h" startline="45">leveldb::Options::create_if_missing</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" compoundref="db__impl_8cc" startline="1445" endline="1477">leveldb::DB::Open</references>
        <references refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" compoundref="db__impl_8cc" startline="1431" endline="1435">leveldb::DB::Put</references>
        <references refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32">leveldb::DB::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a924f4e20853c0748f98e8f93f6a93ab9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* leveldb::DecodeEntry</definition>
        <argsstring>(const char *p, const char *limit, uint32_t *shared, uint32_t *non_shared, uint32_t *value_length)</argsstring>
        <name>DecodeEntry</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>non_shared</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>value_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/block.cc" line="53" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/block.cc" bodystart="53" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a8360ab2a7a18ca54cbb3e99d80440248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FilterBlockTest, EmptyBuilder)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_filter_block_test" kindref="compound">FilterBlockTest</ref></type>
        </param>
        <param>
          <type>EmptyBuilder</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc" line="46" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc" bodystart="46" bodyend="53"/>
        <references refid="classleveldb_1_1_filter_block_builder_1a75fa127d8af42e749abdd235eed97cad" compoundref="filter__block_8cc" startline="36" endline="50">leveldb::FilterBlockBuilder::Finish</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" compoundref="logging_8cc" startline="42" endline="46">EscapeString</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_filter_block_reader_1a2c1c0cd8311b99fd92d3548b7aa240d0" compoundref="filter__block_8cc" startline="95" endline="109">leveldb::FilterBlockReader::KeyMayMatch</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a9eb56f9aedd874d7e877b5b0e3737854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FilterBlockTest, SingleChunk)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_filter_block_test" kindref="compound">FilterBlockTest</ref></type>
        </param>
        <param>
          <type>SingleChunk</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc" line="55" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc" bodystart="55" bodyend="74"/>
        <references refid="classleveldb_1_1_filter_block_builder_1a766a753a200f7386196a68897e47c1c3" compoundref="filter__block_8cc" startline="22" endline="28">leveldb::FilterBlockBuilder::StartBlock</references>
        <references refid="classleveldb_1_1_filter_block_builder_1a4fd9db735c5c72973cec62e4fd98137d" compoundref="filter__block_8cc" startline="30" endline="34">leveldb::FilterBlockBuilder::AddKey</references>
        <references refid="classleveldb_1_1_filter_block_builder_1a75fa127d8af42e749abdd235eed97cad" compoundref="filter__block_8cc" startline="36" endline="50">leveldb::FilterBlockBuilder::Finish</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_filter_block_reader_1a2c1c0cd8311b99fd92d3548b7aa240d0" compoundref="filter__block_8cc" startline="95" endline="109">leveldb::FilterBlockReader::KeyMayMatch</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa7a90a751773a0c3e22a0fe0c1b67c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(FilterBlockTest, MultiChunk)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_filter_block_test" kindref="compound">FilterBlockTest</ref></type>
        </param>
        <param>
          <type>MultiChunk</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc" line="76" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc" bodystart="76" bodyend="122"/>
        <references refid="classleveldb_1_1_filter_block_builder_1a766a753a200f7386196a68897e47c1c3" compoundref="filter__block_8cc" startline="22" endline="28">leveldb::FilterBlockBuilder::StartBlock</references>
        <references refid="classleveldb_1_1_filter_block_builder_1a4fd9db735c5c72973cec62e4fd98137d" compoundref="filter__block_8cc" startline="30" endline="34">leveldb::FilterBlockBuilder::AddKey</references>
        <references refid="classleveldb_1_1_filter_block_builder_1a75fa127d8af42e749abdd235eed97cad" compoundref="filter__block_8cc" startline="36" endline="50">leveldb::FilterBlockBuilder::Finish</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_filter_block_reader_1a2c1c0cd8311b99fd92d3548b7aa240d0" compoundref="filter__block_8cc" startline="95" endline="109">leveldb::FilterBlockReader::KeyMayMatch</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a63198fc7656081fd62695dade629790b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::ReadBlock</definition>
        <argsstring>(RandomAccessFile *file, const ReadOptions &amp;options, const BlockHandle &amp;handle, BlockContents *result)</argsstring>
        <name>ReadBlock</name>
        <param>
          <type><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_block_handle" kindref="compound">BlockHandle</ref> &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structleveldb_1_1_block_contents" kindref="compound">BlockContents</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/format.cc" line="66" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/format.cc" bodystart="66" bodyend="143"/>
        <references refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" compoundref="format_8h" startline="87">leveldb::BlockContents::data</references>
        <references refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" compoundref="format_8h" startline="88">leveldb::BlockContents::cachable</references>
        <references refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" compoundref="format_8h" startline="89">leveldb::BlockContents::heap_allocated</references>
        <references refid="classleveldb_1_1_block_handle_1a44931c9086cb3c30f767c751c3a7daec" compoundref="format_8h" startline="31" endline="31">leveldb::BlockHandle::size</references>
        <references refid="classleveldb_1_1_random_access_file_1a1a09fadcec904d9791a968acabca98d0">leveldb::RandomAccessFile::Read</references>
        <references refid="classleveldb_1_1_block_handle_1a31071c24f77e52a3bfc3a228f9f6c133" compoundref="format_8h" startline="27" endline="27">leveldb::BlockHandle::offset</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" compoundref="status_8h" startline="38" endline="40">leveldb::Status::Corruption</references>
        <references refid="structleveldb_1_1_read_options_1a43731d67b707995e20571ad33c1f53f2" compoundref="options_8h" startline="147">leveldb::ReadOptions::verify_checksums</references>
        <references refid="namespaceleveldb_1_1crc32c_1aef7889069ea26dd145509fff4c4e6b66" compoundref="crc32c_8h" startline="37" endline="40">leveldb::crc32c::Unmask</references>
        <references refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" compoundref="coding_8h" startline="58" endline="70">DecodeFixed32</references>
        <references refid="namespaceleveldb_1_1crc32c_1ac004d1e3d8c75b033c162e5ae0a5cc2c" compoundref="crc32c_8h" startline="20" endline="22">leveldb::crc32c::Value</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" compoundref="options_8h" startline="26">kNoCompression</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9bad0d4e00e3596bcc3b9bdfd970900a06e" compoundref="options_8h" startline="27">kSnappyCompression</references>
        <references refid="namespaceleveldb_1_1port_1aad536a786dfc1df63d14c6b74178a73b" compoundref="port__posix_8h" startline="129" endline="136">leveldb::port::Snappy_GetUncompressedLength</references>
        <references refid="namespaceleveldb_1_1port_1ab6f0c4381b00450e06d3000a8cb48a55" compoundref="port__posix_8h" startline="138" endline="145">leveldb::port::Snappy_Uncompress</references>
        <references refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" compoundref="status_8h" startline="32" endline="32">leveldb::Status::OK</references>
        <referencedby refid="classleveldb_1_1_table_1aa25d0e074ab4de46e583522a8c0e9582" compoundref="table_8cc" startline="38" endline="89">leveldb::Table::Open</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab8bdbd2babe772234f8dee1bc4f44eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator * leveldb::NewMergingIterator</definition>
        <argsstring>(const Comparator *cmp, Iterator **list, int n)</argsstring>
        <name>NewMergingIterator</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref> *</type>
          <declname>cmp</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> **</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/merger.cc" line="186" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/merger.cc" bodystart="186" bodyend="195"/>
        <references refid="namespaceleveldb_1a3293c30e4a309a7293598b1db0f3e687" compoundref="iterator_8cc" startline="59" endline="61">NewEmptyIterator</references>
        <referencedby refid="classleveldb_1_1_version_set_1a181194e96a88e69a60c1fda9cf3c4651" compoundref="version__set_8cc" startline="1210" endline="1241">leveldb::VersionSet::MakeInputIterator</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aae44808dd6055cdc2672d3afd8a9dfa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::DeleteBlock</definition>
        <argsstring>(void *arg, void *ignored)</argsstring>
        <name>DeleteBlock</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ignored</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table.cc" line="147" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a77a1b25fd4adb21de059afe9ba12eea7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::DeleteCachedBlock</definition>
        <argsstring>(const Slice &amp;key, void *value)</argsstring>
        <name>DeleteCachedBlock</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table.cc" line="151" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a3ed529874018836778583db3af7e3e54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::ReleaseBlock</definition>
        <argsstring>(void *arg, void *h)</argsstring>
        <name>ReleaseBlock</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table.cc" line="156" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1abecd41777b0a66591c13f6211a9c91df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::Reverse</definition>
        <argsstring>(const Slice &amp;key)</argsstring>
        <name>Reverse</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="27" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="27" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a7746f46abb723036dfe99697f22ebc6a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::Increment</definition>
        <argsstring>(const Comparator *cmp, std::string *key)</argsstring>
        <name>Increment</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref> *</type>
          <declname>cmp</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="66" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a13cda371e30ed51c6ac118444cc30b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, Empty)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>Empty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="648" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="648" bodyend="654"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1af55d0693f84c040c3bf5ef986c6ad27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, ZeroRestartPointsInBlock)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>ZeroRestartPointsInBlock</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="659" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="659" bodyend="675"/>
        <references refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" compoundref="format_8h" startline="87">leveldb::BlockContents::data</references>
        <references refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" compoundref="format_8h" startline="88">leveldb::BlockContents::cachable</references>
        <references refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" compoundref="format_8h" startline="89">leveldb::BlockContents::heap_allocated</references>
        <references refid="classleveldb_1_1_block_1a336289029f37d18d31a1a3c178afc7b3" compoundref="block_8cc" startline="256" endline="266">leveldb::Block::NewIterator</references>
        <references refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" compoundref="comparator_8cc" startline="76" endline="79">BytewiseComparator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1311d3380969292aaeb1c4588b7633f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, SimpleEmptyKey)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>SimpleEmptyKey</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="678" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="678" bodyend="685"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ae9364038df96fa10c379139b73101bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, SimpleSingle)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>SimpleSingle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="687" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="687" bodyend="694"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac934d6413de1663dd440a0fb11e8e59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, SimpleMulti)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>SimpleMulti</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="696" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="696" bodyend="705"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a45ad3f5f5a3227d14fd3c2742820f10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, SimpleSpecialKey)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>SimpleSpecialKey</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="707" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="707" bodyend="714"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1adc90f6565a8de1839377305fcb97f70c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, Randomized)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>Randomized</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="716" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="716" bodyend="734"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
        <references refid="namespaceleveldb_1_1test_1ae6faec2042472bb9c3da124a677c4b96" compoundref="testutil_8cc" startline="20" endline="31">leveldb::test::RandomKey</references>
        <references refid="classleveldb_1_1_random_1a41987dcc7818d7bc0e68e2418c51d94e" compoundref="random_8h" startline="57" endline="59">leveldb::Random::Skewed</references>
        <references refid="namespaceleveldb_1_1test_1a2132c5f28cd21dcea4348246fa32b673" compoundref="testutil_8cc" startline="12" endline="18">leveldb::test::RandomString</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a175371052945d08563d145130faec721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Harness, RandomizedLongDB)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref></type>
        </param>
        <param>
          <type>RandomizedLongDB</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="736" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="736" bodyend="758"/>
        <references refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</references>
        <references refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" compoundref="table__test_8cc" startline="403">DB_TEST</references>
        <references refid="namespaceleveldb_1_1test_1ae6faec2042472bb9c3da124a677c4b96" compoundref="testutil_8cc" startline="20" endline="31">leveldb::test::RandomKey</references>
        <references refid="classleveldb_1_1_random_1a41987dcc7818d7bc0e68e2418c51d94e" compoundref="random_8h" startline="57" endline="59">leveldb::Random::Skewed</references>
        <references refid="namespaceleveldb_1_1test_1a2132c5f28cd21dcea4348246fa32b673" compoundref="testutil_8cc" startline="12" endline="18">leveldb::test::RandomString</references>
        <references refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" compoundref="version__set_8cc" startline="256">value</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</references>
        <references refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" compoundref="testharness_8h" startline="110">ASSERT_GT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a13d141d3f958b9ac30ef1a979d5b00f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(MemTableTest, Simple)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_mem_table_test" kindref="compound">MemTableTest</ref></type>
        </param>
        <param>
          <type>Simple</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="762" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="762" bodyend="785"/>
        <references refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" compoundref="table__test_8cc" startline="80">cmp</references>
        <references refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" compoundref="comparator_8cc" startline="76" endline="79">BytewiseComparator</references>
        <references refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" compoundref="memtable_8h" startline="27" endline="27">leveldb::MemTable::Ref</references>
        <references refid="classleveldb_1_1_write_batch_internal_1a0ca3483de37433fb0ce37b1e91f01bd1" compoundref="write__batch_8cc" startline="94" endline="96">leveldb::WriteBatchInternal::SetSequence</references>
        <references refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_write_batch_internal_1a102aae14259fd277e2576338ce3e5551" compoundref="write__batch_8cc" startline="128" endline="134">leveldb::WriteBatchInternal::InsertInto</references>
        <references refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" compoundref="memtable_8cc" startline="78" endline="80">leveldb::MemTable::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" compoundref="memtable_8h" startline="30" endline="36">leveldb::MemTable::Unref</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a891b358b4c0a10a44b24b8f473cc73fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::Between</definition>
        <argsstring>(uint64_t val, uint64_t low, uint64_t high)</argsstring>
        <name>Between</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>low</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="787" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="787" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a3c4934cad4099a61dd153fe6a1d5f85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(TableTest, ApproximateOffsetOfPlain)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_table_test" kindref="compound">TableTest</ref></type>
        </param>
        <param>
          <type>ApproximateOffsetOfPlain</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="800" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="800" bodyend="828"/>
        <references refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" compoundref="comparator_8cc" startline="76" endline="79">BytewiseComparator</references>
        <references refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" compoundref="table__test_8cc" startline="146" endline="148">leveldb::Constructor::Add</references>
        <references refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" compoundref="options_8h" startline="106">leveldb::Options::block_size</references>
        <references refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" compoundref="options_8h" startline="129">leveldb::Options::compression</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" compoundref="options_8h" startline="26">kNoCompression</references>
        <references refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" compoundref="table__test_8cc" startline="153" endline="166">leveldb::Constructor::Finish</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" compoundref="table__test_8cc" startline="257" endline="259">leveldb::TableConstructor::ApproximateOffsetOf</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aae0ba466a002c3ae3541c5ca4e7bcbf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool leveldb::SnappyCompressionSupported</definition>
        <argsstring>()</argsstring>
        <name>SnappyCompressionSupported</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="830" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="830" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a54db682b48044a62a1b681349c53defb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(TableTest, ApproximateOffsetOfCompressed)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_table_test" kindref="compound">TableTest</ref></type>
        </param>
        <param>
          <type>ApproximateOffsetOfCompressed</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="836" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="836" bodyend="862"/>
        <references refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" compoundref="comparator_8cc" startline="76" endline="79">BytewiseComparator</references>
        <references refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" compoundref="table__test_8cc" startline="146" endline="148">leveldb::Constructor::Add</references>
        <references refid="namespaceleveldb_1_1test_1a7e336c887550b617dfd8bc0f61726779" compoundref="testutil_8cc" startline="34" endline="48">leveldb::test::CompressibleString</references>
        <references refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" compoundref="options_8h" startline="106">leveldb::Options::block_size</references>
        <references refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" compoundref="options_8h" startline="129">leveldb::Options::compression</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9bad0d4e00e3596bcc3b9bdfd970900a06e" compoundref="options_8h" startline="27">kSnappyCompression</references>
        <references refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" compoundref="table__test_8cc" startline="153" endline="166">leveldb::Constructor::Finish</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" compoundref="table__test_8cc" startline="257" endline="259">leveldb::TableConstructor::ApproximateOffsetOf</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a44a9b2f992cf66b7046581b72a095ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator* leveldb::NewTwoLevelIterator</definition>
        <argsstring>(Iterator *index_iter, BlockFunction block_function, void *arg, const ReadOptions &amp;options)</argsstring>
        <name>NewTwoLevelIterator</name>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
          <declname>index_iter</declname>
        </param>
        <param>
          <type>BlockFunction</type>
          <declname>block_function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/two_level_iterator.cc" line="174" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/two_level_iterator.cc" bodystart="174" bodyend="180"/>
        <referencedby refid="classleveldb_1_1_version_set_1a181194e96a88e69a60c1fda9cf3c4651" compoundref="version__set_8cc" startline="1210" endline="1241">leveldb::VersionSet::MakeInputIterator</referencedby>
        <referencedby refid="classleveldb_1_1_table_1ad354f57ece050ca0c5f42669b7c01cc2" compoundref="table_8cc" startline="220" endline="224">leveldb::Table::NewIterator</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a22af8231362c99733939610f6edd8413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator* leveldb::NewTwoLevelIterator</definition>
        <argsstring>(Iterator *index_iter, Iterator *(*block_function)(void *arg, const ReadOptions &amp;options, const Slice &amp;index_value), void *arg, const ReadOptions &amp;options)</argsstring>
        <name>NewTwoLevelIterator</name>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
          <declname>index_iter</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *(*)(void *<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>, const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;options, const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;index_value)</type>
          <declname>block_function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/two_level_iterator.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1add7ea8b384c08acc8252c0dac6ef722d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(ArenaTest, Empty)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_arena_test" kindref="compound">ArenaTest</ref></type>
        </param>
        <param>
          <type>Empty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/arena_test.cc" line="14" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/arena_test.cc" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0eabdecca31ba177802a55bff92b2968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(ArenaTest, Simple)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_arena_test" kindref="compound">ArenaTest</ref></type>
        </param>
        <param>
          <type>Simple</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/arena_test.cc" line="18" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/arena_test.cc" bodystart="18" bodyend="62"/>
        <references refid="classleveldb_1_1_random_1abed35e25c0e08c2c4cb6d06b62cd1b73" compoundref="random_8h" startline="52" endline="52">leveldb::Random::OneIn</references>
        <references refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" compoundref="random_8h" startline="48" endline="48">leveldb::Random::Uniform</references>
        <references refid="classleveldb_1_1_arena_1a9c1e8e695fe25ac96063f9fbacefee9e" compoundref="arena_8cc" startline="42" endline="59">leveldb::Arena::AllocateAligned</references>
        <references refid="classleveldb_1_1_arena_1add4bc4b1c8fdf5be7a96a7ec00a0732e" compoundref="arena_8h" startline="52" endline="64">leveldb::Arena::Allocate</references>
        <references refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" compoundref="testharness_8h" startline="109">ASSERT_GE</references>
        <references refid="classleveldb_1_1_arena_1aaf8db075d5d1130106bbbf66b1d267b2" compoundref="arena_8h" startline="29" endline="31">leveldb::Arena::MemoryUsage</references>
        <references refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" compoundref="testharness_8h" startline="111">ASSERT_LE</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a51ec8bfaeac0769cf28899e1356997ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref></type>
        <definition>static Slice leveldb::Key</definition>
        <argsstring>(int i, char *buffer)</argsstring>
        <name>Key</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" line="16" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a553e831850c6c7941b67bd6bf31ca86f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(BloomTest, EmptyFilter)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_bloom_test" kindref="compound">BloomTest</ref></type>
        </param>
        <param>
          <type>EmptyFilter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" line="88" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" bodystart="88" bodyend="91"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a05ff27d65ac0dfa59e930fa501eb7b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(BloomTest, Small)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_bloom_test" kindref="compound">BloomTest</ref></type>
        </param>
        <param>
          <type>Small</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" line="93" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" bodystart="93" bodyend="100"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1adeb961580f3894eb7081a28ef4ecd1fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int leveldb::NextLength</definition>
        <argsstring>(int length)</argsstring>
        <name>NextLength</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" line="102" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac2b31308484f9ac58a7bf08a95010751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(BloomTest, VaryingLengths)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_bloom_test" kindref="compound">BloomTest</ref></type>
        </param>
        <param>
          <type>VaryingLengths</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" line="115" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/bloom_test.cc" bodystart="115" bodyend="153"/>
        <references refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" compoundref="testharness_8h" startline="111">ASSERT_LE</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a30f623daa642a441a1bf58bcad70dbfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string leveldb::EncodeKey</definition>
        <argsstring>(int k)</argsstring>
        <name>EncodeKey</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="14" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a7819fbf4e9f594d28aa16cd6287a0b37" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int leveldb::DecodeKey</definition>
        <argsstring>(const Slice &amp;k)</argsstring>
        <name>DecodeKey</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="19" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2cdd451cfce77df268927cad2371fe88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* leveldb::EncodeValue</definition>
        <argsstring>(uintptr_t v)</argsstring>
        <name>EncodeValue</name>
        <param>
          <type>uintptr_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="23" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a4a88922ce403100602efb2c6ebaac070" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int leveldb::DecodeValue</definition>
        <argsstring>(void *v)</argsstring>
        <name>DecodeValue</name>
        <param>
          <type>void *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="24" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1af5e804721d6c010d0849670c7058fad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CacheTest, HitAndMiss)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_cache_test" kindref="compound">CacheTest</ref></type>
        </param>
        <param>
          <type>HitAndMiss</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="68" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="68" bodyend="89"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a4029627ce9c6a8cba35245d1147f08b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CacheTest, Erase)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_cache_test" kindref="compound">CacheTest</ref></type>
        </param>
        <param>
          <type>Erase</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="91" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="91" bodyend="108"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a4836206c2e46b6cbcd72fd2ab5e6a201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CacheTest, EntriesArePinned)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_cache_test" kindref="compound">CacheTest</ref></type>
        </param>
        <param>
          <type>EntriesArePinned</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="110" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="110" bodyend="133"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a464b1da1cda7a4e84860e5017595aa01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CacheTest, EvictionPolicy)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_cache_test" kindref="compound">CacheTest</ref></type>
        </param>
        <param>
          <type>EvictionPolicy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="135" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="135" bodyend="147"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a743c7f3357dd56a479121318b9589e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CacheTest, HeavyEntries)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_cache_test" kindref="compound">CacheTest</ref></type>
        </param>
        <param>
          <type>HeavyEntries</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="149" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="149" bodyend="174"/>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" compoundref="testharness_8h" startline="111">ASSERT_LE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac871120de5f46199da0d282721c0511c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(CacheTest, NewId)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_cache_test" kindref="compound">CacheTest</ref></type>
        </param>
        <param>
          <type>NewId</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" line="176" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/cache_test.cc" bodystart="176" bodyend="180"/>
        <references refid="testharness_8h_1a0086e0b898cbf7a680ba24ed898edb1f" compoundref="testharness_8h" startline="108">ASSERT_NE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a265d1eea2e5d8e42cf86372ed4904886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::EncodeFixed32</definition>
        <argsstring>(char *buf, uint32_t value)</argsstring>
        <name>EncodeFixed32</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="9" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="9" bodyend="18"/>
        <referencedby refid="classleveldb_1_1log_1_1_log_test_1ac966525faded349590f1a1ae738844cf" compoundref="log__test_8cc" startline="156" endline="161">leveldb::log::LogTest::FixChecksum</referencedby>
        <referencedby refid="classleveldb_1_1_write_batch_internal_1ae03d20619da53aae175dd28d61c90bd9" compoundref="write__batch_8cc" startline="86" endline="88">leveldb::WriteBatchInternal::SetCount</referencedby>
        <referencedby refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" compoundref="coding_8cc" startline="35" endline="39">PutFixed32</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a725a2c0ebf763116b4ca3fb78564ff70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::EncodeFixed64</definition>
        <argsstring>(char *buf, uint64_t value)</argsstring>
        <name>EncodeFixed64</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="20" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="20" bodyend="33"/>
        <referencedby refid="classleveldb_1_1_lookup_key_1acd09aa56607ced962e1b458d05d53472" compoundref="dbformat_8cc" startline="121" endline="138">leveldb::LookupKey::LookupKey</referencedby>
        <referencedby refid="classleveldb_1_1_mem_table_1a37bec80954badb2354426aa175e9371f" compoundref="memtable_8cc" startline="82" endline="106">leveldb::MemTable::Add</referencedby>
        <referencedby refid="classleveldb_1_1_table_cache_1a57b81c58ff0533514b3a5d1652f044bc" compoundref="table__cache_8cc" startline="121" endline="125">leveldb::TableCache::Evict</referencedby>
        <referencedby refid="classleveldb_1_1_version_1_1_level_file_num_iterator_1ac09a8ed595aca29d90e6af91e80a4f00" compoundref="version__set_8cc" startline="188" endline="193">leveldb::Version::LevelFileNumIterator::value</referencedby>
        <referencedby refid="classleveldb_1_1_write_batch_internal_1a0ca3483de37433fb0ce37b1e91f01bd1" compoundref="write__batch_8cc" startline="94" endline="96">leveldb::WriteBatchInternal::SetSequence</referencedby>
        <referencedby refid="namespaceleveldb_1a720cd9030ba5f867ded835b57caa1d06" compoundref="coding_8cc" startline="41" endline="45">PutFixed64</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::PutFixed32</definition>
        <argsstring>(std::string *dst, uint32_t value)</argsstring>
        <name>PutFixed32</name>
        <param>
          <type>std::string *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="35" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="35" bodyend="39"/>
        <references refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" compoundref="version__set_8cc" startline="256">value</references>
        <references refid="namespaceleveldb_1a265d1eea2e5d8e42cf86372ed4904886" compoundref="coding_8cc" startline="9" endline="18">EncodeFixed32</references>
        <referencedby refid="classleveldb_1_1_block_builder_1ab345ab44def13fb180502e9637b28bcd" compoundref="block__builder_8cc" startline="63" endline="71">leveldb::BlockBuilder::Finish</referencedby>
        <referencedby refid="classleveldb_1_1_filter_block_builder_1a75fa127d8af42e749abdd235eed97cad" compoundref="filter__block_8cc" startline="36" endline="50">leveldb::FilterBlockBuilder::Finish</referencedby>
        <referencedby refid="classleveldb_1_1_test_hash_filter_1ad6d9fc5e8008a1a2bd3d22d21cef6645" compoundref="filter__block__test_8cc" startline="23" endline="28">leveldb::TestHashFilter::CreateFilter</referencedby>
        <referencedby refid="classleveldb_1_1_footer_1ac0148e441c2f25d7d24ec14ba2099f58" compoundref="format_8cc" startline="32" endline="42">leveldb::Footer::EncodeTo</referencedby>
        <referencedby refid="namespaceleveldb_1a6c2537f909125665159a4161fdd21e27" compoundref="coding__test_8cc" startline="13" endline="25">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a720cd9030ba5f867ded835b57caa1d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::PutFixed64</definition>
        <argsstring>(std::string *dst, uint64_t value)</argsstring>
        <name>PutFixed64</name>
        <param>
          <type>std::string *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="41" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="41" bodyend="45"/>
        <references refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" compoundref="version__set_8cc" startline="256">value</references>
        <references refid="namespaceleveldb_1a725a2c0ebf763116b4ca3fb78564ff70" compoundref="coding_8cc" startline="20" endline="33">EncodeFixed64</references>
        <referencedby refid="namespaceleveldb_1a7192bb79e7fa6ba01490473941386534" compoundref="dbformat_8cc" startline="18" endline="21">AppendInternalKey</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_comparator_1afe98c9042e34927e60e078fc103991bf" compoundref="dbformat_8cc" startline="68" endline="85">leveldb::InternalKeyComparator::FindShortestSeparator</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_comparator_1a5dc88f433ef3a0d9508ec17cb40d3e27" compoundref="dbformat_8cc" startline="87" endline="99">leveldb::InternalKeyComparator::FindShortSuccessor</referencedby>
        <referencedby refid="namespaceleveldb_1a12a121ac303742fe369f000bd6f0d3ef" compoundref="coding__test_8cc" startline="27" endline="52">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac5e7a0e0356b856317349a870e3bfb41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * leveldb::EncodeVarint32</definition>
        <argsstring>(char *dst, uint32_t v)</argsstring>
        <name>EncodeVarint32</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="47" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="47" bodyend="73"/>
        <referencedby refid="classleveldb_1_1_lookup_key_1acd09aa56607ced962e1b458d05d53472" compoundref="dbformat_8cc" startline="121" endline="138">leveldb::LookupKey::LookupKey</referencedby>
        <referencedby refid="classleveldb_1_1_mem_table_1a37bec80954badb2354426aa175e9371f" compoundref="memtable_8cc" startline="82" endline="106">leveldb::MemTable::Add</referencedby>
        <referencedby refid="namespaceleveldb_1ab00e282f3fd7058b8a41afcf4b56e685" compoundref="coding_8cc" startline="75" endline="79">PutVarint32</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab00e282f3fd7058b8a41afcf4b56e685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::PutVarint32</definition>
        <argsstring>(std::string *dst, uint32_t v)</argsstring>
        <name>PutVarint32</name>
        <param>
          <type>std::string *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="75" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="75" bodyend="79"/>
        <references refid="namespaceleveldb_1ac5e7a0e0356b856317349a870e3bfb41" compoundref="coding_8cc" startline="47" endline="73">EncodeVarint32</references>
        <referencedby refid="classleveldb_1_1_version_edit_1aa3161c67223f6c5e843be579a8456086" compoundref="version__edit_8cc" startline="41" endline="86">leveldb::VersionEdit::EncodeTo</referencedby>
        <referencedby refid="classleveldb_1_1_block_builder_1a17d0e23f1e7afcb874b22a0cb0b6cf17" compoundref="block__builder_8cc" startline="73" endline="107">leveldb::BlockBuilder::Add</referencedby>
        <referencedby refid="namespaceleveldb_1a98eaeea7300aa4f9b56303ffa27581af" compoundref="coding_8cc" startline="98" endline="101">PutLengthPrefixedSlice</referencedby>
        <referencedby refid="namespaceleveldb_1acc08a5b06f805e1103bc63652513c3ec" compoundref="coding__test_8cc" startline="77" endline="96">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a81e3ab2e7387f236aaf068e9369a4e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * leveldb::EncodeVarint64</definition>
        <argsstring>(char *dst, uint64_t v)</argsstring>
        <name>EncodeVarint64</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="81" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="81" bodyend="90"/>
        <referencedby refid="namespaceleveldb_1a17889b1733282d6e80cf03fc0dd207d4" compoundref="coding_8cc" startline="92" endline="96">PutVarint64</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a17889b1733282d6e80cf03fc0dd207d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::PutVarint64</definition>
        <argsstring>(std::string *dst, uint64_t v)</argsstring>
        <name>PutVarint64</name>
        <param>
          <type>std::string *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="92" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="92" bodyend="96"/>
        <references refid="namespaceleveldb_1a81e3ab2e7387f236aaf068e9369a4e3d" compoundref="coding_8cc" startline="81" endline="90">EncodeVarint64</references>
        <referencedby refid="classleveldb_1_1_version_edit_1aa3161c67223f6c5e843be579a8456086" compoundref="version__edit_8cc" startline="41" endline="86">leveldb::VersionEdit::EncodeTo</referencedby>
        <referencedby refid="classleveldb_1_1_block_handle_1a71aa041d686d43e66ab570fce1ac388e" compoundref="format_8cc" startline="15" endline="21">leveldb::BlockHandle::EncodeTo</referencedby>
        <referencedby refid="namespaceleveldb_1a3c0437bc3e3bf88d62d57b61fdb29b36" compoundref="coding__test_8cc" startline="98" endline="132">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a98eaeea7300aa4f9b56303ffa27581af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::PutLengthPrefixedSlice</definition>
        <argsstring>(std::string *dst, const Slice &amp;value)</argsstring>
        <name>PutLengthPrefixedSlice</name>
        <param>
          <type>std::string *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="98" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="98" bodyend="101"/>
        <references refid="namespaceleveldb_1ab00e282f3fd7058b8a41afcf4b56e685" compoundref="coding_8cc" startline="75" endline="79">PutVarint32</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <referencedby refid="classleveldb_1_1_version_edit_1aa3161c67223f6c5e843be579a8456086" compoundref="version__edit_8cc" startline="41" endline="86">leveldb::VersionEdit::EncodeTo</referencedby>
        <referencedby refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</referencedby>
        <referencedby refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" compoundref="write__batch_8cc" startline="105" endline="109">leveldb::WriteBatch::Delete</referencedby>
        <referencedby refid="namespaceleveldb_1ac1d3fbcebc57ff3b1c95edfe2c122c38" compoundref="coding__test_8cc" startline="172" endline="190">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac22b2a69554ed12ecf1bd4650282f307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::VarintLength</definition>
        <argsstring>(uint64_t v)</argsstring>
        <name>VarintLength</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="103" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="103" bodyend="110"/>
        <referencedby refid="classleveldb_1_1_mem_table_1a37bec80954badb2354426aa175e9371f" compoundref="memtable_8cc" startline="82" endline="106">leveldb::MemTable::Add</referencedby>
        <referencedby refid="namespaceleveldb_1acc08a5b06f805e1103bc63652513c3ec" compoundref="coding__test_8cc" startline="77" endline="96">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1abc68f00e57333a27e9ee4fb8d5033905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * leveldb::GetVarint32PtrFallback</definition>
        <argsstring>(const char *p, const char *limit, uint32_t *value)</argsstring>
        <name>GetVarint32PtrFallback</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="112" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="112" bodyend="129"/>
        <referencedby refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" compoundref="coding_8h" startline="89" endline="100">GetVarint32Ptr</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0ea18f49771b5d7eea6b35ec07294598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::GetVarint32</definition>
        <argsstring>(Slice *input, uint32_t *value)</argsstring>
        <name>GetVarint32</name>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="131" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="131" bodyend="141"/>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" compoundref="coding_8h" startline="89" endline="100">GetVarint32Ptr</references>
        <referencedby refid="classleveldb_1_1_version_edit_1ac0f431c5e8f08c74c697d8480f7c005f" compoundref="version__edit_8cc" startline="109" endline="210">leveldb::VersionEdit::DecodeFrom</referencedby>
        <referencedby refid="namespaceleveldb_1a25de3c7216630fce2d4d1670bf59c825" compoundref="coding_8cc" startline="182" endline="192">GetLengthPrefixedSlice</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ad4e90442ce919c86fb769bf138670d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * leveldb::GetVarint64Ptr</definition>
        <argsstring>(const char *p, const char *limit, uint64_t *value)</argsstring>
        <name>GetVarint64Ptr</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="143" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="143" bodyend="158"/>
        <referencedby refid="namespaceleveldb_1aeb35486038249293e9b823f97dd9df0c" compoundref="coding_8cc" startline="160" endline="170">GetVarint64</referencedby>
        <referencedby refid="namespaceleveldb_1a3c0437bc3e3bf88d62d57b61fdb29b36" compoundref="coding__test_8cc" startline="98" endline="132">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aeb35486038249293e9b823f97dd9df0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::GetVarint64</definition>
        <argsstring>(Slice *input, uint64_t *value)</argsstring>
        <name>GetVarint64</name>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="160" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="160" bodyend="170"/>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="namespaceleveldb_1ad4e90442ce919c86fb769bf138670d75" compoundref="coding_8cc" startline="143" endline="158">GetVarint64Ptr</references>
        <referencedby refid="classleveldb_1_1_version_edit_1ac0f431c5e8f08c74c697d8480f7c005f" compoundref="version__edit_8cc" startline="109" endline="210">leveldb::VersionEdit::DecodeFrom</referencedby>
        <referencedby refid="classleveldb_1_1_block_handle_1a1660fd202984d8d5bfa4bed6c5613621" compoundref="format_8cc" startline="23" endline="30">leveldb::BlockHandle::DecodeFrom</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa06a54af59e83922885a7eb8f0359a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* leveldb::GetLengthPrefixedSlice</definition>
        <argsstring>(const char *p, const char *limit, Slice *result)</argsstring>
        <name>GetLengthPrefixedSlice</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="172" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="172" bodyend="180"/>
        <references refid="namespaceleveldb_1aa06a54af59e83922885a7eb8f0359a94" compoundref="coding_8cc" startline="172" endline="180">GetLengthPrefixedSlice</references>
        <references refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" compoundref="coding_8h" startline="89" endline="100">GetVarint32Ptr</references>
        <referencedby refid="classleveldb_1_1_version_edit_1ac0f431c5e8f08c74c697d8480f7c005f" compoundref="version__edit_8cc" startline="109" endline="210">leveldb::VersionEdit::DecodeFrom</referencedby>
        <referencedby refid="classleveldb_1_1_write_batch_1ac6cb5a360bb095f4e9a6e817c4322a9d" compoundref="write__batch_8cc" startline="42" endline="80">leveldb::WriteBatch::Iterate</referencedby>
        <referencedby refid="namespaceleveldb_1aa06a54af59e83922885a7eb8f0359a94" compoundref="coding_8cc" startline="172" endline="180">GetLengthPrefixedSlice</referencedby>
        <referencedby refid="namespaceleveldb_1ac1d3fbcebc57ff3b1c95edfe2c122c38" compoundref="coding__test_8cc" startline="172" endline="190">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a25de3c7216630fce2d4d1670bf59c825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::GetLengthPrefixedSlice</definition>
        <argsstring>(Slice *input, Slice *result)</argsstring>
        <name>GetLengthPrefixedSlice</name>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.cc" line="182" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.cc" bodystart="182" bodyend="192"/>
        <references refid="namespaceleveldb_1aa06a54af59e83922885a7eb8f0359a94" compoundref="coding_8cc" startline="172" endline="180">GetLengthPrefixedSlice</references>
        <references refid="namespaceleveldb_1a0ea18f49771b5d7eea6b35ec07294598" compoundref="coding_8cc" startline="131" endline="141">GetVarint32</references>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <references refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" compoundref="slice_8h" startline="40" endline="40">leveldb::Slice::data</references>
        <references refid="classleveldb_1_1_slice_1a1be5b22958a115ebecb2b017aad2b3f6" compoundref="slice_8h" startline="59" endline="63">leveldb::Slice::remove_prefix</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * leveldb::GetVarint32Ptr</definition>
        <argsstring>(const char *p, const char *limit, uint32_t *v)</argsstring>
        <name>GetVarint32Ptr</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.h" bodystart="89" bodyend="100"/>
        <references refid="namespaceleveldb_1abc68f00e57333a27e9ee4fb8d5033905" compoundref="coding_8cc" startline="112" endline="129">GetVarint32PtrFallback</references>
        <referencedby refid="classleveldb_1_1_mem_table_1af94f80a5909a440d0675afa68f8765c5" compoundref="memtable_8cc" startline="108" endline="143">leveldb::MemTable::Get</referencedby>
        <referencedby refid="namespaceleveldb_1a0ea18f49771b5d7eea6b35ec07294598" compoundref="coding_8cc" startline="131" endline="141">GetVarint32</referencedby>
        <referencedby refid="namespaceleveldb_1aa06a54af59e83922885a7eb8f0359a94" compoundref="coding_8cc" startline="172" endline="180">GetLengthPrefixedSlice</referencedby>
        <referencedby refid="namespaceleveldb_1acc08a5b06f805e1103bc63652513c3ec" compoundref="coding__test_8cc" startline="77" endline="96">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t leveldb::DecodeFixed32</definition>
        <argsstring>(const char *ptr)</argsstring>
        <name>DecodeFixed32</name>
        <param>
          <type>const char *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.h" line="58" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.h" bodystart="58" bodyend="70"/>
        <referencedby refid="classleveldb_1_1_write_batch_internal_1a5270ca4567dbae1524005ad14e0698e3" compoundref="write__batch_8cc" startline="82" endline="84">leveldb::WriteBatchInternal::Count</referencedby>
        <referencedby refid="classleveldb_1_1_filter_block_reader_1a02e9203af5314959ad99057f0020c406" compoundref="filter__block_8cc" startline="78" endline="93">leveldb::FilterBlockReader::FilterBlockReader</referencedby>
        <referencedby refid="classleveldb_1_1_filter_block_reader_1a2c1c0cd8311b99fd92d3548b7aa240d0" compoundref="filter__block_8cc" startline="95" endline="109">leveldb::FilterBlockReader::KeyMayMatch</referencedby>
        <referencedby refid="classleveldb_1_1_test_hash_filter_1ace8fcf2f1ac682fb958ddd38c53efe08" compoundref="filter__block__test_8cc" startline="30" endline="38">leveldb::TestHashFilter::KeyMayMatch</referencedby>
        <referencedby refid="classleveldb_1_1_footer_1a3cbcb311694e4cf410358f97d53d94e3" compoundref="format_8cc" startline="44" endline="64">leveldb::Footer::DecodeFrom</referencedby>
        <referencedby refid="namespaceleveldb_1a63198fc7656081fd62695dade629790b" compoundref="format_8cc" startline="66" endline="143">ReadBlock</referencedby>
        <referencedby refid="namespaceleveldb_1a239098b0291873752d0be16633652825" compoundref="coding_8h" startline="72" endline="83">DecodeFixed64</referencedby>
        <referencedby refid="namespaceleveldb_1a6c2537f909125665159a4161fdd21e27" compoundref="coding__test_8cc" startline="13" endline="25">TEST</referencedby>
        <referencedby refid="namespaceleveldb_1aa566d580ef23924d3ef2a369333c1787" compoundref="hash_8cc" startline="18" endline="49">Hash</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a239098b0291873752d0be16633652825" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t leveldb::DecodeFixed64</definition>
        <argsstring>(const char *ptr)</argsstring>
        <name>DecodeFixed64</name>
        <param>
          <type>const char *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding.h" line="72" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding.h" bodystart="72" bodyend="83"/>
        <references refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" compoundref="coding_8h" startline="58" endline="70">DecodeFixed32</references>
        <referencedby refid="classleveldb_1_1_internal_key_comparator_1a6469a0d67a9025173d31ec6e1cd5f80e" compoundref="dbformat_8cc" startline="50" endline="66">leveldb::InternalKeyComparator::Compare</referencedby>
        <referencedby refid="namespaceleveldb_1a0c5a6ea40d7c0e87060a6e6d3ee393ec" compoundref="dbformat_8h" startline="103" endline="109">ExtractValueType</referencedby>
        <referencedby refid="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" compoundref="dbformat_8h" startline="176" endline="186">ParseInternalKey</referencedby>
        <referencedby refid="classleveldb_1_1_mem_table_1af94f80a5909a440d0675afa68f8765c5" compoundref="memtable_8cc" startline="108" endline="143">leveldb::MemTable::Get</referencedby>
        <referencedby refid="classleveldb_1_1_write_batch_internal_1af657c82bd9378b78c35a3a7429f945d4" compoundref="write__batch_8cc" startline="90" endline="92">leveldb::WriteBatchInternal::Sequence</referencedby>
        <referencedby refid="namespaceleveldb_1a12a121ac303742fe369f000bd6f0d3ef" compoundref="coding__test_8cc" startline="27" endline="52">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6c2537f909125665159a4161fdd21e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Fixed32)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Fixed32</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="13" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="13" bodyend="25"/>
        <references refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" compoundref="coding_8cc" startline="35" endline="39">PutFixed32</references>
        <references refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" compoundref="coding_8h" startline="58" endline="70">DecodeFixed32</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a12a121ac303742fe369f000bd6f0d3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Fixed64)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Fixed64</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="27" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="27" bodyend="52"/>
        <references refid="namespaceleveldb_1a720cd9030ba5f867ded835b57caa1d06" compoundref="coding_8cc" startline="41" endline="45">PutFixed64</references>
        <references refid="namespaceleveldb_1a239098b0291873752d0be16633652825" compoundref="coding_8h" startline="72" endline="83">DecodeFixed64</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a01c88cd19143f9c3a8b0f591a3e459c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, EncodingOutput)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>EncodingOutput</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="55" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="55" bodyend="75"/>
        <references refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" compoundref="coding_8cc" startline="35" endline="39">PutFixed32</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1a720cd9030ba5f867ded835b57caa1d06" compoundref="coding_8cc" startline="41" endline="45">PutFixed64</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1acc08a5b06f805e1103bc63652513c3ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Varint32)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Varint32</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="77" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="77" bodyend="96"/>
        <references refid="namespaceleveldb_1ab00e282f3fd7058b8a41afcf4b56e685" compoundref="coding_8cc" startline="75" endline="79">PutVarint32</references>
        <references refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" compoundref="db__bench_8cc" startline="282">start</references>
        <references refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" compoundref="coding_8h" startline="89" endline="100">GetVarint32Ptr</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1ac22b2a69554ed12ecf1bd4650282f307" compoundref="coding_8cc" startline="103" endline="110">VarintLength</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a3c0437bc3e3bf88d62d57b61fdb29b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Varint64)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Varint64</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="98" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="98" bodyend="132"/>
        <references refid="namespaceleveldb_1a17889b1733282d6e80cf03fc0dd207d4" compoundref="coding_8cc" startline="92" endline="96">PutVarint64</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" compoundref="db__bench_8cc" startline="282">start</references>
        <references refid="namespaceleveldb_1ad4e90442ce919c86fb769bf138670d75" compoundref="coding_8cc" startline="143" endline="158">GetVarint64Ptr</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1ac22b2a69554ed12ecf1bd4650282f307" compoundref="coding_8cc" startline="103" endline="110">VarintLength</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a59975e523c6c2886ff4edc7b95cd9b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Varint32Overflow)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Varint32Overflow</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="134" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="134" bodyend="139"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" compoundref="coding_8h" startline="89" endline="100">GetVarint32Ptr</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a40bbf0bbc0a83026de83675510fd57e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Varint32Truncation)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Varint32Truncation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="141" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="141" bodyend="151"/>
        <references refid="namespaceleveldb_1ab00e282f3fd7058b8a41afcf4b56e685" compoundref="coding_8cc" startline="75" endline="79">PutVarint32</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="namespaceleveldb_1addd01473dddfbc70ba64956fe6fac20c" compoundref="coding_8h" startline="89" endline="100">GetVarint32Ptr</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a522178032d3ce16049199cf3ffc7efa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Varint64Overflow)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Varint64Overflow</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="153" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="153" bodyend="158"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="namespaceleveldb_1ad4e90442ce919c86fb769bf138670d75" compoundref="coding_8cc" startline="143" endline="158">GetVarint64Ptr</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a30b1ac3677ddc01001d21fa608a797b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Varint64Truncation)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Varint64Truncation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="160" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="160" bodyend="170"/>
        <references refid="namespaceleveldb_1a17889b1733282d6e80cf03fc0dd207d4" compoundref="coding_8cc" startline="92" endline="96">PutVarint64</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="namespaceleveldb_1ad4e90442ce919c86fb769bf138670d75" compoundref="coding_8cc" startline="143" endline="158">GetVarint64Ptr</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ac1d3fbcebc57ff3b1c95edfe2c122c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(Coding, Strings)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_coding" kindref="compound">Coding</ref></type>
        </param>
        <param>
          <type>Strings</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" line="172" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/coding_test.cc" bodystart="172" bodyend="190"/>
        <references refid="namespaceleveldb_1a98eaeea7300aa4f9b56303ffa27581af" compoundref="coding_8cc" startline="98" endline="101">PutLengthPrefixedSlice</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="namespaceleveldb_1aa06a54af59e83922885a7eb8f0359a94" compoundref="coding_8cc" startline="172" endline="180">GetLengthPrefixedSlice</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1ab67c3d9849bf8b0c50bce72dea7dc16b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::InitModule</definition>
        <argsstring>()</argsstring>
        <name>InitModule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/comparator.cc" line="72" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/comparator.cc" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa5ed0db6cd0c178b3131214f98effefa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status leveldb::DoWriteStringToFile</definition>
        <argsstring>(Env *env, const Slice &amp;data, const std::string &amp;fname, bool should_sync)</argsstring>
        <name>DoWriteStringToFile</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>should_sync</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env.cc" line="36" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env.cc" bodystart="36" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a14d29112491310d7a38d7b07fc5084f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::InitDefaultEnv</definition>
        <argsstring>()</argsstring>
        <name>InitDefaultEnv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_posix.cc" line="602" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_posix.cc" bodystart="602" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a82e60e2f39f78ebbebcbb60136ac229f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::SetBool</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>SetBool</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc" line="24" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_test.cc" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a2e08263909f19a912b1a1ee9cb0a5e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(EnvPosixTest, RunImmediately)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_env_posix_test" kindref="compound">EnvPosixTest</ref></type>
        </param>
        <param>
          <type>RunImmediately</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc" line="28" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_test.cc" bodystart="28" bodyend="33"/>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724">leveldb::Env::Schedule</references>
        <references refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" compoundref="env__posix_8cc" startline="604" endline="607">leveldb::Env::Default</references>
        <references refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312">leveldb::Env::SleepForMicroseconds</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1port_1_1_atomic_pointer_1a6f1579bd734aa549f237eeb4f486cfd3" compoundref="port__win_8cc" startline="138" endline="140">leveldb::port::AtomicPointer::NoBarrier_Load</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aedbd4224fa9064ab1acb838efb84f337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(EnvPosixTest, RunMany)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_env_posix_test" kindref="compound">EnvPosixTest</ref></type>
        </param>
        <param>
          <type>RunMany</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc" line="35" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_test.cc" bodystart="35" bodyend="65"/>
        <references refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" compoundref="db__test_8cc" startline="1745">id</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724">leveldb::Env::Schedule</references>
        <references refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" compoundref="env__posix_8cc" startline="604" endline="607">leveldb::Env::Default</references>
        <references refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312">leveldb::Env::SleepForMicroseconds</references>
        <references refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" compoundref="port__win_8cc" startline="128" endline="132">leveldb::port::AtomicPointer::Acquire_Load</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a56bd179b78829c850a7fd85fd5ecbabe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void leveldb::ThreadBody</definition>
        <argsstring>(void *arg)</argsstring>
        <name>ThreadBody</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc" line="73" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_test.cc" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6467cc6adfde18076365ba7809804a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(EnvPosixTest, StartThread)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_env_posix_test" kindref="compound">EnvPosixTest</ref></type>
        </param>
        <param>
          <type>StartThread</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc" line="81" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_test.cc" bodystart="81" bodyend="98"/>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="structleveldb_1_1_state_1adfc3479f732e7396e735991e48963981" compoundref="env__test_8cc" startline="69">leveldb::State::val</references>
        <references refid="structleveldb_1_1_state_1a6e84d8550d17c6c3edda2e114a634e61" compoundref="env__test_8cc" startline="70">leveldb::State::num_running</references>
        <references refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" compoundref="repair_8cc" startline="101">env_</references>
        <references refid="classleveldb_1_1_env_1a25eafd1622a2cf2a415ee8b2325bc808">leveldb::Env::StartThread</references>
        <references refid="structleveldb_1_1_state_1aa5b0e460a6a87debeb211c47dce8ddd3" compoundref="env__test_8cc" startline="68">leveldb::State::mu</references>
        <references refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" compoundref="port__posix_8cc" startline="26" endline="26">leveldb::port::Mutex::Lock</references>
        <references refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" compoundref="port__posix_8cc" startline="28" endline="28">leveldb::port::Mutex::Unlock</references>
        <references refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" compoundref="env__posix_8cc" startline="604" endline="607">leveldb::Env::Default</references>
        <references refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312">leveldb::Env::SleepForMicroseconds</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa566d580ef23924d3ef2a369333c1787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t leveldb::Hash</definition>
        <argsstring>(const char *data, size_t n, uint32_t seed)</argsstring>
        <name>Hash</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/hash.cc" line="18" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/hash.cc" bodystart="18" bodyend="49"/>
        <references refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" compoundref="coding_8h" startline="58" endline="70">DecodeFixed32</references>
        <references refid="hash_8cc_1adbc889df74eb0efe177d0dcde1541a24" compoundref="hash_8cc" startline="13">FALLTHROUGH_INTENDED</references>
        <referencedby refid="classleveldb_1_1_test_hash_filter_1ad6d9fc5e8008a1a2bd3d22d21cef6645" compoundref="filter__block__test_8cc" startline="23" endline="28">leveldb::TestHashFilter::CreateFilter</referencedby>
        <referencedby refid="classleveldb_1_1_test_hash_filter_1ace8fcf2f1ac682fb958ddd38c53efe08" compoundref="filter__block__test_8cc" startline="30" endline="38">leveldb::TestHashFilter::KeyMayMatch</referencedby>
        <referencedby refid="namespaceleveldb_1aab53a8ea9ebef7841f8c63f6ed9908be" compoundref="hash__test_8cc" startline="12" endline="48">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aab53a8ea9ebef7841f8c63f6ed9908be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::TEST</definition>
        <argsstring>(HASH, SignedUnsignedIssue)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classleveldb_1_1_h_a_s_h" kindref="compound">HASH</ref></type>
        </param>
        <param>
          <type>SignedUnsignedIssue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/hash_test.cc" line="12" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/hash_test.cc" bodystart="12" bodyend="48"/>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="namespaceleveldb_1aa566d580ef23924d3ef2a369333c1787" compoundref="hash_8cc" startline="18" endline="49">Hash</references>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a089617d12900e6fe5b712c31f651b5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::AppendNumberTo</definition>
        <argsstring>(std::string *str, uint64_t num)</argsstring>
        <name>AppendNumberTo</name>
        <param>
          <type>std::string *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/logging.cc" line="16" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/logging.cc" bodystart="16" bodyend="20"/>
        <referencedby refid="classleveldb_1_1_version_edit_1aa186529f0124867251964b2346b58b1f" compoundref="version__edit_8cc" startline="212" endline="264">leveldb::VersionEdit::DebugString</referencedby>
        <referencedby refid="classleveldb_1_1_version_1a83d35444c8e7c617a3a70e4c9050ce08" compoundref="version__set_8cc" startline="565" endline="589">leveldb::Version::DebugString</referencedby>
        <referencedby refid="namespaceleveldb_1a0a19109e7a2c8855c7565bd331d955b4" compoundref="logging_8cc" startline="36" endline="40">NumberToString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1aa4dfa82a4c1a31fcb076f2ba59f13b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::AppendEscapedStringTo</definition>
        <argsstring>(std::string *str, const Slice &amp;value)</argsstring>
        <name>AppendEscapedStringTo</name>
        <param>
          <type>std::string *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/logging.cc" line="22" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/logging.cc" bodystart="22" bodyend="34"/>
        <references refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" compoundref="slice_8h" startline="43" endline="43">leveldb::Slice::size</references>
        <referencedby refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" compoundref="logging_8cc" startline="42" endline="46">EscapeString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a0a19109e7a2c8855c7565bd331d955b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::NumberToString</definition>
        <argsstring>(uint64_t num)</argsstring>
        <name>NumberToString</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/logging.cc" line="36" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/logging.cc" bodystart="36" bodyend="40"/>
        <references refid="namespaceleveldb_1a089617d12900e6fe5b712c31f651b5ff" compoundref="logging_8cc" startline="16" endline="20">AppendNumberTo</references>
        <referencedby refid="namespaceleveldb_1ac45d45675cfba0614b5788177b03e717" compoundref="corruption__test_8cc" startline="318" endline="331">TEST</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" compoundref="db__test_8cc" startline="378" endline="384">leveldb::DBTest::NumTableFilesAtLevel</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::EscapeString</definition>
        <argsstring>(const Slice &amp;value)</argsstring>
        <name>EscapeString</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/logging.cc" line="42" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/logging.cc" bodystart="42" bodyend="46"/>
        <references refid="namespaceleveldb_1aa4dfa82a4c1a31fcb076f2ba59f13b19" compoundref="logging_8cc" startline="22" endline="34">AppendEscapedStringTo</references>
        <referencedby refid="namespaceleveldb_1a38772a8b86ea7658430b1fa2f1a5d83e" compoundref="db__test_8cc" startline="1391" endline="1444">TEST</referencedby>
        <referencedby refid="structleveldb_1_1_parsed_internal_key_1abda4655ea6857f75dcb8f409873207d5" compoundref="dbformat_8cc" startline="23" endline="32">leveldb::ParsedInternalKey::DebugString</referencedby>
        <referencedby refid="classleveldb_1_1_internal_key_1a737053e1b02c3eb8361e960f7fe5befb" compoundref="dbformat_8cc" startline="34" endline="44">leveldb::InternalKey::DebugString</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" compoundref="table__test_8cc" startline="517" endline="585">leveldb::Harness::TestRandomAccess</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceleveldb_1a1bda628b65e834063ccc5fcaec8328f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::ConsumeDecimalNumber</definition>
        <argsstring>(Slice *in, uint64_t *val)</argsstring>
        <name>ConsumeDecimalNumber</name>
        <param>
          <type><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/logging.cc" line="48" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/logging.cc" bodystart="48" bodyend="70"/>
        <references refid="classleveldb_1_1_slice_1a7d0b93d5801bff5656068647759dcb8f" compoundref="slice_8h" startline="46" endline="46">leveldb::Slice::empty</references>
        <references refid="classleveldb_1_1_slice_1a1be5b22958a115ebecb2b017aad2b3f6" compoundref="slice_8h" startline="59" endline="63">leveldb::Slice::remove_prefix</references>
        <referencedby refid="classleveldb_1_1_corruption_test_1aa03dcde1d0771ebbcf7d6ac8bda9c725" compoundref="corruption__test_8cc" startline="88" endline="124">leveldb::CorruptionTest::Check</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_impl_1ad1a2023ce171c8f8476664f5b1cbab4d" compoundref="db__impl_8cc" startline="1349" endline="1401">leveldb::DBImpl::GetProperty</referencedby>
        <referencedby refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" compoundref="filename_8cc" startline="80" endline="124">ParseFileName</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc" line="11" column="1"/>
  </compounddef>
</doxygen>
