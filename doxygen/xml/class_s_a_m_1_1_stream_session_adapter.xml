<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_s_a_m_1_1_stream_session_adapter" kind="class" language="C++" prot="public">
    <compoundname>SAM::StreamSessionAdapter</compoundname>
    <derivedcompoundref refid="class_i2_p_session" prot="private" virt="non-virtual">I2PSession</derivedcompoundref>
    <includes refid="i2p_8h" local="no">i2p.h</includes>
    <innerclass refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder" prot="public">SAM::StreamSessionAdapter::SessionHolder</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_a_m_1_1_stream_session_adapter_1a1cf29ed8179a150ee0a7f8162701452b" prot="private" static="no" mutable="no">
        <type>std::auto_ptr&lt; <ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder" kindref="compound">SessionHolder</ref> &gt;</type>
        <definition>std::auto_ptr&lt;SessionHolder&gt; SAM::StreamSessionAdapter::sessionHolder_</definition>
        <argsstring></argsstring>
        <name>sessionHolder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="67" column="1" bodyfile="/home/dev/ds-160209/src/i2p.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1aa2c9e13fcfa6570af80d387b3fc5704c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SAM::StreamSessionAdapter::StreamSessionAdapter</definition>
        <argsstring>(const std::string &amp;nickname, const std::string &amp;SAMHost=SAM_DEFAULT_ADDRESS, uint16_t SAMPort=SAM_DEFAULT_PORT, const std::string &amp;myDestination=SAM_GENERATE_MY_DESTINATION, const std::string &amp;i2pOptions=SAM_DEFAULT_I2P_OPTIONS, const std::string &amp;minVer=SAM_DEFAULT_MIN_VER, const std::string &amp;maxVer=SAM_DEFAULT_MAX_VER)</argsstring>
        <name>StreamSessionAdapter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nickname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>SAMHost</declname>
          <defval><ref refid="i2psam_8h_1a0a23b2412e2cddafabcca92a35671854" kindref="member">SAM_DEFAULT_ADDRESS</ref></defval>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref></type>
          <declname>SAMPort</declname>
          <defval><ref refid="i2psam_8h_1a21f3ab7f14d3db851db9d30698abbc15" kindref="member">SAM_DEFAULT_PORT</ref></defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>myDestination</declname>
          <defval><ref refid="i2psam_8h_1a7106d11b70e8d692b4f3ee6cbac5d1f1" kindref="member">SAM_GENERATE_MY_DESTINATION</ref></defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>i2pOptions</declname>
          <defval><ref refid="i2psam_8h_1a27b1654d5365d0ef151d0a185b4aea36" kindref="member">SAM_DEFAULT_I2P_OPTIONS</ref></defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>minVer</declname>
          <defval><ref refid="i2psam_8h_1a6d69841635f067c7d798c07286cc09f0" kindref="member">SAM_DEFAULT_MIN_VER</ref></defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>maxVer</declname>
          <defval><ref refid="i2psam_8h_1a37975b7aa109cc3353552fa5e69236d0" kindref="member">SAM_DEFAULT_MAX_VER</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="73" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1abf40bd7ca543e91544ebd4c03fd8d702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SAM::StreamSessionAdapter::~StreamSessionAdapter</definition>
        <argsstring>()</argsstring>
        <name>~StreamSessionAdapter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a040e02aced837c8409ed1edfc4f8ac69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_s_a_m_1a346e18b1c3780d27cc960b8a432dfdf7" kindref="member">SAM::SOCKET</ref></type>
        <definition>SAM::SOCKET SAM::StreamSessionAdapter::accept</definition>
        <argsstring>(bool silent)</argsstring>
        <name>accept</name>
        <param>
          <type>bool</type>
          <declname>silent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a983b84796d46f00aee1e4b7c4f6f421f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_s_a_m_1a346e18b1c3780d27cc960b8a432dfdf7" kindref="member">SAM::SOCKET</ref></type>
        <definition>SAM::SOCKET SAM::StreamSessionAdapter::connect</definition>
        <argsstring>(const std::string &amp;destination, bool silent)</argsstring>
        <name>connect</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>silent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="45" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a1ebd1d55194db5bbed563836f06a2b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SAM::StreamSessionAdapter::forward</definition>
        <argsstring>(const std::string &amp;host, uint16_t port, bool silent)</argsstring>
        <name>forward</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>silent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="46" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a865f56708a911fc832953f10c59d96e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SAM::StreamSessionAdapter::namingLookup</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>namingLookup</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">SAM::FullDestination</ref></type>
        <definition>SAM::FullDestination SAM::StreamSessionAdapter::destGenerate</definition>
        <argsstring>() const </argsstring>
        <name>destGenerate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a0c0e5dec8a7ec68aeae7a653e6aa8d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SAM::StreamSessionAdapter::stopForwarding</definition>
        <argsstring>(const std::string &amp;host, uint16_t port)</argsstring>
        <name>stopForwarding</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="50" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a94cb431a3fee60c87f134b1b925ff67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SAM::StreamSessionAdapter::stopForwardingAll</definition>
        <argsstring>()</argsstring>
        <name>stopForwardingAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a80d5e268298b1970dbb1119df2bc76d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">SAM::FullDestination</ref> &amp;</type>
        <definition>const SAM::FullDestination &amp; SAM::StreamSessionAdapter::getMyDestination</definition>
        <argsstring>() const </argsstring>
        <name>getMyDestination</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="53" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a3507ca50cf27d61adaad5ac5006172df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const sockaddr_in &amp;</type>
        <definition>const sockaddr_in &amp; SAM::StreamSessionAdapter::getSAMAddress</definition>
        <argsstring>() const </argsstring>
        <name>getSAMAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="55" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a154db264cc3b2c442c11280175ae7e8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SAM::StreamSessionAdapter::getSAMHost</definition>
        <argsstring>() const </argsstring>
        <name>getSAMHost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="56" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1aceada2034be63523f41ac1153c2dc3fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref></type>
        <definition>uint16_t SAM::StreamSessionAdapter::getSAMPort</definition>
        <argsstring>() const </argsstring>
        <name>getSAMPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1a928ff5f1c5546862fedd2f4216e56541" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SAM::StreamSessionAdapter::getNickname</definition>
        <argsstring>() const </argsstring>
        <name>getNickname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="58" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1ab194deeaa1fba6e8eed3e55af17d788c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SAM::StreamSessionAdapter::getSAMMinVer</definition>
        <argsstring>() const </argsstring>
        <name>getSAMMinVer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="59" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1ac9a713a36d06047b54d1a5df477165be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SAM::StreamSessionAdapter::getSAMMaxVer</definition>
        <argsstring>() const </argsstring>
        <name>getSAMMaxVer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="60" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1af0911ea5109eb8e0987b328369e80dc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SAM::StreamSessionAdapter::getSAMVersion</definition>
        <argsstring>() const </argsstring>
        <name>getSAMVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_s_a_m_1_1_stream_session_adapter_1adc4e097ce8db41980c540e6c11371585" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SAM::StreamSessionAdapter::getOptions</definition>
        <argsstring>() const </argsstring>
        <name>getOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2p.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/i2p.cpp" bodystart="171" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1768">
        <label>SAM::StreamSessionAdapter</label>
        <link refid="class_s_a_m_1_1_stream_session_adapter"/>
      </node>
      <node id="1769">
        <label>I2PSession</label>
        <link refid="class_i2_p_session"/>
        <childnode refid="1768" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/dev/ds-160209/src/i2p.h" line="31" column="1" bodyfile="/home/dev/ds-160209/src/i2p.h" bodystart="30" bodyend="68"/>
    <listofallmembers>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a040e02aced837c8409ed1edfc4f8ac69" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>accept</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a983b84796d46f00aee1e4b7c4f6f421f" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>connect</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>destGenerate</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a1ebd1d55194db5bbed563836f06a2b55" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>forward</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a80d5e268298b1970dbb1119df2bc76d5" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getMyDestination</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a928ff5f1c5546862fedd2f4216e56541" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getNickname</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1adc4e097ce8db41980c540e6c11371585" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getOptions</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a3507ca50cf27d61adaad5ac5006172df" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getSAMAddress</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a154db264cc3b2c442c11280175ae7e8d" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getSAMHost</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1ac9a713a36d06047b54d1a5df477165be" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getSAMMaxVer</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1ab194deeaa1fba6e8eed3e55af17d788c" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getSAMMinVer</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1aceada2034be63523f41ac1153c2dc3fa" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getSAMPort</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1af0911ea5109eb8e0987b328369e80dc2" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>getSAMVersion</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a865f56708a911fc832953f10c59d96e3" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>namingLookup</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a1cf29ed8179a150ee0a7f8162701452b" prot="private" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>sessionHolder_</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a0c0e5dec8a7ec68aeae7a653e6aa8d13" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>stopForwarding</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1a94cb431a3fee60c87f134b1b925ff67a" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>stopForwardingAll</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1aa2c9e13fcfa6570af80d387b3fc5704c" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>StreamSessionAdapter</name></member>
      <member refid="class_s_a_m_1_1_stream_session_adapter_1abf40bd7ca543e91544ebd4c03fd8d702" prot="public" virt="non-virtual"><scope>SAM::StreamSessionAdapter</scope><name>~StreamSessionAdapter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
