.TH "/home/dev/ds-160209/src/crypto/argon2/core.h" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dev/ds-160209/src/crypto/argon2/core.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'argon2\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBblock_\fP"
.br
.ti -1c
.RI "struct \fBArgon2_instance_t\fP"
.br
.ti -1c
.RI "struct \fBArgon2_position_t\fP"
.br
.ti -1c
.RI "struct \fBArgon2_thread_data\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBALIGN\fP(x)"
.br
.ti -1c
.RI "#define \fBCONST_CAST\fP(x)   (x)(uintptr_t)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBblock_\fP \fBblock\fP"
.br
.ti -1c
.RI "typedef struct \fBArgon2_instance_t\fP \fBargon2_instance_t\fP"
.br
.ti -1c
.RI "typedef struct \fBArgon2_position_t\fP \fBargon2_position_t\fP"
.br
.ti -1c
.RI "typedef struct \fBArgon2_thread_data\fP \fBargon2_thread_data\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBargon2_core_constants\fP { \fBARGON2_VERSION_NUMBER\fP = 0x10, \fBARGON2_BLOCK_SIZE\fP = 1024, \fBARGON2_QWORDS_IN_BLOCK\fP = ARGON2_BLOCK_SIZE / 8, \fBARGON2_OWORDS_IN_BLOCK\fP = ARGON2_BLOCK_SIZE / 16, \fBARGON2_ADDRESSES_IN_BLOCK\fP = 128, \fBARGON2_PREHASH_DIGEST_LENGTH\fP = 64, \fBARGON2_PREHASH_SEED_LENGTH\fP = 72 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinit_block_value\fP (\fBblock\fP *b, \fBuint8_t\fP in)"
.br
.ti -1c
.RI "void \fBcopy_block\fP (\fBblock\fP *dst, const \fBblock\fP *src)"
.br
.ti -1c
.RI "void \fBxor_block\fP (\fBblock\fP *dst, const \fBblock\fP *src)"
.br
.ti -1c
.RI "int \fBallocate_memory\fP (\fBblock\fP **memory, \fBuint32_t\fP m_cost)"
.br
.ti -1c
.RI "void \fBsecure_wipe_memory\fP (void *v, size_t n)"
.br
.ti -1c
.RI "void \fBclear_memory\fP (\fBargon2_instance_t\fP *instance, int clear)"
.br
.ti -1c
.RI "void \fBfree_memory\fP (\fBblock\fP *memory)"
.br
.ti -1c
.RI "\fBuint32_t\fP \fBindex_alpha\fP (const \fBargon2_instance_t\fP *instance, const \fBargon2_position_t\fP *position, \fBuint32_t\fP pseudo_rand, int same_lane)"
.br
.ti -1c
.RI "int \fBvalidate_inputs\fP (const \fBargon2_context\fP *context)"
.br
.ti -1c
.RI "void \fBinitial_hash\fP (\fBuint8_t\fP *blockhash, \fBargon2_context\fP *context, \fBargon2_type\fP type)"
.br
.ti -1c
.RI "void \fBfill_first_blocks\fP (\fBuint8_t\fP *blockhash, const \fBargon2_instance_t\fP *instance)"
.br
.ti -1c
.RI "int \fBinitialize\fP (\fBargon2_instance_t\fP *instance, \fBargon2_context\fP *context)"
.br
.ti -1c
.RI "void \fBfinalize\fP (const \fBargon2_context\fP *context, \fBargon2_instance_t\fP *instance)"
.br
.ti -1c
.RI "void \fBfill_segment\fP (const \fBargon2_instance_t\fP *instance, \fBargon2_position_t\fP position)"
.br
.ti -1c
.RI "int \fBfill_memory_blocks\fP (\fBargon2_instance_t\fP *instance)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ALIGN(x)"

.PP
Definition at line 24 of file core\&.h\&.
.SS "#define CONST_CAST(x)   (x)(uintptr_t)"

.PP
Definition at line 27 of file core\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBArgon2_instance_t\fP  \fBargon2_instance_t\fP"

.SS "typedef struct \fBArgon2_position_t\fP  \fBargon2_position_t\fP"

.SS "typedef struct \fBArgon2_thread_data\fP  \fBargon2_thread_data\fP"

.SS "typedef struct \fBblock_\fP  \fBblock\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBargon2_core_constants\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIARGON2_VERSION_NUMBER \fP\fP
.TP
\fB\fIARGON2_BLOCK_SIZE \fP\fP
.TP
\fB\fIARGON2_QWORDS_IN_BLOCK \fP\fP
.TP
\fB\fIARGON2_OWORDS_IN_BLOCK \fP\fP
.TP
\fB\fIARGON2_ADDRESSES_IN_BLOCK \fP\fP
.TP
\fB\fIARGON2_PREHASH_DIGEST_LENGTH \fP\fP
.TP
\fB\fIARGON2_PREHASH_SEED_LENGTH \fP\fP
.PP
Definition at line 32 of file core\&.h\&.
.SH "Function Documentation"
.PP 
.SS "int allocate_memory (\fBblock\fP ** memory, \fBuint32_t\fP m_cost)"

.PP
Definition at line 82 of file core\&.c\&.
.SS "void clear_memory (\fBargon2_instance_t\fP * instance, int clear)"

.PP
Definition at line 118 of file core\&.c\&.
.SS "void copy_block (\fBblock\fP * dst, const \fBblock\fP * src)"

.PP
Definition at line 56 of file core\&.c\&.
.SS "void fill_first_blocks (\fBuint8_t\fP * blockhash, const \fBargon2_instance_t\fP * instance)"

.PP
Definition at line 462 of file core\&.c\&.
.SS "int fill_memory_blocks (\fBargon2_instance_t\fP * instance)"

.PP
Definition at line 252 of file core\&.c\&.
.SS "void fill_segment (const \fBargon2_instance_t\fP * instance, \fBargon2_position_t\fP position)"

.PP
Definition at line 86 of file opt\&.c\&.
.SS "void finalize (const \fBargon2_context\fP * context, \fBargon2_instance_t\fP * instance)"

.PP
Definition at line 127 of file core\&.c\&.
.SS "void free_memory (\fBblock\fP * memory)"

.PP
Definition at line 125 of file core\&.c\&.
.SS "\fBuint32_t\fP index_alpha (const \fBargon2_instance_t\fP * instance, const \fBargon2_position_t\fP * position, \fBuint32_t\fP pseudo_rand, int same_lane)"

.PP
Definition at line 170 of file core\&.c\&.
.SS "void init_block_value (\fBblock\fP * b, \fBuint8_t\fP in)"

.PP
Definition at line 54 of file core\&.c\&.
.SS "void initial_hash (\fBuint8_t\fP * blockhash, \fBargon2_context\fP * context, \fBargon2_type\fP type)"

.PP
Definition at line 485 of file core\&.c\&.
.SS "int initialize (\fBargon2_instance_t\fP * instance, \fBargon2_context\fP * context)"

.PP
Definition at line 559 of file core\&.c\&.
.SS "void secure_wipe_memory (void * v, size_t n)"

.PP
Definition at line 103 of file core\&.c\&.
.SS "int validate_inputs (const \fBargon2_context\fP * context)"

.PP
Definition at line 333 of file core\&.c\&.
.SS "void xor_block (\fBblock\fP * dst, const \fBblock\fP * src)"

.PP
Definition at line 60 of file core\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
