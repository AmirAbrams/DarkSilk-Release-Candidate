.TH "/home/dev/ds-160209/src/rpcserver.h" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dev/ds-160209/src/rpcserver.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'amount\&.h'\fP
.br
\fC#include 'uint256\&.h'\fP
.br
\fC#include 'rpcprotocol\&.h'\fP
.br
\fC#include <list>\fP
.br
\fC#include <map>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCRPCCommand\fP"
.br
.ti -1c
.RI "class \fBCRPCTable\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBjson_spirit::Value\fP(* \fBrpcfn_type\fP) (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBStartRPCThreads\fP ()"
.br
.ti -1c
.RI "void \fBStopRPCThreads\fP ()"
.br
.ti -1c
.RI "void \fBRPCTypeCheck\fP (const \fBjson_spirit::Array\fP &params, const std::list< \fBjson_spirit::Value_type\fP > &typesExpected, bool fAllowNull=false)"
.br
.ti -1c
.RI "void \fBRPCTypeCheck\fP (const \fBjson_spirit::Object\fP &o, const std::map< std::string, \fBjson_spirit::Value_type\fP > &typesExpected, bool fAllowNull=false)"
.br
.ti -1c
.RI "void \fBRPCRunLater\fP (const std::string &\fBname\fP, \fBboost::function\fP< void(void)> \fBfunc\fP, \fBint64_t\fP nSeconds)"
.br
.ti -1c
.RI "void \fBInitRPCMining\fP ()"
.br
.ti -1c
.RI "void \fBShutdownRPCMining\fP ()"
.br
.ti -1c
.RI "\fBCAmount\fP \fBAmountFromValue\fP (const \fBjson_spirit::Value\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBValueFromAmount\fP (const \fBCAmount\fP &amount)"
.br
.ti -1c
.RI "double \fBGetDifficulty\fP (const \fBCBlockIndex\fP *blockindex=NULL)"
.br
.ti -1c
.RI "double \fBGetPoWMHashPS\fP ()"
.br
.ti -1c
.RI "double \fBGetPoSKernelPS\fP ()"
.br
.ti -1c
.RI "std::string \fBHelpRequiringPassphrase\fP ()"
.br
.ti -1c
.RI "std::string \fBHelpExampleCli\fP (std::string methodname, std::string args)"
.br
.ti -1c
.RI "std::string \fBHelpExampleRpc\fP (std::string methodname, std::string args)"
.br
.ti -1c
.RI "void \fBEnsureWalletIsUnlocked\fP ()"
.br
.ti -1c
.RI "\fBuint256\fP \fBParseHashV\fP (const \fBjson_spirit::Value\fP &v, std::string strName)"
.br
.ti -1c
.RI "\fBuint256\fP \fBParseHashO\fP (const \fBjson_spirit::Object\fP &o, std::string strKey)"
.br
.ti -1c
.RI "std::vector< unsigned char > \fBParseHexV\fP (const \fBjson_spirit::Value\fP &v, std::string strName)"
.br
.ti -1c
.RI "std::vector< unsigned char > \fBParseHexO\fP (const \fBjson_spirit::Object\fP &o, std::string strKey)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetconnectioncount\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetpeerinfo\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBping\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBaddnode\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetaddednodeinfo\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetnettotals\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBdumpwallet\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBimportwallet\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBdumpprivkey\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBimportprivkey\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBimportaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsendalert\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetsubsidy\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetstakesubsidy\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetmininginfo\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetstakinginfo\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBcheckkernel\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetwork\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetworkex\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetblocktemplate\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsubmitblock\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetnewaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetaccountaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsetaccount\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetaccount\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetaddressesbyaccount\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsendtoaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsignmessage\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBverifymessage\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetreceivedbyaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetreceivedbyaccount\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetbalance\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBmovecmd\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsendfrom\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsendmany\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBaddredeemscript\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBlistreceivedbyaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBlistreceivedbyaccount\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBlisttransactions\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBlistaddressgroupings\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBlistaccounts\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBlistsinceblock\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgettransaction\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBbackupwallet\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBkeypoolrefill\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBwalletpassphrase\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBwalletpassphrasechange\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBwalletlock\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBencryptwallet\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBvalidateaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetinfo\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBreservebalance\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBaddmultisigaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBcreatemultisig\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBcheckwallet\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBrepairwallet\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBresendtx\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBmakekeypair\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBvalidatepubkey\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetnewpubkey\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetrawtransaction\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsearchrawtransactions\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBlistunspent\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBcreaterawtransaction\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBdecoderawtransaction\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBdecodescript\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsignrawtransaction\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsendrawtransaction\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetbestblockhash\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetblockcount\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetdifficulty\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsettxfee\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetrawmempool\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetblockhash\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetblock\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetblockbynumber\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetcheckpoint\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBgetnewstealthaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBliststealthaddresses\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBimportstealthaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsendtostealthaddress\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBscanforalltxns\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsandstorm\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBspork\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBstormnode\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsnbudget\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsnbudgetvoteraw\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsnfinalbudget\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBstormnodelist\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgenable\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgdisable\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsglocalkeys\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgoptions\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgscanchain\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgscanbuckets\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgaddkey\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsggetpubkey\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgsend\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgsendanon\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsginbox\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgoutbox\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.ti -1c
.RI "\fBjson_spirit::Value\fP \fBsmsgbuckets\fP (const \fBjson_spirit::Array\fP &params, bool fHelp)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const \fBCRPCTable\fP \fBtableRPC\fP"
.br
.ti -1c
.RI "\fBint64_t\fP \fBnWalletUnlockTime\fP"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBjson_spirit::Value\fP(* rpcfn_type) (const \fBjson_spirit::Array\fP &params, bool fHelp)"

.PP
Definition at line 42 of file rpcserver\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBjson_spirit::Value\fP addmultisigaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP addnode (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP addredeemscript (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBCAmount\fP AmountFromValue (const \fBjson_spirit::Value\fP & value)"

.PP
Definition at line 87 of file rpcserver\&.cpp\&.
.SS "\fBjson_spirit::Value\fP backupwallet (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP checkkernel (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP checkwallet (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP createmultisig (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP createrawtransaction (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP decoderawtransaction (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP decodescript (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP dumpprivkey (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP dumpwallet (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP encryptwallet (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "void EnsureWalletIsUnlocked ()"

.PP
Definition at line 44 of file rpcwallet\&.cpp\&.
.SS "\fBjson_spirit::Value\fP getaccount (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getaccountaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getaddednodeinfo (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getaddressesbyaccount (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getbalance (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getbestblockhash (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getblock (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getblockbynumber (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getblockcount (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getblockhash (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getblocktemplate (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getcheckpoint (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getconnectioncount (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "double GetDifficulty (const \fBCBlockIndex\fP * blockindex = \fCNULL\fP)"

.PP
Definition at line 17 of file rpcblockchain\&.cpp\&.
.SS "\fBjson_spirit::Value\fP getdifficulty (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getinfo (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getmininginfo (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getnettotals (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getnewaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getnewpubkey (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getnewstealthaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getpeerinfo (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "double GetPoSKernelPS ()"

.PP
Definition at line 73 of file rpcblockchain\&.cpp\&.
.SS "double GetPoWMHashPS ()"

.PP
Definition at line 48 of file rpcblockchain\&.cpp\&.
.SS "\fBjson_spirit::Value\fP getrawmempool (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getrawtransaction (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getreceivedbyaccount (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getreceivedbyaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getstakesubsidy (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getstakinginfo (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getsubsidy (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP gettransaction (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getwork (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP getworkex (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "std::string HelpExampleCli (std::string methodname, std::string args)"

.SS "std::string HelpExampleRpc (std::string methodname, std::string args)"

.SS "std::string HelpRequiringPassphrase ()"

.PP
Definition at line 37 of file rpcwallet\&.cpp\&.
.SS "\fBjson_spirit::Value\fP importaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP importprivkey (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP importstealthaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP importwallet (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "void InitRPCMining ()"

.PP
Definition at line 29 of file rpcmining\&.cpp\&.
.SS "\fBjson_spirit::Value\fP keypoolrefill (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP listaccounts (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP listaddressgroupings (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP listreceivedbyaccount (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP listreceivedbyaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP listsinceblock (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP liststealthaddresses (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP listtransactions (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP listunspent (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP makekeypair (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP movecmd (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBuint256\fP ParseHashO (const \fBjson_spirit::Object\fP & o, std::string strKey)"

.SS "\fBuint256\fP ParseHashV (const \fBjson_spirit::Value\fP & v, std::string strName)"

.SS "std::vector<unsigned char> ParseHexO (const \fBjson_spirit::Object\fP & o, std::string strKey)"

.SS "std::vector<unsigned char> ParseHexV (const \fBjson_spirit::Value\fP & v, std::string strName)"

.SS "\fBjson_spirit::Value\fP ping (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP repairwallet (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP resendtx (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP reservebalance (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "void RPCRunLater (const std::string & name, \fBboost::function\fP< void(void)> func, \fBint64_t\fP nSeconds)"

.PP
Definition at line 655 of file rpcserver\&.cpp\&.
.SS "void RPCTypeCheck (const \fBjson_spirit::Array\fP & params, const std::list< \fBjson_spirit::Value_type\fP > & typesExpected, bool fAllowNull = \fCfalse\fP)"

.SS "void RPCTypeCheck (const \fBjson_spirit::Object\fP & o, const std::map< std::string, \fBjson_spirit::Value_type\fP > & typesExpected, bool fAllowNull = \fCfalse\fP)"

.SS "\fBjson_spirit::Value\fP sandstorm (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP scanforalltxns (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP searchrawtransactions (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP sendalert (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP sendfrom (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP sendmany (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP sendrawtransaction (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP sendtoaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP sendtostealthaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP setaccount (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP settxfee (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "void ShutdownRPCMining ()"

.PP
Definition at line 38 of file rpcmining\&.cpp\&.
.SS "\fBjson_spirit::Value\fP signmessage (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP signrawtransaction (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgaddkey (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgbuckets (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgdisable (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgenable (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsggetpubkey (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsginbox (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsglocalkeys (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgoptions (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgoutbox (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgscanbuckets (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgscanchain (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgsend (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP smsgsendanon (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP snbudget (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP snbudgetvoteraw (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP snfinalbudget (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP spork (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "void StartRPCThreads ()"

.PP
Definition at line 517 of file rpcserver\&.cpp\&.
.SS "void StopRPCThreads ()"

.PP
Definition at line 636 of file rpcserver\&.cpp\&.
.SS "\fBjson_spirit::Value\fP stormnode (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP stormnodelist (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP submitblock (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP validateaddress (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP validatepubkey (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP ValueFromAmount (const \fBCAmount\fP & amount)"

.PP
Definition at line 98 of file rpcserver\&.cpp\&.
.SS "\fBjson_spirit::Value\fP verifymessage (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP walletlock (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP walletpassphrase (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SS "\fBjson_spirit::Value\fP walletpassphrasechange (const \fBjson_spirit::Array\fP & params, bool fHelp)"

.SH "Variable Documentation"
.PP 
.SS "\fBint64_t\fP nWalletUnlockTime"

.PP
Definition at line 20 of file rpcwallet\&.cpp\&.
.SS "const \fBCRPCTable\fP tableRPC"

.PP
Definition at line 881 of file rpcserver\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
