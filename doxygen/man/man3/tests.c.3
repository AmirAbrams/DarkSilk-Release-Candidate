.TH "/home/dev/ds-160209/src/secp256k1/src/tests.c" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dev/ds-160209/src/secp256k1/src/tests.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include 'secp256k1\&.c'\fP
.br
\fC#include 'include/secp256k1\&.h'\fP
.br
\fC#include 'testrand_impl\&.h'\fP
.br
\fC#include 'contrib/lax_der_parsing\&.c'\fP
.br
\fC#include 'contrib/lax_der_privatekey_parsing\&.c'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBVG_UNDEF\fP(x,  y)"
.br
.ti -1c
.RI "#define \fBVG_CHECK\fP(x,  y)"
.br
.ti -1c
.RI "#define \fBSECP256K1_EC_PARSE_TEST_NVALID\fP   (12)"
.br
.ti -1c
.RI "#define \fBSECP256K1_EC_PARSE_TEST_NXVALID\fP   (4)"
.br
.ti -1c
.RI "#define \fBSECP256K1_EC_PARSE_TEST_NINVALID\fP   (7)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBrandom_field_element_test\fP (\fBsecp256k1_fe\fP *fe)"
.br
.ti -1c
.RI "void \fBrandom_field_element_magnitude\fP (\fBsecp256k1_fe\fP *fe)"
.br
.ti -1c
.RI "void \fBrandom_group_element_test\fP (\fBsecp256k1_ge\fP *ge)"
.br
.ti -1c
.RI "void \fBrandom_group_element_jacobian_test\fP (\fBsecp256k1_gej\fP *gej, const \fBsecp256k1_ge\fP *ge)"
.br
.ti -1c
.RI "void \fBrandom_scalar_order_test\fP (\fBsecp256k1_scalar\fP *num)"
.br
.ti -1c
.RI "void \fBrandom_scalar_order\fP (\fBsecp256k1_scalar\fP *num)"
.br
.ti -1c
.RI "void \fBrun_context_tests\fP (void)"
.br
.ti -1c
.RI "void \fBrun_sha256_tests\fP (void)"
.br
.ti -1c
.RI "void \fBrun_hmac_sha256_tests\fP (void)"
.br
.ti -1c
.RI "void \fBrun_rfc6979_hmac_sha256_tests\fP (void)"
.br
.ti -1c
.RI "void \fBtest_rand_bits\fP (int rand32, int bits)"
.br
.ti -1c
.RI "void \fBtest_rand_int\fP (\fBuint32_t\fP range, \fBuint32_t\fP subrange)"
.br
.ti -1c
.RI "void \fBrun_rand_bits\fP (void)"
.br
.ti -1c
.RI "void \fBrun_rand_int\fP (void)"
.br
.ti -1c
.RI "void \fBrandom_num_negate\fP (\fBsecp256k1_num\fP *num)"
.br
.ti -1c
.RI "void \fBrandom_num_order_test\fP (\fBsecp256k1_num\fP *num)"
.br
.ti -1c
.RI "void \fBrandom_num_order\fP (\fBsecp256k1_num\fP *num)"
.br
.ti -1c
.RI "void \fBtest_num_negate\fP (void)"
.br
.ti -1c
.RI "void \fBtest_num_add_sub\fP (void)"
.br
.ti -1c
.RI "void \fBrun_num_smalltests\fP (void)"
.br
.ti -1c
.RI "void \fBscalar_test\fP (void)"
.br
.ti -1c
.RI "void \fBrun_scalar_tests\fP (void)"
.br
.ti -1c
.RI "void \fBrandom_fe\fP (\fBsecp256k1_fe\fP *x)"
.br
.ti -1c
.RI "void \fBrandom_fe_test\fP (\fBsecp256k1_fe\fP *x)"
.br
.ti -1c
.RI "void \fBrandom_fe_non_zero\fP (\fBsecp256k1_fe\fP *nz)"
.br
.ti -1c
.RI "void \fBrandom_fe_non_square\fP (\fBsecp256k1_fe\fP *ns)"
.br
.ti -1c
.RI "int \fBcheck_fe_equal\fP (const \fBsecp256k1_fe\fP *a, const \fBsecp256k1_fe\fP *b)"
.br
.ti -1c
.RI "int \fBcheck_fe_inverse\fP (const \fBsecp256k1_fe\fP *a, const \fBsecp256k1_fe\fP *ai)"
.br
.ti -1c
.RI "void \fBrun_field_convert\fP (void)"
.br
.ti -1c
.RI "int \fBfe_memcmp\fP (const \fBsecp256k1_fe\fP *a, const \fBsecp256k1_fe\fP *b)"
.br
.ti -1c
.RI "void \fBrun_field_misc\fP (void)"
.br
.ti -1c
.RI "void \fBrun_field_inv\fP (void)"
.br
.ti -1c
.RI "void \fBrun_field_inv_var\fP (void)"
.br
.ti -1c
.RI "void \fBrun_field_inv_all_var\fP (void)"
.br
.ti -1c
.RI "void \fBrun_sqr\fP (void)"
.br
.ti -1c
.RI "void \fBtest_sqrt\fP (const \fBsecp256k1_fe\fP *a, const \fBsecp256k1_fe\fP *k)"
.br
.ti -1c
.RI "void \fBrun_sqrt\fP (void)"
.br
.ti -1c
.RI "void \fBge_equals_ge\fP (const \fBsecp256k1_ge\fP *a, const \fBsecp256k1_ge\fP *b)"
.br
.ti -1c
.RI "int \fBgej_xyz_equals_gej\fP (const \fBsecp256k1_gej\fP *a, const \fBsecp256k1_gej\fP *b)"
.br
.ti -1c
.RI "void \fBge_equals_gej\fP (const \fBsecp256k1_ge\fP *a, const \fBsecp256k1_gej\fP *b)"
.br
.ti -1c
.RI "void \fBtest_ge\fP (void)"
.br
.ti -1c
.RI "void \fBtest_add_neg_y_diff_x\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ge\fP (void)"
.br
.ti -1c
.RI "void \fBtest_ec_combine\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ec_combine\fP (void)"
.br
.ti -1c
.RI "void \fBtest_group_decompress\fP (const \fBsecp256k1_fe\fP *x)"
.br
.ti -1c
.RI "void \fBrun_group_decompress\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ecmult_chain\fP (void)"
.br
.ti -1c
.RI "void \fBtest_point_times_order\fP (const \fBsecp256k1_gej\fP *point)"
.br
.ti -1c
.RI "void \fBrun_point_times_order\fP (void)"
.br
.ti -1c
.RI "void \fBecmult_const_random_mult\fP (void)"
.br
.ti -1c
.RI "void \fBecmult_const_commutativity\fP (void)"
.br
.ti -1c
.RI "void \fBecmult_const_mult_zero_one\fP (void)"
.br
.ti -1c
.RI "void \fBecmult_const_chain_multiply\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ecmult_const_tests\fP (void)"
.br
.ti -1c
.RI "void \fBtest_wnaf\fP (const \fBsecp256k1_scalar\fP *number, int w)"
.br
.ti -1c
.RI "void \fBtest_constant_wnaf_negate\fP (const \fBsecp256k1_scalar\fP *number)"
.br
.ti -1c
.RI "void \fBtest_constant_wnaf\fP (const \fBsecp256k1_scalar\fP *number, int w)"
.br
.ti -1c
.RI "void \fBrun_wnaf\fP (void)"
.br
.ti -1c
.RI "void \fBtest_ecmult_constants\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ecmult_constants\fP (void)"
.br
.ti -1c
.RI "void \fBtest_ecmult_gen_blind\fP (void)"
.br
.ti -1c
.RI "void \fBtest_ecmult_gen_blind_reset\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ecmult_gen_blind\fP (void)"
.br
.ti -1c
.RI "void \fBec_pubkey_parse_pointtest\fP (const unsigned char *input, int xvalid, int yvalid)"
.br
.ti -1c
.RI "void \fBrun_ec_pubkey_parse_test\fP (void)"
.br
.ti -1c
.RI "void \fBrun_eckey_edge_case_test\fP (void)"
.br
.ti -1c
.RI "void \fBrandom_sign\fP (\fBsecp256k1_scalar\fP *sigr, \fBsecp256k1_scalar\fP *sigs, const \fBsecp256k1_scalar\fP *key, const \fBsecp256k1_scalar\fP *msg, int *recid)"
.br
.ti -1c
.RI "void \fBtest_ecdsa_sign_verify\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ecdsa_sign_verify\fP (void)"
.br
.ti -1c
.RI "int \fBis_empty_signature\fP (const \fBsecp256k1_ecdsa_signature\fP *sig)"
.br
.ti -1c
.RI "void \fBtest_ecdsa_end_to_end\fP (void)"
.br
.ti -1c
.RI "void \fBtest_random_pubkeys\fP (void)"
.br
.ti -1c
.RI "void \fBrun_random_pubkeys\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ecdsa_end_to_end\fP (void)"
.br
.ti -1c
.RI "int \fBtest_ecdsa_der_parse\fP (const unsigned char *sig, size_t siglen, int certainly_der, int certainly_not_der)"
.br
.ti -1c
.RI "void \fBrun_ecdsa_der_parse\fP (void)"
.br
.ti -1c
.RI "void \fBtest_ecdsa_edge_cases\fP (void)"
.br
.ti -1c
.RI "void \fBrun_ecdsa_edge_cases\fP (void)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define SECP256K1_EC_PARSE_TEST_NINVALID   (7)"

.SS "#define SECP256K1_EC_PARSE_TEST_NVALID   (12)"

.SS "#define SECP256K1_EC_PARSE_TEST_NXVALID   (4)"

.SS "#define VG_CHECK(x, y)"

.PP
Definition at line 37 of file tests\&.c\&.
.SS "#define VG_UNDEF(x, y)"

.PP
Definition at line 36 of file tests\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int check_fe_equal (const \fBsecp256k1_fe\fP * a, const \fBsecp256k1_fe\fP * b)"

.PP
Definition at line 1454 of file tests\&.c\&.
.SS "int check_fe_inverse (const \fBsecp256k1_fe\fP * a, const \fBsecp256k1_fe\fP * ai)"

.PP
Definition at line 1462 of file tests\&.c\&.
.SS "void ec_pubkey_parse_pointtest (const unsigned char * input, int xvalid, int yvalid)"

.PP
Definition at line 2561 of file tests\&.c\&.
.SS "void ecmult_const_chain_multiply (void)"

.PP
Definition at line 2300 of file tests\&.c\&.
.SS "void ecmult_const_commutativity (void)"

.PP
Definition at line 2257 of file tests\&.c\&.
.SS "void ecmult_const_mult_zero_one (void)"

.PP
Definition at line 2278 of file tests\&.c\&.
.SS "void ecmult_const_random_mult (void)"

.PP
Definition at line 2230 of file tests\&.c\&.
.SS "int fe_memcmp (const \fBsecp256k1_fe\fP * a, const \fBsecp256k1_fe\fP * b)"

.PP
Definition at line 1499 of file tests\&.c\&.
.SS "void ge_equals_ge (const \fBsecp256k1_ge\fP * a, const \fBsecp256k1_ge\fP * b)"

.PP
Definition at line 1692 of file tests\&.c\&.
.SS "void ge_equals_gej (const \fBsecp256k1_ge\fP * a, const \fBsecp256k1_gej\fP * b)"

.PP
Definition at line 1723 of file tests\&.c\&.
.SS "int gej_xyz_equals_gej (const \fBsecp256k1_gej\fP * a, const \fBsecp256k1_gej\fP * b)"

.PP
Definition at line 1702 of file tests\&.c\&.
.SS "int is_empty_signature (const \fBsecp256k1_ecdsa_signature\fP * sig)"

.PP
Definition at line 3283 of file tests\&.c\&.
.SS "int main (int argc, char ** argv)"

.PP
Definition at line 4252 of file tests\&.c\&.
.SS "void random_fe (\fBsecp256k1_fe\fP * x)"

.PP
Definition at line 1413 of file tests\&.c\&.
.SS "void random_fe_non_square (\fBsecp256k1_fe\fP * ns)"

.PP
Definition at line 1446 of file tests\&.c\&.
.SS "void random_fe_non_zero (\fBsecp256k1_fe\fP * nz)"

.PP
Definition at line 1433 of file tests\&.c\&.
.SS "void random_fe_test (\fBsecp256k1_fe\fP * x)"

.PP
Definition at line 1423 of file tests\&.c\&.
.SS "void random_field_element_magnitude (\fBsecp256k1_fe\fP * fe)"

.PP
Definition at line 70 of file tests\&.c\&.
.SS "void random_field_element_test (\fBsecp256k1_fe\fP * fe)"

.PP
Definition at line 60 of file tests\&.c\&.
.SS "void random_group_element_jacobian_test (\fBsecp256k1_gej\fP * gej, const \fBsecp256k1_ge\fP * ge)"

.PP
Definition at line 95 of file tests\&.c\&.
.SS "void random_group_element_test (\fBsecp256k1_ge\fP * ge)"

.PP
Definition at line 84 of file tests\&.c\&.
.SS "void random_num_negate (\fBsecp256k1_num\fP * num)"

.PP
Definition at line 437 of file tests\&.c\&.
.SS "void random_num_order (\fBsecp256k1_num\fP * num)"

.PP
Definition at line 449 of file tests\&.c\&.
.SS "void random_num_order_test (\fBsecp256k1_num\fP * num)"

.PP
Definition at line 443 of file tests\&.c\&.
.SS "void random_scalar_order (\fBsecp256k1_scalar\fP * num)"

.PP
Definition at line 123 of file tests\&.c\&.
.SS "void random_scalar_order_test (\fBsecp256k1_scalar\fP * num)"

.PP
Definition at line 110 of file tests\&.c\&.
.SS "void random_sign (\fBsecp256k1_scalar\fP * sigr, \fBsecp256k1_scalar\fP * sigs, const \fBsecp256k1_scalar\fP * key, const \fBsecp256k1_scalar\fP * msg, int * recid)"

.PP
Definition at line 3199 of file tests\&.c\&.
.SS "void run_context_tests (void)"

.PP
Definition at line 136 of file tests\&.c\&.
.SS "void run_ec_combine (void)"

.PP
Definition at line 2044 of file tests\&.c\&.
.SS "void run_ec_pubkey_parse_test (void)"

.PP
Definition at line 2636 of file tests\&.c\&.
.SS "void run_ecdsa_der_parse (void)"

.PP
Definition at line 3780 of file tests\&.c\&.
.SS "void run_ecdsa_edge_cases (void)"

.PP
Definition at line 4180 of file tests\&.c\&.
.SS "void run_ecdsa_end_to_end (void)"

.PP
Definition at line 3478 of file tests\&.c\&.
.SS "void run_ecdsa_sign_verify (void)"

.PP
Definition at line 3229 of file tests\&.c\&.
.SS "void run_eckey_edge_case_test (void)"

.PP
Definition at line 2963 of file tests\&.c\&.
.SS "void run_ecmult_chain (void)"

.PP
Definition at line 2109 of file tests\&.c\&.
.SS "void run_ecmult_const_tests (void)"

.PP
Definition at line 2326 of file tests\&.c\&.
.SS "void run_ecmult_constants (void)"

.PP
Definition at line 2484 of file tests\&.c\&.
.SS "void run_ecmult_gen_blind (void)"

.PP
Definition at line 2523 of file tests\&.c\&.
.SS "void run_field_convert (void)"

.PP
Definition at line 1469 of file tests\&.c\&.
.SS "void run_field_inv (void)"

.PP
Definition at line 1580 of file tests\&.c\&.
.SS "void run_field_inv_all_var (void)"

.PP
Definition at line 1604 of file tests\&.c\&.
.SS "void run_field_inv_var (void)"

.PP
Definition at line 1592 of file tests\&.c\&.
.SS "void run_field_misc (void)"

.PP
Definition at line 1508 of file tests\&.c\&.
.SS "void run_ge (void)"

.PP
Definition at line 2011 of file tests\&.c\&.
.SS "void run_group_decompress (void)"

.PP
Definition at line 2098 of file tests\&.c\&.
.SS "void run_hmac_sha256_tests (void)"

.PP
Definition at line 277 of file tests\&.c\&.
.SS "void run_num_smalltests (void)"

.PP
Definition at line 503 of file tests\&.c\&.
.SS "void run_point_times_order (void)"

.PP
Definition at line 2208 of file tests\&.c\&.
.SS "void run_rand_bits (void)"

.PP
Definition at line 415 of file tests\&.c\&.
.SS "void run_rand_int (void)"

.PP
Definition at line 423 of file tests\&.c\&.
.SS "void run_random_pubkeys (void)"

.PP
Definition at line 3471 of file tests\&.c\&.
.SS "void run_rfc6979_hmac_sha256_tests (void)"

.PP
Definition at line 321 of file tests\&.c\&.
.SS "void run_scalar_tests (void)"

.PP
Definition at line 799 of file tests\&.c\&.
.SS "void run_sha256_tests (void)"

.PP
Definition at line 241 of file tests\&.c\&.
.SS "void run_sqr (void)"

.PP
Definition at line 1626 of file tests\&.c\&.
.SS "void run_sqrt (void)"

.PP
Definition at line 1656 of file tests\&.c\&.
.SS "void run_wnaf (void)"

.PP
Definition at line 2427 of file tests\&.c\&.
.SS "void scalar_test (void)"

.PP
Definition at line 514 of file tests\&.c\&.
.SS "void test_add_neg_y_diff_x (void)"

.PP
Definition at line 1944 of file tests\&.c\&.
.SS "void test_constant_wnaf (const \fBsecp256k1_scalar\fP * number, int w)"

.PP
Definition at line 2382 of file tests\&.c\&.
.SS "void test_constant_wnaf_negate (const \fBsecp256k1_scalar\fP * number)"

.PP
Definition at line 2367 of file tests\&.c\&.
.SS "void test_ec_combine (void)"

.PP
Definition at line 2019 of file tests\&.c\&.
.SS "int test_ecdsa_der_parse (const unsigned char * sig, size_t siglen, int certainly_der, int certainly_not_der)"

.PP
Definition at line 3485 of file tests\&.c\&.
.SS "void test_ecdsa_edge_cases (void)"

.PP
Definition at line 3811 of file tests\&.c\&.
.SS "void test_ecdsa_end_to_end (void)"

.PP
Definition at line 3288 of file tests\&.c\&.
.SS "void test_ecdsa_sign_verify (void)"

.PP
Definition at line 3206 of file tests\&.c\&.
.SS "void test_ecmult_constants (void)"

.PP
Definition at line 2451 of file tests\&.c\&.
.SS "void test_ecmult_gen_blind (void)"

.PP
Definition at line 2488 of file tests\&.c\&.
.SS "void test_ecmult_gen_blind_reset (void)"

.PP
Definition at line 2511 of file tests\&.c\&.
.SS "void test_ge (void)"

.PP
Definition at line 1740 of file tests\&.c\&.
.SS "void test_group_decompress (const \fBsecp256k1_fe\fP * x)"

.PP
Definition at line 2051 of file tests\&.c\&.
.SS "void test_num_add_sub (void)"

.PP
Definition at line 475 of file tests\&.c\&.
.SS "void test_num_negate (void)"

.PP
Definition at line 455 of file tests\&.c\&.
.SS "void test_point_times_order (const \fBsecp256k1_gej\fP * point)"

.PP
Definition at line 2173 of file tests\&.c\&.
.SS "void test_rand_bits (int rand32, int bits)"

.PP
Definition at line 364 of file tests\&.c\&.
.SS "void test_rand_int (\fBuint32_t\fP range, \fBuint32_t\fP subrange)"

.PP
Definition at line 399 of file tests\&.c\&.
.SS "void test_random_pubkeys (void)"

.PP
Definition at line 3411 of file tests\&.c\&.
.SS "void test_sqrt (const \fBsecp256k1_fe\fP * a, const \fBsecp256k1_fe\fP * k)"

.PP
Definition at line 1642 of file tests\&.c\&.
.SS "void test_wnaf (const \fBsecp256k1_scalar\fP * number, int w)"

.PP
Definition at line 2333 of file tests\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
