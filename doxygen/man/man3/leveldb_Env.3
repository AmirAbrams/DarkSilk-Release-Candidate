.TH "leveldb::Env" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
leveldb::Env \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <env\&.h>\fP
.PP
Inherited by \fBleveldb::EnvWrapper\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEnv\fP ()"
.br
.ti -1c
.RI "virtual \fB~Env\fP ()"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBNewSequentialFile\fP (const std::string &fname, \fBSequentialFile\fP **result)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBNewRandomAccessFile\fP (const std::string &fname, \fBRandomAccessFile\fP **result)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBNewWritableFile\fP (const std::string &fname, \fBWritableFile\fP **result)=0"
.br
.ti -1c
.RI "virtual bool \fBFileExists\fP (const std::string &fname)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBGetChildren\fP (const std::string &dir, std::vector< std::string > *result)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBDeleteFile\fP (const std::string &fname)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBCreateDir\fP (const std::string &dirname)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBDeleteDir\fP (const std::string &dirname)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBGetFileSize\fP (const std::string &fname, \fBuint64_t\fP *file_size)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBRenameFile\fP (const std::string &src, const std::string &target)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBLockFile\fP (const std::string &fname, \fBFileLock\fP **lock)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBUnlockFile\fP (\fBFileLock\fP *lock)=0"
.br
.ti -1c
.RI "virtual void \fBSchedule\fP (void(*\fBfunction\fP)(void *\fBarg\fP), void *\fBarg\fP)=0"
.br
.ti -1c
.RI "virtual void \fBStartThread\fP (void(*\fBfunction\fP)(void *\fBarg\fP), void *\fBarg\fP)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBGetTestDirectory\fP (std::string *path)=0"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBNewLogger\fP (const std::string &fname, \fBLogger\fP **result)=0"
.br
.ti -1c
.RI "virtual \fBuint64_t\fP \fBNowMicros\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBSleepForMicroseconds\fP (int micros)=0"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBEnv\fP * \fBDefault\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 31 of file env\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "leveldb::Env::Env ()\fC [inline]\fP"

.PP
Definition at line 33 of file env\&.h\&.
.SS "leveldb::Env::~Env ()\fC [virtual]\fP"

.PP
Definition at line 9 of file env\&.cc\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBStatus\fP leveldb::Env::CreateDir (const std::string & dirname)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "\fBEnv\fP * leveldb::Env::Default ()\fC [static]\fP"

.PP
Definition at line 604 of file env_posix\&.cc\&.
.SS "virtual \fBStatus\fP leveldb::Env::DeleteDir (const std::string & dirname)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::DeleteFile (const std::string & fname)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual bool leveldb::Env::FileExists (const std::string & fname)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::GetChildren (const std::string & dir, std::vector< std::string > * result)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::GetFileSize (const std::string & fname, \fBuint64_t\fP * file_size)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::GetTestDirectory (std::string * path)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::LockFile (const std::string & fname, \fBFileLock\fP ** lock)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::NewLogger (const std::string & fname, \fBLogger\fP ** result)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::NewRandomAccessFile (const std::string & fname, \fBRandomAccessFile\fP ** result)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP, and \fBleveldb::SpecialEnv\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::NewSequentialFile (const std::string & fname, \fBSequentialFile\fP ** result)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::NewWritableFile (const std::string & fname, \fBWritableFile\fP ** result)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP, \fBleveldb::SpecialEnv\fP, and \fBleveldb::test::ErrorEnv\fP\&.
.SS "virtual \fBuint64_t\fP leveldb::Env::NowMicros ()\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual \fBStatus\fP leveldb::Env::RenameFile (const std::string & src, const std::string & target)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual void leveldb::Env::Schedule (void(*)(void *\fBarg\fP) function, void * arg)\fC [pure virtual]\fP"

.SS "virtual void leveldb::Env::SleepForMicroseconds (int micros)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.
.SS "virtual void leveldb::Env::StartThread (void(*)(void *\fBarg\fP) function, void * arg)\fC [pure virtual]\fP"

.SS "virtual \fBStatus\fP leveldb::Env::UnlockFile (\fBFileLock\fP * lock)\fC [pure virtual]\fP"

.PP
Implemented in \fBleveldb::EnvWrapper\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
