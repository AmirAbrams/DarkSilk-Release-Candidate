.TH "/home/dev/ds-160209/src/json/json_spirit_reader_template.h" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dev/ds-160209/src/json/json_spirit_reader_template.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'json_spirit_value\&.h'\fP
.br
\fC#include 'json_spirit_error_position\&.h'\fP
.br
\fC#include <boost/bind\&.hpp>\fP
.br
\fC#include <boost/function\&.hpp>\fP
.br
\fC#include <boost/version\&.hpp>\fP
.br
\fC#include <boost/spirit/core\&.hpp>\fP
.br
\fC#include <boost/spirit/utility/confix\&.hpp>\fP
.br
\fC#include <boost/spirit/utility/escape_char\&.hpp>\fP
.br
\fC#include <boost/spirit/iterator/multi_pass\&.hpp>\fP
.br
\fC#include <boost/spirit/iterator/position_iterator\&.hpp>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBjson_spirit::Semantic_actions< Value_type, Iter_type >\fP"
.br
.ti -1c
.RI "class \fBjson_spirit::Json_grammer< Value_type, Iter_type >\fP"
.br
.ti -1c
.RI "class \fBjson_spirit::Json_grammer< Value_type, Iter_type >::definition< ScannerT >\fP"
.br
.ti -1c
.RI "struct \fBjson_spirit::Multi_pass_iters< Istream_type >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBjson_spirit\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBspirit_namespace\fP   boost::spirit"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class Iter_type > bool \fBjson_spirit::is_eq\fP (Iter_type first, Iter_type last, const char *c_str)"
.br
.ti -1c
.RI "template<class Char_type > Char_type \fBjson_spirit::hex_to_num\fP (const Char_type c)"
.br
.ti -1c
.RI "template<class Char_type , class Iter_type > Char_type \fBjson_spirit::hex_str_to_char\fP (Iter_type &begin)"
.br
.ti -1c
.RI "template<class Char_type , class Iter_type > Char_type \fBjson_spirit::unicode_str_to_char\fP (Iter_type &begin)"
.br
.ti -1c
.RI "template<class String_type > void \fBjson_spirit::append_esc_char_and_incr_iter\fP (String_type &s, typename String_type::const_iterator &begin, typename String_type::const_iterator end)"
.br
.ti -1c
.RI "template<class String_type > String_type \fBjson_spirit::substitute_esc_chars\fP (typename String_type::const_iterator begin, typename String_type::const_iterator end)"
.br
.ti -1c
.RI "template<class String_type > String_type \fBjson_spirit::get_str_\fP (typename String_type::const_iterator begin, typename String_type::const_iterator end)"
.br
.ti -1c
.RI "std::string \fBjson_spirit::get_str\fP (std::string::const_iterator begin, std::string::const_iterator end)"
.br
.ti -1c
.RI "std::wstring \fBjson_spirit::get_str\fP (std::wstring::const_iterator begin, std::wstring::const_iterator end)"
.br
.ti -1c
.RI "template<class String_type , class Iter_type > String_type \fBjson_spirit::get_str\fP (Iter_type begin, Iter_type end)"
.br
.ti -1c
.RI "template<typename Iter_type > void \fBjson_spirit::throw_error\fP (spirit_namespace::position_iterator< Iter_type > i, const std::string &reason)"
.br
.ti -1c
.RI "template<typename Iter_type > void \fBjson_spirit::throw_error\fP (Iter_type i, const std::string &reason)"
.br
.ti -1c
.RI "template<class Iter_type , class Value_type > Iter_type \fBjson_spirit::read_range_or_throw\fP (Iter_type begin, Iter_type end, Value_type &\fBvalue\fP)"
.br
.ti -1c
.RI "template<class Iter_type , class Value_type > void \fBjson_spirit::add_posn_iter_and_read_range_or_throw\fP (Iter_type begin, Iter_type end, Value_type &\fBvalue\fP)"
.br
.ti -1c
.RI "template<class Iter_type , class Value_type > bool \fBjson_spirit::read_range\fP (Iter_type &begin, Iter_type end, Value_type &\fBvalue\fP)"
.br
.ti -1c
.RI "template<class String_type , class Value_type > void \fBjson_spirit::read_string_or_throw\fP (const String_type &s, Value_type &\fBvalue\fP)"
.br
.ti -1c
.RI "template<class String_type , class Value_type > bool \fBjson_spirit::read_string\fP (const String_type &s, Value_type &\fBvalue\fP)"
.br
.ti -1c
.RI "template<class Istream_type , class Value_type > bool \fBjson_spirit::read_stream\fP (Istream_type &is, Value_type &\fBvalue\fP)"
.br
.ti -1c
.RI "template<class Istream_type , class Value_type > void \fBjson_spirit::read_stream_or_throw\fP (Istream_type &is, Value_type &\fBvalue\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const spirit_namespace::int_parser< \fBint64_t\fP > \fBjson_spirit::int64_p\fP = spirit_namespace::int_parser < \fBint64_t\fP >()"
.br
.ti -1c
.RI "const spirit_namespace::uint_parser< \fBuint64_t\fP > \fBjson_spirit::uint64_p\fP = spirit_namespace::uint_parser< \fBuint64_t\fP >()"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define spirit_namespace   boost::spirit"

.PP
Definition at line 31 of file json_spirit_reader_template\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
