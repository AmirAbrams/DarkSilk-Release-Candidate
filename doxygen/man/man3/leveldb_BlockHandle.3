.TH "leveldb::BlockHandle" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
leveldb::BlockHandle \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <format\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum { \fBkMaxEncodedLength\fP = 10 + 10 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBlockHandle\fP ()"
.br
.ti -1c
.RI "\fBuint64_t\fP \fBoffset\fP () const "
.br
.ti -1c
.RI "void \fBset_offset\fP (\fBuint64_t\fP \fBoffset\fP)"
.br
.ti -1c
.RI "\fBuint64_t\fP \fBsize\fP () const "
.br
.ti -1c
.RI "void \fBset_size\fP (\fBuint64_t\fP \fBsize\fP)"
.br
.ti -1c
.RI "void \fBEncodeTo\fP (std::string *dst) const "
.br
.ti -1c
.RI "\fBStatus\fP \fBDecodeFrom\fP (\fBSlice\fP *input)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 22 of file format\&.h\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIkMaxEncodedLength \fP\fP
.PP
Definition at line 38 of file format\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "leveldb::BlockHandle::BlockHandle ()\fC [inline]\fP"

.PP
Definition at line 101 of file format\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBStatus\fP leveldb::BlockHandle::DecodeFrom (\fBSlice\fP * input)"

.PP
Definition at line 23 of file format\&.cc\&.
.SS "void leveldb::BlockHandle::EncodeTo (std::string * dst) const"

.PP
Definition at line 15 of file format\&.cc\&.
.SS "\fBuint64_t\fP leveldb::BlockHandle::offset () const\fC [inline]\fP"

.PP
Definition at line 27 of file format\&.h\&.
.SS "void leveldb::BlockHandle::set_offset (\fBuint64_t\fP offset)\fC [inline]\fP"

.PP
Definition at line 28 of file format\&.h\&.
.SS "void leveldb::BlockHandle::set_size (\fBuint64_t\fP size)\fC [inline]\fP"

.PP
Definition at line 32 of file format\&.h\&.
.SS "\fBuint64_t\fP leveldb::BlockHandle::size () const\fC [inline]\fP"

.PP
Definition at line 31 of file format\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
