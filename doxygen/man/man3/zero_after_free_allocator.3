.TH "zero_after_free_allocator< T >" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
zero_after_free_allocator< T > \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <allocators\&.h>\fP
.PP
Inherits allocator< T >\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBrebind\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::allocator< T > \fBbase\fP"
.br
.ti -1c
.RI "typedef base::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "typedef base::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef base::pointer \fBpointer\fP"
.br
.ti -1c
.RI "typedef base::const_pointer \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef base::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef base::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef base::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBzero_after_free_allocator\fP ()  throw ()"
.br
.ti -1c
.RI "\fBzero_after_free_allocator\fP (const \fBzero_after_free_allocator\fP &a)  throw ()"
.br
.ti -1c
.RI "template<typename U > \fBzero_after_free_allocator\fP (const \fBzero_after_free_allocator\fP< U > &a)  throw ()"
.br
.ti -1c
.RI "\fB~zero_after_free_allocator\fP ()  throw ()"
.br
.ti -1c
.RI "void \fBdeallocate\fP (T *p, std::size_t n)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>struct zero_after_free_allocator< T >"

.PP
Definition at line 243 of file allocators\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename T> typedef std::allocator<T> \fBzero_after_free_allocator\fP< T >::\fBbase\fP"

.PP
Definition at line 246 of file allocators\&.h\&.
.SS "template<typename T> typedef base::const_pointer \fBzero_after_free_allocator\fP< T >::\fBconst_pointer\fP"

.PP
Definition at line 250 of file allocators\&.h\&.
.SS "template<typename T> typedef base::const_reference \fBzero_after_free_allocator\fP< T >::\fBconst_reference\fP"

.PP
Definition at line 252 of file allocators\&.h\&.
.SS "template<typename T> typedef base::difference_type \fBzero_after_free_allocator\fP< T >::\fBdifference_type\fP"

.PP
Definition at line 248 of file allocators\&.h\&.
.SS "template<typename T> typedef base::pointer \fBzero_after_free_allocator\fP< T >::\fBpointer\fP"

.PP
Definition at line 249 of file allocators\&.h\&.
.SS "template<typename T> typedef base::reference \fBzero_after_free_allocator\fP< T >::\fBreference\fP"

.PP
Definition at line 251 of file allocators\&.h\&.
.SS "template<typename T> typedef base::size_type \fBzero_after_free_allocator\fP< T >::\fBsize_type\fP"

.PP
Definition at line 247 of file allocators\&.h\&.
.SS "template<typename T> typedef base::value_type \fBzero_after_free_allocator\fP< T >::\fBvalue_type\fP"

.PP
Definition at line 253 of file allocators\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T> \fBzero_after_free_allocator\fP< T >::\fBzero_after_free_allocator\fP ()\fC [inline]\fP"

.PP
Definition at line 254 of file allocators\&.h\&.
.SS "template<typename T> \fBzero_after_free_allocator\fP< T >::\fBzero_after_free_allocator\fP (const \fBzero_after_free_allocator\fP< T > & a)\fC [inline]\fP"

.PP
Definition at line 255 of file allocators\&.h\&.
.SS "template<typename T> template<typename U > \fBzero_after_free_allocator\fP< T >::\fBzero_after_free_allocator\fP (const \fBzero_after_free_allocator\fP< U > & a)\fC [inline]\fP"

.PP
Definition at line 257 of file allocators\&.h\&.
.SS "template<typename T> \fBzero_after_free_allocator\fP< T >::~\fBzero_after_free_allocator\fP ()\fC [inline]\fP"

.PP
Definition at line 258 of file allocators\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T> void \fBzero_after_free_allocator\fP< T >::deallocate (T * p, std::size_t n)\fC [inline]\fP"

.PP
Definition at line 262 of file allocators\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
