.TH "leveldb::EnvWrapper" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
leveldb::EnvWrapper \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <env\&.h>\fP
.PP
Inherits \fBleveldb::Env\fP\&.
.PP
Inherited by \fBleveldb::SpecialEnv\fP, and \fBleveldb::test::ErrorEnv\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEnvWrapper\fP (\fBEnv\fP *t)"
.br
.ti -1c
.RI "virtual \fB~EnvWrapper\fP ()"
.br
.ti -1c
.RI "\fBEnv\fP * \fBtarget\fP () const "
.br
.ti -1c
.RI "\fBStatus\fP \fBNewSequentialFile\fP (const std::string &f, \fBSequentialFile\fP **r)"
.br
.ti -1c
.RI "\fBStatus\fP \fBNewRandomAccessFile\fP (const std::string &f, \fBRandomAccessFile\fP **r)"
.br
.ti -1c
.RI "\fBStatus\fP \fBNewWritableFile\fP (const std::string &f, \fBWritableFile\fP **r)"
.br
.ti -1c
.RI "bool \fBFileExists\fP (const std::string &f)"
.br
.ti -1c
.RI "\fBStatus\fP \fBGetChildren\fP (const std::string &dir, std::vector< std::string > *r)"
.br
.ti -1c
.RI "\fBStatus\fP \fBDeleteFile\fP (const std::string &f)"
.br
.ti -1c
.RI "\fBStatus\fP \fBCreateDir\fP (const std::string &d)"
.br
.ti -1c
.RI "\fBStatus\fP \fBDeleteDir\fP (const std::string &d)"
.br
.ti -1c
.RI "\fBStatus\fP \fBGetFileSize\fP (const std::string &f, \fBuint64_t\fP *s)"
.br
.ti -1c
.RI "\fBStatus\fP \fBRenameFile\fP (const std::string &s, const std::string &t)"
.br
.ti -1c
.RI "\fBStatus\fP \fBLockFile\fP (const std::string &f, \fBFileLock\fP **l)"
.br
.ti -1c
.RI "\fBStatus\fP \fBUnlockFile\fP (\fBFileLock\fP *l)"
.br
.ti -1c
.RI "void \fBSchedule\fP (void(*f)(void *), void *a)"
.br
.ti -1c
.RI "void \fBStartThread\fP (void(*f)(void *), void *a)"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBGetTestDirectory\fP (std::string *path)"
.br
.ti -1c
.RI "virtual \fBStatus\fP \fBNewLogger\fP (const std::string &fname, \fBLogger\fP **result)"
.br
.ti -1c
.RI "\fBuint64_t\fP \fBNowMicros\fP ()"
.br
.ti -1c
.RI "void \fBSleepForMicroseconds\fP (int micros)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 273 of file env\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "leveldb::EnvWrapper::EnvWrapper (\fBEnv\fP * t)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 276 of file env\&.h\&.
.SS "leveldb::EnvWrapper::~EnvWrapper ()\fC [virtual]\fP"

.PP
Definition at line 93 of file env\&.cc\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBStatus\fP leveldb::EnvWrapper::CreateDir (const std::string & d)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 297 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::DeleteDir (const std::string & d)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 298 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::DeleteFile (const std::string & f)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 296 of file env\&.h\&.
.SS "bool leveldb::EnvWrapper::FileExists (const std::string & f)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 292 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::GetChildren (const std::string & dir, std::vector< std::string > * r)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 293 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::GetFileSize (const std::string & f, \fBuint64_t\fP * s)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 299 of file env\&.h\&.
.SS "virtual \fBStatus\fP leveldb::EnvWrapper::GetTestDirectory (std::string * path)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 315 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::LockFile (const std::string & f, \fBFileLock\fP ** l)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 305 of file env\&.h\&.
.SS "virtual \fBStatus\fP leveldb::EnvWrapper::NewLogger (const std::string & fname, \fBLogger\fP ** result)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 318 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::NewRandomAccessFile (const std::string & f, \fBRandomAccessFile\fP ** r)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 286 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::NewSequentialFile (const std::string & f, \fBSequentialFile\fP ** r)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 283 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::NewWritableFile (const std::string & f, \fBWritableFile\fP ** r)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Reimplemented in \fBleveldb::test::ErrorEnv\fP\&.
.PP
Definition at line 289 of file env\&.h\&.
.SS "\fBuint64_t\fP leveldb::EnvWrapper::NowMicros ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 321 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::RenameFile (const std::string & s, const std::string & t)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 302 of file env\&.h\&.
.SS "void leveldb::EnvWrapper::Schedule (void(*)(void *) f, void * a)\fC [inline]\fP"

.PP
Definition at line 309 of file env\&.h\&.
.SS "void leveldb::EnvWrapper::SleepForMicroseconds (int micros)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 324 of file env\&.h\&.
.SS "void leveldb::EnvWrapper::StartThread (void(*)(void *) f, void * a)\fC [inline]\fP"

.PP
Definition at line 312 of file env\&.h\&.
.SS "\fBEnv\fP* leveldb::EnvWrapper::target () const\fC [inline]\fP"

.PP
Definition at line 280 of file env\&.h\&.
.SS "\fBStatus\fP leveldb::EnvWrapper::UnlockFile (\fBFileLock\fP * l)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBleveldb::Env\fP\&.
.PP
Definition at line 308 of file env\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
