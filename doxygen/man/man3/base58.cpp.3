.TH "/home/dev/ds-160209/src/base58.cpp" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dev/ds-160209/src/base58.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'base58\&.h'\fP
.br
\fC#include 'hash\&.h'\fP
.br
\fC#include 'uint256\&.h'\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <string>\fP
.br
\fC#include <boost/variant/apply_visitor\&.hpp>\fP
.br
\fC#include <boost/variant/static_visitor\&.hpp>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBDecodeBase58\fP (const char *psz, std::vector< unsigned char > &vch)"
.br
.ti -1c
.RI "std::string \fBEncodeBase58\fP (const unsigned char *pbegin, const unsigned char *pend)"
.br
.ti -1c
.RI "std::string \fBEncodeBase58\fP (const std::vector< unsigned char > &vch)"
.br
.ti -1c
.RI "bool \fBDecodeBase58\fP (const std::string &str, std::vector< unsigned char > &vchRet)"
.br
.ti -1c
.RI "std::string \fBEncodeBase58Check\fP (const std::vector< unsigned char > &vchIn)"
.br
.ti -1c
.RI "bool \fBDecodeBase58Check\fP (const char *psz, std::vector< unsigned char > &vchRet)"
.br
.ti -1c
.RI "bool \fBDecodeBase58Check\fP (const std::string &str, std::vector< unsigned char > &vchRet)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool DecodeBase58 (const char * psz, std::vector< unsigned char > & vch)"
Decode a base58-encoded string (psz) into a byte vector (vchRet)\&. return true if decoding is successful\&. psz cannot be NULL\&. 
.PP
Definition at line 22 of file base58\&.cpp\&.
.SS "bool DecodeBase58 (const std::string & str, std::vector< unsigned char > & vchRet)"
Decode a base58-encoded string (str) into a byte vector (vchRet)\&. return true if decoding is successful\&. 
.PP
Definition at line 105 of file base58\&.cpp\&.
.SS "bool DecodeBase58Check (const char * psz, std::vector< unsigned char > & vchRet)\fC [inline]\fP"
Decode a base58-encoded string (psz) that includes a checksum into a byte vector (vchRet), return true if decoding is successful 
.PP
Definition at line 117 of file base58\&.cpp\&.
.SS "bool DecodeBase58Check (const std::string & str, std::vector< unsigned char > & vchRet)\fC [inline]\fP"
Decode a base58-encoded string (str) that includes a checksum into a byte vector (vchRet), return true if decoding is successful 
.PP
Definition at line 135 of file base58\&.cpp\&.
.SS "std::string EncodeBase58 (const unsigned char * pbegin, const unsigned char * pend)"
Encode a byte sequence as a base58-encoded string\&. pbegin and pend cannot be NULL, unless both are\&. 
.PP
Definition at line 67 of file base58\&.cpp\&.
.SS "std::string EncodeBase58 (const std::vector< unsigned char > & vch)"
Encode a byte vector as a base58-encoded string 
.PP
Definition at line 101 of file base58\&.cpp\&.
.SS "std::string EncodeBase58Check (const std::vector< unsigned char > & vchIn)"
Encode a byte vector into a base58-encoded string, including checksum 
.PP
Definition at line 109 of file base58\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
