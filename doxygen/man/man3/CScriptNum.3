.TH "CScriptNum" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CScriptNum \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <script\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCScriptNum\fP (const \fBint64_t\fP &n)"
.br
.ti -1c
.RI "\fBCScriptNum\fP (const std::vector< unsigned char > &vch, bool fRequireMinimal)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "\fBCScriptNum\fP \fBoperator+\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "\fBCScriptNum\fP \fBoperator-\fP (const \fBint64_t\fP &rhs) const "
.br
.ti -1c
.RI "\fBCScriptNum\fP \fBoperator+\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "\fBCScriptNum\fP \fBoperator-\fP (const \fBCScriptNum\fP &rhs) const "
.br
.ti -1c
.RI "\fBCScriptNum\fP & \fBoperator+=\fP (const \fBCScriptNum\fP &rhs)"
.br
.ti -1c
.RI "\fBCScriptNum\fP & \fBoperator-=\fP (const \fBCScriptNum\fP &rhs)"
.br
.ti -1c
.RI "\fBCScriptNum\fP \fBoperator-\fP () const "
.br
.ti -1c
.RI "\fBCScriptNum\fP & \fBoperator=\fP (const \fBint64_t\fP &rhs)"
.br
.ti -1c
.RI "\fBCScriptNum\fP & \fBoperator+=\fP (const \fBint64_t\fP &rhs)"
.br
.ti -1c
.RI "\fBCScriptNum\fP & \fBoperator-=\fP (const \fBint64_t\fP &rhs)"
.br
.ti -1c
.RI "int \fBgetint\fP () const "
.br
.ti -1c
.RI "std::vector< unsigned char > \fBgetvch\fP () const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static std::vector< unsigned char > \fBserialize\fP (const \fBint64_t\fP &\fBvalue\fP)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const size_t \fBnMaxNumSize\fP = 4"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 380 of file script\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "CScriptNum::CScriptNum (const \fBint64_t\fP & n)\fC [inline]\fP, \fC [explicit]\fP"
Numeric opcodes (OP_1ADD, etc) are restricted to operating on 4-byte integers\&. The semantics are subtle, though: operands must be in the range [-2^31 +1\&.\&.\&.2^31 -1], but results may overflow (and are valid as long as they are not used in a subsequent numeric operation)\&. \fBCScriptNum\fP enforces those semantics by storing results as an int64 and allowing out-of-range values to be returned as a vector of bytes but throwing an exception if arithmetic is done or the result is interpreted as an integer\&. 
.PP
Definition at line 392 of file script\&.h\&.
.SS "CScriptNum::CScriptNum (const std::vector< unsigned char > & vch, bool fRequireMinimal)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 397 of file script\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "int CScriptNum::getint () const\fC [inline]\fP"

.PP
Definition at line 473 of file script\&.h\&.
.SS "std::vector<unsigned char> CScriptNum::getvch () const\fC [inline]\fP"

.PP
Definition at line 482 of file script\&.h\&.
.SS "bool CScriptNum::operator!= (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 424 of file script\&.h\&.
.SS "bool CScriptNum::operator!= (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 431 of file script\&.h\&.
.SS "\fBCScriptNum\fP CScriptNum::operator+ (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 437 of file script\&.h\&.
.SS "\fBCScriptNum\fP CScriptNum::operator+ (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 439 of file script\&.h\&.
.SS "\fBCScriptNum\fP& CScriptNum::operator+= (const \fBCScriptNum\fP & rhs)\fC [inline]\fP"

.PP
Definition at line 442 of file script\&.h\&.
.SS "\fBCScriptNum\fP& CScriptNum::operator+= (const \fBint64_t\fP & rhs)\fC [inline]\fP"

.PP
Definition at line 457 of file script\&.h\&.
.SS "\fBCScriptNum\fP CScriptNum::operator- (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 438 of file script\&.h\&.
.SS "\fBCScriptNum\fP CScriptNum::operator- (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 440 of file script\&.h\&.
.SS "\fBCScriptNum\fP CScriptNum::operator- () const\fC [inline]\fP"

.PP
Definition at line 445 of file script\&.h\&.
.SS "\fBCScriptNum\fP& CScriptNum::operator-= (const \fBCScriptNum\fP & rhs)\fC [inline]\fP"

.PP
Definition at line 443 of file script\&.h\&.
.SS "\fBCScriptNum\fP& CScriptNum::operator-= (const \fBint64_t\fP & rhs)\fC [inline]\fP"

.PP
Definition at line 465 of file script\&.h\&.
.SS "bool CScriptNum::operator< (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 426 of file script\&.h\&.
.SS "bool CScriptNum::operator< (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 433 of file script\&.h\&.
.SS "bool CScriptNum::operator<= (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 425 of file script\&.h\&.
.SS "bool CScriptNum::operator<= (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 432 of file script\&.h\&.
.SS "\fBCScriptNum\fP& CScriptNum::operator= (const \fBint64_t\fP & rhs)\fC [inline]\fP"

.PP
Definition at line 451 of file script\&.h\&.
.SS "bool CScriptNum::operator== (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 423 of file script\&.h\&.
.SS "bool CScriptNum::operator== (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 430 of file script\&.h\&.
.SS "bool CScriptNum::operator> (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 428 of file script\&.h\&.
.SS "bool CScriptNum::operator> (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 435 of file script\&.h\&.
.SS "bool CScriptNum::operator>= (const \fBint64_t\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 427 of file script\&.h\&.
.SS "bool CScriptNum::operator>= (const \fBCScriptNum\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 434 of file script\&.h\&.
.SS "static std::vector<unsigned char> CScriptNum::serialize (const \fBint64_t\fP & value)\fC [inline]\fP, \fC [static]\fP"

.PP
Definition at line 487 of file script\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "const size_t CScriptNum::nMaxNumSize = 4\fC [static]\fP"

.PP
Definition at line 520 of file script\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
