.TH "CECKey" 3 "Wed Feb 10 2016" "Version 1.0.0.0" "darksilk" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CECKey \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ecwrapper\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCECKey\fP ()"
.br
.ti -1c
.RI "\fB~CECKey\fP ()"
.br
.ti -1c
.RI "EC_KEY * \fBGetECKey\fP ()"
.br
.ti -1c
.RI "void \fBGetSecretBytes\fP (unsigned char vch[32]) const "
.br
.ti -1c
.RI "void \fBSetSecretBytes\fP (const unsigned char vch[32])"
.br
.ti -1c
.RI "int \fBGetPrivKeySize\fP (bool fCompressed)"
.br
.ti -1c
.RI "int \fBGetPrivKey\fP (unsigned char *privkey, bool fCompressed)"
.br
.ti -1c
.RI "bool \fBSetPrivKey\fP (const unsigned char *privkey, size_t size, bool fSkipCheck=false)"
.br
.ti -1c
.RI "void \fBGetPubKey\fP (std::vector< unsigned char > &pubkey, bool fCompressed)"
.br
.ti -1c
.RI "bool \fBSetPubKey\fP (const unsigned char *pubkey, size_t size)"
.br
.ti -1c
.RI "bool \fBSign\fP (const \fBuint256\fP &\fBhash\fP, std::vector< unsigned char > &vchSig)"
.br
.ti -1c
.RI "bool \fBVerify\fP (const \fBuint256\fP &\fBhash\fP, const std::vector< unsigned char > &vchSig)"
.br
.ti -1c
.RI "bool \fBSignCompact\fP (const \fBuint256\fP &\fBhash\fP, unsigned char *p64, int &rec)"
.br
.ti -1c
.RI "bool \fBRecover\fP (const \fBuint256\fP &\fBhash\fP, const unsigned char *p64, int rec)"
.br
.ti -1c
.RI "bool \fBTweakPublic\fP (const unsigned char vchTweak[32])"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBTweakSecret\fP (unsigned char vchSecretOut[32], const unsigned char vchSecretIn[32], const unsigned char vchTweak[32])"
.br
.ti -1c
.RI "static bool \fBSanityCheck\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 15 of file ecwrapper\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "CECKey::CECKey ()"

.PP
Definition at line 129 of file ecwrapper\&.cpp\&.
.SS "CECKey::~CECKey ()"

.PP
Definition at line 134 of file ecwrapper\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "EC_KEY* CECKey::GetECKey ()\fC [inline]\fP"

.PP
Definition at line 24 of file ecwrapper\&.h\&.
.SS "int CECKey::GetPrivKey (unsigned char * privkey, bool fCompressed)"

.PP
Definition at line 163 of file ecwrapper\&.cpp\&.
.SS "int CECKey::GetPrivKeySize (bool fCompressed)"

.PP
Definition at line 158 of file ecwrapper\&.cpp\&.
.SS "void CECKey::GetPubKey (std::vector< unsigned char > & pubkey, bool fCompressed)"

.PP
Definition at line 181 of file ecwrapper\&.cpp\&.
.SS "void CECKey::GetSecretBytes (unsigned char vch[32]) const"

.PP
Definition at line 138 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::Recover (const \fBuint256\fP & hash, const unsigned char * p64, int rec)"

.PP
Definition at line 262 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::SanityCheck ()\fC [static]\fP"

.PP
Definition at line 326 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::SetPrivKey (const unsigned char * privkey, size_t size, bool fSkipCheck = \fCfalse\fP)"

.PP
Definition at line 168 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::SetPubKey (const unsigned char * pubkey, size_t size)"

.PP
Definition at line 193 of file ecwrapper\&.cpp\&.
.SS "void CECKey::SetSecretBytes (const unsigned char vch[32])"

.PP
Definition at line 147 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::Sign (const \fBuint256\fP & hash, std::vector< unsigned char > & vchSig)"

.PP
Definition at line 197 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::SignCompact (const \fBuint256\fP & hash, unsigned char * p64, int & rec)"

.PP
Definition at line 231 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::TweakPublic (const unsigned char vchTweak[32])"

.PP
Definition at line 301 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::TweakSecret (unsigned char vchSecretOut[32], const unsigned char vchSecretIn[32], const unsigned char vchTweak[32])\fC [static]\fP"

.PP
Definition at line 274 of file ecwrapper\&.cpp\&.
.SS "bool CECKey::Verify (const \fBuint256\fP & hash, const std::vector< unsigned char > & vchSig)"

.PP
Definition at line 224 of file ecwrapper\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for darksilk from the source code\&.
